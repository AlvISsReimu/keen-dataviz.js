{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap","webpack:///./node_modules/d3-selection/src/namespaces.js","webpack:///./node_modules/d3-selection/src/namespace.js","webpack:///./node_modules/d3-selection/src/creator.js","webpack:///./node_modules/d3-selection/src/selector.js","webpack:///./node_modules/d3-selection/src/selectorAll.js","webpack:///./node_modules/d3-selection/src/matcher.js","webpack:///./node_modules/d3-selection/src/selection/sparse.js","webpack:///./node_modules/d3-selection/src/selection/enter.js","webpack:///./node_modules/d3-selection/src/constant.js","webpack:///./node_modules/d3-selection/src/selection/data.js","webpack:///./node_modules/d3-selection/src/selection/sort.js","webpack:///./node_modules/d3-selection/src/selection/attr.js","webpack:///./node_modules/d3-selection/src/window.js","webpack:///./node_modules/d3-selection/src/selection/style.js","webpack:///./node_modules/d3-selection/src/selection/classed.js","webpack:///./node_modules/d3-selection/src/selection/text.js","webpack:///./node_modules/d3-selection/src/selection/html.js","webpack:///./node_modules/d3-selection/src/selection/raise.js","webpack:///./node_modules/d3-selection/src/selection/lower.js","webpack:///./node_modules/d3-selection/src/selection/insert.js","webpack:///./node_modules/d3-selection/src/selection/remove.js","webpack:///./node_modules/d3-selection/src/selection/clone.js","webpack:///./node_modules/d3-selection/src/selection/on.js","webpack:///./node_modules/d3-selection/src/selection/dispatch.js","webpack:///./node_modules/d3-selection/src/selection/index.js","webpack:///./node_modules/d3-selection/src/selection/select.js","webpack:///./node_modules/d3-selection/src/selection/selectAll.js","webpack:///./node_modules/d3-selection/src/selection/filter.js","webpack:///./node_modules/d3-selection/src/selection/exit.js","webpack:///./node_modules/d3-selection/src/selection/merge.js","webpack:///./node_modules/d3-selection/src/selection/order.js","webpack:///./node_modules/d3-selection/src/selection/call.js","webpack:///./node_modules/d3-selection/src/selection/nodes.js","webpack:///./node_modules/d3-selection/src/selection/node.js","webpack:///./node_modules/d3-selection/src/selection/size.js","webpack:///./node_modules/d3-selection/src/selection/empty.js","webpack:///./node_modules/d3-selection/src/selection/each.js","webpack:///./node_modules/d3-selection/src/selection/property.js","webpack:///./node_modules/d3-selection/src/selection/append.js","webpack:///./node_modules/d3-selection/src/selection/datum.js","webpack:///./node_modules/d3-selection/src/select.js","webpack:///./node_modules/d3-selection/src/create.js","webpack:///./node_modules/d3-selection/src/local.js","webpack:///./node_modules/d3-selection/src/sourceEvent.js","webpack:///./node_modules/d3-selection/src/point.js","webpack:///./node_modules/d3-selection/src/mouse.js","webpack:///./node_modules/d3-selection/src/selectAll.js","webpack:///./node_modules/d3-selection/src/touch.js","webpack:///./node_modules/d3-selection/src/touches.js","webpack:///./node_modules/d3-array/src/ascending.js","webpack:///./node_modules/d3-array/src/bisector.js","webpack:///./node_modules/d3-array/src/bisect.js","webpack:///./node_modules/d3-array/src/pairs.js","webpack:///./node_modules/d3-array/src/cross.js","webpack:///./node_modules/d3-array/src/descending.js","webpack:///./node_modules/d3-array/src/number.js","webpack:///./node_modules/d3-array/src/variance.js","webpack:///./node_modules/d3-array/src/deviation.js","webpack:///./node_modules/d3-array/src/extent.js","webpack:///./node_modules/d3-array/src/array.js","webpack:///./node_modules/d3-array/src/constant.js","webpack:///./node_modules/d3-array/src/identity.js","webpack:///./node_modules/d3-array/src/range.js","webpack:///./node_modules/d3-array/src/ticks.js","webpack:///./node_modules/d3-array/src/threshold/sturges.js","webpack:///./node_modules/d3-array/src/histogram.js","webpack:///./node_modules/d3-array/src/quantile.js","webpack:///./node_modules/d3-array/src/threshold/freedmanDiaconis.js","webpack:///./node_modules/d3-array/src/threshold/scott.js","webpack:///./node_modules/d3-array/src/max.js","webpack:///./node_modules/d3-array/src/mean.js","webpack:///./node_modules/d3-array/src/median.js","webpack:///./node_modules/d3-array/src/merge.js","webpack:///./node_modules/d3-array/src/min.js","webpack:///./node_modules/d3-array/src/permute.js","webpack:///./node_modules/d3-array/src/scan.js","webpack:///./node_modules/d3-array/src/shuffle.js","webpack:///./node_modules/d3-array/src/sum.js","webpack:///./node_modules/d3-array/src/transpose.js","webpack:///./node_modules/d3-array/src/zip.js","webpack:///./node_modules/d3-time/src/interval.js","webpack:///./node_modules/d3-time/src/millisecond.js","webpack:///./node_modules/d3-time/src/duration.js","webpack:///./node_modules/d3-time/src/second.js","webpack:///./node_modules/d3-time/src/minute.js","webpack:///./node_modules/d3-time/src/hour.js","webpack:///./node_modules/d3-time/src/day.js","webpack:///./node_modules/d3-time/src/week.js","webpack:///./node_modules/d3-time/src/month.js","webpack:///./node_modules/d3-time/src/year.js","webpack:///./node_modules/d3-time/src/utcMinute.js","webpack:///./node_modules/d3-time/src/utcHour.js","webpack:///./node_modules/d3-time/src/utcDay.js","webpack:///./node_modules/d3-time/src/utcWeek.js","webpack:///./node_modules/d3-time/src/utcMonth.js","webpack:///./node_modules/d3-time/src/utcYear.js","webpack:///./node_modules/d3-color/src/define.js","webpack:///./node_modules/d3-color/src/color.js","webpack:///./node_modules/d3-color/src/math.js","webpack:///./node_modules/d3-color/src/lab.js","webpack:///./node_modules/d3-color/src/cubehelix.js","webpack:///./node_modules/d3-interpolate/src/basis.js","webpack:///./node_modules/d3-interpolate/src/basisClosed.js","webpack:///./node_modules/d3-interpolate/src/constant.js","webpack:///./node_modules/d3-interpolate/src/color.js","webpack:///./node_modules/d3-interpolate/src/rgb.js","webpack:///./node_modules/d3-interpolate/src/array.js","webpack:///./node_modules/d3-interpolate/src/date.js","webpack:///./node_modules/d3-interpolate/src/number.js","webpack:///./node_modules/d3-interpolate/src/object.js","webpack:///./node_modules/d3-interpolate/src/string.js","webpack:///./node_modules/d3-interpolate/src/transform/parse.js","webpack:///./node_modules/d3-interpolate/src/value.js","webpack:///./node_modules/d3-interpolate/src/round.js","webpack:///./node_modules/d3-interpolate/src/transform/decompose.js","webpack:///./node_modules/d3-interpolate/src/transform/index.js","webpack:///./node_modules/d3-interpolate/src/zoom.js","webpack:///./node_modules/d3-interpolate/src/hsl.js","webpack:///./node_modules/d3-interpolate/src/lab.js","webpack:///./node_modules/d3-interpolate/src/hcl.js","webpack:///./node_modules/d3-interpolate/src/cubehelix.js","webpack:///./node_modules/d3-interpolate/src/piecewise.js","webpack:///./node_modules/d3-interpolate/src/quantize.js","webpack:///./node_modules/d3-path/src/path.js","webpack:///./node_modules/d3-dispatch/src/dispatch.js","webpack:///./lib/utils/each.js","webpack:///./node_modules/d3-timer/src/timer.js","webpack:///./node_modules/d3-timer/src/timeout.js","webpack:///./node_modules/d3-timer/src/interval.js","webpack:///./node_modules/d3-format/src/formatDecimal.js","webpack:///./node_modules/d3-format/src/exponent.js","webpack:///./node_modules/d3-format/src/formatSpecifier.js","webpack:///./node_modules/d3-format/src/formatTrim.js","webpack:///./node_modules/d3-format/src/formatPrefixAuto.js","webpack:///./node_modules/d3-format/src/defaultLocale.js","webpack:///./node_modules/d3-format/src/formatRounded.js","webpack:///./node_modules/d3-format/src/formatTypes.js","webpack:///./node_modules/d3-format/src/identity.js","webpack:///./node_modules/d3-format/src/locale.js","webpack:///./node_modules/d3-format/src/formatGroup.js","webpack:///./node_modules/d3-format/src/formatNumerals.js","webpack:///./node_modules/d3-format/src/precisionFixed.js","webpack:///./node_modules/d3-format/src/precisionPrefix.js","webpack:///./node_modules/d3-format/src/precisionRound.js","webpack:///./node_modules/d3-collection/src/map.js","webpack:///./node_modules/d3-collection/src/nest.js","webpack:///./node_modules/d3-collection/src/set.js","webpack:///./node_modules/d3-collection/src/keys.js","webpack:///./node_modules/d3-collection/src/values.js","webpack:///./node_modules/d3-collection/src/entries.js","webpack:///./node_modules/d3-transition/src/transition/schedule.js","webpack:///./node_modules/d3-transition/src/interrupt.js","webpack:///./node_modules/d3-transition/src/transition/tween.js","webpack:///./node_modules/d3-transition/src/transition/interpolate.js","webpack:///./node_modules/d3-transition/src/transition/remove.js","webpack:///./node_modules/d3-transition/src/transition/selection.js","webpack:///./node_modules/d3-transition/src/transition/text.js","webpack:///./node_modules/d3-transition/src/transition/index.js","webpack:///./node_modules/d3-transition/src/transition/select.js","webpack:///./node_modules/d3-transition/src/transition/selectAll.js","webpack:///./node_modules/d3-transition/src/transition/filter.js","webpack:///./node_modules/d3-transition/src/transition/merge.js","webpack:///./node_modules/d3-transition/src/transition/transition.js","webpack:///./node_modules/d3-transition/src/transition/on.js","webpack:///./node_modules/d3-transition/src/transition/attr.js","webpack:///./node_modules/d3-transition/src/transition/attrTween.js","webpack:///./node_modules/d3-transition/src/transition/style.js","webpack:///./node_modules/d3-transition/src/transition/styleTween.js","webpack:///./node_modules/d3-transition/src/transition/delay.js","webpack:///./node_modules/d3-transition/src/transition/duration.js","webpack:///./node_modules/d3-transition/src/transition/ease.js","webpack:///./node_modules/d3-transition/src/selection/transition.js","webpack:///./node_modules/d3-transition/src/selection/index.js","webpack:///./node_modules/d3-transition/src/selection/interrupt.js","webpack:///./node_modules/d3-transition/src/active.js","webpack:///./node_modules/d3-drag/src/noevent.js","webpack:///./node_modules/d3-drag/src/nodrag.js","webpack:///./node_modules/d3-drag/src/constant.js","webpack:///./node_modules/d3-drag/src/event.js","webpack:///./node_modules/d3-drag/src/drag.js","webpack:///./node_modules/d3-time-format/src/locale.js","webpack:///./node_modules/d3-time-format/src/defaultLocale.js","webpack:///./node_modules/d3-time-format/src/isoFormat.js","webpack:///./node_modules/d3-time-format/src/isoParse.js","webpack:///./node_modules/d3-quadtree/src/add.js","webpack:///./node_modules/d3-quadtree/src/cover.js","webpack:///./node_modules/d3-quadtree/src/quad.js","webpack:///./node_modules/d3-quadtree/src/x.js","webpack:///./node_modules/d3-quadtree/src/y.js","webpack:///./node_modules/d3-quadtree/src/quadtree.js","webpack:///./node_modules/d3-quadtree/src/data.js","webpack:///./node_modules/d3-quadtree/src/extent.js","webpack:///./node_modules/d3-quadtree/src/find.js","webpack:///./node_modules/d3-quadtree/src/remove.js","webpack:///./node_modules/d3-quadtree/src/root.js","webpack:///./node_modules/d3-quadtree/src/size.js","webpack:///./node_modules/d3-quadtree/src/visit.js","webpack:///./node_modules/d3-quadtree/src/visitAfter.js","webpack:///./node_modules/d3-dsv/src/dsv.js","webpack:///./node_modules/d3-dsv/src/csv.js","webpack:///./node_modules/d3-dsv/src/tsv.js","webpack:///./node_modules/d3-ease/src/linear.js","webpack:///./node_modules/d3-ease/src/quad.js","webpack:///./node_modules/d3-ease/src/cubic.js","webpack:///./node_modules/d3-ease/src/poly.js","webpack:///./node_modules/d3-ease/src/sin.js","webpack:///./node_modules/d3-ease/src/exp.js","webpack:///./node_modules/d3-ease/src/circle.js","webpack:///./node_modules/d3-ease/src/bounce.js","webpack:///./node_modules/d3-ease/src/back.js","webpack:///./node_modules/d3-ease/src/elastic.js","webpack:///./node_modules/d3-axis/src/array.js","webpack:///./node_modules/d3-axis/src/identity.js","webpack:///./node_modules/d3-axis/src/axis.js","webpack:///./node_modules/d3-brush/src/constant.js","webpack:///./node_modules/d3-brush/src/event.js","webpack:///./node_modules/d3-brush/src/noevent.js","webpack:///./node_modules/d3-brush/src/brush.js","webpack:///./node_modules/d3-zoom/src/constant.js","webpack:///./node_modules/d3-zoom/src/transform.js","webpack:///./node_modules/d3-zoom/src/noevent.js","webpack:///./node_modules/d3-zoom/src/zoom.js","webpack:///./node_modules/d3-zoom/src/event.js","webpack:///./node_modules/d3-chord/src/math.js","webpack:///./node_modules/d3-chord/src/chord.js","webpack:///./node_modules/d3-chord/src/array.js","webpack:///./node_modules/d3-chord/src/constant.js","webpack:///./node_modules/d3-chord/src/ribbon.js","webpack:///./node_modules/d3-polygon/src/area.js","webpack:///./node_modules/d3-polygon/src/centroid.js","webpack:///./node_modules/d3-polygon/src/cross.js","webpack:///./node_modules/d3-polygon/src/hull.js","webpack:///./node_modules/d3-polygon/src/contains.js","webpack:///./node_modules/d3-polygon/src/length.js","webpack:///./node_modules/d3-random/src/defaultSource.js","webpack:///./node_modules/d3-random/src/uniform.js","webpack:///./node_modules/d3-random/src/normal.js","webpack:///./node_modules/d3-random/src/logNormal.js","webpack:///./node_modules/d3-random/src/irwinHall.js","webpack:///./node_modules/d3-random/src/bates.js","webpack:///./node_modules/d3-random/src/exponential.js","webpack:///./node_modules/d3-fetch/src/blob.js","webpack:///./node_modules/d3-fetch/src/buffer.js","webpack:///./node_modules/d3-fetch/src/text.js","webpack:///./node_modules/d3-fetch/src/dsv.js","webpack:///./node_modules/d3-fetch/src/image.js","webpack:///./node_modules/d3-fetch/src/json.js","webpack:///./node_modules/d3-fetch/src/xml.js","webpack:///./node_modules/d3-contour/src/array.js","webpack:///./node_modules/d3-contour/src/ascending.js","webpack:///./node_modules/d3-contour/src/area.js","webpack:///./node_modules/d3-contour/src/constant.js","webpack:///./node_modules/d3-contour/src/contains.js","webpack:///./node_modules/d3-contour/src/noop.js","webpack:///./node_modules/d3-contour/src/contours.js","webpack:///./node_modules/d3-contour/src/blur.js","webpack:///./node_modules/d3-contour/src/density.js","webpack:///./node_modules/d3-voronoi/src/constant.js","webpack:///./node_modules/d3-voronoi/src/point.js","webpack:///./node_modules/d3-voronoi/src/RedBlackTree.js","webpack:///./node_modules/d3-voronoi/src/Edge.js","webpack:///./node_modules/d3-voronoi/src/Cell.js","webpack:///./node_modules/d3-voronoi/src/Circle.js","webpack:///./node_modules/d3-voronoi/src/Beach.js","webpack:///./node_modules/d3-voronoi/src/Diagram.js","webpack:///./node_modules/d3-voronoi/src/voronoi.js","webpack:///./node_modules/d3-force/src/center.js","webpack:///./node_modules/d3-force/src/constant.js","webpack:///./node_modules/d3-force/src/jiggle.js","webpack:///./node_modules/d3-force/src/collide.js","webpack:///./node_modules/d3-force/src/link.js","webpack:///./node_modules/d3-force/src/simulation.js","webpack:///./node_modules/d3-force/src/manyBody.js","webpack:///./node_modules/d3-force/src/radial.js","webpack:///./node_modules/d3-force/src/x.js","webpack:///./node_modules/d3-force/src/y.js","webpack:///./node_modules/d3-scale/src/array.js","webpack:///./node_modules/d3-scale/src/ordinal.js","webpack:///./node_modules/d3-scale/src/band.js","webpack:///./node_modules/d3-scale/src/constant.js","webpack:///./node_modules/d3-scale/src/number.js","webpack:///./node_modules/d3-scale/src/continuous.js","webpack:///./node_modules/d3-scale/src/tickFormat.js","webpack:///./node_modules/d3-scale/src/linear.js","webpack:///./node_modules/d3-scale/src/identity.js","webpack:///./node_modules/d3-scale/src/nice.js","webpack:///./node_modules/d3-scale/src/log.js","webpack:///./node_modules/d3-scale/src/pow.js","webpack:///./node_modules/d3-scale/src/quantile.js","webpack:///./node_modules/d3-scale/src/quantize.js","webpack:///./node_modules/d3-scale/src/threshold.js","webpack:///./node_modules/d3-scale/src/time.js","webpack:///./node_modules/d3-scale/src/utcTime.js","webpack:///./node_modules/d3-scale/src/sequential.js","webpack:///./node_modules/d3-hierarchy/src/cluster.js","webpack:///./node_modules/d3-hierarchy/src/hierarchy/count.js","webpack:///./node_modules/d3-hierarchy/src/hierarchy/index.js","webpack:///./node_modules/d3-hierarchy/src/hierarchy/each.js","webpack:///./node_modules/d3-hierarchy/src/hierarchy/eachAfter.js","webpack:///./node_modules/d3-hierarchy/src/hierarchy/eachBefore.js","webpack:///./node_modules/d3-hierarchy/src/hierarchy/sum.js","webpack:///./node_modules/d3-hierarchy/src/hierarchy/sort.js","webpack:///./node_modules/d3-hierarchy/src/hierarchy/path.js","webpack:///./node_modules/d3-hierarchy/src/hierarchy/ancestors.js","webpack:///./node_modules/d3-hierarchy/src/hierarchy/descendants.js","webpack:///./node_modules/d3-hierarchy/src/hierarchy/leaves.js","webpack:///./node_modules/d3-hierarchy/src/hierarchy/links.js","webpack:///./node_modules/d3-hierarchy/src/array.js","webpack:///./node_modules/d3-hierarchy/src/pack/enclose.js","webpack:///./node_modules/d3-hierarchy/src/pack/siblings.js","webpack:///./node_modules/d3-hierarchy/src/accessors.js","webpack:///./node_modules/d3-hierarchy/src/constant.js","webpack:///./node_modules/d3-hierarchy/src/pack/index.js","webpack:///./node_modules/d3-hierarchy/src/treemap/round.js","webpack:///./node_modules/d3-hierarchy/src/treemap/dice.js","webpack:///./node_modules/d3-hierarchy/src/partition.js","webpack:///./node_modules/d3-hierarchy/src/stratify.js","webpack:///./node_modules/d3-hierarchy/src/tree.js","webpack:///./node_modules/d3-hierarchy/src/treemap/slice.js","webpack:///./node_modules/d3-hierarchy/src/treemap/squarify.js","webpack:///./node_modules/d3-hierarchy/src/treemap/index.js","webpack:///./node_modules/d3-hierarchy/src/treemap/binary.js","webpack:///./node_modules/d3-hierarchy/src/treemap/sliceDice.js","webpack:///./node_modules/d3-hierarchy/src/treemap/resquarify.js","webpack:///./node_modules/d3-scale-chromatic/src/colors.js","webpack:///./node_modules/d3-scale-chromatic/src/categorical/category10.js","webpack:///./node_modules/d3-scale-chromatic/src/categorical/Accent.js","webpack:///./node_modules/d3-scale-chromatic/src/categorical/Dark2.js","webpack:///./node_modules/d3-scale-chromatic/src/categorical/Paired.js","webpack:///./node_modules/d3-scale-chromatic/src/categorical/Pastel1.js","webpack:///./node_modules/d3-scale-chromatic/src/categorical/Pastel2.js","webpack:///./node_modules/d3-scale-chromatic/src/categorical/Set1.js","webpack:///./node_modules/d3-scale-chromatic/src/categorical/Set2.js","webpack:///./node_modules/d3-scale-chromatic/src/categorical/Set3.js","webpack:///./node_modules/d3-scale-chromatic/src/ramp.js","webpack:///./node_modules/d3-scale-chromatic/src/diverging/BrBG.js","webpack:///./node_modules/d3-scale-chromatic/src/diverging/PRGn.js","webpack:///./node_modules/d3-scale-chromatic/src/diverging/PiYG.js","webpack:///./node_modules/d3-scale-chromatic/src/diverging/PuOr.js","webpack:///./node_modules/d3-scale-chromatic/src/diverging/RdBu.js","webpack:///./node_modules/d3-scale-chromatic/src/diverging/RdGy.js","webpack:///./node_modules/d3-scale-chromatic/src/diverging/RdYlBu.js","webpack:///./node_modules/d3-scale-chromatic/src/diverging/RdYlGn.js","webpack:///./node_modules/d3-scale-chromatic/src/diverging/Spectral.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-multi/BuGn.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-multi/BuPu.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-multi/GnBu.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-multi/OrRd.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-multi/PuBuGn.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-multi/PuBu.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-multi/PuRd.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-multi/RdPu.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-multi/YlGnBu.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-multi/YlGn.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-multi/YlOrBr.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-multi/YlOrRd.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-single/Blues.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-single/Greens.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-single/Greys.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-single/Purples.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-single/Reds.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-single/Oranges.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-multi/cubehelix.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-multi/rainbow.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-multi/sinebow.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-multi/viridis.js","webpack:///./node_modules/d3-shape/src/constant.js","webpack:///./node_modules/d3-shape/src/math.js","webpack:///./node_modules/d3-shape/src/arc.js","webpack:///./node_modules/d3-shape/src/curve/linear.js","webpack:///./node_modules/d3-shape/src/point.js","webpack:///./node_modules/d3-shape/src/line.js","webpack:///./node_modules/d3-shape/src/area.js","webpack:///./node_modules/d3-shape/src/descending.js","webpack:///./node_modules/d3-shape/src/identity.js","webpack:///./node_modules/d3-shape/src/pie.js","webpack:///./node_modules/d3-shape/src/curve/radial.js","webpack:///./node_modules/d3-shape/src/lineRadial.js","webpack:///./node_modules/d3-shape/src/areaRadial.js","webpack:///./node_modules/d3-shape/src/pointRadial.js","webpack:///./node_modules/d3-shape/src/array.js","webpack:///./node_modules/d3-shape/src/link/index.js","webpack:///./node_modules/d3-shape/src/symbol/circle.js","webpack:///./node_modules/d3-shape/src/symbol/cross.js","webpack:///./node_modules/d3-shape/src/symbol/diamond.js","webpack:///./node_modules/d3-shape/src/symbol/star.js","webpack:///./node_modules/d3-shape/src/symbol/square.js","webpack:///./node_modules/d3-shape/src/symbol/triangle.js","webpack:///./node_modules/d3-shape/src/symbol/wye.js","webpack:///./node_modules/d3-shape/src/symbol.js","webpack:///./node_modules/d3-shape/src/noop.js","webpack:///./node_modules/d3-shape/src/curve/basis.js","webpack:///./node_modules/d3-shape/src/curve/basisClosed.js","webpack:///./node_modules/d3-shape/src/curve/basisOpen.js","webpack:///./node_modules/d3-shape/src/curve/bundle.js","webpack:///./node_modules/d3-shape/src/curve/cardinal.js","webpack:///./node_modules/d3-shape/src/curve/cardinalClosed.js","webpack:///./node_modules/d3-shape/src/curve/cardinalOpen.js","webpack:///./node_modules/d3-shape/src/curve/catmullRom.js","webpack:///./node_modules/d3-shape/src/curve/catmullRomClosed.js","webpack:///./node_modules/d3-shape/src/curve/catmullRomOpen.js","webpack:///./node_modules/d3-shape/src/curve/linearClosed.js","webpack:///./node_modules/d3-shape/src/curve/monotone.js","webpack:///./node_modules/d3-shape/src/curve/natural.js","webpack:///./node_modules/d3-shape/src/curve/step.js","webpack:///./node_modules/d3-shape/src/offset/none.js","webpack:///./node_modules/d3-shape/src/order/none.js","webpack:///./node_modules/d3-shape/src/stack.js","webpack:///./node_modules/d3-shape/src/offset/expand.js","webpack:///./node_modules/d3-shape/src/offset/diverging.js","webpack:///./node_modules/d3-shape/src/offset/silhouette.js","webpack:///./node_modules/d3-shape/src/offset/wiggle.js","webpack:///./node_modules/d3-shape/src/order/ascending.js","webpack:///./node_modules/d3-shape/src/order/descending.js","webpack:///./node_modules/d3-shape/src/order/insideOut.js","webpack:///./node_modules/d3-shape/src/order/reverse.js","webpack:///./node_modules/d3-geo/src/adder.js","webpack:///./node_modules/d3-geo/src/math.js","webpack:///./node_modules/d3-geo/src/noop.js","webpack:///./node_modules/d3-geo/src/stream.js","webpack:///./node_modules/d3-geo/src/area.js","webpack:///./node_modules/d3-geo/src/cartesian.js","webpack:///./node_modules/d3-geo/src/bounds.js","webpack:///./node_modules/d3-geo/src/centroid.js","webpack:///./node_modules/d3-geo/src/constant.js","webpack:///./node_modules/d3-geo/src/compose.js","webpack:///./node_modules/d3-geo/src/rotation.js","webpack:///./node_modules/d3-geo/src/circle.js","webpack:///./node_modules/d3-geo/src/clip/buffer.js","webpack:///./node_modules/d3-geo/src/pointEqual.js","webpack:///./node_modules/d3-geo/src/clip/rejoin.js","webpack:///./node_modules/d3-geo/src/polygonContains.js","webpack:///./node_modules/d3-geo/src/clip/index.js","webpack:///./node_modules/d3-geo/src/clip/antimeridian.js","webpack:///./node_modules/d3-geo/src/clip/circle.js","webpack:///./node_modules/d3-geo/src/clip/line.js","webpack:///./node_modules/d3-geo/src/clip/rectangle.js","webpack:///./node_modules/d3-geo/src/clip/extent.js","webpack:///./node_modules/d3-geo/src/length.js","webpack:///./node_modules/d3-geo/src/distance.js","webpack:///./node_modules/d3-geo/src/contains.js","webpack:///./node_modules/d3-geo/src/graticule.js","webpack:///./node_modules/d3-geo/src/interpolate.js","webpack:///./node_modules/d3-geo/src/path/area.js","webpack:///./node_modules/d3-geo/src/identity.js","webpack:///./node_modules/d3-geo/src/path/bounds.js","webpack:///./node_modules/d3-geo/src/path/centroid.js","webpack:///./node_modules/d3-geo/src/path/context.js","webpack:///./node_modules/d3-geo/src/path/measure.js","webpack:///./node_modules/d3-geo/src/path/string.js","webpack:///./node_modules/d3-geo/src/path/index.js","webpack:///./node_modules/d3-geo/src/transform.js","webpack:///./node_modules/d3-geo/src/projection/fit.js","webpack:///./node_modules/d3-geo/src/projection/resample.js","webpack:///./node_modules/d3-geo/src/projection/index.js","webpack:///./node_modules/d3-geo/src/projection/conic.js","webpack:///./node_modules/d3-geo/src/projection/conicEqualArea.js","webpack:///./node_modules/d3-geo/src/projection/cylindricalEqualArea.js","webpack:///./node_modules/d3-geo/src/projection/albers.js","webpack:///./node_modules/d3-geo/src/projection/albersUsa.js","webpack:///./node_modules/d3-geo/src/projection/azimuthal.js","webpack:///./node_modules/d3-geo/src/projection/azimuthalEqualArea.js","webpack:///./node_modules/d3-geo/src/projection/azimuthalEquidistant.js","webpack:///./node_modules/d3-geo/src/projection/mercator.js","webpack:///./node_modules/d3-geo/src/projection/conicConformal.js","webpack:///./node_modules/d3-geo/src/projection/equirectangular.js","webpack:///./node_modules/d3-geo/src/projection/conicEquidistant.js","webpack:///./node_modules/d3-geo/src/projection/gnomonic.js","webpack:///./node_modules/d3-geo/src/projection/identity.js","webpack:///./node_modules/d3-geo/src/projection/naturalEarth1.js","webpack:///./node_modules/d3-geo/src/projection/orthographic.js","webpack:///./node_modules/d3-geo/src/projection/stereographic.js","webpack:///./node_modules/d3-geo/src/projection/transverseMercator.js","webpack:///./lib/utils/escape-html.js","webpack:///./lib/utils/extend.js","webpack:///./lib/utils/assert-date-string.js","webpack:///./lib/dataset/utils/create-null-list.js","webpack:///./lib/dataset/modifiers/append.js","webpack:///./node_modules/d3/dist/package.js","webpack:///./lib/utils/strip-html-tags.js","webpack:///./lib/dataset/utils/analyses.js","webpack:///./lib/dataset/index.js","webpack:///./node_modules/c3/node_modules/d3/dist/package.js","webpack:///./lib/libraries/default/spinner.js","webpack:///./lib/libraries/default/table.js","webpack:///./lib/utils/pretty-number.js","webpack:///./lib/libraries/default/metric.js","webpack:///./lib/libraries/default/message.js","webpack:///./lib/libraries/c3/extensions/tooltip-contents.js","webpack:///./lib/libraries/c3/extensions/paginating-legend.js","webpack:///./lib/libraries/c3/extensions/default-date-format.js","webpack:///./lib/utils/extend-deep.js","webpack:///./node_modules/c3/c3.js","webpack:///./lib/libraries/index.js","webpack:///./lib/data.js","webpack:///./lib/dataset/utils/flatten.js","webpack:///./lib/dataset/utils/parsers.js","webpack:///./lib/dataset/modifiers/update.js","webpack:///./lib/dataset/modifiers/sort.js","webpack:///./lib/dataset/modifiers/select.js","webpack:///./lib/dataset/modifiers/insert.js","webpack:///./lib/dataset/modifiers/filter.js","webpack:///./lib/dataset/modifiers/delete.js","webpack:///./lib/index.js","webpack:///(webpack)/buildin/global.js","webpack:///./lib/browser.js"],"names":["root","factory","exports","module","define","amd","a","i","window","installedModules","__webpack_require__","moduleId","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","s","xhtml","namespaces","svg","xlink","xml","xmlns","namespace","prefix","indexOf","slice","space","local","creator","fullname","this","ownerDocument","createElementNS","document","uri","namespaceURI","documentElement","createElement","none","src_selector","selector","querySelector","empty","selectorAll","querySelectorAll","matcher","matches","matcher_element","vendorMatches","webkitMatchesSelector","msMatchesSelector","mozMatchesSelector","oMatchesSelector","src_matcher","sparse","update","Array","length","EnterNode","parent","datum","_next","_parent","__data__","constructor","appendChild","child","insertBefore","next","keyPrefix","bindIndex","group","enter","exit","data","node","groupLength","dataLength","bindKey","key","keyValue","nodeByKeyValue","keyValues","ascending","b","NaN","src_window","defaultView","styleValue","style","getPropertyValue","getComputedStyle","classArray","string","trim","split","classList","ClassList","_node","_names","getAttribute","classedAdd","names","list","add","classedRemove","remove","push","setAttribute","join","splice","contains","textRemove","textContent","htmlRemove","innerHTML","raise","nextSibling","parentNode","lower","previousSibling","firstChild","constantNull","removeChild","selection_cloneShallow","cloneNode","selection_cloneDeep","filterEvents","on_event","mouseenter","mouseleave","filterContextListener","listener","index","contextListener","event","related","relatedTarget","compareDocumentPosition","event1","event0","onRemove","typename","on","__on","j","type","removeEventListener","capture","onAdd","wrap","addEventListener","customEvent","that","args","sourceEvent","apply","dispatchEvent","params","CustomEvent","createEvent","initEvent","bubbles","cancelable","detail","Selection","groups","parents","_groups","_parents","selection_selection","select","subgroups","subnode","subgroup","selectAll","filter","match","size","each","x","bind","enterGroup","updateGroup","previous","i0","i1","_enter","_exit","map","merge","selection","groups0","groups1","m0","m1","Math","min","merges","group0","group1","order","sort","compare","compareNode","sortgroups","sortgroup","callback","arguments","nodes","attr","getAttributeNS","removeAttributeNS","removeAttribute","v","setAttributeNS","priority","removeProperty","setProperty","classed","text","html","append","create","insert","before","clone","deep","t","typenames","parseTypenames","dispatch","src_selection","src_select","src_create","nextId","Local","_","toString","id","set","source","current","point","ownerSVGElement","createSVGPoint","clientX","y","clientY","matrixTransform","getScreenCTM","inverse","rect","getBoundingClientRect","left","clientLeft","top","clientTop","mouse","changedTouches","src_selectAll","src_touch","touches","identifier","touch","src_touches","points","bisector","f","lo","hi","mid","right","ascendingBisect","bisectRight","bisectLeft","bisect","pairs","array","pair","cross","values0","values1","reduce","value0","n0","n1","values","descending","number","variance","valueof","delta","mean","sum","isNaN","deviation","sqrt","extent","max","array_array","constant","identity","range","start","stop","step","ceil","e10","e5","e2","ticks","count","reverse","tickIncrement","isFinite","floor","power","log","LN10","error","pow","tickStep","step0","abs","step1","sturges","LN2","src_histogram","domain","threshold","histogram","xz","x0","x1","tz","isArray","shift","pop","bin","bins","thresholds","quantile","freedmanDiaconis","scott","src_max","src_mean","median","numbers","arrays","merged","src_min","permute","indexes","permutes","scan","xi","xj","shuffle","random","src_sum","src_transpose","matrix","transpose_length","transpose","row","zip","t0","Date","t1","newInterval","floori","offseti","field","interval","date","round","d0","d1","offset","test","setTime","end","every","millisecond","k","src_millisecond","milliseconds","durationMinute","durationWeek","second","getUTCSeconds","seconds","minute","getMinutes","minutes","hour","getTimezoneOffset","getHours","src_hour","hours","day","setHours","setDate","getDate","src_day","days","weekday","getDay","sunday","monday","tuesday","wednesday","thursday","friday","saturday","sundays","mondays","tuesdays","wednesdays","thursdays","fridays","saturdays","month","setMonth","getMonth","getFullYear","src_month","months","year","setFullYear","src_year","years","utcMinute","setUTCSeconds","getUTCMinutes","src_utcMinute","utcMinutes","utcHour","setUTCMinutes","getUTCHours","src_utcHour","utcHours","utcDay","setUTCHours","setUTCDate","getUTCDate","utcDays","utcWeekday","getUTCDay","utcSunday","utcMonday","utcTuesday","utcWednesday","utcThursday","utcFriday","utcSaturday","utcSundays","utcMondays","utcTuesdays","utcWednesdays","utcThursdays","utcFridays","utcSaturdays","utcMonth","setUTCMonth","getUTCMonth","getUTCFullYear","src_utcMonth","utcMonths","utcYear","setUTCFullYear","src_utcYear","utcYears","extend","definition","Color","reI","reN","reP","reHex3","reHex6","reRgbInteger","RegExp","reRgbPercent","reRgbaInteger","reRgbaPercent","reHslPercent","reHslaPercent","named","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","color","format","toLowerCase","exec","Rgb","parseInt","rgbn","rgba","hsla","g","rgbConvert","rgb","opacity","hex","h","Hsl","hsl","hslConvert","hsl2rgb","m2","displayable","brighter","darker","deg2rad","PI","rad2deg","Xn","Yn","Zn","t2","t3","labConvert","Lab","Hcl","cos","sin","z","rgb2lrgb","xyz2lab","lab","lab2xyz","lrgb2rgb","hclConvert","atan2","lch","hcl","A","B","C","D","E","ED","EB","BC_DA","cubehelix","Cubehelix","bl","cubehelixConvert","cosh","sinh","basis","v0","v1","v2","v3","src_basis","basisClosed","linear","color_hue","gamma","nogamma","exponential","rgbGamma","d3_color","rgbSpline","spline","colors","rgbBasis","rgbBasisClosed","nb","na","src_value","reA","reB","cssNode","cssRoot","cssView","svgNode","am","bm","bs","bi","lastIndex","q","one","zero","src_rgb","valueOf","degrees","translateX","translateY","rotate","skewX","scaleX","scaleY","decompose","e","atan","interpolateTransform","parse","pxComma","pxParen","degParen","xa","ya","xb","yb","translate","scale","interpolateTransformCss","transform","interpolateTransformSvg","baseVal","consolidate","rho","SQRT2","exp","zoom","p0","p1","S","ux0","uy0","w0","ux1","uy1","w1","dx","dy","d2","b0","b1","r0","r1","coshr0","u","duration","hue","src_hsl","hslLong","src_hcl","hclLong","cubehelix_cubehelix","cubehelixGamma","src_cubehelix","cubehelixLong","piecewise","interpolate","I","quantize","interpolator","samples","pi","tau","tauEpsilon","Path","_x0","_y0","_x1","_y1","path","moveTo","closePath","lineTo","quadraticCurveTo","y1","bezierCurveTo","x2","y2","arcTo","y0","x21","y21","x01","y01","l01_2","Error","x20","y20","l21_2","l20_2","l21","l01","acos","t01","t21","arc","a0","a1","ccw","cw","da","w","src_path","noop","Dispatch","concat","types","T","copy","src_dispatch","cb","taskHead","taskTail","timer_frame","timeout","pokeDelay","clockLast","clockNow","clockSkew","clock","performance","now","setFrame","requestAnimationFrame","setTimeout","clearNow","Timer","_call","_time","timer","delay","time","restart","timerFlush","wake","Infinity","sleep","nap","poke","clearTimeout","clearInterval","setInterval","TypeError","src_timeout","elapsed","src_interval","total","tick","formatDecimal","toExponential","coefficient","src_exponent","re","formatSpecifier","specifier","FormatSpecifier","fill","align","sign","symbol","width","comma","precision","prefixExponent","defaultLocale_locale","defaultLocale_format","defaultLocale_formatPrefix","formatTrim","out","formatRounded","exponent","formatTypes","%","toFixed","toPrecision","X","toUpperCase","prefixes","src_locale","locale","grouping","thousands","substring","currency","decimal","numerals","replace","formatNumerals","percent","newFormat","suffix","formatType","maybeSuffix","valuePrefix","valueSuffix","valueNegative","charCodeAt","padding","formatPrefix","defaultLocale","precisionFixed","precisionPrefix","precisionRound","Map","has","clear","keys","entries","src_map","src_nest","sortValues","rollup","nest","sortKeys","depth","createResult","setResult","valuesByKey","result","createObject","setObject","createMap","setMap","sortKey","Set","proto","src_set","src_keys","src_values","src_entries","emptyOn","d3_dispatch","emptyTween","CREATED","SCHEDULED","STARTING","STARTED","RUNNING","ENDING","ENDED","transition_schedule","timing","schedules","__transition","self","tween","state","d3_timer","ease","init","schedule","interrupt","active","tweenValue","transition","_id","transition_interpolate","d3_interpolate","d3_selection","transition_id","Transition","_name","src_transition_transition","newId","selection_prototype","children","inherit","id0","id1","on0","on1","sit","on_start","onFunction","attrTween","value00","value10","interpolate0","value1","_value","styleTween","styleRemove","styleRemoveEnd","styleFunction","styleConstant","textFunction","textConstant","tween0","tween1","easeConstant","defaultTiming","transition_inherit","src_active","nopropagation","stopImmediatePropagation","noevent","preventDefault","nodrag","view","__noselect","MozUserSelect","yesdrag","noclick","DragEvent","target","subject","defaultFilter","button","defaultContainer","defaultSubject","defaultTouchable","src_drag","mousedownx","mousedowny","mousemoving","touchending","container","touchable","gestures","listeners","clickDistance2","drag","mousedowned","touchstarted","touchmoved","touchended","gesture","beforestart","mousemoved","mouseupped","sublisteners","clickDistance","localDate","H","M","L","utcDate","UTC","newYear","formatLocale","locale_dateTime","dateTime","locale_date","locale_time","locale_periods","periods","locale_weekdays","locale_shortWeekdays","shortDays","locale_months","locale_shortMonths","shortMonths","periodRe","formatRe","periodLookup","formatLookup","weekdayRe","weekdayLookup","shortWeekdayRe","shortWeekdayLookup","monthRe","monthLookup","shortMonthRe","shortMonthLookup","formats","formatDayOfMonth","formatMicroseconds","formatHour24","formatHour12","formatDayOfYear","formatMilliseconds","formatMonthNumber","formatMinutes","Q","formatUnixTimestamp","formatUnixTimestampSeconds","formatSeconds","formatWeekdayNumberMonday","U","formatWeekNumberSunday","V","formatWeekNumberISO","formatWeekdayNumberSunday","W","formatWeekNumberMonday","formatYear","Y","formatFullYear","Z","formatZone","formatLiteralPercent","utcFormats","formatUTCDayOfMonth","formatUTCMicroseconds","formatUTCHour24","formatUTCHour12","formatUTCDayOfYear","formatUTCMilliseconds","formatUTCMonthNumber","formatUTCMinutes","formatUTCSeconds","formatUTCWeekdayNumberMonday","formatUTCWeekNumberSunday","formatUTCWeekNumberISO","formatUTCWeekdayNumberSunday","formatUTCWeekNumberMonday","formatUTCYear","formatUTCFullYear","formatUTCZone","parses","parseSpecifier","parseDayOfMonth","parseMicroseconds","parseHour24","parseDayOfYear","parseMilliseconds","parseMonthNumber","parseMinutes","parseUnixTimestamp","parseUnixTimestampSeconds","parseSeconds","parseWeekdayNumberMonday","parseWeekNumberSunday","parseWeekNumberISO","parseWeekdayNumberSunday","parseWeekNumberMonday","parseYear","parseFullYear","parseZone","parseLiteralPercent","pad","pads","charAt","newParse","newDate","week","d3_time","utcFormat","utcParse","timeFormat","timeParse","-","0","numberRe","percentRe","requoteRe","requote","getMilliseconds","getSeconds","getUTCMilliseconds","dow","isoFormat","toISOString","isoParse","add_add","tree","xm","ym","xp","yp","bottom","_root","leaf","_x","_y","quad","defaultX","defaultY","quadtree","Quadtree","addAll","undefined","leaf_copy","treeProto","cover","yz","visit","find","radius","x3","y3","quads","retainer","removeAll","visitAfter","EOL","EOF","QUOTE","NEWLINE","RETURN","objectConverter","columns","Function","JSON","stringify","dsv","delimiter","reFormat","DELIMITER","parseRows","rows","N","eof","eol","token","formatRow","formatValue","convert","customConverter","columnSet","forEach","column","inferColumns","formatRows","csv","csvParse","csvParseRows","csvFormat","csvFormatRows","tsv","tsvParse","tsvParseRows","tsvFormat","tsvFormatRows","quadIn","quadOut","quadInOut","cubicIn","cubicOut","cubicInOut","polyIn","custom","polyOut","polyInOut","halfPi","sinIn","sinOut","sinInOut","expIn","expOut","expInOut","circleIn","circleOut","circleInOut","b2","b3","b4","b5","b6","b7","b8","b9","bounceIn","bounceOut","bounceInOut","backIn","overshoot","backOut","backInOut","elasticIn","asin","amplitude","period","elasticOut","elasticInOut","axis_top","epsilon","entering","__axis","axis_axis","orient","tickArguments","tickValues","tickFormat","tickSizeInner","tickSizeOuter","tickPadding","axis","context","spacing","range0","range1","position","bandwidth","tickExit","tickEnter","line","tickSize","axisTop","axisRight","axisBottom","axisLeft","src_event","MODE_DRAG","MODE_SPACE","MODE_HANDLE","MODE_CENTER","handles","brush_type","input","output","xy","XY","cursors","overlay","nw","ne","se","sw","flipX","flipY","signsX","signsY","defaultExtent","height","__brush","brushSelection","dim","brushX","brush_brush","brushY","brush","handleSize","initialize","handle","redraw","started","emitter","Emitter","e0","e1","s0","s1","moving","lockX","lockY","mode","metaKey","altKey","signX","signY","shifting","shiftKey","point0","emit","moved","ended","keyCode","move","d3_drag","d3_transition","point1","selection0","selection1","starting","Transform","applyX","applyY","invert","location","invertX","invertY","rescaleX","rescaleY","transform_transform","__zoom","SVGElement","clientWidth","clientHeight","defaultTransform","defaultWheelDelta","deltaY","deltaMode","defaultConstrain","translateExtent","dx0","dx1","dy0","dy1","src_zoom","touchstarting","constrain","wheelDelta","scaleExtent","touchDelay","wheelDelay","wheeled","dblclicked","centroid","center","Gesture","wheel","k1","touch0","touch1","l0","l1","dp","dl","collection","scaleBy","scaleTo","translateBy","translateTo","src_chord","padAngle","sortGroups","sortSubgroups","sortChords","chord","groupSums","groupIndex","d3_array","subgroupIndex","chords","di","dj","subindex","startAngle","endAngle","defaultSource","defaultTarget","defaultRadius","defaultStartAngle","defaultEndAngle","src_ribbon","ribbon","buffer","argv","sr","sa0","sa1","sx0","sy0","tr","ta0","ta1","d3_path","src_area","polygon","area","lexicographicOrder","computeUpperHullIndexes","hull","sortedPoints","flippedPoints","upperIndexes","lowerIndexes","skipLeft","skipRight","inside","src_length","perimeter","uniform","sourceRandomUniform","randomUniform","normal","sourceRandomNormal","randomNormal","mu","sigma","logNormal","sourceRandomLogNormal","randomLogNormal","irwinHall","sourceRandomIrwinHall","randomIrwinHall","bates","sourceRandomBates","randomBates","sourceRandomExponential","randomExponential","lambda","responseBlob","response","ok","status","statusText","blob","fetch","then","responseArrayBuffer","arrayBuffer","responseText","src_text","dsvParse","d3_dsv","src_image","Promise","resolve","reject","image","Image","onerror","onload","src","responseJson","json","parser","DOMParser","parseFromString","ring","hole","ringContains","yi","pj","yj","segmentContains","collinear","cases","src_contours","smooth","smoothLinear","contours","contour","polygons","holes","fragmentByStart","fragmentByEnd","stitch","startIndex","endIndex","unshift","isorings","coordinates","xt","yt","_0","_1","blurX","blurY","src_density","density","Float32Array","geometry","transformPolygon","transformRing","transformPoint","resize","cellSize","point_x","point_y","RedBlackTree","RedBlackNode","R","P","RedBlackRotateLeft","RedBlackRotateRight","RedBlackFirst","after","grandpa","uncle","sibling","src_RedBlackTree","createEdge","edge","Diagram_edges","setEdgeEnd","cells","halfedges","createBorderEdge","vertex","clipEdge","ax","ay","connectEdge","fm","fb","lx","ly","rx","ry","fx","fy","cellHalfedgeAngle","cell","site","va","vb","cellHalfedgeStart","cellHalfedgeEnd","firstCircle","circlePool","attachCircle","lArc","rArc","lSite","cSite","rSite","bx","by","cx","cy","epsilon2","ha","hc","circle","circles","detachCircle","beachPool","createBeach","beach","detachBeach","beaches","removeBeach","disappearing","iArc","nArcs","addBeach","dxl","dxr","directrix","leftBreakPoint","rightBreakPoint","createCell","newArc","hb","rfocx","rfocy","pby2","lfocx","lfocy","plby2","hl","aby2","lexicographic","Diagram","sites","sortCellHalfedges","clipEdges","iCell","iHalfedge","nHalfedges","startX","startY","endX","endY","nCells","dc","v00","v01","v11","v10","clipCells","edges","triangles","links","_found","vx","vy","src_voronoi","voronoi","force","sx","sy","jiggle","collide_x","collide_y","collide","radii","strength","iterations","ri","ri2","d3_quadtree","prepare","rj","nodeById","nodeId","strengths","distances","bias","link","distance","alpha","d3_collection","initializeStrength","initializeDistance","simulation_x","simulation_y","initialRadius","initialAngle","src_simulation","simulation","alphaMin","alphaDecay","alphaTarget","velocityDecay","forces","stepper","initializeNodes","angle","initializeForce","closest","distanceMin2","distanceMax2","theta2","accumulate","weight","distanceMin","distanceMax","theta","radial","radiuses","src_x","src_y","implicit","ordinal","unknown","band","ordinalRange","paddingInner","paddingOuter","rescale","rangeRound","pointish","unit","deinterpolateLinear","bimap","deinterpolate","reinterpolate","polymap","clamp","continuous","deinterpolateClamp","reinterpolateClamp","src_tickFormat","d3_format","linearish","nice","log_deinterpolate","log_reinterpolate","pow10","powp","base","logp","log10","log2","reflect","logs","pows","invertExtent","quantiles","durationSecond","durationHour","durationDay","durationMonth","durationYear","time_number","calendar","formatMillisecond","formatSecond","formatMinute","formatHour","formatDay","formatWeek","formatMonth","tickIntervals","tickInterval","d3_time_format","utcTime","sequential","defaultSeparation","meanXReduce","maxYReduce","cluster","separation","nodeSize","previousNode","eachAfter","meanX","maxY","leafLeft","leafRight","hierarchy","childs","Node","valued","defaultChildren","eachBefore","computeHeight","copyData","ancestor","aNodes","ancestors","bNodes","leastCommonAncestor","descendants","leaves","enclose","enclosesWeak","encloseBasis","extendBasis","enclosesWeakAll","enclosesNot","encloseBasis2","encloseBasis3","dr","r2","r21","r3","a2","a3","c2","c3","d3","ab","place","intersects","score","siblings_Node","packEnclose","aa","ca","sj","sk","pack","siblings","required","constantZero","src_pack","radiusLeaf","packChildren","translateChild","treemap_round","dice","src_partition","partition","positionNode","preroot","ambiguous","defaultId","defaultParentId","parentId","stratify","nodeKey","nodeByKey","tree_defaultSeparation","nextLeft","nextRight","moveSubtree","wm","wp","change","nextAncestor","vim","TreeNode","treeRoot","firstWalk","secondWalk","sizeNode","tx","kx","ky","executeShifts","midpoint","vip","vop","vom","sip","sop","sim","som","apportion","treemap_slice","phi","squarifyRatio","ratio","nodeValue","sumValue","minValue","maxValue","newRatio","minRatio","beta","squarify","src_treemap","tile","paddingStack","paddingTop","paddingRight","paddingBottom","paddingLeft","treemap","binary","sums","valueOffset","valueTarget","valueLeft","valueRight","xk","yk","sliceDice","treemap_resquarify","resquarify","_squarify","category10","Accent","Dark2","Paired","Pastel1","Pastel2","Set1","Set2","Set3","ramp","scheme","BrBG_scheme","BrBG","PRGn_scheme","PRGn","PiYG_scheme","PiYG","PuOr_scheme","PuOr","RdBu_scheme","RdBu","RdGy_scheme","RdGy","RdYlBu_scheme","RdYlBu","RdYlGn_scheme","RdYlGn","Spectral_scheme","Spectral","BuGn_scheme","BuGn","BuPu_scheme","BuPu","GnBu_scheme","GnBu","OrRd_scheme","OrRd","PuBuGn_scheme","PuBuGn","PuBu_scheme","PuBu","PuRd_scheme","PuRd","RdPu_scheme","RdPu","YlGnBu_scheme","YlGnBu","YlGn_scheme","YlGn","YlOrBr_scheme","YlOrBr","YlOrRd_scheme","YlOrRd","Blues_scheme","Blues","Greens_scheme","Greens","Greys_scheme","Greys","Purples_scheme","Purples","Reds_scheme","Reds","Oranges_scheme","Oranges","warm","cool","rainbow","ts","sinebow_c","pi_1_3","pi_2_3","sinebow","viridis_ramp","magma","inferno","plasma","arcInnerRadius","innerRadius","arcOuterRadius","outerRadius","arcStartAngle","arcEndAngle","arcPadAngle","cornerTangents","rc","ox","oy","x11","y11","x10","y10","x00","y00","cx0","cy0","cx1","cy1","src_arc","cornerRadius","padRadius","a01","a11","a00","a10","da0","da1","ap","rp","rc0","rc1","oc","x32","y32","intersect","kc","lc","Linear","_context","areaStart","_line","areaEnd","lineStart","_point","lineEnd","defined","curve","defined0","x0z","y0z","arealine","src_line","lineX0","lineY0","lineY1","lineX1","src_pie","pie","arcs","pa","curveRadialLinear","curveRadial","Radial","_curve","lineRadial","src_lineRadial","lineStartAngle","lineEndAngle","lineInnerRadius","lineOuterRadius","pointRadial","linkSource","linkTarget","link_link","curveHorizontal","curveVertical","link_curveRadial","p2","p3","linkHorizontal","linkVertical","linkRadial","draw","tan30","tan30_2","diamond","kr","star","square","sqrt3","triangle","wye_s","wye_k","wye_a","wye","symbols","src_symbol","Basis","BasisClosed","_x2","_x3","_x4","_y2","_y3","_y4","BasisOpen","basisOpen","Bundle","_basis","_beta","curve_bundle","bundle","cardinal_point","_k","Cardinal","tension","cardinal","CardinalClosed","_x5","_y5","cardinalClosed","CardinalOpen","cardinalOpen","catmullRom_point","_l01_a","_l01_2a","_l12_a","_l12_2a","_l23_a","_l23_2a","CatmullRom","_alpha","x23","y23","curve_catmullRom","catmullRom","CatmullRomClosed","catmullRomClosed","CatmullRomOpen","catmullRomOpen","LinearClosed","linearClosed","slope3","h0","h1","slope2","monotone_point","MonotoneX","MonotoneY","ReflectContext","monotoneX","monotoneY","Natural","controlPoints","_t0","px","py","natural","Step","_t","stepBefore","stepAfter","series","order_none","stackValue","src_stack","stack","oz","kz","sz","sij","ki","si","expand","diverging","yn","silhouette","wiggle","s2","sij0","s3","ascending_sum","order_descending","insideOut","tops","bottoms","adder","Adder","reset","temp","bv","av","quarterPi","radians","math_sign","haversin","streamGeometry","stream","streamGeometryType","streamObjectType","Feature","FeatureCollection","features","Sphere","sphere","Point","MultiPoint","LineString","streamLine","MultiLineString","Polygon","streamPolygon","MultiPolygon","GeometryCollection","geometries","closed","coordinate","polygonStart","polygonEnd","area_lambda00","phi00","area_lambda0","area_cosPhi0","area_sinPhi0","src_stream","areaRingSum","areaSum","areaStream","areaRingStart","areaRingEnd","areaRing","areaPointFirst","areaPoint","dLambda","sdLambda","adLambda","cosPhi","sinPhi","cartesian_spherical","cartesian","cartesian_cartesian","spherical","cartesianDot","cartesianCross","cartesianAddInPlace","cartesianScale","vector","cartesianNormalizeInPlace","bounds_lambda0","bounds_phi0","bounds_lambda1","bounds_phi1","bounds_lambda2","bounds_lambda00","bounds_phi00","bounds_p0","ranges","deltaSum","boundsStream","boundsPoint","boundsLineStart","boundsLineEnd","boundsRingPoint","boundsRingStart","boundsRingEnd","bounds_linePoint","inflection","phii","lambdai","antimeridian","bounds_angle","lambda0","lambda1","rangeCompare","rangeContains","W0","W1","centroid_X0","centroid_Y0","Z0","centroid_X1","centroid_Y1","Z1","X2","Y2","Z2","centroid_lambda00","centroid_phi00","centroid_x0","centroid_y0","z0","bounds","feature","deltaMax","centroidStream","centroidPoint","centroidLineStart","centroidLineEnd","centroidRingStart","centroidRingEnd","centroidPointCartesian","centroidLinePointFirst","centroidLinePoint","centroidRingPointFirst","centroidRingPoint","cz","compose","rotationIdentity","rotateRadians","deltaLambda","deltaPhi","deltaGamma","rotationLambda","rotationPhiGamma","forwardRotationLambda","rotation","cosDeltaPhi","sinDeltaPhi","cosDeltaGamma","sinDeltaGamma","src_rotation","forward","circleStream","direction","cosRadius","sinRadius","circleRadius","src_circle","lines","rejoin","pointEqual","Intersection","other","entry","segments","compareIntersection","startInside","clip","segment","rejoin_link","isSubject","polygonContains","winding","phi0","sinPhi0","cosPhi0","sinPhi1","cosPhi1","phi1","absDelta","intersection","phiArc","src_clip","pointVisible","clipLine","sink","ringBuffer","ringSink","polygonStarted","pointRing","ringStart","ringEnd","clip_compareIntersection","pointLine","clean","ringSegments","validSegment","sign0","sign1","sinLambda0Lambda1","clipAntimeridianIntersect","from","to","clip_circle","cr","smallRadius","notHemisphere","visible","two","n2","n2n2","n1n2","determinant","c1","n1xn2","uu","polar","q1","code","c0","point2","clip_line","clipMax","clipMin","clipRectangle","corner","comparePoint","x__","y__","v__","x_","y_","v_","first","activeStream","bufferStream","clipStream","linePoint","polygonInside","cleanInside","length_lambda0","length_sinPhi0","length_cosPhi0","clip_extent","cache","cacheStream","lengthSum","lengthStream","lengthPointFirst","lengthLineEnd","lengthPoint","cosDelta","distance_coordinates","distance_object","containsObjectType","containsGeometry","containsGeometryType","containsPoint","containsLine","containsPolygon","ringRadians","pointRadians","graticuleX","graticuleY","graticule_graticule","X1","X0","Y1","Y0","DX","DY","graticule","outline","extentMajor","extentMinor","stepMajor","stepMinor","graticule10","area_x00","area_y00","area_x0","area_y0","src_interpolate","sy1","kx0","ky0","kx1","ky1","area_areaSum","area_areaRingSum","area_areaStream","area_areaRingStart","area_areaRingEnd","area_areaPointFirst","area_areaPoint","path_area","bounds_x0","bounds_y0","bounds_x1","bounds_y1","centroid_x00","centroid_y00","path_centroid_x0","path_centroid_y0","path_bounds","path_centroid_X0","path_centroid_Y0","centroid_Z0","path_centroid_X1","path_centroid_Y1","centroid_Z1","centroid_X2","centroid_Y2","centroid_Z2","centroid_centroidStream","centroid_centroidPoint","centroid_centroidLineStart","centroid_centroidLineEnd","centroid_centroidRingStart","centroid_centroidRingEnd","centroidPointFirstLine","centroidPointLine","centroidPointFirstRing","centroidPointRing","path_centroid","PathContext","_radius","pointRadius","lengthRing","measure_x00","measure_y00","measure_x0","measure_y0","measure_lengthSum","measure_lengthStream","measure_lengthPointFirst","measure_lengthPoint","measure","PathString","_string","string_circle","_circle","projection","projectionStream","contextStream","src_transform","methods","transformer","TransformStream","fit","fitBounds","clipExtent","fitExtent","fitSize","fitWidth","fitHeight","maxDepth","cosMinDistance","resample","project","delta2","resampleLineTo","phi2","lambda2","dx2","dy2","dz","lambda00","b00","c00","resampleStream","ringPoint","resample_resample","resampleNone","transformRadians","scaleTranslateRotate","cosAlpha","sinAlpha","ai","ci","fi","projection_projection","projectionMutator","projectAt","projectResample","projectTransform","projectRotateTransform","preclip","clip_antimeridian","postclip","recenter","transformRotate","clipAngle","conicProjection","parallels","conicEqualAreaRaw","cylindricalEqualAreaRaw","r0y","conicEqualArea","albers","projection_albersUsa","lower48Point","alaskaPoint","hawaiiPoint","lower48","alaska","hawaii","pointStream","albersUsa","streams","azimuthalRaw","azimuthalInvert","sc","cc","azimuthalEqualAreaRaw","cxcy","azimuthalEqualArea","azimuthalEquidistantRaw","azimuthalEquidistant","mercatorRaw","mercator","mercatorProjection","reclip","tany","conicConformalRaw","conicConformal","equirectangularRaw","equirectangular","conicEquidistantRaw","gy","nx","conicEquidistant","gnomonicRaw","gnomonic","identity_scaleTranslate","ty","projection_identity","reflectX","reflectY","naturalEarth1Raw","phi4","naturalEarth1","orthographicRaw","orthographic","stereographicRaw","stereographic","transverseMercatorRaw","transverseMercator","escapeHtml","escape","str","matchHtmlRegExp","prop","testObject","getTime","testString","_typeof","len","appendColumn","appendRow","_createNullList","_each","label","_createNullList2","default","String","newRow","col","selectColumn","stripHtmlTags","inputString","average","arr","val","parseFloat","maximum","nums","minimum","getColumnAverage","getRowAverage","getColumnSum","getRowSum","getColumnMaximum","getRowMaximum","getColumnMinimum","getRowMinimum","getColumnLabel","getRowIndex","del","_extend","Dataset","meta","coords","colIndex","rowIndex","colResult","rowResult","selectRow","analyses","_parsers2","render","spinner","artifacts","_artifacts","offsetPadding","theme","el","animationName","destroy","defaults","stickyHeader","stickyFooter","fixedHeader","dataset","offsetHeight","colAligns","colWidths","message","_generateTableRows","onscroll","scrollTop","prettyNumber","sciNo","Number","suffixes","recurse","iteration","rhs","numNumerals","_prettyNumber","_escapeHtml","formattedNum","title","opts","chartOptions","outer","inner","msg","titleContainer","notesContainer","className","notes","actualInnerHeight","defaultTitleFormat","defaultValueFormat","bgcolor","nameFormat","titleFormat","valueFormat","config","tooltip_format_name","tooltip_format_title","tooltip_format_value","CLASS","tooltip","levelColor","tooltipName","cols","chart","domNode","legendWidth","pagination","hidden","labels","_assertDateString2","legendEl","class","legendItems","paginateElOffset","paginateEl","paginateData","legendItemList","isHidden","font-size","pointer-events","getBBox","cursor","fill-opacity","focus","max-width","revert","toggle","path_d","stroke","getSelection","removeAllRanges","startDate","endDate","timeDiff","ms","extendDeep","c3_axis_fn","c3_axis_internal_fn","chartLine","chartLines","chartBar","chartBars","chartText","chartTexts","chartArc","chartArcs","chartArcsTitle","chartArcsBackground","chartArcsGaugeUnit","chartArcsGaugeMax","chartArcsGaugeMin","selectedCircle","selectedCircles","eventRect","eventRects","eventRectsSingle","eventRectsMultiple","zoomRect","focused","defocused","region","regions","tooltipContainer","shape","shapes","bar","bars","arcLabelLine","areas","texts","gaugeValue","grid","gridLines","xgrid","xgrids","xgridLine","xgridLines","xgridFocus","ygrid","ygrids","ygridLine","ygridLines","axisX","axisXLabel","axisY","axisYLabel","axisY2","axisY2Label","legendBackground","legendItem","legendItemEvent","legendItemTile","legendItemHidden","legendItemFocused","dragarea","EXPANDED","SELECTED","INCLUDED","Symbol","iterator","obj","classCallCheck","instance","Constructor","possibleConstructorReturn","ReferenceError","isValue","isFunction","isString","isUndefined","isDefined","ceil10","asHalfPixel","diffDomain","isEmpty","notEmpty","c3_chart_internal_fn","getOption","options","defaultValue","hasValue","dict","found","sanitise","getPathBox","box","items","pathSegList","getItem","minX","minY","AxisInternal","component","scaleLinear","innerTickSize","outerTickSize","withOuterTick","tickOffset","tickCulling","tickCentered","tickTextCharSize","tickTextRotate","tickLength","generateAxis","generateTicks","copyScale","newScale","isCategory","textFormatted","formatted","updateRange","rangeExtent","updateTickTextCharSize","internal","isVertical","tspanData","splitted","tickMultiline","splitTickText","tickMultilineMax","ellipsify","subtext","spaceIndex","textWidth","tickText","maxWidth","tickWidth","substr","ellipsified","remaining","available","padEnd","updateTickLength","lineY2","tickPosition","textY","textTransform","textTextAnchor","tspanDx","tspanDy","tickTransform","tickX","tickY","scale0","__chart__","scale1","ticksValues","tickUpdate","lineUpdate","textUpdate","tspans","tspanEnter","tspanUpdate","pathUpdate","rangeBand","isCentered","getTotalLength","culling","Axis","_Component","owner","fn","_this","__proto__","getPrototypeOf","subClass","superClass","writable","setPrototypeOf","inherits","componentKey","$$","main","axes","axis_x_inner","clipPathForXAxis","getTranslate","axis_x_show","axis_rotated","textAnchorForXAxisLabel","axis_y_inner","clipPathForYAxis","axis_y_show","textAnchorForYAxisLabel","axis_y2_show","textAnchorForY2AxisLabel","getXAxis","withoutTransition","withoutRotateTickText","axisParams","isCategorized","axis_x_tick_multiline","axis_x_tick_multilineMax","axis_x_tick_width","axis_x_tick_rotate","isTimeSeries","parseDate","axis_x_tick_centered","axis_x_tick_culling","updateXAxisTickValues","targets","axis_x_tick_fit","axis_x_tick_count","generateTickValues","mapTargetsToUniqueXs","xAxis","subXAxis","getYAxis","axis_y_tick_rotate","isTimeSeriesY","axis_y_tick_time_type","axis_y_tick_time_interval","getId","data_axes","getXAxisTickFormat","defaultAxisTimeFormat","categoryName","axis_x_tick_format","axisTimeFormat","getTickValues","getXAxisTickValues","axis_x_tick_values","getYAxisTickValues","axis_y_tick_values","yAxis","getY2AxisTickValues","axis_y2_tick_values","y2Axis","getLabelOptionByAxisId","axisId","option","axis_y_label","axis_y2_label","axis_x_label","getLabelText","setLabelText","getLabelPosition","defaultPosition","isInner","isOuter","isLeft","isCenter","isRight","isTop","isMiddle","isBottom","getXAxisLabelPosition","getYAxisLabelPosition","getY2AxisLabelPosition","getLabelPositionById","textForXAxisLabel","textForYAxisLabel","textForY2AxisLabel","xForAxisLabel","forHorizontal","dxForAxisLabel","textAnchorForAxisLabel","xForXAxisLabel","xForYAxisLabel","xForY2AxisLabel","dxForXAxisLabel","dxForYAxisLabel","dxForY2AxisLabel","dyForXAxisLabel","getMaxTickWidth","axis_x_height","dyForYAxisLabel","dyForY2AxisLabel","axis_y2_inner","withoutRecompute","targetsToShow","dummy","currentMaxTickWidths","filterTargetsToShow","getYDomain","yOrient","axis_y_tick_format","yAxisTickValues","y2Orient","axis_y2_tick_format","y2AxisTickValues","getXDomain","xOrient","xAxisTickFormat","xAxisTickValues","updateLabels","withTransition","getPadding","domainLength","convertPixelsToAxisPadding","pixels","tickCount","forTimeSeries","targetCount","tickValue","generateTransitions","axisSubX","subx","c3_chart_fn","version","Chart","ChartInternal","loadConfig","beforeInit","afterInit","bindThis","argThis","api","getDefaultConfig","generate","initParams","data_url","convertUrlToData","data_mimeType","data_headers","data_keys","initWithData","data_json","convertJsonToData","data_rows","convertRowsToData","data_columns","convertColumnsToData","clipId","clipIdForXAxis","clipIdForYAxis","clipIdForGrid","clipIdForSubchart","clipPath","getClipPath","clipPathForGrid","clipPathForSubchart","dragStart","dragging","flowing","cancelClick","mouseover","transiting","generateColor","generateLevelColor","dataTimeParse","data_xLocaltime","data_xFormat","axis_x_localtime","hiddenTargetIds","hiddenLegendIds","focusedTargetIds","defocusedTargetIds","subXOrient","isLegendRight","legend_position","isLegendInset","isLegendTop","legend_inset_anchor","isLegendLeft","legendStep","legendItemWidth","legendItemHeight","rotated_padding_left","rotated_padding_right","rotated_padding_top","withoutFadeIn","intervalForObserveInserted","initChartElements","initBar","initLine","initArc","initGauge","initText","defs","binding","bindto","selectChart","observeInserted","xs","convertDataToTargets","data_filter","data_hide","addHiddenTargetIds","mapToIds","legend_hide","addHiddenLegendIds","updateSizes","updateScales","subX","subY","subY2","orgXDomain","onmouseover","onmouseout","svg_classname","clipChart","appendClip","clipXAxis","clipYAxis","clipGrid","clipSubchart","updateSvgSize","initPie","initSubchart","initTooltip","initLegend","initTitle","initZoom","initSubchartBrush","initRegion","initGrid","grid_lines_front","initGridLines","updateTargets","initEventRect","axis_x_selection","selectionAsValue","getDefaultSelection","updateDimension","oninit","withTransform","withUpdateXDomain","withUpdateOrgXDomain","withTransitionForAxis","bindResize","element","smoothLines","legendHeight","legend","getLegendHeight","getLegendWidth","legendHeightForBottom","hasArc","hasArcType","xAxisHeight","getHorizontalAxisHeight","subchartHeight","subchart_show","subchart_size_height","currentWidth","getCurrentWidth","currentHeight","getCurrentHeight","margin","getCurrentPaddingTop","getCurrentPaddingRight","getCurrentPaddingBottom","getCurrentPaddingLeft","margin2","margin3","updateSizeForLegend","width2","height2","arcWidth","arcHeight","hasType","gauge_fullCircle","getGaugeLabelHeight","updateRadius","radiusExpanded","updateTargetsForText","updateTargetsForBar","updateTargetsForLine","updateTargetsForArc","updateTargetsForSubchart","showTargets","isTargetToShow","transition_duration","transitions","withY","withSubchart","withTransitionForExit","withTrimXDomain","withLegend","withEventRect","withDimension","withUpdateXAxis","drawArea","drawBar","drawLine","xForText","yForText","durationForExit","durationForAxis","transitionsToWait","waitForDraw","flow","intervalForCulling","xDomainForZoom","areaIndices","getShapeIndices","isAreaType","barIndices","isBarType","lineIndices","isLineType","hideAxis","xv","legend_show","updateLegend","updateXDomain","zoom_rescale","orgDomain","axis_y_tick_count","axis_y2_tick_count","axis_x_tick_culling_max","generateDrawArea","generateDrawBar","generateDrawLine","generateXYForText","updateCircleY","circleY","circleX","updateXgridFocus","data_empty_label_text","redrawEventRect","updateGrid","updateRegion","updateBar","updateLine","updateArea","updateCircle","hasDataLabel","updateText","redrawTitle","redrawArc","redrawSubchart","generateFlow","isTabVisible","redrawBar","redrawLine","redrawArea","redrawCircle","redrawText","redrawRegion","redrawGrid","generateWait","onrendered","updateAndRedraw","withTransitionForTransform","transformAll","redrawWithoutRescale","axis_x_type","isCustomX","data_x","data_xs","axis_y_type","initialOpacity","initialOpacityForCircle","opacityForCircle","point_show","isScatterType","opacityForText","xx","axis_x_categories","yv","yScale","subxx","transformMain","transformContext","transformLegend","getXAxisClipX","getXAxisClipY","getXAxisClipWidth","getXAxisClipHeight","getYAxisClipX","getYAxisClipY","getYAxisClipWidth","getYAxisClipHeight","withoutAxis","observer","MutationObserver","mutations","mutation","disconnect","observe","attributes","childList","characterData","console","resizeFunction","generateResize","onresize","resize_auto","resizeTimeout","onresized","resizeIfElementDisplayed","offsetParent","attachEvent","wrapper","resizeFunctions","callResizeFunctions","endall","done","parsedDate","mozHidden","msHidden","webkitHidden","oThis","aArgs","fToBind","fNOP","fBound","SVGPathSeg","typeAsLetter","owningPathSegList","pathSegType","pathSegTypeAsLetter","_owningPathSegList","classname","PATHSEG_UNKNOWN","PATHSEG_CLOSEPATH","PATHSEG_MOVETO_ABS","PATHSEG_MOVETO_REL","PATHSEG_LINETO_ABS","PATHSEG_LINETO_REL","PATHSEG_CURVETO_CUBIC_ABS","PATHSEG_CURVETO_CUBIC_REL","PATHSEG_CURVETO_QUADRATIC_ABS","PATHSEG_CURVETO_QUADRATIC_REL","PATHSEG_ARC_ABS","PATHSEG_ARC_REL","PATHSEG_LINETO_HORIZONTAL_ABS","PATHSEG_LINETO_HORIZONTAL_REL","PATHSEG_LINETO_VERTICAL_ABS","PATHSEG_LINETO_VERTICAL_REL","PATHSEG_CURVETO_CUBIC_SMOOTH_ABS","PATHSEG_CURVETO_CUBIC_SMOOTH_REL","PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS","PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL","_segmentChanged","segmentChanged","SVGPathSegClosePath","_asPathString","SVGPathSegMovetoAbs","SVGPathSegMovetoRel","SVGPathSegLinetoAbs","SVGPathSegLinetoRel","SVGPathSegCurvetoCubicAbs","SVGPathSegCurvetoCubicRel","SVGPathSegCurvetoQuadraticAbs","SVGPathSegCurvetoQuadraticRel","SVGPathSegArcAbs","largeArcFlag","sweepFlag","_r1","_r2","_angle","_largeArcFlag","_sweepFlag","SVGPathSegArcRel","SVGPathSegLinetoHorizontalAbs","SVGPathSegLinetoHorizontalRel","SVGPathSegLinetoVerticalAbs","SVGPathSegLinetoVerticalRel","SVGPathSegCurvetoCubicSmoothAbs","SVGPathSegCurvetoCubicSmoothRel","SVGPathSegCurvetoQuadraticSmoothAbs","SVGPathSegCurvetoQuadraticSmoothRel","SVGPathElement","createSVGPathSegClosePath","createSVGPathSegMovetoAbs","createSVGPathSegMovetoRel","createSVGPathSegLinetoAbs","createSVGPathSegLinetoRel","createSVGPathSegCurvetoCubicAbs","createSVGPathSegCurvetoCubicRel","createSVGPathSegCurvetoQuadraticAbs","createSVGPathSegCurvetoQuadraticRel","createSVGPathSegArcAbs","createSVGPathSegArcRel","createSVGPathSegLinetoHorizontalAbs","createSVGPathSegLinetoHorizontalRel","createSVGPathSegLinetoVerticalAbs","createSVGPathSegLinetoVerticalRel","createSVGPathSegCurvetoCubicSmoothAbs","createSVGPathSegCurvetoCubicSmoothRel","createSVGPathSegCurvetoQuadraticSmoothAbs","createSVGPathSegCurvetoQuadraticSmoothRel","getPathSegAtLength","measurementElement","lastPathSegment","numberOfItems","removeItem","SVGPathSegList","pathElement","_pathElement","_list","_parsePath","_mutationObserverConfig","attributeFilter","_pathElementMutationObserver","_updateListFromPathMutations","_checkPathSynchronizedToList","_pathSegList","takeRecords","mutationRecords","hasPathMutations","record","attributeName","_writeListToPath","_pathSegArrayAsString","pathSeg","newItem","_checkValidIndex","insertItemBefore","replaceItem","item","appendItem","pathSegArray","Builder","appendSegment","Source","_currentIndex","_endIndex","_previousCommand","_skipOptionalSpaces","_isCurrentSpace","character","_skipOptionalSpacesOrDelimiter","hasMoreData","peekSegmentType","lookahead","_pathSegTypeFromChar","_nextCommandHelper","previousCommand","initialCommandIsMoveTo","command","_parseNumber","integer","frac","expsign","startIntPartIndex","scanIntPartIndex","multiplier","_parseArcFlag","flag","flagChar","parseSegment","arcAngle","arcLarge","arcSweep","builder","targetLength","padString","repeat","axis_x_max","axis_y_max","axis_y2_max","axis_x_min","axis_y_min","axis_y2_min","category","categories","size_width","size_height","flush","detachEvent","targetIds","shown","targetId","clearLegendItemTextBoxCache","updateDataAttributes","baseTarget","baseValue","diff","notfoundIds","orgDataCount","getMaxDataCount","tail","getOtherTargetX","missing","mainRegion","mainText","mainBar","mainLine","mainArea","mainCircle","flowIndex","flowLength","flowStart","getValueOnIndex","flowEnd","durationForFlow","wait","updateXGrid","hideXGridFocus","flowTransition","easeLinear","isRegionOnX","xgridAttr","regionX","regionWidth","candidates","mapToTargetIds","selectorTargets","defocus","expandArc","toggleFocusLegend","unexpandArc","showLegend","isLegendToShow","selectorLegends","grids","grid_x_lines","removeGridLines","grid_y_lines","data_groups","show","hide","hideLegend","load","addXs","classes","data_classes","data_colors","hasCaches","cacheIds","getCaches","unload","loadFromArgs","ids","selected","getTargetSelectorSuffix","indices","resetOther","data_selection_enabled","getToggle","isTargetId","data_selection_grouped","isTargetIndex","isSelected","data_selection_isselectable","unselect","removeHiddenTargetIds","filterByX","getMousePosition","tooltip_onshow","tooltip_onhide","transformTo","optionsForRedraw","setTargetType","updateTargetX","updateTargetXs","zoom_onzoom","enable","enabled","zoom_enabled","unzoom","zoom_x_max","zoom_x_min","orderFct","getOrderFunction","isOrderAsc","isOrderDesc","defaultSort","gauge_width","donut_width","gaugeArcWidth","gauge_arcs_minWidth","innerRadiusRatio","updateArc","svgArc","getSvgArc","svgArcExpanded","getSvgArcExpanded","svgArcExpandedSub","updateAngle","gMin","gMax","gTic","gValue","isGaugeType","gauge_min","gauge_max","gauge_startingAngle","hasGaugeType","singleArcWidth","withoutUpdate","updated","rate","expandWidth","getArc","isArcType","transformForArcLabel","hasGauge","donut_label_ratio","pie_label_ratio","getArcRatio","whole","convertToArcData","addName","textForArcLabel","shouldShowArcLabel","meetsArcLabelThreshold","getArcLabelFormat","defaultArcValueFormat","textForGaugeMinMax","isMax","getGaugeLabelExtents","shouldExpand","expandDuration","isDonutType","donut_expand_duration","gauge_expand_duration","isPieType","pie_expand_duration","donut_expand","gauge_expand","pie_expand","shouldShow","donut_label_show","pie_label_show","donut_label_threshold","pie_label_threshold","pie_label_format","gauge_label_format","donut_label_format","gauge_label_extents","getArcTitle","donut_title","mainPieEnter","classChartArc","classArcs","classFocus","mainArc","backgroundArc","arcLabelLines","mainArcLabelLine","arcData","classArc","interaction_enabled","_current","color_pattern","gauge_labelLine_show","lineLength","innerLineLength","lineAngle","linePositioningAngle","data_onmouseover","selectedData","showTooltip","revertLegend","hideTooltip","data_onmouseout","toggleShape","data_onclick","interpolated","gauge_label_show","gauge_units","addCache","cloneTarget","generateTargetClass","generateClass","classText","classTexts","classShape","classShapes","classLine","classLines","classCircle","classCircles","classBar","classBars","classArea","classAreas","classRegion","classEvent","classTarget","additionalClassSuffix","additionalClass","classFocused","classDefocused","classChartText","classChartLine","classChartBar","selectorTarget","selectorLegend","navigator","appVersion","URL","getAxisClipX","getAxisClipY","getAxisClipWidth","getAxisClipHeight","pattern","schemeCategory10","data_color","color_threshold","asValue","padding_left","padding_right","padding_top","padding_bottom","zoom_initialRange","zoom_privileged","zoom_onzoomstart","zoom_onzoomend","interaction_brighten","data_xSort","data_idConverter","data_names","data_type","data_types","data_labels","data_order","data_regions","data_selection_multiple","data_selection_draggable","data_onselected","data_onunselected","subchart_axis_x_show","subchart_onbrush","legend_inset_x","legend_inset_y","legend_inset_step","legend_item_onclick","legend_item_onmouseover","legend_item_onmouseout","legend_equally","legend_padding","legend_item_tile_width","legend_item_tile_height","axis_x_tick_outer","axis_x_padding","axis_y_inverted","axis_y_center","axis_y_tick_outer","axis_y_padding","axis_y_default","axis_y2_inverted","axis_y2_center","axis_y2_tick_outer","axis_y2_padding","axis_y2_default","grid_x_show","grid_x_type","grid_y_show","grid_y_ticks","grid_focus_show","point_r","point_sensitivity","point_focus_expand_enabled","point_focus_expand_r","point_select_r","line_connectNull","line_step_type","bar_width","bar_width_ratio","bar_width_max","bar_zerobased","bar_space","area_zerobased","area_above","spline_interpolation_type","tooltip_show","tooltip_grouped","tooltip_order","tooltip_position","tooltip_contents","getTooltipContent","tooltip_init_show","tooltip_init_x","tooltip_init_position","title_text","title_padding","title_position","additionalConfig","read","this_config","url","mimeType","headers","converter","convertXsvToData","catch","xsv","assign","targetKeys","new_rows","new_row","findValueInJson","pathArray","newRows","appendXs","isNotX","isX","xKey","getXKey","rawX","generateTargetX","getOtherTargetXs","getXValuesOfXKey","convertedId","id_org","hasNegativeValue","hasNegativeValueInTargets","hasPositiveValue","hasPositiveValueInTargets","xValues","getXValue","idsForX","valueOnIndex","hasTarget","removeHiddenLegendIds","getValuesAsIdKeyed","ys","checkValueInTargets","checker","orderAsc","orderDesc","reducer","t1Sum","t2Sum","orderTargets","fct","filterRemoveNull","filterByXDomain","xDomain","getDataLabelLength","lengths","dataLabelFormat","isNoneArc","isArc","findClosestFromTargets","pos","findClosest","minDist","isWithinBar","dist","xIndex","yIndex","convertValuesToStep","converted","attrs","getYDomainMin","baseId","idsInGroup","getYDomainMax","yDomainAbs","isAllPositive","isAllNegative","targetsByAxisId","yTargets","yMin","yMax","yDomainMin","yDomainMax","isZeroBased","isInverted","showHorizontalDataLabel","showVerticalDataLabel","getXDomainMin","getXDomainMax","getXDomainPadding","maxDataCount","firstX","lastX","withTrim","updateScale","trimXDomain","zoomDomain","getZoomDomain","mx","my","maxX","_w","_h","isIncluded","isWithin","togglePoint","togglePath","dragstart","dragend","getYFormat","forArc","formatForY","yFormat","formatForY2","y2Format","defaultFormat","xgridData","generateGridData","xgridEnter","updateYGrid","gridValues","ygridEnter","gridTextAnchor","gridTextDx","xGridTextX","yGridTextX","xgridLineEnter","ygridLineEnter","showXGridFocus","dataToShow","focusEl","firstYear","lastYear","gridData","tickNum","getGridFilterToRemove","param","forX","toRemove","toShow","zoomTransform","mouseout","unexpandCircles","unexpandBars","expandCircles","expandBars","isWithinShape","getYScale","initMouseEvent","legendItemTextBox","legendHasRendered","updateLegendWithDefaults","insetLegendPosition","updateLegendStep","updateLegendItemWidth","updateLegendItemHeight","opacityForLegend","opacityForUnfocusedLegend","xForLegend","xForLegendText","xForLegendRect","yForLegend","yForLegendText","yForLegendRect","x1ForLegendTile","x2ForLegendTile","yForLegendTile","rects","tiles","background","maxHeight","posMin","tileWidth","totalLength","offsets","widths","heights","margins","steps","updatePositions","textElement","maxLength","isLast","getTextRect","getTextBox","itemWidth","itemHeight","itemLength","areaLength","updateValues","withoutStep","mainRegionEnter","regionY","regionHeight","getScale","forTimeseries","scaleTime","getX","_scale","raw","getY","getSubYScale","forInit","xMin","xMax","subXMin","subXMax","subYMin","subYMax","selectPoint","pointSelectR","unselectPoint","selectPath","unselectPath","nodeName","isStepType","barData","mainBarEnter","getBarW","barTargetsNum","getBars","isSub","getPoints","generateGetBarPoints","indexX","indexY","__max__","barW","barX","getShapeX","barY","getShapeY","barOffset","getShapeOffset","barSpaceOffset","posX","posY","seg0","seg1","ex","ey","typeFilter","targetsNum","isWithinStep","isWithinCircle","getInterpolate","curveLinear","linear-closed","curveLinearClosed","curveBasis","basis-open","curveBasisOpen","basis-closed","curveBasisClosed","curveBundle","curveCardinal","cardinal-open","curveCardinalOpen","cardinal-closed","curveCardinalClosed","monotone","curveMonotoneX","curveStep","isSplineType","mainLineEnter","lineData","generateGetLinePoints","yScaleGetter","xValue","yValue","lineWithRegions","lineTargetsNum","lineOffset","_regions","sWithRegion","diffx2","xOffset","isWithinRegions","generateM","x_diff","xv0","xv1","mainAreaEnter","orgAreaOpacity","generateGetAreaPoints","getAreaBaseValue","areaTargetsNum","areaOffset","lineOrScatterData","mainCircleEnter","pointR","getCircles","pointExpandedR","d3_this","getParentWidth","getParentHeight","getTitlePadding","getAxisWidthByAxisId","legendWidthOnRight","getParentRectValue","tagName","offsetWidth","getSvgLeft","hasLeftAxisRect","leftAxisClass","leftAxis","svgRect","chartRect","svgLeft","initBrush","redrawForBrush","updateExtent","visibility","contextLineEnter","contextLine","contextBarEnter","contextBar","updateBarForSubchart","redrawBarForSubchart","drawBarOnSub","updateLineForSubchart","redrawLineForSubchart","drawLineOnSub","updateAreaForSubchart","contextArea","contextAreaEnter","redrawAreaForSubchart","drawAreaOnSub","zoomIdentity","mainTextEnter","barOrLineData","forFlow","cls","font","getAreaPoints","getBarPoints","getLinePoints","getXForText","getYForText","xPos","yPos","isSafari","isChrome","xForTitle","yForTitle","getTooltipSortFunction","sortFunction","tooltipSortFunction","tooltipPosition","tWidth","tHeight","tooltipLeft","tooltipRight","tooltipTop","chartRight","positionFunction","ua","userAgent","startEvent","redrawForZoom","updateDomain","lib","bindResizeListener","visuals","DEFAULT_OPTIONS","ENFORCED_OPTIONS","colorMapping","_extendDeep","rotated","dateFormat","_defaultDateFormat2","stacked","scope","contents","c3TooltipContents","paddedWidth","c3PaginatingLegend","defineC3","metric","table","indexBy","query","selectedParser","parserArgs","metadata","analysis_type","event_collection","filters","group_by","timeframe","timezone","display_name","analysis","getDefaultTitle","visualization","chart_type","getDefaultType","updateColumn","updateRow","_stripHtmlTags","_dataset","flatten","ob","toReturn","flatObject","parsers","_flatten","res","grouped-metric","grouped-interval","double-grouped-metric","rowLabel","double-grouped-interval","funnel","extraction","deleteColumn","_append","sortColumns","comp","head","analysesUtilMethods","op","insertColumn","sortRows","body","_analyses","insertRow","filterColumns","selectedColumn","filterRows","deleteRow","Dataviz","_prepared","_rendered","labelMapping","library","sortIntervals","domReady","readyState","DOMContentLoaded","testDom","libraries","_libraries2","register","actions","method","visual","num","loader","buildDomWrapper","bool","areachart","barchart","columnchart","linechart","piechart","convertChartTypes","chartType","parseRawData","parseRequest","eval","_index","env","global","extendKeenGlobalObject","Keen"],"mappings":"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","file":"keen-dataviz.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 64);\n","export var xhtml = \"http://www.w3.org/1999/xhtml\";\n\nexport default {\n  svg: \"http://www.w3.org/2000/svg\",\n  xhtml: xhtml,\n  xlink: \"http://www.w3.org/1999/xlink\",\n  xml: \"http://www.w3.org/XML/1998/namespace\",\n  xmlns: \"http://www.w3.org/2000/xmlns/\"\n};\n","import namespaces from \"./namespaces\";\n\nexport default function(name) {\n  var prefix = name += \"\", i = prefix.indexOf(\":\");\n  if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n  return namespaces.hasOwnProperty(prefix) ? {space: namespaces[prefix], local: name} : name;\n}\n","import namespace from \"./namespace\";\nimport {xhtml} from \"./namespaces\";\n\nfunction creatorInherit(name) {\n  return function() {\n    var document = this.ownerDocument,\n        uri = this.namespaceURI;\n    return uri === xhtml && document.documentElement.namespaceURI === xhtml\n        ? document.createElement(name)\n        : document.createElementNS(uri, name);\n  };\n}\n\nfunction creatorFixed(fullname) {\n  return function() {\n    return this.ownerDocument.createElementNS(fullname.space, fullname.local);\n  };\n}\n\nexport default function(name) {\n  var fullname = namespace(name);\n  return (fullname.local\n      ? creatorFixed\n      : creatorInherit)(fullname);\n}\n","function none() {}\n\nexport default function(selector) {\n  return selector == null ? none : function() {\n    return this.querySelector(selector);\n  };\n}\n","function empty() {\n  return [];\n}\n\nexport default function(selector) {\n  return selector == null ? empty : function() {\n    return this.querySelectorAll(selector);\n  };\n}\n","var matcher = function(selector) {\n  return function() {\n    return this.matches(selector);\n  };\n};\n\nif (typeof document !== \"undefined\") {\n  var element = document.documentElement;\n  if (!element.matches) {\n    var vendorMatches = element.webkitMatchesSelector\n        || element.msMatchesSelector\n        || element.mozMatchesSelector\n        || element.oMatchesSelector;\n    matcher = function(selector) {\n      return function() {\n        return vendorMatches.call(this, selector);\n      };\n    };\n  }\n}\n\nexport default matcher;\n","export default function(update) {\n  return new Array(update.length);\n}\n","import sparse from \"./sparse\";\nimport {Selection} from \"./index\";\n\nexport default function() {\n  return new Selection(this._enter || this._groups.map(sparse), this._parents);\n}\n\nexport function EnterNode(parent, datum) {\n  this.ownerDocument = parent.ownerDocument;\n  this.namespaceURI = parent.namespaceURI;\n  this._next = null;\n  this._parent = parent;\n  this.__data__ = datum;\n}\n\nEnterNode.prototype = {\n  constructor: EnterNode,\n  appendChild: function(child) { return this._parent.insertBefore(child, this._next); },\n  insertBefore: function(child, next) { return this._parent.insertBefore(child, next); },\n  querySelector: function(selector) { return this._parent.querySelector(selector); },\n  querySelectorAll: function(selector) { return this._parent.querySelectorAll(selector); }\n};\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","import {Selection} from \"./index\";\nimport {EnterNode} from \"./enter\";\nimport constant from \"../constant\";\n\nvar keyPrefix = \"$\"; // Protect against keys like “__proto__”.\n\nfunction bindIndex(parent, group, enter, update, exit, data) {\n  var i = 0,\n      node,\n      groupLength = group.length,\n      dataLength = data.length;\n\n  // Put any non-null nodes that fit into update.\n  // Put any null nodes into enter.\n  // Put any remaining data into enter.\n  for (; i < dataLength; ++i) {\n    if (node = group[i]) {\n      node.__data__ = data[i];\n      update[i] = node;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Put any non-null nodes that don’t fit into exit.\n  for (; i < groupLength; ++i) {\n    if (node = group[i]) {\n      exit[i] = node;\n    }\n  }\n}\n\nfunction bindKey(parent, group, enter, update, exit, data, key) {\n  var i,\n      node,\n      nodeByKeyValue = {},\n      groupLength = group.length,\n      dataLength = data.length,\n      keyValues = new Array(groupLength),\n      keyValue;\n\n  // Compute the key for each node.\n  // If multiple nodes have the same key, the duplicates are added to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if (node = group[i]) {\n      keyValues[i] = keyValue = keyPrefix + key.call(node, node.__data__, i, group);\n      if (keyValue in nodeByKeyValue) {\n        exit[i] = node;\n      } else {\n        nodeByKeyValue[keyValue] = node;\n      }\n    }\n  }\n\n  // Compute the key for each datum.\n  // If there a node associated with this key, join and add it to update.\n  // If there is not (or the key is a duplicate), add it to enter.\n  for (i = 0; i < dataLength; ++i) {\n    keyValue = keyPrefix + key.call(parent, data[i], i, data);\n    if (node = nodeByKeyValue[keyValue]) {\n      update[i] = node;\n      node.__data__ = data[i];\n      nodeByKeyValue[keyValue] = null;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Add any remaining nodes that were not bound to data to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if ((node = group[i]) && (nodeByKeyValue[keyValues[i]] === node)) {\n      exit[i] = node;\n    }\n  }\n}\n\nexport default function(value, key) {\n  if (!value) {\n    data = new Array(this.size()), j = -1;\n    this.each(function(d) { data[++j] = d; });\n    return data;\n  }\n\n  var bind = key ? bindKey : bindIndex,\n      parents = this._parents,\n      groups = this._groups;\n\n  if (typeof value !== \"function\") value = constant(value);\n\n  for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {\n    var parent = parents[j],\n        group = groups[j],\n        groupLength = group.length,\n        data = value.call(parent, parent && parent.__data__, j, parents),\n        dataLength = data.length,\n        enterGroup = enter[j] = new Array(dataLength),\n        updateGroup = update[j] = new Array(dataLength),\n        exitGroup = exit[j] = new Array(groupLength);\n\n    bind(parent, group, enterGroup, updateGroup, exitGroup, data, key);\n\n    // Now connect the enter nodes to their following update node, such that\n    // appendChild can insert the materialized enter node before this node,\n    // rather than at the end of the parent node.\n    for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {\n      if (previous = enterGroup[i0]) {\n        if (i0 >= i1) i1 = i0 + 1;\n        while (!(next = updateGroup[i1]) && ++i1 < dataLength);\n        previous._next = next || null;\n      }\n    }\n  }\n\n  update = new Selection(update, parents);\n  update._enter = enter;\n  update._exit = exit;\n  return update;\n}\n","import {Selection} from \"./index\";\n\nexport default function(compare) {\n  if (!compare) compare = ascending;\n\n  function compareNode(a, b) {\n    return a && b ? compare(a.__data__, b.__data__) : !a - !b;\n  }\n\n  for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        sortgroup[i] = node;\n      }\n    }\n    sortgroup.sort(compareNode);\n  }\n\n  return new Selection(sortgroups, this._parents).order();\n}\n\nfunction ascending(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n","import namespace from \"../namespace\";\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, value) {\n  return function() {\n    this.setAttribute(name, value);\n  };\n}\n\nfunction attrConstantNS(fullname, value) {\n  return function() {\n    this.setAttributeNS(fullname.space, fullname.local, value);\n  };\n}\n\nfunction attrFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttribute(name);\n    else this.setAttribute(name, v);\n  };\n}\n\nfunction attrFunctionNS(fullname, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttributeNS(fullname.space, fullname.local);\n    else this.setAttributeNS(fullname.space, fullname.local, v);\n  };\n}\n\nexport default function(name, value) {\n  var fullname = namespace(name);\n\n  if (arguments.length < 2) {\n    var node = this.node();\n    return fullname.local\n        ? node.getAttributeNS(fullname.space, fullname.local)\n        : node.getAttribute(fullname);\n  }\n\n  return this.each((value == null\n      ? (fullname.local ? attrRemoveNS : attrRemove) : (typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)\n      : (fullname.local ? attrConstantNS : attrConstant)))(fullname, value));\n}\n","export default function(node) {\n  return (node.ownerDocument && node.ownerDocument.defaultView) // node is a Node\n      || (node.document && node) // node is a Window\n      || node.defaultView; // node is a Document\n}\n","import defaultView from \"../window\";\n\nfunction styleRemove(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, value, priority) {\n  return function() {\n    this.style.setProperty(name, value, priority);\n  };\n}\n\nfunction styleFunction(name, value, priority) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.style.removeProperty(name);\n    else this.style.setProperty(name, v, priority);\n  };\n}\n\nexport default function(name, value, priority) {\n  return arguments.length > 1\n      ? this.each((value == null\n            ? styleRemove : typeof value === \"function\"\n            ? styleFunction\n            : styleConstant)(name, value, priority == null ? \"\" : priority))\n      : styleValue(this.node(), name);\n}\n\nexport function styleValue(node, name) {\n  return node.style.getPropertyValue(name)\n      || defaultView(node).getComputedStyle(node, null).getPropertyValue(name);\n}\n","function classArray(string) {\n  return string.trim().split(/^|\\s+/);\n}\n\nfunction classList(node) {\n  return node.classList || new ClassList(node);\n}\n\nfunction ClassList(node) {\n  this._node = node;\n  this._names = classArray(node.getAttribute(\"class\") || \"\");\n}\n\nClassList.prototype = {\n  add: function(name) {\n    var i = this._names.indexOf(name);\n    if (i < 0) {\n      this._names.push(name);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  remove: function(name) {\n    var i = this._names.indexOf(name);\n    if (i >= 0) {\n      this._names.splice(i, 1);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  contains: function(name) {\n    return this._names.indexOf(name) >= 0;\n  }\n};\n\nfunction classedAdd(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.add(names[i]);\n}\n\nfunction classedRemove(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.remove(names[i]);\n}\n\nfunction classedTrue(names) {\n  return function() {\n    classedAdd(this, names);\n  };\n}\n\nfunction classedFalse(names) {\n  return function() {\n    classedRemove(this, names);\n  };\n}\n\nfunction classedFunction(names, value) {\n  return function() {\n    (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);\n  };\n}\n\nexport default function(name, value) {\n  var names = classArray(name + \"\");\n\n  if (arguments.length < 2) {\n    var list = classList(this.node()), i = -1, n = names.length;\n    while (++i < n) if (!list.contains(names[i])) return false;\n    return true;\n  }\n\n  return this.each((typeof value === \"function\"\n      ? classedFunction : value\n      ? classedTrue\n      : classedFalse)(names, value));\n}\n","function textRemove() {\n  this.textContent = \"\";\n}\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.textContent = v == null ? \"\" : v;\n  };\n}\n\nexport default function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? textRemove : (typeof value === \"function\"\n          ? textFunction\n          : textConstant)(value))\n      : this.node().textContent;\n}\n","function htmlRemove() {\n  this.innerHTML = \"\";\n}\n\nfunction htmlConstant(value) {\n  return function() {\n    this.innerHTML = value;\n  };\n}\n\nfunction htmlFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.innerHTML = v == null ? \"\" : v;\n  };\n}\n\nexport default function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? htmlRemove : (typeof value === \"function\"\n          ? htmlFunction\n          : htmlConstant)(value))\n      : this.node().innerHTML;\n}\n","function raise() {\n  if (this.nextSibling) this.parentNode.appendChild(this);\n}\n\nexport default function() {\n  return this.each(raise);\n}\n","function lower() {\n  if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);\n}\n\nexport default function() {\n  return this.each(lower);\n}\n","import creator from \"../creator\";\nimport selector from \"../selector\";\n\nfunction constantNull() {\n  return null;\n}\n\nexport default function(name, before) {\n  var create = typeof name === \"function\" ? name : creator(name),\n      select = before == null ? constantNull : typeof before === \"function\" ? before : selector(before);\n  return this.select(function() {\n    return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);\n  });\n}\n","function remove() {\n  var parent = this.parentNode;\n  if (parent) parent.removeChild(this);\n}\n\nexport default function() {\n  return this.each(remove);\n}\n","function selection_cloneShallow() {\n  return this.parentNode.insertBefore(this.cloneNode(false), this.nextSibling);\n}\n\nfunction selection_cloneDeep() {\n  return this.parentNode.insertBefore(this.cloneNode(true), this.nextSibling);\n}\n\nexport default function(deep) {\n  return this.select(deep ? selection_cloneDeep : selection_cloneShallow);\n}\n","var filterEvents = {};\n\nexport var event = null;\n\nif (typeof document !== \"undefined\") {\n  var element = document.documentElement;\n  if (!(\"onmouseenter\" in element)) {\n    filterEvents = {mouseenter: \"mouseover\", mouseleave: \"mouseout\"};\n  }\n}\n\nfunction filterContextListener(listener, index, group) {\n  listener = contextListener(listener, index, group);\n  return function(event) {\n    var related = event.relatedTarget;\n    if (!related || (related !== this && !(related.compareDocumentPosition(this) & 8))) {\n      listener.call(this, event);\n    }\n  };\n}\n\nfunction contextListener(listener, index, group) {\n  return function(event1) {\n    var event0 = event; // Events can be reentrant (e.g., focus).\n    event = event1;\n    try {\n      listener.call(this, this.__data__, index, group);\n    } finally {\n      event = event0;\n    }\n  };\n}\n\nfunction parseTypenames(typenames) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    return {type: t, name: name};\n  });\n}\n\nfunction onRemove(typename) {\n  return function() {\n    var on = this.__on;\n    if (!on) return;\n    for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {\n      if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n      } else {\n        on[++i] = o;\n      }\n    }\n    if (++i) on.length = i;\n    else delete this.__on;\n  };\n}\n\nfunction onAdd(typename, value, capture) {\n  var wrap = filterEvents.hasOwnProperty(typename.type) ? filterContextListener : contextListener;\n  return function(d, i, group) {\n    var on = this.__on, o, listener = wrap(value, i, group);\n    if (on) for (var j = 0, m = on.length; j < m; ++j) {\n      if ((o = on[j]).type === typename.type && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n        this.addEventListener(o.type, o.listener = listener, o.capture = capture);\n        o.value = value;\n        return;\n      }\n    }\n    this.addEventListener(typename.type, listener, capture);\n    o = {type: typename.type, name: typename.name, value: value, listener: listener, capture: capture};\n    if (!on) this.__on = [o];\n    else on.push(o);\n  };\n}\n\nexport default function(typename, value, capture) {\n  var typenames = parseTypenames(typename + \"\"), i, n = typenames.length, t;\n\n  if (arguments.length < 2) {\n    var on = this.node().__on;\n    if (on) for (var j = 0, m = on.length, o; j < m; ++j) {\n      for (i = 0, o = on[j]; i < n; ++i) {\n        if ((t = typenames[i]).type === o.type && t.name === o.name) {\n          return o.value;\n        }\n      }\n    }\n    return;\n  }\n\n  on = value ? onAdd : onRemove;\n  if (capture == null) capture = false;\n  for (i = 0; i < n; ++i) this.each(on(typenames[i], value, capture));\n  return this;\n}\n\nexport function customEvent(event1, listener, that, args) {\n  var event0 = event;\n  event1.sourceEvent = event;\n  event = event1;\n  try {\n    return listener.apply(that, args);\n  } finally {\n    event = event0;\n  }\n}\n","import defaultView from \"../window\";\n\nfunction dispatchEvent(node, type, params) {\n  var window = defaultView(node),\n      event = window.CustomEvent;\n\n  if (typeof event === \"function\") {\n    event = new event(type, params);\n  } else {\n    event = window.document.createEvent(\"Event\");\n    if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;\n    else event.initEvent(type, false, false);\n  }\n\n  node.dispatchEvent(event);\n}\n\nfunction dispatchConstant(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params);\n  };\n}\n\nfunction dispatchFunction(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params.apply(this, arguments));\n  };\n}\n\nexport default function(type, params) {\n  return this.each((typeof params === \"function\"\n      ? dispatchFunction\n      : dispatchConstant)(type, params));\n}\n","import selection_select from \"./select\";\nimport selection_selectAll from \"./selectAll\";\nimport selection_filter from \"./filter\";\nimport selection_data from \"./data\";\nimport selection_enter from \"./enter\";\nimport selection_exit from \"./exit\";\nimport selection_merge from \"./merge\";\nimport selection_order from \"./order\";\nimport selection_sort from \"./sort\";\nimport selection_call from \"./call\";\nimport selection_nodes from \"./nodes\";\nimport selection_node from \"./node\";\nimport selection_size from \"./size\";\nimport selection_empty from \"./empty\";\nimport selection_each from \"./each\";\nimport selection_attr from \"./attr\";\nimport selection_style from \"./style\";\nimport selection_property from \"./property\";\nimport selection_classed from \"./classed\";\nimport selection_text from \"./text\";\nimport selection_html from \"./html\";\nimport selection_raise from \"./raise\";\nimport selection_lower from \"./lower\";\nimport selection_append from \"./append\";\nimport selection_insert from \"./insert\";\nimport selection_remove from \"./remove\";\nimport selection_clone from \"./clone\";\nimport selection_datum from \"./datum\";\nimport selection_on from \"./on\";\nimport selection_dispatch from \"./dispatch\";\n\nexport var root = [null];\n\nexport function Selection(groups, parents) {\n  this._groups = groups;\n  this._parents = parents;\n}\n\nfunction selection() {\n  return new Selection([[document.documentElement]], root);\n}\n\nSelection.prototype = selection.prototype = {\n  constructor: Selection,\n  select: selection_select,\n  selectAll: selection_selectAll,\n  filter: selection_filter,\n  data: selection_data,\n  enter: selection_enter,\n  exit: selection_exit,\n  merge: selection_merge,\n  order: selection_order,\n  sort: selection_sort,\n  call: selection_call,\n  nodes: selection_nodes,\n  node: selection_node,\n  size: selection_size,\n  empty: selection_empty,\n  each: selection_each,\n  attr: selection_attr,\n  style: selection_style,\n  property: selection_property,\n  classed: selection_classed,\n  text: selection_text,\n  html: selection_html,\n  raise: selection_raise,\n  lower: selection_lower,\n  append: selection_append,\n  insert: selection_insert,\n  remove: selection_remove,\n  clone: selection_clone,\n  datum: selection_datum,\n  on: selection_on,\n  dispatch: selection_dispatch\n};\n\nexport default selection;\n","import {Selection} from \"./index\";\nimport selector from \"../selector\";\n\nexport default function(select) {\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n}\n","import {Selection} from \"./index\";\nimport selectorAll from \"../selectorAll\";\n\nexport default function(select) {\n  if (typeof select !== \"function\") select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        subgroups.push(select.call(node, node.__data__, i, group));\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, parents);\n}\n","import {Selection} from \"./index\";\nimport matcher from \"../matcher\";\n\nexport default function(match) {\n  if (typeof match !== \"function\") match = matcher(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n}\n","import sparse from \"./sparse\";\nimport {Selection} from \"./index\";\n\nexport default function() {\n  return new Selection(this._exit || this._groups.map(sparse), this._parents);\n}\n","import {Selection} from \"./index\";\n\nexport default function(selection) {\n\n  for (var groups0 = this._groups, groups1 = selection._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Selection(merges, this._parents);\n}\n","export default function() {\n\n  for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {\n    for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {\n      if (node = group[i]) {\n        if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n        next = node;\n      }\n    }\n  }\n\n  return this;\n}\n","export default function() {\n  var callback = arguments[0];\n  arguments[0] = this;\n  callback.apply(null, arguments);\n  return this;\n}\n","export default function() {\n  var nodes = new Array(this.size()), i = -1;\n  this.each(function() { nodes[++i] = this; });\n  return nodes;\n}\n","export default function() {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {\n      var node = group[i];\n      if (node) return node;\n    }\n  }\n\n  return null;\n}\n","export default function() {\n  var size = 0;\n  this.each(function() { ++size; });\n  return size;\n}\n","export default function() {\n  return !this.node();\n}\n","export default function(callback) {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\n      if (node = group[i]) callback.call(node, node.__data__, i, group);\n    }\n  }\n\n  return this;\n}\n","function propertyRemove(name) {\n  return function() {\n    delete this[name];\n  };\n}\n\nfunction propertyConstant(name, value) {\n  return function() {\n    this[name] = value;\n  };\n}\n\nfunction propertyFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) delete this[name];\n    else this[name] = v;\n  };\n}\n\nexport default function(name, value) {\n  return arguments.length > 1\n      ? this.each((value == null\n          ? propertyRemove : typeof value === \"function\"\n          ? propertyFunction\n          : propertyConstant)(name, value))\n      : this.node()[name];\n}\n","import creator from \"../creator\";\n\nexport default function(name) {\n  var create = typeof name === \"function\" ? name : creator(name);\n  return this.select(function() {\n    return this.appendChild(create.apply(this, arguments));\n  });\n}\n","export default function(value) {\n  return arguments.length\n      ? this.property(\"__data__\", value)\n      : this.node().__data__;\n}\n","import {Selection, root} from \"./selection/index\";\n\nexport default function(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([[document.querySelector(selector)]], [document.documentElement])\n      : new Selection([[selector]], root);\n}\n","import creator from \"./creator\";\nimport select from \"./select\";\n\nexport default function(name) {\n  return select(creator(name).call(document.documentElement));\n}\n","var nextId = 0;\n\nexport default function local() {\n  return new Local;\n}\n\nfunction Local() {\n  this._ = \"@\" + (++nextId).toString(36);\n}\n\nLocal.prototype = local.prototype = {\n  constructor: Local,\n  get: function(node) {\n    var id = this._;\n    while (!(id in node)) if (!(node = node.parentNode)) return;\n    return node[id];\n  },\n  set: function(node, value) {\n    return node[this._] = value;\n  },\n  remove: function(node) {\n    return this._ in node && delete node[this._];\n  },\n  toString: function() {\n    return this._;\n  }\n};\n","import {event} from \"./selection/on\";\n\nexport default function() {\n  var current = event, source;\n  while (source = current.sourceEvent) current = source;\n  return current;\n}\n","export default function(node, event) {\n  var svg = node.ownerSVGElement || node;\n\n  if (svg.createSVGPoint) {\n    var point = svg.createSVGPoint();\n    point.x = event.clientX, point.y = event.clientY;\n    point = point.matrixTransform(node.getScreenCTM().inverse());\n    return [point.x, point.y];\n  }\n\n  var rect = node.getBoundingClientRect();\n  return [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];\n}\n","import sourceEvent from \"./sourceEvent\";\nimport point from \"./point\";\n\nexport default function(node) {\n  var event = sourceEvent();\n  if (event.changedTouches) event = event.changedTouches[0];\n  return point(node, event);\n}\n","import {Selection, root} from \"./selection/index\";\n\nexport default function(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([document.querySelectorAll(selector)], [document.documentElement])\n      : new Selection([selector == null ? [] : selector], root);\n}\n","import sourceEvent from \"./sourceEvent\";\nimport point from \"./point\";\n\nexport default function(node, touches, identifier) {\n  if (arguments.length < 3) identifier = touches, touches = sourceEvent().changedTouches;\n\n  for (var i = 0, n = touches ? touches.length : 0, touch; i < n; ++i) {\n    if ((touch = touches[i]).identifier === identifier) {\n      return point(node, touch);\n    }\n  }\n\n  return null;\n}\n","import sourceEvent from \"./sourceEvent\";\nimport point from \"./point\";\n\nexport default function(node, touches) {\n  if (touches == null) touches = sourceEvent().touches;\n\n  for (var i = 0, n = touches ? touches.length : 0, points = new Array(n); i < n; ++i) {\n    points[i] = point(node, touches[i]);\n  }\n\n  return points;\n}\n","export default function(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n","import ascending from \"./ascending\";\n\nexport default function(compare) {\n  if (compare.length === 1) compare = ascendingComparator(compare);\n  return {\n    left: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) < 0) lo = mid + 1;\n        else hi = mid;\n      }\n      return lo;\n    },\n    right: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) > 0) hi = mid;\n        else lo = mid + 1;\n      }\n      return lo;\n    }\n  };\n}\n\nfunction ascendingComparator(f) {\n  return function(d, x) {\n    return ascending(f(d), x);\n  };\n}\n","import ascending from \"./ascending\";\nimport bisector from \"./bisector\";\n\nvar ascendingBisect = bisector(ascending);\nexport var bisectRight = ascendingBisect.right;\nexport var bisectLeft = ascendingBisect.left;\nexport default bisectRight;\n","export default function(array, f) {\n  if (f == null) f = pair;\n  var i = 0, n = array.length - 1, p = array[0], pairs = new Array(n < 0 ? 0 : n);\n  while (i < n) pairs[i] = f(p, p = array[++i]);\n  return pairs;\n}\n\nexport function pair(a, b) {\n  return [a, b];\n}\n","import {pair} from \"./pairs\";\n\nexport default function(values0, values1, reduce) {\n  var n0 = values0.length,\n      n1 = values1.length,\n      values = new Array(n0 * n1),\n      i0,\n      i1,\n      i,\n      value0;\n\n  if (reduce == null) reduce = pair;\n\n  for (i0 = i = 0; i0 < n0; ++i0) {\n    for (value0 = values0[i0], i1 = 0; i1 < n1; ++i1, ++i) {\n      values[i] = reduce(value0, values1[i1]);\n    }\n  }\n\n  return values;\n}\n","export default function(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n}\n","export default function(x) {\n  return x === null ? NaN : +x;\n}\n","import number from \"./number\";\n\nexport default function(values, valueof) {\n  var n = values.length,\n      m = 0,\n      i = -1,\n      mean = 0,\n      value,\n      delta,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = number(values[i]))) {\n        delta = value - mean;\n        mean += delta / ++m;\n        sum += delta * (value - mean);\n      }\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(value = number(valueof(values[i], i, values)))) {\n        delta = value - mean;\n        mean += delta / ++m;\n        sum += delta * (value - mean);\n      }\n    }\n  }\n\n  if (m > 1) return sum / (m - 1);\n}\n","import variance from \"./variance\";\n\nexport default function(array, f) {\n  var v = variance(array, f);\n  return v ? Math.sqrt(v) : v;\n}\n","export default function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      min,\n      max;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        min = max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null) {\n            if (min > value) min = value;\n            if (max < value) max = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        min = max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null) {\n            if (min > value) min = value;\n            if (max < value) max = value;\n          }\n        }\n      }\n    }\n  }\n\n  return [min, max];\n}\n","var array = Array.prototype;\n\nexport var slice = array.slice;\nexport var map = array.map;\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function(x) {\n  return x;\n}\n","export default function(start, stop, step) {\n  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\n  var i = -1,\n      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n      range = new Array(n);\n\n  while (++i < n) {\n    range[i] = start + i * step;\n  }\n\n  return range;\n}\n","var e10 = Math.sqrt(50),\n    e5 = Math.sqrt(10),\n    e2 = Math.sqrt(2);\n\nexport default function(start, stop, count) {\n  var reverse,\n      i = -1,\n      n,\n      ticks,\n      step;\n\n  stop = +stop, start = +start, count = +count;\n  if (start === stop && count > 0) return [start];\n  if (reverse = stop < start) n = start, start = stop, stop = n;\n  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];\n\n  if (step > 0) {\n    start = Math.ceil(start / step);\n    stop = Math.floor(stop / step);\n    ticks = new Array(n = Math.ceil(stop - start + 1));\n    while (++i < n) ticks[i] = (start + i) * step;\n  } else {\n    start = Math.floor(start * step);\n    stop = Math.ceil(stop * step);\n    ticks = new Array(n = Math.ceil(start - stop + 1));\n    while (++i < n) ticks[i] = (start - i) / step;\n  }\n\n  if (reverse) ticks.reverse();\n\n  return ticks;\n}\n\nexport function tickIncrement(start, stop, count) {\n  var step = (stop - start) / Math.max(0, count),\n      power = Math.floor(Math.log(step) / Math.LN10),\n      error = step / Math.pow(10, power);\n  return power >= 0\n      ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power)\n      : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\n}\n\nexport function tickStep(start, stop, count) {\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n      error = step0 / step1;\n  if (error >= e10) step1 *= 10;\n  else if (error >= e5) step1 *= 5;\n  else if (error >= e2) step1 *= 2;\n  return stop < start ? -step1 : step1;\n}\n","export default function(values) {\n  return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n}\n","import {slice} from \"./array\";\nimport bisect from \"./bisect\";\nimport constant from \"./constant\";\nimport extent from \"./extent\";\nimport identity from \"./identity\";\nimport range from \"./range\";\nimport {tickStep} from \"./ticks\";\nimport sturges from \"./threshold/sturges\";\n\nexport default function() {\n  var value = identity,\n      domain = extent,\n      threshold = sturges;\n\n  function histogram(data) {\n    var i,\n        n = data.length,\n        x,\n        values = new Array(n);\n\n    for (i = 0; i < n; ++i) {\n      values[i] = value(data[i], i, data);\n    }\n\n    var xz = domain(values),\n        x0 = xz[0],\n        x1 = xz[1],\n        tz = threshold(values, x0, x1);\n\n    // Convert number of thresholds into uniform thresholds.\n    if (!Array.isArray(tz)) {\n      tz = tickStep(x0, x1, tz);\n      tz = range(Math.ceil(x0 / tz) * tz, Math.floor(x1 / tz) * tz, tz); // exclusive\n    }\n\n    // Remove any thresholds outside the domain.\n    var m = tz.length;\n    while (tz[0] <= x0) tz.shift(), --m;\n    while (tz[m - 1] > x1) tz.pop(), --m;\n\n    var bins = new Array(m + 1),\n        bin;\n\n    // Initialize bins.\n    for (i = 0; i <= m; ++i) {\n      bin = bins[i] = [];\n      bin.x0 = i > 0 ? tz[i - 1] : x0;\n      bin.x1 = i < m ? tz[i] : x1;\n    }\n\n    // Assign data to bins by value, ignoring any outside the domain.\n    for (i = 0; i < n; ++i) {\n      x = values[i];\n      if (x0 <= x && x <= x1) {\n        bins[bisect(tz, x, 0, m)].push(data[i]);\n      }\n    }\n\n    return bins;\n  }\n\n  histogram.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(_), histogram) : value;\n  };\n\n  histogram.domain = function(_) {\n    return arguments.length ? (domain = typeof _ === \"function\" ? _ : constant([_[0], _[1]]), histogram) : domain;\n  };\n\n  histogram.thresholds = function(_) {\n    return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant(slice.call(_)) : constant(_), histogram) : threshold;\n  };\n\n  return histogram;\n}\n","import number from \"./number\";\n\nexport default function(values, p, valueof) {\n  if (valueof == null) valueof = number;\n  if (!(n = values.length)) return;\n  if ((p = +p) <= 0 || n < 2) return +valueof(values[0], 0, values);\n  if (p >= 1) return +valueof(values[n - 1], n - 1, values);\n  var n,\n      i = (n - 1) * p,\n      i0 = Math.floor(i),\n      value0 = +valueof(values[i0], i0, values),\n      value1 = +valueof(values[i0 + 1], i0 + 1, values);\n  return value0 + (value1 - value0) * (i - i0);\n}\n","import {map} from \"../array\";\nimport ascending from \"../ascending\";\nimport number from \"../number\";\nimport quantile from \"../quantile\";\n\nexport default function(values, min, max) {\n  values = map.call(values, number).sort(ascending);\n  return Math.ceil((max - min) / (2 * (quantile(values, 0.75) - quantile(values, 0.25)) * Math.pow(values.length, -1 / 3)));\n}\n","import deviation from \"../deviation\";\n\nexport default function(values, min, max) {\n  return Math.ceil((max - min) / (3.5 * deviation(values) * Math.pow(values.length, -1 / 3)));\n}\n","export default function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      max;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null && value > max) {\n            max = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null && value > max) {\n            max = value;\n          }\n        }\n      }\n    }\n  }\n\n  return max;\n}\n","import number from \"./number\";\n\nexport default function(values, valueof) {\n  var n = values.length,\n      m = n,\n      i = -1,\n      value,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = number(values[i]))) sum += value;\n      else --m;\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(value = number(valueof(values[i], i, values)))) sum += value;\n      else --m;\n    }\n  }\n\n  if (m) return sum / m;\n}\n","import ascending from \"./ascending\";\nimport number from \"./number\";\nimport quantile from \"./quantile\";\n\nexport default function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      numbers = [];\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = number(values[i]))) {\n        numbers.push(value);\n      }\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(value = number(valueof(values[i], i, values)))) {\n        numbers.push(value);\n      }\n    }\n  }\n\n  return quantile(numbers.sort(ascending), 0.5);\n}\n","export default function(arrays) {\n  var n = arrays.length,\n      m,\n      i = -1,\n      j = 0,\n      merged,\n      array;\n\n  while (++i < n) j += arrays[i].length;\n  merged = new Array(j);\n\n  while (--n >= 0) {\n    array = arrays[n];\n    m = array.length;\n    while (--m >= 0) {\n      merged[--j] = array[m];\n    }\n  }\n\n  return merged;\n}\n","export default function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      min;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        min = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null && min > value) {\n            min = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        min = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null && min > value) {\n            min = value;\n          }\n        }\n      }\n    }\n  }\n\n  return min;\n}\n","export default function(array, indexes) {\n  var i = indexes.length, permutes = new Array(i);\n  while (i--) permutes[i] = array[indexes[i]];\n  return permutes;\n}\n","import ascending from \"./ascending\";\n\nexport default function(values, compare) {\n  if (!(n = values.length)) return;\n  var n,\n      i = 0,\n      j = 0,\n      xi,\n      xj = values[j];\n\n  if (compare == null) compare = ascending;\n\n  while (++i < n) {\n    if (compare(xi = values[i], xj) < 0 || compare(xj, xj) !== 0) {\n      xj = xi, j = i;\n    }\n  }\n\n  if (compare(xj, xj) === 0) return j;\n}\n","export default function(array, i0, i1) {\n  var m = (i1 == null ? array.length : i1) - (i0 = i0 == null ? 0 : +i0),\n      t,\n      i;\n\n  while (m) {\n    i = Math.random() * m-- | 0;\n    t = array[m + i0];\n    array[m + i0] = array[i + i0];\n    array[i + i0] = t;\n  }\n\n  return array;\n}\n","export default function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (value = +values[i]) sum += value; // Note: zero and null are equivalent.\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (value = +valueof(values[i], i, values)) sum += value;\n    }\n  }\n\n  return sum;\n}\n","import min from \"./min\";\n\nexport default function(matrix) {\n  if (!(n = matrix.length)) return [];\n  for (var i = -1, m = min(matrix, length), transpose = new Array(m); ++i < m;) {\n    for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n;) {\n      row[j] = matrix[j][i];\n    }\n  }\n  return transpose;\n}\n\nfunction length(d) {\n  return d.length;\n}\n","import transpose from \"./transpose\";\n\nexport default function() {\n  return transpose(arguments);\n}\n","var t0 = new Date,\n    t1 = new Date;\n\nexport default function newInterval(floori, offseti, count, field) {\n\n  function interval(date) {\n    return floori(date = new Date(+date)), date;\n  }\n\n  interval.floor = interval;\n\n  interval.ceil = function(date) {\n    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;\n  };\n\n  interval.round = function(date) {\n    var d0 = interval(date),\n        d1 = interval.ceil(date);\n    return date - d0 < d1 - date ? d0 : d1;\n  };\n\n  interval.offset = function(date, step) {\n    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n  };\n\n  interval.range = function(start, stop, step) {\n    var range = [], previous;\n    start = interval.ceil(start);\n    step = step == null ? 1 : Math.floor(step);\n    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n    do range.push(previous = new Date(+start)), offseti(start, step), floori(start);\n    while (previous < start && start < stop);\n    return range;\n  };\n\n  interval.filter = function(test) {\n    return newInterval(function(date) {\n      if (date >= date) while (floori(date), !test(date)) date.setTime(date - 1);\n    }, function(date, step) {\n      if (date >= date) {\n        if (step < 0) while (++step <= 0) {\n          while (offseti(date, -1), !test(date)) {} // eslint-disable-line no-empty\n        } else while (--step >= 0) {\n          while (offseti(date, +1), !test(date)) {} // eslint-disable-line no-empty\n        }\n      }\n    });\n  };\n\n  if (count) {\n    interval.count = function(start, end) {\n      t0.setTime(+start), t1.setTime(+end);\n      floori(t0), floori(t1);\n      return Math.floor(count(t0, t1));\n    };\n\n    interval.every = function(step) {\n      step = Math.floor(step);\n      return !isFinite(step) || !(step > 0) ? null\n          : !(step > 1) ? interval\n          : interval.filter(field\n              ? function(d) { return field(d) % step === 0; }\n              : function(d) { return interval.count(0, d) % step === 0; });\n    };\n  }\n\n  return interval;\n}\n","import interval from \"./interval\";\n\nvar millisecond = interval(function() {\n  // noop\n}, function(date, step) {\n  date.setTime(+date + step);\n}, function(start, end) {\n  return end - start;\n});\n\n// An optimized implementation for this simple case.\nmillisecond.every = function(k) {\n  k = Math.floor(k);\n  if (!isFinite(k) || !(k > 0)) return null;\n  if (!(k > 1)) return millisecond;\n  return interval(function(date) {\n    date.setTime(Math.floor(date / k) * k);\n  }, function(date, step) {\n    date.setTime(+date + step * k);\n  }, function(start, end) {\n    return (end - start) / k;\n  });\n};\n\nexport default millisecond;\nexport var milliseconds = millisecond.range;\n","export var durationSecond = 1e3;\nexport var durationMinute = 6e4;\nexport var durationHour = 36e5;\nexport var durationDay = 864e5;\nexport var durationWeek = 6048e5;\n","import interval from \"./interval\";\nimport {durationSecond} from \"./duration\";\n\nvar second = interval(function(date) {\n  date.setTime(Math.floor(date / durationSecond) * durationSecond);\n}, function(date, step) {\n  date.setTime(+date + step * durationSecond);\n}, function(start, end) {\n  return (end - start) / durationSecond;\n}, function(date) {\n  return date.getUTCSeconds();\n});\n\nexport default second;\nexport var seconds = second.range;\n","import interval from \"./interval\";\nimport {durationMinute} from \"./duration\";\n\nvar minute = interval(function(date) {\n  date.setTime(Math.floor(date / durationMinute) * durationMinute);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function(start, end) {\n  return (end - start) / durationMinute;\n}, function(date) {\n  return date.getMinutes();\n});\n\nexport default minute;\nexport var minutes = minute.range;\n","import interval from \"./interval\";\nimport {durationHour, durationMinute} from \"./duration\";\n\nvar hour = interval(function(date) {\n  var offset = date.getTimezoneOffset() * durationMinute % durationHour;\n  if (offset < 0) offset += durationHour;\n  date.setTime(Math.floor((+date - offset) / durationHour) * durationHour + offset);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour);\n}, function(start, end) {\n  return (end - start) / durationHour;\n}, function(date) {\n  return date.getHours();\n});\n\nexport default hour;\nexport var hours = hour.range;\n","import interval from \"./interval\";\nimport {durationDay, durationMinute} from \"./duration\";\n\nvar day = interval(function(date) {\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setDate(date.getDate() + step);\n}, function(start, end) {\n  return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationDay;\n}, function(date) {\n  return date.getDate() - 1;\n});\n\nexport default day;\nexport var days = day.range;\n","import interval from \"./interval\";\nimport {durationMinute, durationWeek} from \"./duration\";\n\nfunction weekday(i) {\n  return interval(function(date) {\n    date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setDate(date.getDate() + step * 7);\n  }, function(start, end) {\n    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationWeek;\n  });\n}\n\nexport var sunday = weekday(0);\nexport var monday = weekday(1);\nexport var tuesday = weekday(2);\nexport var wednesday = weekday(3);\nexport var thursday = weekday(4);\nexport var friday = weekday(5);\nexport var saturday = weekday(6);\n\nexport var sundays = sunday.range;\nexport var mondays = monday.range;\nexport var tuesdays = tuesday.range;\nexport var wednesdays = wednesday.range;\nexport var thursdays = thursday.range;\nexport var fridays = friday.range;\nexport var saturdays = saturday.range;\n","import interval from \"./interval\";\n\nvar month = interval(function(date) {\n  date.setDate(1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setMonth(date.getMonth() + step);\n}, function(start, end) {\n  return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;\n}, function(date) {\n  return date.getMonth();\n});\n\nexport default month;\nexport var months = month.range;\n","import interval from \"./interval\";\n\nvar year = interval(function(date) {\n  date.setMonth(0, 1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setFullYear(date.getFullYear() + step);\n}, function(start, end) {\n  return end.getFullYear() - start.getFullYear();\n}, function(date) {\n  return date.getFullYear();\n});\n\n// An optimized implementation for this simple case.\nyear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : interval(function(date) {\n    date.setFullYear(Math.floor(date.getFullYear() / k) * k);\n    date.setMonth(0, 1);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setFullYear(date.getFullYear() + step * k);\n  });\n};\n\nexport default year;\nexport var years = year.range;\n","import interval from \"./interval\";\nimport {durationMinute} from \"./duration\";\n\nvar utcMinute = interval(function(date) {\n  date.setUTCSeconds(0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function(start, end) {\n  return (end - start) / durationMinute;\n}, function(date) {\n  return date.getUTCMinutes();\n});\n\nexport default utcMinute;\nexport var utcMinutes = utcMinute.range;\n","import interval from \"./interval\";\nimport {durationHour} from \"./duration\";\n\nvar utcHour = interval(function(date) {\n  date.setUTCMinutes(0, 0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour);\n}, function(start, end) {\n  return (end - start) / durationHour;\n}, function(date) {\n  return date.getUTCHours();\n});\n\nexport default utcHour;\nexport var utcHours = utcHour.range;\n","import interval from \"./interval\";\nimport {durationDay} from \"./duration\";\n\nvar utcDay = interval(function(date) {\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCDate(date.getUTCDate() + step);\n}, function(start, end) {\n  return (end - start) / durationDay;\n}, function(date) {\n  return date.getUTCDate() - 1;\n});\n\nexport default utcDay;\nexport var utcDays = utcDay.range;\n","import interval from \"./interval\";\nimport {durationWeek} from \"./duration\";\n\nfunction utcWeekday(i) {\n  return interval(function(date) {\n    date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCDate(date.getUTCDate() + step * 7);\n  }, function(start, end) {\n    return (end - start) / durationWeek;\n  });\n}\n\nexport var utcSunday = utcWeekday(0);\nexport var utcMonday = utcWeekday(1);\nexport var utcTuesday = utcWeekday(2);\nexport var utcWednesday = utcWeekday(3);\nexport var utcThursday = utcWeekday(4);\nexport var utcFriday = utcWeekday(5);\nexport var utcSaturday = utcWeekday(6);\n\nexport var utcSundays = utcSunday.range;\nexport var utcMondays = utcMonday.range;\nexport var utcTuesdays = utcTuesday.range;\nexport var utcWednesdays = utcWednesday.range;\nexport var utcThursdays = utcThursday.range;\nexport var utcFridays = utcFriday.range;\nexport var utcSaturdays = utcSaturday.range;\n","import interval from \"./interval\";\n\nvar utcMonth = interval(function(date) {\n  date.setUTCDate(1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCMonth(date.getUTCMonth() + step);\n}, function(start, end) {\n  return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;\n}, function(date) {\n  return date.getUTCMonth();\n});\n\nexport default utcMonth;\nexport var utcMonths = utcMonth.range;\n","import interval from \"./interval\";\n\nvar utcYear = interval(function(date) {\n  date.setUTCMonth(0, 1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCFullYear(date.getUTCFullYear() + step);\n}, function(start, end) {\n  return end.getUTCFullYear() - start.getUTCFullYear();\n}, function(date) {\n  return date.getUTCFullYear();\n});\n\n// An optimized implementation for this simple case.\nutcYear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : interval(function(date) {\n    date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);\n    date.setUTCMonth(0, 1);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCFullYear(date.getUTCFullYear() + step * k);\n  });\n};\n\nexport default utcYear;\nexport var utcYears = utcYear.range;\n","export default function(constructor, factory, prototype) {\n  constructor.prototype = factory.prototype = prototype;\n  prototype.constructor = constructor;\n}\n\nexport function extend(parent, definition) {\n  var prototype = Object.create(parent.prototype);\n  for (var key in definition) prototype[key] = definition[key];\n  return prototype;\n}\n","import define, {extend} from \"./define\";\n\nexport function Color() {}\n\nexport var darker = 0.7;\nexport var brighter = 1 / darker;\n\nvar reI = \"\\\\s*([+-]?\\\\d+)\\\\s*\",\n    reN = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)\\\\s*\",\n    reP = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)%\\\\s*\",\n    reHex3 = /^#([0-9a-f]{3})$/,\n    reHex6 = /^#([0-9a-f]{6})$/,\n    reRgbInteger = new RegExp(\"^rgb\\\\(\" + [reI, reI, reI] + \"\\\\)$\"),\n    reRgbPercent = new RegExp(\"^rgb\\\\(\" + [reP, reP, reP] + \"\\\\)$\"),\n    reRgbaInteger = new RegExp(\"^rgba\\\\(\" + [reI, reI, reI, reN] + \"\\\\)$\"),\n    reRgbaPercent = new RegExp(\"^rgba\\\\(\" + [reP, reP, reP, reN] + \"\\\\)$\"),\n    reHslPercent = new RegExp(\"^hsl\\\\(\" + [reN, reP, reP] + \"\\\\)$\"),\n    reHslaPercent = new RegExp(\"^hsla\\\\(\" + [reN, reP, reP, reN] + \"\\\\)$\");\n\nvar named = {\n  aliceblue: 0xf0f8ff,\n  antiquewhite: 0xfaebd7,\n  aqua: 0x00ffff,\n  aquamarine: 0x7fffd4,\n  azure: 0xf0ffff,\n  beige: 0xf5f5dc,\n  bisque: 0xffe4c4,\n  black: 0x000000,\n  blanchedalmond: 0xffebcd,\n  blue: 0x0000ff,\n  blueviolet: 0x8a2be2,\n  brown: 0xa52a2a,\n  burlywood: 0xdeb887,\n  cadetblue: 0x5f9ea0,\n  chartreuse: 0x7fff00,\n  chocolate: 0xd2691e,\n  coral: 0xff7f50,\n  cornflowerblue: 0x6495ed,\n  cornsilk: 0xfff8dc,\n  crimson: 0xdc143c,\n  cyan: 0x00ffff,\n  darkblue: 0x00008b,\n  darkcyan: 0x008b8b,\n  darkgoldenrod: 0xb8860b,\n  darkgray: 0xa9a9a9,\n  darkgreen: 0x006400,\n  darkgrey: 0xa9a9a9,\n  darkkhaki: 0xbdb76b,\n  darkmagenta: 0x8b008b,\n  darkolivegreen: 0x556b2f,\n  darkorange: 0xff8c00,\n  darkorchid: 0x9932cc,\n  darkred: 0x8b0000,\n  darksalmon: 0xe9967a,\n  darkseagreen: 0x8fbc8f,\n  darkslateblue: 0x483d8b,\n  darkslategray: 0x2f4f4f,\n  darkslategrey: 0x2f4f4f,\n  darkturquoise: 0x00ced1,\n  darkviolet: 0x9400d3,\n  deeppink: 0xff1493,\n  deepskyblue: 0x00bfff,\n  dimgray: 0x696969,\n  dimgrey: 0x696969,\n  dodgerblue: 0x1e90ff,\n  firebrick: 0xb22222,\n  floralwhite: 0xfffaf0,\n  forestgreen: 0x228b22,\n  fuchsia: 0xff00ff,\n  gainsboro: 0xdcdcdc,\n  ghostwhite: 0xf8f8ff,\n  gold: 0xffd700,\n  goldenrod: 0xdaa520,\n  gray: 0x808080,\n  green: 0x008000,\n  greenyellow: 0xadff2f,\n  grey: 0x808080,\n  honeydew: 0xf0fff0,\n  hotpink: 0xff69b4,\n  indianred: 0xcd5c5c,\n  indigo: 0x4b0082,\n  ivory: 0xfffff0,\n  khaki: 0xf0e68c,\n  lavender: 0xe6e6fa,\n  lavenderblush: 0xfff0f5,\n  lawngreen: 0x7cfc00,\n  lemonchiffon: 0xfffacd,\n  lightblue: 0xadd8e6,\n  lightcoral: 0xf08080,\n  lightcyan: 0xe0ffff,\n  lightgoldenrodyellow: 0xfafad2,\n  lightgray: 0xd3d3d3,\n  lightgreen: 0x90ee90,\n  lightgrey: 0xd3d3d3,\n  lightpink: 0xffb6c1,\n  lightsalmon: 0xffa07a,\n  lightseagreen: 0x20b2aa,\n  lightskyblue: 0x87cefa,\n  lightslategray: 0x778899,\n  lightslategrey: 0x778899,\n  lightsteelblue: 0xb0c4de,\n  lightyellow: 0xffffe0,\n  lime: 0x00ff00,\n  limegreen: 0x32cd32,\n  linen: 0xfaf0e6,\n  magenta: 0xff00ff,\n  maroon: 0x800000,\n  mediumaquamarine: 0x66cdaa,\n  mediumblue: 0x0000cd,\n  mediumorchid: 0xba55d3,\n  mediumpurple: 0x9370db,\n  mediumseagreen: 0x3cb371,\n  mediumslateblue: 0x7b68ee,\n  mediumspringgreen: 0x00fa9a,\n  mediumturquoise: 0x48d1cc,\n  mediumvioletred: 0xc71585,\n  midnightblue: 0x191970,\n  mintcream: 0xf5fffa,\n  mistyrose: 0xffe4e1,\n  moccasin: 0xffe4b5,\n  navajowhite: 0xffdead,\n  navy: 0x000080,\n  oldlace: 0xfdf5e6,\n  olive: 0x808000,\n  olivedrab: 0x6b8e23,\n  orange: 0xffa500,\n  orangered: 0xff4500,\n  orchid: 0xda70d6,\n  palegoldenrod: 0xeee8aa,\n  palegreen: 0x98fb98,\n  paleturquoise: 0xafeeee,\n  palevioletred: 0xdb7093,\n  papayawhip: 0xffefd5,\n  peachpuff: 0xffdab9,\n  peru: 0xcd853f,\n  pink: 0xffc0cb,\n  plum: 0xdda0dd,\n  powderblue: 0xb0e0e6,\n  purple: 0x800080,\n  rebeccapurple: 0x663399,\n  red: 0xff0000,\n  rosybrown: 0xbc8f8f,\n  royalblue: 0x4169e1,\n  saddlebrown: 0x8b4513,\n  salmon: 0xfa8072,\n  sandybrown: 0xf4a460,\n  seagreen: 0x2e8b57,\n  seashell: 0xfff5ee,\n  sienna: 0xa0522d,\n  silver: 0xc0c0c0,\n  skyblue: 0x87ceeb,\n  slateblue: 0x6a5acd,\n  slategray: 0x708090,\n  slategrey: 0x708090,\n  snow: 0xfffafa,\n  springgreen: 0x00ff7f,\n  steelblue: 0x4682b4,\n  tan: 0xd2b48c,\n  teal: 0x008080,\n  thistle: 0xd8bfd8,\n  tomato: 0xff6347,\n  turquoise: 0x40e0d0,\n  violet: 0xee82ee,\n  wheat: 0xf5deb3,\n  white: 0xffffff,\n  whitesmoke: 0xf5f5f5,\n  yellow: 0xffff00,\n  yellowgreen: 0x9acd32\n};\n\ndefine(Color, color, {\n  displayable: function() {\n    return this.rgb().displayable();\n  },\n  hex: function() {\n    return this.rgb().hex();\n  },\n  toString: function() {\n    return this.rgb() + \"\";\n  }\n});\n\nexport default function color(format) {\n  var m;\n  format = (format + \"\").trim().toLowerCase();\n  return (m = reHex3.exec(format)) ? (m = parseInt(m[1], 16), new Rgb((m >> 8 & 0xf) | (m >> 4 & 0x0f0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1)) // #f00\n      : (m = reHex6.exec(format)) ? rgbn(parseInt(m[1], 16)) // #ff0000\n      : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n      : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n      : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n      : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n      : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n      : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n      : named.hasOwnProperty(format) ? rgbn(named[format])\n      : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0)\n      : null;\n}\n\nfunction rgbn(n) {\n  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n}\n\nfunction rgba(r, g, b, a) {\n  if (a <= 0) r = g = b = NaN;\n  return new Rgb(r, g, b, a);\n}\n\nexport function rgbConvert(o) {\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Rgb;\n  o = o.rgb();\n  return new Rgb(o.r, o.g, o.b, o.opacity);\n}\n\nexport function rgb(r, g, b, opacity) {\n  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n}\n\nexport function Rgb(r, g, b, opacity) {\n  this.r = +r;\n  this.g = +g;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Rgb, rgb, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  rgb: function() {\n    return this;\n  },\n  displayable: function() {\n    return (0 <= this.r && this.r <= 255)\n        && (0 <= this.g && this.g <= 255)\n        && (0 <= this.b && this.b <= 255)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  hex: function() {\n    return \"#\" + hex(this.r) + hex(this.g) + hex(this.b);\n  },\n  toString: function() {\n    var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n    return (a === 1 ? \"rgb(\" : \"rgba(\")\n        + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.b) || 0))\n        + (a === 1 ? \")\" : \", \" + a + \")\");\n  }\n}));\n\nfunction hex(value) {\n  value = Math.max(0, Math.min(255, Math.round(value) || 0));\n  return (value < 16 ? \"0\" : \"\") + value.toString(16);\n}\n\nfunction hsla(h, s, l, a) {\n  if (a <= 0) h = s = l = NaN;\n  else if (l <= 0 || l >= 1) h = s = NaN;\n  else if (s <= 0) h = NaN;\n  return new Hsl(h, s, l, a);\n}\n\nexport function hslConvert(o) {\n  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Hsl;\n  if (o instanceof Hsl) return o;\n  o = o.rgb();\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      h = NaN,\n      s = max - min,\n      l = (max + min) / 2;\n  if (s) {\n    if (r === max) h = (g - b) / s + (g < b) * 6;\n    else if (g === max) h = (b - r) / s + 2;\n    else h = (r - g) / s + 4;\n    s /= l < 0.5 ? max + min : 2 - max - min;\n    h *= 60;\n  } else {\n    s = l > 0 && l < 1 ? 0 : h;\n  }\n  return new Hsl(h, s, l, o.opacity);\n}\n\nexport function hsl(h, s, l, opacity) {\n  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hsl(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hsl, hsl, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = this.h % 360 + (this.h < 0) * 360,\n        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n        l = this.l,\n        m2 = l + (l < 0.5 ? l : 1 - l) * s,\n        m1 = 2 * l - m2;\n    return new Rgb(\n      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n      hsl2rgb(h, m1, m2),\n      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\n      this.opacity\n    );\n  },\n  displayable: function() {\n    return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n        && (0 <= this.l && this.l <= 1)\n        && (0 <= this.opacity && this.opacity <= 1);\n  }\n}));\n\n/* From FvD 13.37, CSS Color Module Level 3 */\nfunction hsl2rgb(h, m1, m2) {\n  return (h < 60 ? m1 + (m2 - m1) * h / 60\n      : h < 180 ? m2\n      : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n      : m1) * 255;\n}\n","export var deg2rad = Math.PI / 180;\nexport var rad2deg = 180 / Math.PI;\n","import define, {extend} from \"./define\";\nimport {Color, rgbConvert, Rgb} from \"./color\";\nimport {deg2rad, rad2deg} from \"./math\";\n\n// https://beta.observablehq.com/@mbostock/lab-and-rgb\nvar K = 18,\n    Xn = 0.96422,\n    Yn = 1,\n    Zn = 0.82521,\n    t0 = 4 / 29,\n    t1 = 6 / 29,\n    t2 = 3 * t1 * t1,\n    t3 = t1 * t1 * t1;\n\nfunction labConvert(o) {\n  if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);\n  if (o instanceof Hcl) {\n    if (isNaN(o.h)) return new Lab(o.l, 0, 0, o.opacity);\n    var h = o.h * deg2rad;\n    return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);\n  }\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = rgb2lrgb(o.r),\n      g = rgb2lrgb(o.g),\n      b = rgb2lrgb(o.b),\n      y = xyz2lab((0.2225045 * r + 0.7168786 * g + 0.0606169 * b) / Yn), x, z;\n  if (r === g && g === b) x = z = y; else {\n    x = xyz2lab((0.4360747 * r + 0.3850649 * g + 0.1430804 * b) / Xn);\n    z = xyz2lab((0.0139322 * r + 0.0971045 * g + 0.7141733 * b) / Zn);\n  }\n  return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);\n}\n\nexport function gray(l, opacity) {\n  return new Lab(l, 0, 0, opacity == null ? 1 : opacity);\n}\n\nexport default function lab(l, a, b, opacity) {\n  return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);\n}\n\nexport function Lab(l, a, b, opacity) {\n  this.l = +l;\n  this.a = +a;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Lab, lab, extend(Color, {\n  brighter: function(k) {\n    return new Lab(this.l + K * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  darker: function(k) {\n    return new Lab(this.l - K * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  rgb: function() {\n    var y = (this.l + 16) / 116,\n        x = isNaN(this.a) ? y : y + this.a / 500,\n        z = isNaN(this.b) ? y : y - this.b / 200;\n    x = Xn * lab2xyz(x);\n    y = Yn * lab2xyz(y);\n    z = Zn * lab2xyz(z);\n    return new Rgb(\n      lrgb2rgb( 3.1338561 * x - 1.6168667 * y - 0.4906146 * z),\n      lrgb2rgb(-0.9787684 * x + 1.9161415 * y + 0.0334540 * z),\n      lrgb2rgb( 0.0719453 * x - 0.2289914 * y + 1.4052427 * z),\n      this.opacity\n    );\n  }\n}));\n\nfunction xyz2lab(t) {\n  return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n}\n\nfunction lab2xyz(t) {\n  return t > t1 ? t * t * t : t2 * (t - t0);\n}\n\nfunction lrgb2rgb(x) {\n  return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n}\n\nfunction rgb2lrgb(x) {\n  return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n}\n\nfunction hclConvert(o) {\n  if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);\n  if (!(o instanceof Lab)) o = labConvert(o);\n  if (o.a === 0 && o.b === 0) return new Hcl(NaN, 0, o.l, o.opacity);\n  var h = Math.atan2(o.b, o.a) * rad2deg;\n  return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);\n}\n\nexport function lch(l, c, h, opacity) {\n  return arguments.length === 1 ? hclConvert(l) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nexport function hcl(h, c, l, opacity) {\n  return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nexport function Hcl(h, c, l, opacity) {\n  this.h = +h;\n  this.c = +c;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hcl, hcl, extend(Color, {\n  brighter: function(k) {\n    return new Hcl(this.h, this.c, this.l + K * (k == null ? 1 : k), this.opacity);\n  },\n  darker: function(k) {\n    return new Hcl(this.h, this.c, this.l - K * (k == null ? 1 : k), this.opacity);\n  },\n  rgb: function() {\n    return labConvert(this).rgb();\n  }\n}));\n","import define, {extend} from \"./define\";\nimport {Color, rgbConvert, Rgb, darker, brighter} from \"./color\";\nimport {deg2rad, rad2deg} from \"./math\";\n\nvar A = -0.14861,\n    B = +1.78277,\n    C = -0.29227,\n    D = -0.90649,\n    E = +1.97294,\n    ED = E * D,\n    EB = E * B,\n    BC_DA = B * C - D * A;\n\nfunction cubehelixConvert(o) {\n  if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),\n      bl = b - l,\n      k = (E * (g - l) - C * bl) / D,\n      s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)), // NaN if l=0 or l=1\n      h = s ? Math.atan2(k, bl) * rad2deg - 120 : NaN;\n  return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);\n}\n\nexport default function cubehelix(h, s, l, opacity) {\n  return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);\n}\n\nexport function Cubehelix(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Cubehelix, cubehelix, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = isNaN(this.h) ? 0 : (this.h + 120) * deg2rad,\n        l = +this.l,\n        a = isNaN(this.s) ? 0 : this.s * l * (1 - l),\n        cosh = Math.cos(h),\n        sinh = Math.sin(h);\n    return new Rgb(\n      255 * (l + a * (A * cosh + B * sinh)),\n      255 * (l + a * (C * cosh + D * sinh)),\n      255 * (l + a * (E * cosh)),\n      this.opacity\n    );\n  }\n}));\n","export function basis(t1, v0, v1, v2, v3) {\n  var t2 = t1 * t1, t3 = t2 * t1;\n  return ((1 - 3 * t1 + 3 * t2 - t3) * v0\n      + (4 - 6 * t2 + 3 * t3) * v1\n      + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2\n      + t3 * v3) / 6;\n}\n\nexport default function(values) {\n  var n = values.length - 1;\n  return function(t) {\n    var i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),\n        v1 = values[i],\n        v2 = values[i + 1],\n        v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,\n        v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n}\n","import {basis} from \"./basis\";\n\nexport default function(values) {\n  var n = values.length;\n  return function(t) {\n    var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),\n        v0 = values[(i + n - 1) % n],\n        v1 = values[i % n],\n        v2 = values[(i + 1) % n],\n        v3 = values[(i + 2) % n];\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","import constant from \"./constant\";\n\nfunction linear(a, d) {\n  return function(t) {\n    return a + t * d;\n  };\n}\n\nfunction exponential(a, b, y) {\n  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {\n    return Math.pow(a + t * b, y);\n  };\n}\n\nexport function hue(a, b) {\n  var d = b - a;\n  return d ? linear(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant(isNaN(a) ? b : a);\n}\n\nexport function gamma(y) {\n  return (y = +y) === 1 ? nogamma : function(a, b) {\n    return b - a ? exponential(a, b, y) : constant(isNaN(a) ? b : a);\n  };\n}\n\nexport default function nogamma(a, b) {\n  var d = b - a;\n  return d ? linear(a, d) : constant(isNaN(a) ? b : a);\n}\n","import {rgb as colorRgb} from \"d3-color\";\nimport basis from \"./basis\";\nimport basisClosed from \"./basisClosed\";\nimport nogamma, {gamma} from \"./color\";\n\nexport default (function rgbGamma(y) {\n  var color = gamma(y);\n\n  function rgb(start, end) {\n    var r = color((start = colorRgb(start)).r, (end = colorRgb(end)).r),\n        g = color(start.g, end.g),\n        b = color(start.b, end.b),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.r = r(t);\n      start.g = g(t);\n      start.b = b(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n\n  rgb.gamma = rgbGamma;\n\n  return rgb;\n})(1);\n\nfunction rgbSpline(spline) {\n  return function(colors) {\n    var n = colors.length,\n        r = new Array(n),\n        g = new Array(n),\n        b = new Array(n),\n        i, color;\n    for (i = 0; i < n; ++i) {\n      color = colorRgb(colors[i]);\n      r[i] = color.r || 0;\n      g[i] = color.g || 0;\n      b[i] = color.b || 0;\n    }\n    r = spline(r);\n    g = spline(g);\n    b = spline(b);\n    color.opacity = 1;\n    return function(t) {\n      color.r = r(t);\n      color.g = g(t);\n      color.b = b(t);\n      return color + \"\";\n    };\n  };\n}\n\nexport var rgbBasis = rgbSpline(basis);\nexport var rgbBasisClosed = rgbSpline(basisClosed);\n","import value from \"./value\";\n\nexport default function(a, b) {\n  var nb = b ? b.length : 0,\n      na = a ? Math.min(nb, a.length) : 0,\n      x = new Array(na),\n      c = new Array(nb),\n      i;\n\n  for (i = 0; i < na; ++i) x[i] = value(a[i], b[i]);\n  for (; i < nb; ++i) c[i] = b[i];\n\n  return function(t) {\n    for (i = 0; i < na; ++i) c[i] = x[i](t);\n    return c;\n  };\n}\n","export default function(a, b) {\n  var d = new Date;\n  return a = +a, b -= a, function(t) {\n    return d.setTime(a + b * t), d;\n  };\n}\n","export default function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return a + b * t;\n  };\n}\n","import value from \"./value\";\n\nexport default function(a, b) {\n  var i = {},\n      c = {},\n      k;\n\n  if (a === null || typeof a !== \"object\") a = {};\n  if (b === null || typeof b !== \"object\") b = {};\n\n  for (k in b) {\n    if (k in a) {\n      i[k] = value(a[k], b[k]);\n    } else {\n      c[k] = b[k];\n    }\n  }\n\n  return function(t) {\n    for (k in i) c[k] = i[k](t);\n    return c;\n  };\n}\n","import number from \"./number\";\n\nvar reA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g,\n    reB = new RegExp(reA.source, \"g\");\n\nfunction zero(b) {\n  return function() {\n    return b;\n  };\n}\n\nfunction one(b) {\n  return function(t) {\n    return b(t) + \"\";\n  };\n}\n\nexport default function(a, b) {\n  var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b\n      am, // current match in a\n      bm, // current match in b\n      bs, // string preceding current number in b, if any\n      i = -1, // index in s\n      s = [], // string constants and placeholders\n      q = []; // number interpolators\n\n  // Coerce inputs to strings.\n  a = a + \"\", b = b + \"\";\n\n  // Interpolate pairs of numbers in a & b.\n  while ((am = reA.exec(a))\n      && (bm = reB.exec(b))) {\n    if ((bs = bm.index) > bi) { // a string precedes the next number in b\n      bs = b.slice(bi, bs);\n      if (s[i]) s[i] += bs; // coalesce with previous string\n      else s[++i] = bs;\n    }\n    if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match\n      if (s[i]) s[i] += bm; // coalesce with previous string\n      else s[++i] = bm;\n    } else { // interpolate non-matching numbers\n      s[++i] = null;\n      q.push({i: i, x: number(am, bm)});\n    }\n    bi = reB.lastIndex;\n  }\n\n  // Add remains of b.\n  if (bi < b.length) {\n    bs = b.slice(bi);\n    if (s[i]) s[i] += bs; // coalesce with previous string\n    else s[++i] = bs;\n  }\n\n  // Special optimization for only a single match.\n  // Otherwise, interpolate each of the numbers and rejoin the string.\n  return s.length < 2 ? (q[0]\n      ? one(q[0].x)\n      : zero(b))\n      : (b = q.length, function(t) {\n          for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n          return s.join(\"\");\n        });\n}\n","import decompose, {identity} from \"./decompose\";\n\nvar cssNode,\n    cssRoot,\n    cssView,\n    svgNode;\n\nexport function parseCss(value) {\n  if (value === \"none\") return identity;\n  if (!cssNode) cssNode = document.createElement(\"DIV\"), cssRoot = document.documentElement, cssView = document.defaultView;\n  cssNode.style.transform = value;\n  value = cssView.getComputedStyle(cssRoot.appendChild(cssNode), null).getPropertyValue(\"transform\");\n  cssRoot.removeChild(cssNode);\n  value = value.slice(7, -1).split(\",\");\n  return decompose(+value[0], +value[1], +value[2], +value[3], +value[4], +value[5]);\n}\n\nexport function parseSvg(value) {\n  if (value == null) return identity;\n  if (!svgNode) svgNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n  svgNode.setAttribute(\"transform\", value);\n  if (!(value = svgNode.transform.baseVal.consolidate())) return identity;\n  value = value.matrix;\n  return decompose(value.a, value.b, value.c, value.d, value.e, value.f);\n}\n","import {color} from \"d3-color\";\nimport rgb from \"./rgb\";\nimport array from \"./array\";\nimport date from \"./date\";\nimport number from \"./number\";\nimport object from \"./object\";\nimport string from \"./string\";\nimport constant from \"./constant\";\n\nexport default function(a, b) {\n  var t = typeof b, c;\n  return b == null || t === \"boolean\" ? constant(b)\n      : (t === \"number\" ? number\n      : t === \"string\" ? ((c = color(b)) ? (b = c, rgb) : string)\n      : b instanceof color ? rgb\n      : b instanceof Date ? date\n      : Array.isArray(b) ? array\n      : typeof b.valueOf !== \"function\" && typeof b.toString !== \"function\" || isNaN(b) ? object\n      : number)(a, b);\n}\n","export default function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return Math.round(a + b * t);\n  };\n}\n","var degrees = 180 / Math.PI;\n\nexport var identity = {\n  translateX: 0,\n  translateY: 0,\n  rotate: 0,\n  skewX: 0,\n  scaleX: 1,\n  scaleY: 1\n};\n\nexport default function(a, b, c, d, e, f) {\n  var scaleX, scaleY, skewX;\n  if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;\n  if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;\n  if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;\n  if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;\n  return {\n    translateX: e,\n    translateY: f,\n    rotate: Math.atan2(b, a) * degrees,\n    skewX: Math.atan(skewX) * degrees,\n    scaleX: scaleX,\n    scaleY: scaleY\n  };\n}\n","import number from \"../number\";\nimport {parseCss, parseSvg} from \"./parse\";\n\nfunction interpolateTransform(parse, pxComma, pxParen, degParen) {\n\n  function pop(s) {\n    return s.length ? s.pop() + \" \" : \"\";\n  }\n\n  function translate(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(\"translate(\", null, pxComma, null, pxParen);\n      q.push({i: i - 4, x: number(xa, xb)}, {i: i - 2, x: number(ya, yb)});\n    } else if (xb || yb) {\n      s.push(\"translate(\" + xb + pxComma + yb + pxParen);\n    }\n  }\n\n  function rotate(a, b, s, q) {\n    if (a !== b) {\n      if (a - b > 180) b += 360; else if (b - a > 180) a += 360; // shortest path\n      q.push({i: s.push(pop(s) + \"rotate(\", null, degParen) - 2, x: number(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"rotate(\" + b + degParen);\n    }\n  }\n\n  function skewX(a, b, s, q) {\n    if (a !== b) {\n      q.push({i: s.push(pop(s) + \"skewX(\", null, degParen) - 2, x: number(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"skewX(\" + b + degParen);\n    }\n  }\n\n  function scale(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(pop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({i: i - 4, x: number(xa, xb)}, {i: i - 2, x: number(ya, yb)});\n    } else if (xb !== 1 || yb !== 1) {\n      s.push(pop(s) + \"scale(\" + xb + \",\" + yb + \")\");\n    }\n  }\n\n  return function(a, b) {\n    var s = [], // string constants and placeholders\n        q = []; // number interpolators\n    a = parse(a), b = parse(b);\n    translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);\n    rotate(a.rotate, b.rotate, s, q);\n    skewX(a.skewX, b.skewX, s, q);\n    scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);\n    a = b = null; // gc\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  };\n}\n\nexport var interpolateTransformCss = interpolateTransform(parseCss, \"px, \", \"px)\", \"deg)\");\nexport var interpolateTransformSvg = interpolateTransform(parseSvg, \", \", \")\", \")\");\n","var rho = Math.SQRT2,\n    rho2 = 2,\n    rho4 = 4,\n    epsilon2 = 1e-12;\n\nfunction cosh(x) {\n  return ((x = Math.exp(x)) + 1 / x) / 2;\n}\n\nfunction sinh(x) {\n  return ((x = Math.exp(x)) - 1 / x) / 2;\n}\n\nfunction tanh(x) {\n  return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n}\n\n// p0 = [ux0, uy0, w0]\n// p1 = [ux1, uy1, w1]\nexport default function(p0, p1) {\n  var ux0 = p0[0], uy0 = p0[1], w0 = p0[2],\n      ux1 = p1[0], uy1 = p1[1], w1 = p1[2],\n      dx = ux1 - ux0,\n      dy = uy1 - uy0,\n      d2 = dx * dx + dy * dy,\n      i,\n      S;\n\n  // Special case for u0 ≅ u1.\n  if (d2 < epsilon2) {\n    S = Math.log(w1 / w0) / rho;\n    i = function(t) {\n      return [\n        ux0 + t * dx,\n        uy0 + t * dy,\n        w0 * Math.exp(rho * t * S)\n      ];\n    }\n  }\n\n  // General case.\n  else {\n    var d1 = Math.sqrt(d2),\n        b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),\n        b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),\n        r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),\n        r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n    S = (r1 - r0) / rho;\n    i = function(t) {\n      var s = t * S,\n          coshr0 = cosh(r0),\n          u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));\n      return [\n        ux0 + u * dx,\n        uy0 + u * dy,\n        w0 * coshr0 / cosh(rho * s + r0)\n      ];\n    }\n  }\n\n  i.duration = S * 1000;\n\n  return i;\n}\n","import {hsl as colorHsl} from \"d3-color\";\nimport color, {hue} from \"./color\";\n\nfunction hsl(hue) {\n  return function(start, end) {\n    var h = hue((start = colorHsl(start)).h, (end = colorHsl(end)).h),\n        s = color(start.s, end.s),\n        l = color(start.l, end.l),\n        opacity = color(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.s = s(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nexport default hsl(hue);\nexport var hslLong = hsl(color);\n","import {lab as colorLab} from \"d3-color\";\nimport color from \"./color\";\n\nexport default function lab(start, end) {\n  var l = color((start = colorLab(start)).l, (end = colorLab(end)).l),\n      a = color(start.a, end.a),\n      b = color(start.b, end.b),\n      opacity = color(start.opacity, end.opacity);\n  return function(t) {\n    start.l = l(t);\n    start.a = a(t);\n    start.b = b(t);\n    start.opacity = opacity(t);\n    return start + \"\";\n  };\n}\n","import {hcl as colorHcl} from \"d3-color\";\nimport color, {hue} from \"./color\";\n\nfunction hcl(hue) {\n  return function(start, end) {\n    var h = hue((start = colorHcl(start)).h, (end = colorHcl(end)).h),\n        c = color(start.c, end.c),\n        l = color(start.l, end.l),\n        opacity = color(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.c = c(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nexport default hcl(hue);\nexport var hclLong = hcl(color);\n","import {cubehelix as colorCubehelix} from \"d3-color\";\nimport color, {hue} from \"./color\";\n\nfunction cubehelix(hue) {\n  return (function cubehelixGamma(y) {\n    y = +y;\n\n    function cubehelix(start, end) {\n      var h = hue((start = colorCubehelix(start)).h, (end = colorCubehelix(end)).h),\n          s = color(start.s, end.s),\n          l = color(start.l, end.l),\n          opacity = color(start.opacity, end.opacity);\n      return function(t) {\n        start.h = h(t);\n        start.s = s(t);\n        start.l = l(Math.pow(t, y));\n        start.opacity = opacity(t);\n        return start + \"\";\n      };\n    }\n\n    cubehelix.gamma = cubehelixGamma;\n\n    return cubehelix;\n  })(1);\n}\n\nexport default cubehelix(hue);\nexport var cubehelixLong = cubehelix(color);\n","export default function piecewise(interpolate, values) {\n  var i = 0, n = values.length - 1, v = values[0], I = new Array(n < 0 ? 0 : n);\n  while (i < n) I[i] = interpolate(v, v = values[++i]);\n  return function(t) {\n    var i = Math.max(0, Math.min(n - 1, Math.floor(t *= n)));\n    return I[i](t - i);\n  };\n}\n","export default function(interpolator, n) {\n  var samples = new Array(n);\n  for (var i = 0; i < n; ++i) samples[i] = interpolator(i / (n - 1));\n  return samples;\n}\n","var pi = Math.PI,\n    tau = 2 * pi,\n    epsilon = 1e-6,\n    tauEpsilon = tau - epsilon;\n\nfunction Path() {\n  this._x0 = this._y0 = // start of current subpath\n  this._x1 = this._y1 = null; // end of current subpath\n  this._ = \"\";\n}\n\nfunction path() {\n  return new Path;\n}\n\nPath.prototype = path.prototype = {\n  constructor: Path,\n  moveTo: function(x, y) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y);\n  },\n  closePath: function() {\n    if (this._x1 !== null) {\n      this._x1 = this._x0, this._y1 = this._y0;\n      this._ += \"Z\";\n    }\n  },\n  lineTo: function(x, y) {\n    this._ += \"L\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  quadraticCurveTo: function(x1, y1, x, y) {\n    this._ += \"Q\" + (+x1) + \",\" + (+y1) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) {\n    this._ += \"C\" + (+x1) + \",\" + (+y1) + \",\" + (+x2) + \",\" + (+y2) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  arcTo: function(x1, y1, x2, y2, r) {\n    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n    var x0 = this._x1,\n        y0 = this._y1,\n        x21 = x2 - x1,\n        y21 = y2 - y1,\n        x01 = x0 - x1,\n        y01 = y0 - y1,\n        l01_2 = x01 * x01 + y01 * y01;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x1,y1).\n    if (this._x1 === null) {\n      this._ += \"M\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n    else if (!(l01_2 > epsilon)) {}\n\n    // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n    // Equivalently, is (x1,y1) coincident with (x2,y2)?\n    // Or, is the radius zero? Line to (x1,y1).\n    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon) || !r) {\n      this._ += \"L\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Otherwise, draw an arc!\n    else {\n      var x20 = x2 - x0,\n          y20 = y2 - y0,\n          l21_2 = x21 * x21 + y21 * y21,\n          l20_2 = x20 * x20 + y20 * y20,\n          l21 = Math.sqrt(l21_2),\n          l01 = Math.sqrt(l01_2),\n          l = r * Math.tan((pi - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n          t01 = l / l01,\n          t21 = l / l21;\n\n      // If the start tangent is not coincident with (x0,y0), line to.\n      if (Math.abs(t01 - 1) > epsilon) {\n        this._ += \"L\" + (x1 + t01 * x01) + \",\" + (y1 + t01 * y01);\n      }\n\n      this._ += \"A\" + r + \",\" + r + \",0,0,\" + (+(y01 * x20 > x01 * y20)) + \",\" + (this._x1 = x1 + t21 * x21) + \",\" + (this._y1 = y1 + t21 * y21);\n    }\n  },\n  arc: function(x, y, r, a0, a1, ccw) {\n    x = +x, y = +y, r = +r;\n    var dx = r * Math.cos(a0),\n        dy = r * Math.sin(a0),\n        x0 = x + dx,\n        y0 = y + dy,\n        cw = 1 ^ ccw,\n        da = ccw ? a0 - a1 : a1 - a0;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x0,y0).\n    if (this._x1 === null) {\n      this._ += \"M\" + x0 + \",\" + y0;\n    }\n\n    // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n    else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) {\n      this._ += \"L\" + x0 + \",\" + y0;\n    }\n\n    // Is this arc empty? We’re done.\n    if (!r) return;\n\n    // Does the angle go the wrong way? Flip the direction.\n    if (da < 0) da = da % tau + tau;\n\n    // Is this a complete circle? Draw two arcs to complete the circle.\n    if (da > tauEpsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (x - dx) + \",\" + (y - dy) + \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (this._x1 = x0) + \",\" + (this._y1 = y0);\n    }\n\n    // Is this arc non-empty? Draw an arc!\n    else if (da > epsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,\" + (+(da >= pi)) + \",\" + cw + \",\" + (this._x1 = x + r * Math.cos(a1)) + \",\" + (this._y1 = y + r * Math.sin(a1));\n    }\n  },\n  rect: function(x, y, w, h) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y) + \"h\" + (+w) + \"v\" + (+h) + \"h\" + (-w) + \"Z\";\n  },\n  toString: function() {\n    return this._;\n  }\n};\n\nexport default path;\n","var noop = {value: function() {}};\n\nfunction dispatch() {\n  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n    if (!(t = arguments[i] + \"\") || (t in _)) throw new Error(\"illegal type: \" + t);\n    _[t] = [];\n  }\n  return new Dispatch(_);\n}\n\nfunction Dispatch(_) {\n  this._ = _;\n}\n\nfunction parseTypenames(typenames, types) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n    return {type: t, name: name};\n  });\n}\n\nDispatch.prototype = dispatch.prototype = {\n  constructor: Dispatch,\n  on: function(typename, callback) {\n    var _ = this._,\n        T = parseTypenames(typename + \"\", _),\n        t,\n        i = -1,\n        n = T.length;\n\n    // If no callback was specified, return the callback of the given type and name.\n    if (arguments.length < 2) {\n      while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n      return;\n    }\n\n    // If a type was specified, set the callback for the given type and name.\n    // Otherwise, if a null callback was specified, remove callbacks of the given name.\n    if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    while (++i < n) {\n      if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);\n      else if (callback == null) for (t in _) _[t] = set(_[t], typename.name, null);\n    }\n\n    return this;\n  },\n  copy: function() {\n    var copy = {}, _ = this._;\n    for (var t in _) copy[t] = _[t].slice();\n    return new Dispatch(copy);\n  },\n  call: function(type, that) {\n    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  },\n  apply: function(type, that, args) {\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  }\n};\n\nfunction get(type, name) {\n  for (var i = 0, n = type.length, c; i < n; ++i) {\n    if ((c = type[i]).name === name) {\n      return c.value;\n    }\n  }\n}\n\nfunction set(type, name, callback) {\n  for (var i = 0, n = type.length; i < n; ++i) {\n    if (type[i].name === name) {\n      type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));\n      break;\n    }\n  }\n  if (callback != null) type.push({name: name, value: callback});\n  return type;\n}\n\nexport default dispatch;\n","export function each(o, cb, s) {\n  var n;\n  if (!o) {\n    return 0;\n  }\n  s = !s ? o : s;\n  if (o instanceof Array) {\n    // Indexed arrays, needed for Safari\n    for (n = 0; n < o.length; n++) {\n      if (cb.call(s, o[n], n, o) === false) {\n        return 0;\n      }\n    }\n  } else {\n    // Hashtables\n    for (n in o) {\n      if (o.hasOwnProperty(n)) {\n        if (cb.call(s, o[n], n, o) === false){\n          return 0;\n        }\n      }\n    }\n  }\n  return 1;\n}\n","var frame = 0, // is an animation frame pending?\n    timeout = 0, // is a timeout pending?\n    interval = 0, // are any timers active?\n    pokeDelay = 1000, // how frequently we check for clock skew\n    taskHead,\n    taskTail,\n    clockLast = 0,\n    clockNow = 0,\n    clockSkew = 0,\n    clock = typeof performance === \"object\" && performance.now ? performance : Date,\n    setFrame = typeof window === \"object\" && window.requestAnimationFrame ? window.requestAnimationFrame.bind(window) : function(f) { setTimeout(f, 17); };\n\nexport function now() {\n  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\n}\n\nfunction clearNow() {\n  clockNow = 0;\n}\n\nexport function Timer() {\n  this._call =\n  this._time =\n  this._next = null;\n}\n\nTimer.prototype = timer.prototype = {\n  constructor: Timer,\n  restart: function(callback, delay, time) {\n    if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\n    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\n    if (!this._next && taskTail !== this) {\n      if (taskTail) taskTail._next = this;\n      else taskHead = this;\n      taskTail = this;\n    }\n    this._call = callback;\n    this._time = time;\n    sleep();\n  },\n  stop: function() {\n    if (this._call) {\n      this._call = null;\n      this._time = Infinity;\n      sleep();\n    }\n  }\n};\n\nexport function timer(callback, delay, time) {\n  var t = new Timer;\n  t.restart(callback, delay, time);\n  return t;\n}\n\nexport function timerFlush() {\n  now(); // Get the current time, if not already set.\n  ++frame; // Pretend we’ve set an alarm, if we haven’t already.\n  var t = taskHead, e;\n  while (t) {\n    if ((e = clockNow - t._time) >= 0) t._call.call(null, e);\n    t = t._next;\n  }\n  --frame;\n}\n\nfunction wake() {\n  clockNow = (clockLast = clock.now()) + clockSkew;\n  frame = timeout = 0;\n  try {\n    timerFlush();\n  } finally {\n    frame = 0;\n    nap();\n    clockNow = 0;\n  }\n}\n\nfunction poke() {\n  var now = clock.now(), delay = now - clockLast;\n  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\n}\n\nfunction nap() {\n  var t0, t1 = taskHead, t2, time = Infinity;\n  while (t1) {\n    if (t1._call) {\n      if (time > t1._time) time = t1._time;\n      t0 = t1, t1 = t1._next;\n    } else {\n      t2 = t1._next, t1._next = null;\n      t1 = t0 ? t0._next = t2 : taskHead = t2;\n    }\n  }\n  taskTail = t0;\n  sleep(time);\n}\n\nfunction sleep(time) {\n  if (frame) return; // Soonest alarm already set, or will be.\n  if (timeout) timeout = clearTimeout(timeout);\n  var delay = time - clockNow; // Strictly less than if we recomputed clockNow.\n  if (delay > 24) {\n    if (time < Infinity) timeout = setTimeout(wake, time - clock.now() - clockSkew);\n    if (interval) interval = clearInterval(interval);\n  } else {\n    if (!interval) clockLast = clock.now(), interval = setInterval(poke, pokeDelay);\n    frame = 1, setFrame(wake);\n  }\n}\n","import {Timer} from \"./timer\";\n\nexport default function(callback, delay, time) {\n  var t = new Timer;\n  delay = delay == null ? 0 : +delay;\n  t.restart(function(elapsed) {\n    t.stop();\n    callback(elapsed + delay);\n  }, delay, time);\n  return t;\n}\n","import {Timer, now} from \"./timer\";\n\nexport default function(callback, delay, time) {\n  var t = new Timer, total = delay;\n  if (delay == null) return t.restart(callback, delay, time), t;\n  delay = +delay, time = time == null ? now() : +time;\n  t.restart(function tick(elapsed) {\n    elapsed += total;\n    t.restart(tick, total += delay, time);\n    callback(elapsed);\n  }, delay, time);\n  return t;\n}\n","// Computes the decimal coefficient and exponent of the specified number x with\n// significant digits p, where x is positive and p is in [1, 21] or undefined.\n// For example, formatDecimal(1.23) returns [\"123\", 0].\nexport default function(x, p) {\n  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n  var i, coefficient = x.slice(0, i);\n\n  // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n  // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n  return [\n    coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\n    +x.slice(i + 1)\n  ];\n}\n","import formatDecimal from \"./formatDecimal\";\n\nexport default function(x) {\n  return x = formatDecimal(Math.abs(x)), x ? x[1] : NaN;\n}\n","// [[fill]align][sign][symbol][0][width][,][.precision][~][type]\nvar re = /^(?:(.)?([<>=^]))?([+\\-\\( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?(~)?([a-z%])?$/i;\n\nexport default function formatSpecifier(specifier) {\n  return new FormatSpecifier(specifier);\n}\n\nformatSpecifier.prototype = FormatSpecifier.prototype; // instanceof\n\nfunction FormatSpecifier(specifier) {\n  if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n  var match;\n  this.fill = match[1] || \" \";\n  this.align = match[2] || \">\";\n  this.sign = match[3] || \"-\";\n  this.symbol = match[4] || \"\";\n  this.zero = !!match[5];\n  this.width = match[6] && +match[6];\n  this.comma = !!match[7];\n  this.precision = match[8] && +match[8].slice(1);\n  this.trim = !!match[9];\n  this.type = match[10] || \"\";\n}\n\nFormatSpecifier.prototype.toString = function() {\n  return this.fill\n      + this.align\n      + this.sign\n      + this.symbol\n      + (this.zero ? \"0\" : \"\")\n      + (this.width == null ? \"\" : Math.max(1, this.width | 0))\n      + (this.comma ? \",\" : \"\")\n      + (this.precision == null ? \"\" : \".\" + Math.max(0, this.precision | 0))\n      + (this.trim ? \"~\" : \"\")\n      + this.type;\n};\n","// Trims insignificant zeros, e.g., replaces 1.2000k with 1.2k.\nexport default function(s) {\n  out: for (var n = s.length, i = 1, i0 = -1, i1; i < n; ++i) {\n    switch (s[i]) {\n      case \".\": i0 = i1 = i; break;\n      case \"0\": if (i0 === 0) i0 = i; i1 = i; break;\n      default: if (i0 > 0) { if (!+s[i]) break out; i0 = 0; } break;\n    }\n  }\n  return i0 > 0 ? s.slice(0, i0) + s.slice(i1 + 1) : s;\n}\n","import formatDecimal from \"./formatDecimal\";\n\nexport var prefixExponent;\n\nexport default function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1],\n      i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n      n = coefficient.length;\n  return i === n ? coefficient\n      : i > n ? coefficient + new Array(i - n + 1).join(\"0\")\n      : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i)\n      : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimal(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n}\n","import formatLocale from \"./locale\";\n\nvar locale;\nexport var format;\nexport var formatPrefix;\n\ndefaultLocale({\n  decimal: \".\",\n  thousands: \",\",\n  grouping: [3],\n  currency: [\"$\", \"\"]\n});\n\nexport default function defaultLocale(definition) {\n  locale = formatLocale(definition);\n  format = locale.format;\n  formatPrefix = locale.formatPrefix;\n  return locale;\n}\n","import formatDecimal from \"./formatDecimal\";\n\nexport default function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1];\n  return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient\n      : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1)\n      : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n}\n","import formatPrefixAuto from \"./formatPrefixAuto\";\nimport formatRounded from \"./formatRounded\";\n\nexport default {\n  \"%\": function(x, p) { return (x * 100).toFixed(p); },\n  \"b\": function(x) { return Math.round(x).toString(2); },\n  \"c\": function(x) { return x + \"\"; },\n  \"d\": function(x) { return Math.round(x).toString(10); },\n  \"e\": function(x, p) { return x.toExponential(p); },\n  \"f\": function(x, p) { return x.toFixed(p); },\n  \"g\": function(x, p) { return x.toPrecision(p); },\n  \"o\": function(x) { return Math.round(x).toString(8); },\n  \"p\": function(x, p) { return formatRounded(x * 100, p); },\n  \"r\": formatRounded,\n  \"s\": formatPrefixAuto,\n  \"X\": function(x) { return Math.round(x).toString(16).toUpperCase(); },\n  \"x\": function(x) { return Math.round(x).toString(16); }\n};\n","export default function(x) {\n  return x;\n}\n","import exponent from \"./exponent\";\nimport formatGroup from \"./formatGroup\";\nimport formatNumerals from \"./formatNumerals\";\nimport formatSpecifier from \"./formatSpecifier\";\nimport formatTrim from \"./formatTrim\";\nimport formatTypes from \"./formatTypes\";\nimport {prefixExponent} from \"./formatPrefixAuto\";\nimport identity from \"./identity\";\n\nvar prefixes = [\"y\",\"z\",\"a\",\"f\",\"p\",\"n\",\"µ\",\"m\",\"\",\"k\",\"M\",\"G\",\"T\",\"P\",\"E\",\"Z\",\"Y\"];\n\nexport default function(locale) {\n  var group = locale.grouping && locale.thousands ? formatGroup(locale.grouping, locale.thousands) : identity,\n      currency = locale.currency,\n      decimal = locale.decimal,\n      numerals = locale.numerals ? formatNumerals(locale.numerals) : identity,\n      percent = locale.percent || \"%\";\n\n  function newFormat(specifier) {\n    specifier = formatSpecifier(specifier);\n\n    var fill = specifier.fill,\n        align = specifier.align,\n        sign = specifier.sign,\n        symbol = specifier.symbol,\n        zero = specifier.zero,\n        width = specifier.width,\n        comma = specifier.comma,\n        precision = specifier.precision,\n        trim = specifier.trim,\n        type = specifier.type;\n\n    // The \"n\" type is an alias for \",g\".\n    if (type === \"n\") comma = true, type = \"g\";\n\n    // The \"\" type, and any invalid type, is an alias for \".12~g\".\n    else if (!formatTypes[type]) precision == null && (precision = 12), trim = true, type = \"g\";\n\n    // If zero fill is specified, padding goes after sign and before digits.\n    if (zero || (fill === \"0\" && align === \"=\")) zero = true, fill = \"0\", align = \"=\";\n\n    // Compute the prefix and suffix.\n    // For SI-prefix, the suffix is lazily computed.\n    var prefix = symbol === \"$\" ? currency[0] : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n        suffix = symbol === \"$\" ? currency[1] : /[%p]/.test(type) ? percent : \"\";\n\n    // What format function should we use?\n    // Is this an integer type?\n    // Can this type generate exponential notation?\n    var formatType = formatTypes[type],\n        maybeSuffix = /[defgprs%]/.test(type);\n\n    // Set the default precision if not specified,\n    // or clamp the specified precision to the supported range.\n    // For significant precision, it must be in [1, 21].\n    // For fixed precision, it must be in [0, 20].\n    precision = precision == null ? 6\n        : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))\n        : Math.max(0, Math.min(20, precision));\n\n    function format(value) {\n      var valuePrefix = prefix,\n          valueSuffix = suffix,\n          i, n, c;\n\n      if (type === \"c\") {\n        valueSuffix = formatType(value) + valueSuffix;\n        value = \"\";\n      } else {\n        value = +value;\n\n        // Perform the initial formatting.\n        var valueNegative = value < 0;\n        value = formatType(Math.abs(value), precision);\n\n        // Trim insignificant zeros.\n        if (trim) value = formatTrim(value);\n\n        // If a negative value rounds to zero during formatting, treat as positive.\n        if (valueNegative && +value === 0) valueNegative = false;\n\n        // Compute the prefix and suffix.\n        valuePrefix = (valueNegative ? (sign === \"(\" ? sign : \"-\") : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n        valueSuffix = (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + valueSuffix + (valueNegative && sign === \"(\" ? \")\" : \"\");\n\n        // Break the formatted value into the integer “value” part that can be\n        // grouped, and fractional or exponential “suffix” part that is not.\n        if (maybeSuffix) {\n          i = -1, n = value.length;\n          while (++i < n) {\n            if (c = value.charCodeAt(i), 48 > c || c > 57) {\n              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n              value = value.slice(0, i);\n              break;\n            }\n          }\n        }\n      }\n\n      // If the fill character is not \"0\", grouping is applied before padding.\n      if (comma && !zero) value = group(value, Infinity);\n\n      // Compute the padding.\n      var length = valuePrefix.length + value.length + valueSuffix.length,\n          padding = length < width ? new Array(width - length + 1).join(fill) : \"\";\n\n      // If the fill character is \"0\", grouping is applied after padding.\n      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\";\n\n      // Reconstruct the final output based on the desired alignment.\n      switch (align) {\n        case \"<\": value = valuePrefix + value + valueSuffix + padding; break;\n        case \"=\": value = valuePrefix + padding + value + valueSuffix; break;\n        case \"^\": value = padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length); break;\n        default: value = padding + valuePrefix + value + valueSuffix; break;\n      }\n\n      return numerals(value);\n    }\n\n    format.toString = function() {\n      return specifier + \"\";\n    };\n\n    return format;\n  }\n\n  function formatPrefix(specifier, value) {\n    var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\n        e = Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3,\n        k = Math.pow(10, -e),\n        prefix = prefixes[8 + e / 3];\n    return function(value) {\n      return f(k * value) + prefix;\n    };\n  }\n\n  return {\n    format: newFormat,\n    formatPrefix: formatPrefix\n  };\n}\n","export default function(grouping, thousands) {\n  return function(value, width) {\n    var i = value.length,\n        t = [],\n        j = 0,\n        g = grouping[0],\n        length = 0;\n\n    while (i > 0 && g > 0) {\n      if (length + g + 1 > width) g = Math.max(1, width - length);\n      t.push(value.substring(i -= g, i + g));\n      if ((length += g + 1) > width) break;\n      g = grouping[j = (j + 1) % grouping.length];\n    }\n\n    return t.reverse().join(thousands);\n  };\n}\n","export default function(numerals) {\n  return function(value) {\n    return value.replace(/[0-9]/g, function(i) {\n      return numerals[+i];\n    });\n  };\n}\n","import exponent from \"./exponent\";\n\nexport default function(step) {\n  return Math.max(0, -exponent(Math.abs(step)));\n}\n","import exponent from \"./exponent\";\n\nexport default function(step, value) {\n  return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3 - exponent(Math.abs(step)));\n}\n","import exponent from \"./exponent\";\n\nexport default function(step, max) {\n  step = Math.abs(step), max = Math.abs(max) - step;\n  return Math.max(0, exponent(max) - exponent(step)) + 1;\n}\n","export var prefix = \"$\";\n\nfunction Map() {}\n\nMap.prototype = map.prototype = {\n  constructor: Map,\n  has: function(key) {\n    return (prefix + key) in this;\n  },\n  get: function(key) {\n    return this[prefix + key];\n  },\n  set: function(key, value) {\n    this[prefix + key] = value;\n    return this;\n  },\n  remove: function(key) {\n    var property = prefix + key;\n    return property in this && delete this[property];\n  },\n  clear: function() {\n    for (var property in this) if (property[0] === prefix) delete this[property];\n  },\n  keys: function() {\n    var keys = [];\n    for (var property in this) if (property[0] === prefix) keys.push(property.slice(1));\n    return keys;\n  },\n  values: function() {\n    var values = [];\n    for (var property in this) if (property[0] === prefix) values.push(this[property]);\n    return values;\n  },\n  entries: function() {\n    var entries = [];\n    for (var property in this) if (property[0] === prefix) entries.push({key: property.slice(1), value: this[property]});\n    return entries;\n  },\n  size: function() {\n    var size = 0;\n    for (var property in this) if (property[0] === prefix) ++size;\n    return size;\n  },\n  empty: function() {\n    for (var property in this) if (property[0] === prefix) return false;\n    return true;\n  },\n  each: function(f) {\n    for (var property in this) if (property[0] === prefix) f(this[property], property.slice(1), this);\n  }\n};\n\nfunction map(object, f) {\n  var map = new Map;\n\n  // Copy constructor.\n  if (object instanceof Map) object.each(function(value, key) { map.set(key, value); });\n\n  // Index array by numeric index or specified key function.\n  else if (Array.isArray(object)) {\n    var i = -1,\n        n = object.length,\n        o;\n\n    if (f == null) while (++i < n) map.set(i, object[i]);\n    else while (++i < n) map.set(f(o = object[i], i, object), o);\n  }\n\n  // Convert object to map.\n  else if (object) for (var key in object) map.set(key, object[key]);\n\n  return map;\n}\n\nexport default map;\n","import map from \"./map\";\n\nexport default function() {\n  var keys = [],\n      sortKeys = [],\n      sortValues,\n      rollup,\n      nest;\n\n  function apply(array, depth, createResult, setResult) {\n    if (depth >= keys.length) {\n      if (sortValues != null) array.sort(sortValues);\n      return rollup != null ? rollup(array) : array;\n    }\n\n    var i = -1,\n        n = array.length,\n        key = keys[depth++],\n        keyValue,\n        value,\n        valuesByKey = map(),\n        values,\n        result = createResult();\n\n    while (++i < n) {\n      if (values = valuesByKey.get(keyValue = key(value = array[i]) + \"\")) {\n        values.push(value);\n      } else {\n        valuesByKey.set(keyValue, [value]);\n      }\n    }\n\n    valuesByKey.each(function(values, key) {\n      setResult(result, key, apply(values, depth, createResult, setResult));\n    });\n\n    return result;\n  }\n\n  function entries(map, depth) {\n    if (++depth > keys.length) return map;\n    var array, sortKey = sortKeys[depth - 1];\n    if (rollup != null && depth >= keys.length) array = map.entries();\n    else array = [], map.each(function(v, k) { array.push({key: k, values: entries(v, depth)}); });\n    return sortKey != null ? array.sort(function(a, b) { return sortKey(a.key, b.key); }) : array;\n  }\n\n  return nest = {\n    object: function(array) { return apply(array, 0, createObject, setObject); },\n    map: function(array) { return apply(array, 0, createMap, setMap); },\n    entries: function(array) { return entries(apply(array, 0, createMap, setMap), 0); },\n    key: function(d) { keys.push(d); return nest; },\n    sortKeys: function(order) { sortKeys[keys.length - 1] = order; return nest; },\n    sortValues: function(order) { sortValues = order; return nest; },\n    rollup: function(f) { rollup = f; return nest; }\n  };\n}\n\nfunction createObject() {\n  return {};\n}\n\nfunction setObject(object, key, value) {\n  object[key] = value;\n}\n\nfunction createMap() {\n  return map();\n}\n\nfunction setMap(map, key, value) {\n  map.set(key, value);\n}\n","import {default as map, prefix} from \"./map\";\n\nfunction Set() {}\n\nvar proto = map.prototype;\n\nSet.prototype = set.prototype = {\n  constructor: Set,\n  has: proto.has,\n  add: function(value) {\n    value += \"\";\n    this[prefix + value] = value;\n    return this;\n  },\n  remove: proto.remove,\n  clear: proto.clear,\n  values: proto.keys,\n  size: proto.size,\n  empty: proto.empty,\n  each: proto.each\n};\n\nfunction set(object, f) {\n  var set = new Set;\n\n  // Copy constructor.\n  if (object instanceof Set) object.each(function(value) { set.add(value); });\n\n  // Otherwise, assume it’s an array.\n  else if (object) {\n    var i = -1, n = object.length;\n    if (f == null) while (++i < n) set.add(object[i]);\n    else while (++i < n) set.add(f(object[i], i, object));\n  }\n\n  return set;\n}\n\nexport default set;\n","export default function(map) {\n  var keys = [];\n  for (var key in map) keys.push(key);\n  return keys;\n}\n","export default function(map) {\n  var values = [];\n  for (var key in map) values.push(map[key]);\n  return values;\n}\n","export default function(map) {\n  var entries = [];\n  for (var key in map) entries.push({key: key, value: map[key]});\n  return entries;\n}\n","import {dispatch} from \"d3-dispatch\";\nimport {timer, timeout} from \"d3-timer\";\n\nvar emptyOn = dispatch(\"start\", \"end\", \"interrupt\");\nvar emptyTween = [];\n\nexport var CREATED = 0;\nexport var SCHEDULED = 1;\nexport var STARTING = 2;\nexport var STARTED = 3;\nexport var RUNNING = 4;\nexport var ENDING = 5;\nexport var ENDED = 6;\n\nexport default function(node, name, id, index, group, timing) {\n  var schedules = node.__transition;\n  if (!schedules) node.__transition = {};\n  else if (id in schedules) return;\n  create(node, id, {\n    name: name,\n    index: index, // For context during callback.\n    group: group, // For context during callback.\n    on: emptyOn,\n    tween: emptyTween,\n    time: timing.time,\n    delay: timing.delay,\n    duration: timing.duration,\n    ease: timing.ease,\n    timer: null,\n    state: CREATED\n  });\n}\n\nexport function init(node, id) {\n  var schedule = get(node, id);\n  if (schedule.state > CREATED) throw new Error(\"too late; already scheduled\");\n  return schedule;\n}\n\nexport function set(node, id) {\n  var schedule = get(node, id);\n  if (schedule.state > STARTING) throw new Error(\"too late; already started\");\n  return schedule;\n}\n\nexport function get(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id])) throw new Error(\"transition not found\");\n  return schedule;\n}\n\nfunction create(node, id, self) {\n  var schedules = node.__transition,\n      tween;\n\n  // Initialize the self timer when the transition is created.\n  // Note the actual delay is not known until the first callback!\n  schedules[id] = self;\n  self.timer = timer(schedule, 0, self.time);\n\n  function schedule(elapsed) {\n    self.state = SCHEDULED;\n    self.timer.restart(start, self.delay, self.time);\n\n    // If the elapsed delay is less than our first sleep, start immediately.\n    if (self.delay <= elapsed) start(elapsed - self.delay);\n  }\n\n  function start(elapsed) {\n    var i, j, n, o;\n\n    // If the state is not SCHEDULED, then we previously errored on start.\n    if (self.state !== SCHEDULED) return stop();\n\n    for (i in schedules) {\n      o = schedules[i];\n      if (o.name !== self.name) continue;\n\n      // While this element already has a starting transition during this frame,\n      // defer starting an interrupting transition until that transition has a\n      // chance to tick (and possibly end); see d3/d3-transition#54!\n      if (o.state === STARTED) return timeout(start);\n\n      // Interrupt the active transition, if any.\n      // Dispatch the interrupt event.\n      if (o.state === RUNNING) {\n        o.state = ENDED;\n        o.timer.stop();\n        o.on.call(\"interrupt\", node, node.__data__, o.index, o.group);\n        delete schedules[i];\n      }\n\n      // Cancel any pre-empted transitions. No interrupt event is dispatched\n      // because the cancelled transitions never started. Note that this also\n      // removes this transition from the pending list!\n      else if (+i < id) {\n        o.state = ENDED;\n        o.timer.stop();\n        delete schedules[i];\n      }\n    }\n\n    // Defer the first tick to end of the current frame; see d3/d3#1576.\n    // Note the transition may be canceled after start and before the first tick!\n    // Note this must be scheduled before the start event; see d3/d3-transition#16!\n    // Assuming this is successful, subsequent callbacks go straight to tick.\n    timeout(function() {\n      if (self.state === STARTED) {\n        self.state = RUNNING;\n        self.timer.restart(tick, self.delay, self.time);\n        tick(elapsed);\n      }\n    });\n\n    // Dispatch the start event.\n    // Note this must be done before the tween are initialized.\n    self.state = STARTING;\n    self.on.call(\"start\", node, node.__data__, self.index, self.group);\n    if (self.state !== STARTING) return; // interrupted\n    self.state = STARTED;\n\n    // Initialize the tween, deleting null tween.\n    tween = new Array(n = self.tween.length);\n    for (i = 0, j = -1; i < n; ++i) {\n      if (o = self.tween[i].value.call(node, node.__data__, self.index, self.group)) {\n        tween[++j] = o;\n      }\n    }\n    tween.length = j + 1;\n  }\n\n  function tick(elapsed) {\n    var t = elapsed < self.duration ? self.ease.call(null, elapsed / self.duration) : (self.timer.restart(stop), self.state = ENDING, 1),\n        i = -1,\n        n = tween.length;\n\n    while (++i < n) {\n      tween[i].call(null, t);\n    }\n\n    // Dispatch the end event.\n    if (self.state === ENDING) {\n      self.on.call(\"end\", node, node.__data__, self.index, self.group);\n      stop();\n    }\n  }\n\n  function stop() {\n    self.state = ENDED;\n    self.timer.stop();\n    delete schedules[id];\n    for (var i in schedules) return; // eslint-disable-line no-unused-vars\n    delete node.__transition;\n  }\n}\n","import {STARTING, ENDING, ENDED} from \"./transition/schedule\";\n\nexport default function(node, name) {\n  var schedules = node.__transition,\n      schedule,\n      active,\n      empty = true,\n      i;\n\n  if (!schedules) return;\n\n  name = name == null ? null : name + \"\";\n\n  for (i in schedules) {\n    if ((schedule = schedules[i]).name !== name) { empty = false; continue; }\n    active = schedule.state > STARTING && schedule.state < ENDING;\n    schedule.state = ENDED;\n    schedule.timer.stop();\n    if (active) schedule.on.call(\"interrupt\", node, node.__data__, schedule.index, schedule.group);\n    delete schedules[i];\n  }\n\n  if (empty) delete node.__transition;\n}\n","import {get, set} from \"./schedule\";\n\nfunction tweenRemove(id, name) {\n  var tween0, tween1;\n  return function() {\n    var schedule = set(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = tween0 = tween;\n      for (var i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1 = tween1.slice();\n          tween1.splice(i, 1);\n          break;\n        }\n      }\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nfunction tweenFunction(id, name, value) {\n  var tween0, tween1;\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    var schedule = set(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = (tween0 = tween).slice();\n      for (var t = {name: name, value: value}, i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1[i] = t;\n          break;\n        }\n      }\n      if (i === n) tween1.push(t);\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nexport default function(name, value) {\n  var id = this._id;\n\n  name += \"\";\n\n  if (arguments.length < 2) {\n    var tween = get(this.node(), id).tween;\n    for (var i = 0, n = tween.length, t; i < n; ++i) {\n      if ((t = tween[i]).name === name) {\n        return t.value;\n      }\n    }\n    return null;\n  }\n\n  return this.each((value == null ? tweenRemove : tweenFunction)(id, name, value));\n}\n\nexport function tweenValue(transition, name, value) {\n  var id = transition._id;\n\n  transition.each(function() {\n    var schedule = set(this, id);\n    (schedule.value || (schedule.value = {}))[name] = value.apply(this, arguments);\n  });\n\n  return function(node) {\n    return get(node, id).value[name];\n  };\n}\n","import {color} from \"d3-color\";\nimport {interpolateNumber, interpolateRgb, interpolateString} from \"d3-interpolate\";\n\nexport default function(a, b) {\n  var c;\n  return (typeof b === \"number\" ? interpolateNumber\n      : b instanceof color ? interpolateRgb\n      : (c = color(b)) ? (b = c, interpolateRgb)\n      : interpolateString)(a, b);\n}\n","function removeFunction(id) {\n  return function() {\n    var parent = this.parentNode;\n    for (var i in this.__transition) if (+i !== id) return;\n    if (parent) parent.removeChild(this);\n  };\n}\n\nexport default function() {\n  return this.on(\"end.remove\", removeFunction(this._id));\n}\n","import {selection} from \"d3-selection\";\n\nvar Selection = selection.prototype.constructor;\n\nexport default function() {\n  return new Selection(this._groups, this._parents);\n}\n","import {tweenValue} from \"./tween\";\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var value1 = value(this);\n    this.textContent = value1 == null ? \"\" : value1;\n  };\n}\n\nexport default function(value) {\n  return this.tween(\"text\", typeof value === \"function\"\n      ? textFunction(tweenValue(this, \"text\", value))\n      : textConstant(value == null ? \"\" : value + \"\"));\n}\n","import {selection} from \"d3-selection\";\nimport transition_attr from \"./attr\";\nimport transition_attrTween from \"./attrTween\";\nimport transition_delay from \"./delay\";\nimport transition_duration from \"./duration\";\nimport transition_ease from \"./ease\";\nimport transition_filter from \"./filter\";\nimport transition_merge from \"./merge\";\nimport transition_on from \"./on\";\nimport transition_remove from \"./remove\";\nimport transition_select from \"./select\";\nimport transition_selectAll from \"./selectAll\";\nimport transition_selection from \"./selection\";\nimport transition_style from \"./style\";\nimport transition_styleTween from \"./styleTween\";\nimport transition_text from \"./text\";\nimport transition_transition from \"./transition\";\nimport transition_tween from \"./tween\";\n\nvar id = 0;\n\nexport function Transition(groups, parents, name, id) {\n  this._groups = groups;\n  this._parents = parents;\n  this._name = name;\n  this._id = id;\n}\n\nexport default function transition(name) {\n  return selection().transition(name);\n}\n\nexport function newId() {\n  return ++id;\n}\n\nvar selection_prototype = selection.prototype;\n\nTransition.prototype = transition.prototype = {\n  constructor: Transition,\n  select: transition_select,\n  selectAll: transition_selectAll,\n  filter: transition_filter,\n  merge: transition_merge,\n  selection: transition_selection,\n  transition: transition_transition,\n  call: selection_prototype.call,\n  nodes: selection_prototype.nodes,\n  node: selection_prototype.node,\n  size: selection_prototype.size,\n  empty: selection_prototype.empty,\n  each: selection_prototype.each,\n  on: transition_on,\n  attr: transition_attr,\n  attrTween: transition_attrTween,\n  style: transition_style,\n  styleTween: transition_styleTween,\n  text: transition_text,\n  remove: transition_remove,\n  tween: transition_tween,\n  delay: transition_delay,\n  duration: transition_duration,\n  ease: transition_ease\n};\n","import {selector} from \"d3-selection\";\nimport {Transition} from \"./index\";\nimport schedule, {get} from \"./schedule\";\n\nexport default function(select) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n        schedule(subgroup[i], name, id, i, subgroup, get(node, id));\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, name, id);\n}\n","import {selectorAll} from \"d3-selection\";\nimport {Transition} from \"./index\";\nimport schedule, {get} from \"./schedule\";\n\nexport default function(select) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select !== \"function\") select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        for (var children = select.call(node, node.__data__, i, group), child, inherit = get(node, id), k = 0, l = children.length; k < l; ++k) {\n          if (child = children[k]) {\n            schedule(child, name, id, k, children, inherit);\n          }\n        }\n        subgroups.push(children);\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, parents, name, id);\n}\n","import {matcher} from \"d3-selection\";\nimport {Transition} from \"./index\";\n\nexport default function(match) {\n  if (typeof match !== \"function\") match = matcher(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, this._name, this._id);\n}\n","import {Transition} from \"./index\";\n\nexport default function(transition) {\n  if (transition._id !== this._id) throw new Error;\n\n  for (var groups0 = this._groups, groups1 = transition._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Transition(merges, this._parents, this._name, this._id);\n}\n","import {Transition, newId} from \"./index\";\nimport schedule, {get} from \"./schedule\";\n\nexport default function() {\n  var name = this._name,\n      id0 = this._id,\n      id1 = newId();\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        var inherit = get(node, id0);\n        schedule(node, name, id1, i, group, {\n          time: inherit.time + inherit.delay + inherit.duration,\n          delay: 0,\n          duration: inherit.duration,\n          ease: inherit.ease\n        });\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id1);\n}\n","import {get, set, init} from \"./schedule\";\n\nfunction start(name) {\n  return (name + \"\").trim().split(/^|\\s+/).every(function(t) {\n    var i = t.indexOf(\".\");\n    if (i >= 0) t = t.slice(0, i);\n    return !t || t === \"start\";\n  });\n}\n\nfunction onFunction(id, name, listener) {\n  var on0, on1, sit = start(name) ? init : set;\n  return function() {\n    var schedule = sit(this, id),\n        on = schedule.on;\n\n    // If this node shared a dispatch with the previous node,\n    // just assign the updated shared dispatch and we’re done!\n    // Otherwise, copy-on-write.\n    if (on !== on0) (on1 = (on0 = on).copy()).on(name, listener);\n\n    schedule.on = on1;\n  };\n}\n\nexport default function(name, listener) {\n  var id = this._id;\n\n  return arguments.length < 2\n      ? get(this.node(), id).on.on(name)\n      : this.each(onFunction(id, name, listener));\n}\n","import {interpolateTransformSvg as interpolateTransform} from \"d3-interpolate\";\nimport {namespace} from \"d3-selection\";\nimport {tweenValue} from \"./tween\";\nimport interpolate from \"./interpolate\";\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, interpolate, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = this.getAttribute(name);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value1);\n  };\n}\n\nfunction attrConstantNS(fullname, interpolate, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = this.getAttributeNS(fullname.space, fullname.local);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value1);\n  };\n}\n\nfunction attrFunction(name, interpolate, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0, value1 = value(this);\n    if (value1 == null) return void this.removeAttribute(name);\n    value0 = this.getAttribute(name);\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value10 = value1);\n  };\n}\n\nfunction attrFunctionNS(fullname, interpolate, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0, value1 = value(this);\n    if (value1 == null) return void this.removeAttributeNS(fullname.space, fullname.local);\n    value0 = this.getAttributeNS(fullname.space, fullname.local);\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value10 = value1);\n  };\n}\n\nexport default function(name, value) {\n  var fullname = namespace(name), i = fullname === \"transform\" ? interpolateTransform : interpolate;\n  return this.attrTween(name, typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)(fullname, i, tweenValue(this, \"attr.\" + name, value))\n      : value == null ? (fullname.local ? attrRemoveNS : attrRemove)(fullname)\n      : (fullname.local ? attrConstantNS : attrConstant)(fullname, i, value + \"\"));\n}\n","import {namespace} from \"d3-selection\";\n\nfunction attrTweenNS(fullname, value) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.setAttributeNS(fullname.space, fullname.local, i(t));\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nfunction attrTween(name, value) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.setAttribute(name, i(t));\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nexport default function(name, value) {\n  var key = \"attr.\" + name;\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  var fullname = namespace(name);\n  return this.tween(key, (fullname.local ? attrTweenNS : attrTween)(fullname, value));\n}\n","import {interpolateTransformCss as interpolateTransform} from \"d3-interpolate\";\nimport {style} from \"d3-selection\";\nimport {tweenValue} from \"./tween\";\nimport interpolate from \"./interpolate\";\n\nfunction styleRemove(name, interpolate) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0 = style(this, name),\n        value1 = (this.style.removeProperty(name), style(this, name));\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value10 = value1);\n  };\n}\n\nfunction styleRemoveEnd(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, interpolate, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = style(this, name);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value1);\n  };\n}\n\nfunction styleFunction(name, interpolate, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0 = style(this, name),\n        value1 = value(this);\n    if (value1 == null) value1 = (this.style.removeProperty(name), style(this, name));\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value10 = value1);\n  };\n}\n\nexport default function(name, value, priority) {\n  var i = (name += \"\") === \"transform\" ? interpolateTransform : interpolate;\n  return value == null ? this\n          .styleTween(name, styleRemove(name, i))\n          .on(\"end.style.\" + name, styleRemoveEnd(name))\n      : this.styleTween(name, typeof value === \"function\"\n          ? styleFunction(name, i, tweenValue(this, \"style.\" + name, value))\n          : styleConstant(name, i, value + \"\"), priority);\n}\n","function styleTween(name, value, priority) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.style.setProperty(name, i(t), priority);\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nexport default function(name, value, priority) {\n  var key = \"style.\" + (name += \"\");\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  return this.tween(key, styleTween(name, value, priority == null ? \"\" : priority));\n}\n","import {get, init} from \"./schedule\";\n\nfunction delayFunction(id, value) {\n  return function() {\n    init(this, id).delay = +value.apply(this, arguments);\n  };\n}\n\nfunction delayConstant(id, value) {\n  return value = +value, function() {\n    init(this, id).delay = value;\n  };\n}\n\nexport default function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? delayFunction\n          : delayConstant)(id, value))\n      : get(this.node(), id).delay;\n}\n","import {get, set} from \"./schedule\";\n\nfunction durationFunction(id, value) {\n  return function() {\n    set(this, id).duration = +value.apply(this, arguments);\n  };\n}\n\nfunction durationConstant(id, value) {\n  return value = +value, function() {\n    set(this, id).duration = value;\n  };\n}\n\nexport default function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? durationFunction\n          : durationConstant)(id, value))\n      : get(this.node(), id).duration;\n}\n","import {get, set} from \"./schedule\";\n\nfunction easeConstant(id, value) {\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    set(this, id).ease = value;\n  };\n}\n\nexport default function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each(easeConstant(id, value))\n      : get(this.node(), id).ease;\n}\n","import {Transition, newId} from \"../transition/index\";\nimport schedule from \"../transition/schedule\";\nimport {easeCubicInOut} from \"d3-ease\";\nimport {now} from \"d3-timer\";\n\nvar defaultTiming = {\n  time: null, // Set on use.\n  delay: 0,\n  duration: 250,\n  ease: easeCubicInOut\n};\n\nfunction inherit(node, id) {\n  var timing;\n  while (!(timing = node.__transition) || !(timing = timing[id])) {\n    if (!(node = node.parentNode)) {\n      return defaultTiming.time = now(), defaultTiming;\n    }\n  }\n  return timing;\n}\n\nexport default function(name) {\n  var id,\n      timing;\n\n  if (name instanceof Transition) {\n    id = name._id, name = name._name;\n  } else {\n    id = newId(), (timing = defaultTiming).time = now(), name = name == null ? null : name + \"\";\n  }\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        schedule(node, name, id, i, group, timing || inherit(node, id));\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id);\n}\n","import {selection} from \"d3-selection\";\nimport selection_interrupt from \"./interrupt\";\nimport selection_transition from \"./transition\";\n\nselection.prototype.interrupt = selection_interrupt;\nselection.prototype.transition = selection_transition;\n","import interrupt from \"../interrupt\";\n\nexport default function(name) {\n  return this.each(function() {\n    interrupt(this, name);\n  });\n}\n","import {Transition} from \"./transition/index\";\nimport {SCHEDULED} from \"./transition/schedule\";\n\nvar root = [null];\n\nexport default function(node, name) {\n  var schedules = node.__transition,\n      schedule,\n      i;\n\n  if (schedules) {\n    name = name == null ? null : name + \"\";\n    for (i in schedules) {\n      if ((schedule = schedules[i]).state > SCHEDULED && schedule.name === name) {\n        return new Transition([[node]], root, name, +i);\n      }\n    }\n  }\n\n  return null;\n}\n","import {event} from \"d3-selection\";\n\nexport function nopropagation() {\n  event.stopImmediatePropagation();\n}\n\nexport default function() {\n  event.preventDefault();\n  event.stopImmediatePropagation();\n}\n","import {select} from \"d3-selection\";\nimport noevent from \"./noevent\";\n\nexport default function(view) {\n  var root = view.document.documentElement,\n      selection = select(view).on(\"dragstart.drag\", noevent, true);\n  if (\"onselectstart\" in root) {\n    selection.on(\"selectstart.drag\", noevent, true);\n  } else {\n    root.__noselect = root.style.MozUserSelect;\n    root.style.MozUserSelect = \"none\";\n  }\n}\n\nexport function yesdrag(view, noclick) {\n  var root = view.document.documentElement,\n      selection = select(view).on(\"dragstart.drag\", null);\n  if (noclick) {\n    selection.on(\"click.drag\", noevent, true);\n    setTimeout(function() { selection.on(\"click.drag\", null); }, 0);\n  }\n  if (\"onselectstart\" in root) {\n    selection.on(\"selectstart.drag\", null);\n  } else {\n    root.style.MozUserSelect = root.__noselect;\n    delete root.__noselect;\n  }\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function DragEvent(target, type, subject, id, active, x, y, dx, dy, dispatch) {\n  this.target = target;\n  this.type = type;\n  this.subject = subject;\n  this.identifier = id;\n  this.active = active;\n  this.x = x;\n  this.y = y;\n  this.dx = dx;\n  this.dy = dy;\n  this._ = dispatch;\n}\n\nDragEvent.prototype.on = function() {\n  var value = this._.on.apply(this._, arguments);\n  return value === this._ ? this : value;\n};\n","import {dispatch} from \"d3-dispatch\";\nimport {event, customEvent, select, mouse, touch} from \"d3-selection\";\nimport nodrag, {yesdrag} from \"./nodrag\";\nimport noevent, {nopropagation} from \"./noevent\";\nimport constant from \"./constant\";\nimport DragEvent from \"./event\";\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter() {\n  return !event.button;\n}\n\nfunction defaultContainer() {\n  return this.parentNode;\n}\n\nfunction defaultSubject(d) {\n  return d == null ? {x: event.x, y: event.y} : d;\n}\n\nfunction defaultTouchable() {\n  return \"ontouchstart\" in this;\n}\n\nexport default function() {\n  var filter = defaultFilter,\n      container = defaultContainer,\n      subject = defaultSubject,\n      touchable = defaultTouchable,\n      gestures = {},\n      listeners = dispatch(\"start\", \"drag\", \"end\"),\n      active = 0,\n      mousedownx,\n      mousedowny,\n      mousemoving,\n      touchending,\n      clickDistance2 = 0;\n\n  function drag(selection) {\n    selection\n        .on(\"mousedown.drag\", mousedowned)\n      .filter(touchable)\n        .on(\"touchstart.drag\", touchstarted)\n        .on(\"touchmove.drag\", touchmoved)\n        .on(\"touchend.drag touchcancel.drag\", touchended)\n        .style(\"touch-action\", \"none\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n  }\n\n  function mousedowned() {\n    if (touchending || !filter.apply(this, arguments)) return;\n    var gesture = beforestart(\"mouse\", container.apply(this, arguments), mouse, this, arguments);\n    if (!gesture) return;\n    select(event.view).on(\"mousemove.drag\", mousemoved, true).on(\"mouseup.drag\", mouseupped, true);\n    nodrag(event.view);\n    nopropagation();\n    mousemoving = false;\n    mousedownx = event.clientX;\n    mousedowny = event.clientY;\n    gesture(\"start\");\n  }\n\n  function mousemoved() {\n    noevent();\n    if (!mousemoving) {\n      var dx = event.clientX - mousedownx, dy = event.clientY - mousedowny;\n      mousemoving = dx * dx + dy * dy > clickDistance2;\n    }\n    gestures.mouse(\"drag\");\n  }\n\n  function mouseupped() {\n    select(event.view).on(\"mousemove.drag mouseup.drag\", null);\n    yesdrag(event.view, mousemoving);\n    noevent();\n    gestures.mouse(\"end\");\n  }\n\n  function touchstarted() {\n    if (!filter.apply(this, arguments)) return;\n    var touches = event.changedTouches,\n        c = container.apply(this, arguments),\n        n = touches.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = beforestart(touches[i].identifier, c, touch, this, arguments)) {\n        nopropagation();\n        gesture(\"start\");\n      }\n    }\n  }\n\n  function touchmoved() {\n    var touches = event.changedTouches,\n        n = touches.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches[i].identifier]) {\n        noevent();\n        gesture(\"drag\");\n      }\n    }\n  }\n\n  function touchended() {\n    var touches = event.changedTouches,\n        n = touches.length, i, gesture;\n\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches[i].identifier]) {\n        nopropagation();\n        gesture(\"end\");\n      }\n    }\n  }\n\n  function beforestart(id, container, point, that, args) {\n    var p = point(container, id), s, dx, dy,\n        sublisteners = listeners.copy();\n\n    if (!customEvent(new DragEvent(drag, \"beforestart\", s, id, active, p[0], p[1], 0, 0, sublisteners), function() {\n      if ((event.subject = s = subject.apply(that, args)) == null) return false;\n      dx = s.x - p[0] || 0;\n      dy = s.y - p[1] || 0;\n      return true;\n    })) return;\n\n    return function gesture(type) {\n      var p0 = p, n;\n      switch (type) {\n        case \"start\": gestures[id] = gesture, n = active++; break;\n        case \"end\": delete gestures[id], --active; // nobreak\n        case \"drag\": p = point(container, id), n = active; break;\n      }\n      customEvent(new DragEvent(drag, type, s, id, n, p[0] + dx, p[1] + dy, p[0] - p0[0], p[1] - p0[1], sublisteners), sublisteners.apply, sublisteners, [type, that, args]);\n    };\n  }\n\n  drag.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant(!!_), drag) : filter;\n  };\n\n  drag.container = function(_) {\n    return arguments.length ? (container = typeof _ === \"function\" ? _ : constant(_), drag) : container;\n  };\n\n  drag.subject = function(_) {\n    return arguments.length ? (subject = typeof _ === \"function\" ? _ : constant(_), drag) : subject;\n  };\n\n  drag.touchable = function(_) {\n    return arguments.length ? (touchable = typeof _ === \"function\" ? _ : constant(!!_), drag) : touchable;\n  };\n\n  drag.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? drag : value;\n  };\n\n  drag.clickDistance = function(_) {\n    return arguments.length ? (clickDistance2 = (_ = +_) * _, drag) : Math.sqrt(clickDistance2);\n  };\n\n  return drag;\n}\n","import {\n  timeDay,\n  timeSunday,\n  timeMonday,\n  timeThursday,\n  timeYear,\n  utcDay,\n  utcSunday,\n  utcMonday,\n  utcThursday,\n  utcYear\n} from \"d3-time\";\n\nfunction localDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);\n    date.setFullYear(d.y);\n    return date;\n  }\n  return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);\n}\n\nfunction utcDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));\n    date.setUTCFullYear(d.y);\n    return date;\n  }\n  return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));\n}\n\nfunction newYear(y) {\n  return {y: y, m: 0, d: 1, H: 0, M: 0, S: 0, L: 0};\n}\n\nexport default function formatLocale(locale) {\n  var locale_dateTime = locale.dateTime,\n      locale_date = locale.date,\n      locale_time = locale.time,\n      locale_periods = locale.periods,\n      locale_weekdays = locale.days,\n      locale_shortWeekdays = locale.shortDays,\n      locale_months = locale.months,\n      locale_shortMonths = locale.shortMonths;\n\n  var periodRe = formatRe(locale_periods),\n      periodLookup = formatLookup(locale_periods),\n      weekdayRe = formatRe(locale_weekdays),\n      weekdayLookup = formatLookup(locale_weekdays),\n      shortWeekdayRe = formatRe(locale_shortWeekdays),\n      shortWeekdayLookup = formatLookup(locale_shortWeekdays),\n      monthRe = formatRe(locale_months),\n      monthLookup = formatLookup(locale_months),\n      shortMonthRe = formatRe(locale_shortMonths),\n      shortMonthLookup = formatLookup(locale_shortMonths);\n\n  var formats = {\n    \"a\": formatShortWeekday,\n    \"A\": formatWeekday,\n    \"b\": formatShortMonth,\n    \"B\": formatMonth,\n    \"c\": null,\n    \"d\": formatDayOfMonth,\n    \"e\": formatDayOfMonth,\n    \"f\": formatMicroseconds,\n    \"H\": formatHour24,\n    \"I\": formatHour12,\n    \"j\": formatDayOfYear,\n    \"L\": formatMilliseconds,\n    \"m\": formatMonthNumber,\n    \"M\": formatMinutes,\n    \"p\": formatPeriod,\n    \"Q\": formatUnixTimestamp,\n    \"s\": formatUnixTimestampSeconds,\n    \"S\": formatSeconds,\n    \"u\": formatWeekdayNumberMonday,\n    \"U\": formatWeekNumberSunday,\n    \"V\": formatWeekNumberISO,\n    \"w\": formatWeekdayNumberSunday,\n    \"W\": formatWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatYear,\n    \"Y\": formatFullYear,\n    \"Z\": formatZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var utcFormats = {\n    \"a\": formatUTCShortWeekday,\n    \"A\": formatUTCWeekday,\n    \"b\": formatUTCShortMonth,\n    \"B\": formatUTCMonth,\n    \"c\": null,\n    \"d\": formatUTCDayOfMonth,\n    \"e\": formatUTCDayOfMonth,\n    \"f\": formatUTCMicroseconds,\n    \"H\": formatUTCHour24,\n    \"I\": formatUTCHour12,\n    \"j\": formatUTCDayOfYear,\n    \"L\": formatUTCMilliseconds,\n    \"m\": formatUTCMonthNumber,\n    \"M\": formatUTCMinutes,\n    \"p\": formatUTCPeriod,\n    \"Q\": formatUnixTimestamp,\n    \"s\": formatUnixTimestampSeconds,\n    \"S\": formatUTCSeconds,\n    \"u\": formatUTCWeekdayNumberMonday,\n    \"U\": formatUTCWeekNumberSunday,\n    \"V\": formatUTCWeekNumberISO,\n    \"w\": formatUTCWeekdayNumberSunday,\n    \"W\": formatUTCWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatUTCYear,\n    \"Y\": formatUTCFullYear,\n    \"Z\": formatUTCZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var parses = {\n    \"a\": parseShortWeekday,\n    \"A\": parseWeekday,\n    \"b\": parseShortMonth,\n    \"B\": parseMonth,\n    \"c\": parseLocaleDateTime,\n    \"d\": parseDayOfMonth,\n    \"e\": parseDayOfMonth,\n    \"f\": parseMicroseconds,\n    \"H\": parseHour24,\n    \"I\": parseHour24,\n    \"j\": parseDayOfYear,\n    \"L\": parseMilliseconds,\n    \"m\": parseMonthNumber,\n    \"M\": parseMinutes,\n    \"p\": parsePeriod,\n    \"Q\": parseUnixTimestamp,\n    \"s\": parseUnixTimestampSeconds,\n    \"S\": parseSeconds,\n    \"u\": parseWeekdayNumberMonday,\n    \"U\": parseWeekNumberSunday,\n    \"V\": parseWeekNumberISO,\n    \"w\": parseWeekdayNumberSunday,\n    \"W\": parseWeekNumberMonday,\n    \"x\": parseLocaleDate,\n    \"X\": parseLocaleTime,\n    \"y\": parseYear,\n    \"Y\": parseFullYear,\n    \"Z\": parseZone,\n    \"%\": parseLiteralPercent\n  };\n\n  // These recursive directive definitions must be deferred.\n  formats.x = newFormat(locale_date, formats);\n  formats.X = newFormat(locale_time, formats);\n  formats.c = newFormat(locale_dateTime, formats);\n  utcFormats.x = newFormat(locale_date, utcFormats);\n  utcFormats.X = newFormat(locale_time, utcFormats);\n  utcFormats.c = newFormat(locale_dateTime, utcFormats);\n\n  function newFormat(specifier, formats) {\n    return function(date) {\n      var string = [],\n          i = -1,\n          j = 0,\n          n = specifier.length,\n          c,\n          pad,\n          format;\n\n      if (!(date instanceof Date)) date = new Date(+date);\n\n      while (++i < n) {\n        if (specifier.charCodeAt(i) === 37) {\n          string.push(specifier.slice(j, i));\n          if ((pad = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);\n          else pad = c === \"e\" ? \" \" : \"0\";\n          if (format = formats[c]) c = format(date, pad);\n          string.push(c);\n          j = i + 1;\n        }\n      }\n\n      string.push(specifier.slice(j, i));\n      return string.join(\"\");\n    };\n  }\n\n  function newParse(specifier, newDate) {\n    return function(string) {\n      var d = newYear(1900),\n          i = parseSpecifier(d, specifier, string += \"\", 0),\n          week, day;\n      if (i != string.length) return null;\n\n      // If a UNIX timestamp is specified, return it.\n      if (\"Q\" in d) return new Date(d.Q);\n\n      // The am-pm flag is 0 for AM, and 1 for PM.\n      if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\n      // Convert day-of-week and week-of-year to day-of-year.\n      if (\"V\" in d) {\n        if (d.V < 1 || d.V > 53) return null;\n        if (!(\"w\" in d)) d.w = 1;\n        if (\"Z\" in d) {\n          week = utcDate(newYear(d.y)), day = week.getUTCDay();\n          week = day > 4 || day === 0 ? utcMonday.ceil(week) : utcMonday(week);\n          week = utcDay.offset(week, (d.V - 1) * 7);\n          d.y = week.getUTCFullYear();\n          d.m = week.getUTCMonth();\n          d.d = week.getUTCDate() + (d.w + 6) % 7;\n        } else {\n          week = newDate(newYear(d.y)), day = week.getDay();\n          week = day > 4 || day === 0 ? timeMonday.ceil(week) : timeMonday(week);\n          week = timeDay.offset(week, (d.V - 1) * 7);\n          d.y = week.getFullYear();\n          d.m = week.getMonth();\n          d.d = week.getDate() + (d.w + 6) % 7;\n        }\n      } else if (\"W\" in d || \"U\" in d) {\n        if (!(\"w\" in d)) d.w = \"u\" in d ? d.u % 7 : \"W\" in d ? 1 : 0;\n        day = \"Z\" in d ? utcDate(newYear(d.y)).getUTCDay() : newDate(newYear(d.y)).getDay();\n        d.m = 0;\n        d.d = \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (day + 5) % 7 : d.w + d.U * 7 - (day + 6) % 7;\n      }\n\n      // If a time zone is specified, all fields are interpreted as UTC and then\n      // offset according to the specified time zone.\n      if (\"Z\" in d) {\n        d.H += d.Z / 100 | 0;\n        d.M += d.Z % 100;\n        return utcDate(d);\n      }\n\n      // Otherwise, all fields are in local time.\n      return newDate(d);\n    };\n  }\n\n  function parseSpecifier(d, specifier, string, j) {\n    var i = 0,\n        n = specifier.length,\n        m = string.length,\n        c,\n        parse;\n\n    while (i < n) {\n      if (j >= m) return -1;\n      c = specifier.charCodeAt(i++);\n      if (c === 37) {\n        c = specifier.charAt(i++);\n        parse = parses[c in pads ? specifier.charAt(i++) : c];\n        if (!parse || ((j = parse(d, string, j)) < 0)) return -1;\n      } else if (c != string.charCodeAt(j++)) {\n        return -1;\n      }\n    }\n\n    return j;\n  }\n\n  function parsePeriod(d, string, i) {\n    var n = periodRe.exec(string.slice(i));\n    return n ? (d.p = periodLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortWeekday(d, string, i) {\n    var n = shortWeekdayRe.exec(string.slice(i));\n    return n ? (d.w = shortWeekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseWeekday(d, string, i) {\n    var n = weekdayRe.exec(string.slice(i));\n    return n ? (d.w = weekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortMonth(d, string, i) {\n    var n = shortMonthRe.exec(string.slice(i));\n    return n ? (d.m = shortMonthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseMonth(d, string, i) {\n    var n = monthRe.exec(string.slice(i));\n    return n ? (d.m = monthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseLocaleDateTime(d, string, i) {\n    return parseSpecifier(d, locale_dateTime, string, i);\n  }\n\n  function parseLocaleDate(d, string, i) {\n    return parseSpecifier(d, locale_date, string, i);\n  }\n\n  function parseLocaleTime(d, string, i) {\n    return parseSpecifier(d, locale_time, string, i);\n  }\n\n  function formatShortWeekday(d) {\n    return locale_shortWeekdays[d.getDay()];\n  }\n\n  function formatWeekday(d) {\n    return locale_weekdays[d.getDay()];\n  }\n\n  function formatShortMonth(d) {\n    return locale_shortMonths[d.getMonth()];\n  }\n\n  function formatMonth(d) {\n    return locale_months[d.getMonth()];\n  }\n\n  function formatPeriod(d) {\n    return locale_periods[+(d.getHours() >= 12)];\n  }\n\n  function formatUTCShortWeekday(d) {\n    return locale_shortWeekdays[d.getUTCDay()];\n  }\n\n  function formatUTCWeekday(d) {\n    return locale_weekdays[d.getUTCDay()];\n  }\n\n  function formatUTCShortMonth(d) {\n    return locale_shortMonths[d.getUTCMonth()];\n  }\n\n  function formatUTCMonth(d) {\n    return locale_months[d.getUTCMonth()];\n  }\n\n  function formatUTCPeriod(d) {\n    return locale_periods[+(d.getUTCHours() >= 12)];\n  }\n\n  return {\n    format: function(specifier) {\n      var f = newFormat(specifier += \"\", formats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    parse: function(specifier) {\n      var p = newParse(specifier += \"\", localDate);\n      p.toString = function() { return specifier; };\n      return p;\n    },\n    utcFormat: function(specifier) {\n      var f = newFormat(specifier += \"\", utcFormats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    utcParse: function(specifier) {\n      var p = newParse(specifier, utcDate);\n      p.toString = function() { return specifier; };\n      return p;\n    }\n  };\n}\n\nvar pads = {\"-\": \"\", \"_\": \" \", \"0\": \"0\"},\n    numberRe = /^\\s*\\d+/, // note: ignores next directive\n    percentRe = /^%/,\n    requoteRe = /[\\\\^$*+?|[\\]().{}]/g;\n\nfunction pad(value, fill, width) {\n  var sign = value < 0 ? \"-\" : \"\",\n      string = (sign ? -value : value) + \"\",\n      length = string.length;\n  return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n}\n\nfunction requote(s) {\n  return s.replace(requoteRe, \"\\\\$&\");\n}\n\nfunction formatRe(names) {\n  return new RegExp(\"^(?:\" + names.map(requote).join(\"|\") + \")\", \"i\");\n}\n\nfunction formatLookup(names) {\n  var map = {}, i = -1, n = names.length;\n  while (++i < n) map[names[i].toLowerCase()] = i;\n  return map;\n}\n\nfunction parseWeekdayNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.w = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekdayNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.u = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.U = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberISO(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.V = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.W = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseFullYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 4));\n  return n ? (d.y = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;\n}\n\nfunction parseZone(d, string, i) {\n  var n = /^(Z)|([+-]\\d\\d)(?::?(\\d\\d))?/.exec(string.slice(i, i + 6));\n  return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || \"00\")), i + n[0].length) : -1;\n}\n\nfunction parseMonthNumber(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.m = n[0] - 1, i + n[0].length) : -1;\n}\n\nfunction parseDayOfMonth(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseDayOfYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseHour24(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.H = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMinutes(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.M = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.S = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMilliseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.L = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMicroseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 6));\n  return n ? (d.L = Math.floor(n[0] / 1000), i + n[0].length) : -1;\n}\n\nfunction parseLiteralPercent(d, string, i) {\n  var n = percentRe.exec(string.slice(i, i + 1));\n  return n ? i + n[0].length : -1;\n}\n\nfunction parseUnixTimestamp(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.Q = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseUnixTimestampSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.Q = (+n[0]) * 1000, i + n[0].length) : -1;\n}\n\nfunction formatDayOfMonth(d, p) {\n  return pad(d.getDate(), p, 2);\n}\n\nfunction formatHour24(d, p) {\n  return pad(d.getHours(), p, 2);\n}\n\nfunction formatHour12(d, p) {\n  return pad(d.getHours() % 12 || 12, p, 2);\n}\n\nfunction formatDayOfYear(d, p) {\n  return pad(1 + timeDay.count(timeYear(d), d), p, 3);\n}\n\nfunction formatMilliseconds(d, p) {\n  return pad(d.getMilliseconds(), p, 3);\n}\n\nfunction formatMicroseconds(d, p) {\n  return formatMilliseconds(d, p) + \"000\";\n}\n\nfunction formatMonthNumber(d, p) {\n  return pad(d.getMonth() + 1, p, 2);\n}\n\nfunction formatMinutes(d, p) {\n  return pad(d.getMinutes(), p, 2);\n}\n\nfunction formatSeconds(d, p) {\n  return pad(d.getSeconds(), p, 2);\n}\n\nfunction formatWeekdayNumberMonday(d) {\n  var day = d.getDay();\n  return day === 0 ? 7 : day;\n}\n\nfunction formatWeekNumberSunday(d, p) {\n  return pad(timeSunday.count(timeYear(d), d), p, 2);\n}\n\nfunction formatWeekNumberISO(d, p) {\n  var day = d.getDay();\n  d = (day >= 4 || day === 0) ? timeThursday(d) : timeThursday.ceil(d);\n  return pad(timeThursday.count(timeYear(d), d) + (timeYear(d).getDay() === 4), p, 2);\n}\n\nfunction formatWeekdayNumberSunday(d) {\n  return d.getDay();\n}\n\nfunction formatWeekNumberMonday(d, p) {\n  return pad(timeMonday.count(timeYear(d), d), p, 2);\n}\n\nfunction formatYear(d, p) {\n  return pad(d.getFullYear() % 100, p, 2);\n}\n\nfunction formatFullYear(d, p) {\n  return pad(d.getFullYear() % 10000, p, 4);\n}\n\nfunction formatZone(d) {\n  var z = d.getTimezoneOffset();\n  return (z > 0 ? \"-\" : (z *= -1, \"+\"))\n      + pad(z / 60 | 0, \"0\", 2)\n      + pad(z % 60, \"0\", 2);\n}\n\nfunction formatUTCDayOfMonth(d, p) {\n  return pad(d.getUTCDate(), p, 2);\n}\n\nfunction formatUTCHour24(d, p) {\n  return pad(d.getUTCHours(), p, 2);\n}\n\nfunction formatUTCHour12(d, p) {\n  return pad(d.getUTCHours() % 12 || 12, p, 2);\n}\n\nfunction formatUTCDayOfYear(d, p) {\n  return pad(1 + utcDay.count(utcYear(d), d), p, 3);\n}\n\nfunction formatUTCMilliseconds(d, p) {\n  return pad(d.getUTCMilliseconds(), p, 3);\n}\n\nfunction formatUTCMicroseconds(d, p) {\n  return formatUTCMilliseconds(d, p) + \"000\";\n}\n\nfunction formatUTCMonthNumber(d, p) {\n  return pad(d.getUTCMonth() + 1, p, 2);\n}\n\nfunction formatUTCMinutes(d, p) {\n  return pad(d.getUTCMinutes(), p, 2);\n}\n\nfunction formatUTCSeconds(d, p) {\n  return pad(d.getUTCSeconds(), p, 2);\n}\n\nfunction formatUTCWeekdayNumberMonday(d) {\n  var dow = d.getUTCDay();\n  return dow === 0 ? 7 : dow;\n}\n\nfunction formatUTCWeekNumberSunday(d, p) {\n  return pad(utcSunday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCWeekNumberISO(d, p) {\n  var day = d.getUTCDay();\n  d = (day >= 4 || day === 0) ? utcThursday(d) : utcThursday.ceil(d);\n  return pad(utcThursday.count(utcYear(d), d) + (utcYear(d).getUTCDay() === 4), p, 2);\n}\n\nfunction formatUTCWeekdayNumberSunday(d) {\n  return d.getUTCDay();\n}\n\nfunction formatUTCWeekNumberMonday(d, p) {\n  return pad(utcMonday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCYear(d, p) {\n  return pad(d.getUTCFullYear() % 100, p, 2);\n}\n\nfunction formatUTCFullYear(d, p) {\n  return pad(d.getUTCFullYear() % 10000, p, 4);\n}\n\nfunction formatUTCZone() {\n  return \"+0000\";\n}\n\nfunction formatLiteralPercent() {\n  return \"%\";\n}\n\nfunction formatUnixTimestamp(d) {\n  return +d;\n}\n\nfunction formatUnixTimestampSeconds(d) {\n  return Math.floor(+d / 1000);\n}\n","import formatLocale from \"./locale\";\n\nvar locale;\nexport var timeFormat;\nexport var timeParse;\nexport var utcFormat;\nexport var utcParse;\n\ndefaultLocale({\n  dateTime: \"%x, %X\",\n  date: \"%-m/%-d/%Y\",\n  time: \"%-I:%M:%S %p\",\n  periods: [\"AM\", \"PM\"],\n  days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n  shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n  months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n  shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n});\n\nexport default function defaultLocale(definition) {\n  locale = formatLocale(definition);\n  timeFormat = locale.format;\n  timeParse = locale.parse;\n  utcFormat = locale.utcFormat;\n  utcParse = locale.utcParse;\n  return locale;\n}\n","import {utcFormat} from \"./defaultLocale\";\n\nexport var isoSpecifier = \"%Y-%m-%dT%H:%M:%S.%LZ\";\n\nfunction formatIsoNative(date) {\n  return date.toISOString();\n}\n\nvar formatIso = Date.prototype.toISOString\n    ? formatIsoNative\n    : utcFormat(isoSpecifier);\n\nexport default formatIso;\n","import {isoSpecifier} from \"./isoFormat\";\nimport {utcParse} from \"./defaultLocale\";\n\nfunction parseIsoNative(string) {\n  var date = new Date(string);\n  return isNaN(date) ? null : date;\n}\n\nvar parseIso = +new Date(\"2000-01-01T00:00:00.000Z\")\n    ? parseIsoNative\n    : utcParse(isoSpecifier);\n\nexport default parseIso;\n","export default function(d) {\n  var x = +this._x.call(null, d),\n      y = +this._y.call(null, d);\n  return add(this.cover(x, y), x, y, d);\n}\n\nfunction add(tree, x, y, d) {\n  if (isNaN(x) || isNaN(y)) return tree; // ignore invalid points\n\n  var parent,\n      node = tree._root,\n      leaf = {data: d},\n      x0 = tree._x0,\n      y0 = tree._y0,\n      x1 = tree._x1,\n      y1 = tree._y1,\n      xm,\n      ym,\n      xp,\n      yp,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return tree._root = leaf, tree;\n\n  // Find the existing leaf for the new point, or add it.\n  while (node.length) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (parent = node, !(node = node[i = bottom << 1 | right])) return parent[i] = leaf, tree;\n  }\n\n  // Is the new point is exactly coincident with the existing point?\n  xp = +tree._x.call(null, node.data);\n  yp = +tree._y.call(null, node.data);\n  if (x === xp && y === yp) return leaf.next = node, parent ? parent[i] = leaf : tree._root = leaf, tree;\n\n  // Otherwise, split the leaf node until the old and new point are separated.\n  do {\n    parent = parent ? parent[i] = new Array(4) : tree._root = new Array(4);\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n  } while ((i = bottom << 1 | right) === (j = (yp >= ym) << 1 | (xp >= xm)));\n  return parent[j] = node, parent[i] = leaf, tree;\n}\n\nexport function addAll(data) {\n  var d, i, n = data.length,\n      x,\n      y,\n      xz = new Array(n),\n      yz = new Array(n),\n      x0 = Infinity,\n      y0 = Infinity,\n      x1 = -Infinity,\n      y1 = -Infinity;\n\n  // Compute the points and their extent.\n  for (i = 0; i < n; ++i) {\n    if (isNaN(x = +this._x.call(null, d = data[i])) || isNaN(y = +this._y.call(null, d))) continue;\n    xz[i] = x;\n    yz[i] = y;\n    if (x < x0) x0 = x;\n    if (x > x1) x1 = x;\n    if (y < y0) y0 = y;\n    if (y > y1) y1 = y;\n  }\n\n  // If there were no (valid) points, inherit the existing extent.\n  if (x1 < x0) x0 = this._x0, x1 = this._x1;\n  if (y1 < y0) y0 = this._y0, y1 = this._y1;\n\n  // Expand the tree to cover the new points.\n  this.cover(x0, y0).cover(x1, y1);\n\n  // Add the new points.\n  for (i = 0; i < n; ++i) {\n    add(this, xz[i], yz[i], data[i]);\n  }\n\n  return this;\n}\n","export default function(x, y) {\n  if (isNaN(x = +x) || isNaN(y = +y)) return this; // ignore invalid points\n\n  var x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1;\n\n  // If the quadtree has no extent, initialize them.\n  // Integer extent are necessary so that if we later double the extent,\n  // the existing quadrant boundaries don’t change due to floating point error!\n  if (isNaN(x0)) {\n    x1 = (x0 = Math.floor(x)) + 1;\n    y1 = (y0 = Math.floor(y)) + 1;\n  }\n\n  // Otherwise, double repeatedly to cover.\n  else if (x0 > x || x > x1 || y0 > y || y > y1) {\n    var z = x1 - x0,\n        node = this._root,\n        parent,\n        i;\n\n    switch (i = (y < (y0 + y1) / 2) << 1 | (x < (x0 + x1) / 2)) {\n      case 0: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x1 = x0 + z, y1 = y0 + z, x > x1 || y > y1);\n        break;\n      }\n      case 1: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x0 = x1 - z, y1 = y0 + z, x0 > x || y > y1);\n        break;\n      }\n      case 2: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x1 = x0 + z, y0 = y1 - z, x > x1 || y0 > y);\n        break;\n      }\n      case 3: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x0 = x1 - z, y0 = y1 - z, x0 > x || y0 > y);\n        break;\n      }\n    }\n\n    if (this._root && this._root.length) this._root = node;\n  }\n\n  // If the quadtree covers the point already, just return.\n  else return this;\n\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  return this;\n}\n","export default function(node, x0, y0, x1, y1) {\n  this.node = node;\n  this.x0 = x0;\n  this.y0 = y0;\n  this.x1 = x1;\n  this.y1 = y1;\n}\n","export function defaultX(d) {\n  return d[0];\n}\n\nexport default function(_) {\n  return arguments.length ? (this._x = _, this) : this._x;\n}\n","export function defaultY(d) {\n  return d[1];\n}\n\nexport default function(_) {\n  return arguments.length ? (this._y = _, this) : this._y;\n}\n","import tree_add, {addAll as tree_addAll} from \"./add\";\nimport tree_cover from \"./cover\";\nimport tree_data from \"./data\";\nimport tree_extent from \"./extent\";\nimport tree_find from \"./find\";\nimport tree_remove, {removeAll as tree_removeAll} from \"./remove\";\nimport tree_root from \"./root\";\nimport tree_size from \"./size\";\nimport tree_visit from \"./visit\";\nimport tree_visitAfter from \"./visitAfter\";\nimport tree_x, {defaultX} from \"./x\";\nimport tree_y, {defaultY} from \"./y\";\n\nexport default function quadtree(nodes, x, y) {\n  var tree = new Quadtree(x == null ? defaultX : x, y == null ? defaultY : y, NaN, NaN, NaN, NaN);\n  return nodes == null ? tree : tree.addAll(nodes);\n}\n\nfunction Quadtree(x, y, x0, y0, x1, y1) {\n  this._x = x;\n  this._y = y;\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  this._root = undefined;\n}\n\nfunction leaf_copy(leaf) {\n  var copy = {data: leaf.data}, next = copy;\n  while (leaf = leaf.next) next = next.next = {data: leaf.data};\n  return copy;\n}\n\nvar treeProto = quadtree.prototype = Quadtree.prototype;\n\ntreeProto.copy = function() {\n  var copy = new Quadtree(this._x, this._y, this._x0, this._y0, this._x1, this._y1),\n      node = this._root,\n      nodes,\n      child;\n\n  if (!node) return copy;\n\n  if (!node.length) return copy._root = leaf_copy(node), copy;\n\n  nodes = [{source: node, target: copy._root = new Array(4)}];\n  while (node = nodes.pop()) {\n    for (var i = 0; i < 4; ++i) {\n      if (child = node.source[i]) {\n        if (child.length) nodes.push({source: child, target: node.target[i] = new Array(4)});\n        else node.target[i] = leaf_copy(child);\n      }\n    }\n  }\n\n  return copy;\n};\n\ntreeProto.add = tree_add;\ntreeProto.addAll = tree_addAll;\ntreeProto.cover = tree_cover;\ntreeProto.data = tree_data;\ntreeProto.extent = tree_extent;\ntreeProto.find = tree_find;\ntreeProto.remove = tree_remove;\ntreeProto.removeAll = tree_removeAll;\ntreeProto.root = tree_root;\ntreeProto.size = tree_size;\ntreeProto.visit = tree_visit;\ntreeProto.visitAfter = tree_visitAfter;\ntreeProto.x = tree_x;\ntreeProto.y = tree_y;\n","export default function() {\n  var data = [];\n  this.visit(function(node) {\n    if (!node.length) do data.push(node.data); while (node = node.next)\n  });\n  return data;\n}\n","export default function(_) {\n  return arguments.length\n      ? this.cover(+_[0][0], +_[0][1]).cover(+_[1][0], +_[1][1])\n      : isNaN(this._x0) ? undefined : [[this._x0, this._y0], [this._x1, this._y1]];\n}\n","import Quad from \"./quad\";\n\nexport default function(x, y, radius) {\n  var data,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1,\n      y1,\n      x2,\n      y2,\n      x3 = this._x1,\n      y3 = this._y1,\n      quads = [],\n      node = this._root,\n      q,\n      i;\n\n  if (node) quads.push(new Quad(node, x0, y0, x3, y3));\n  if (radius == null) radius = Infinity;\n  else {\n    x0 = x - radius, y0 = y - radius;\n    x3 = x + radius, y3 = y + radius;\n    radius *= radius;\n  }\n\n  while (q = quads.pop()) {\n\n    // Stop searching if this quadrant can’t contain a closer node.\n    if (!(node = q.node)\n        || (x1 = q.x0) > x3\n        || (y1 = q.y0) > y3\n        || (x2 = q.x1) < x0\n        || (y2 = q.y1) < y0) continue;\n\n    // Bisect the current quadrant.\n    if (node.length) {\n      var xm = (x1 + x2) / 2,\n          ym = (y1 + y2) / 2;\n\n      quads.push(\n        new Quad(node[3], xm, ym, x2, y2),\n        new Quad(node[2], x1, ym, xm, y2),\n        new Quad(node[1], xm, y1, x2, ym),\n        new Quad(node[0], x1, y1, xm, ym)\n      );\n\n      // Visit the closest quadrant first.\n      if (i = (y >= ym) << 1 | (x >= xm)) {\n        q = quads[quads.length - 1];\n        quads[quads.length - 1] = quads[quads.length - 1 - i];\n        quads[quads.length - 1 - i] = q;\n      }\n    }\n\n    // Visit this point. (Visiting coincident points isn’t necessary!)\n    else {\n      var dx = x - +this._x.call(null, node.data),\n          dy = y - +this._y.call(null, node.data),\n          d2 = dx * dx + dy * dy;\n      if (d2 < radius) {\n        var d = Math.sqrt(radius = d2);\n        x0 = x - d, y0 = y - d;\n        x3 = x + d, y3 = y + d;\n        data = node.data;\n      }\n    }\n  }\n\n  return data;\n}\n","export default function(d) {\n  if (isNaN(x = +this._x.call(null, d)) || isNaN(y = +this._y.call(null, d))) return this; // ignore invalid points\n\n  var parent,\n      node = this._root,\n      retainer,\n      previous,\n      next,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1,\n      x,\n      y,\n      xm,\n      ym,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return this;\n\n  // Find the leaf node for the point.\n  // While descending, also retain the deepest parent with a non-removed sibling.\n  if (node.length) while (true) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (!(parent = node, node = node[i = bottom << 1 | right])) return this;\n    if (!node.length) break;\n    if (parent[(i + 1) & 3] || parent[(i + 2) & 3] || parent[(i + 3) & 3]) retainer = parent, j = i;\n  }\n\n  // Find the point to remove.\n  while (node.data !== d) if (!(previous = node, node = node.next)) return this;\n  if (next = node.next) delete node.next;\n\n  // If there are multiple coincident points, remove just the point.\n  if (previous) return (next ? previous.next = next : delete previous.next), this;\n\n  // If this is the root point, remove it.\n  if (!parent) return this._root = next, this;\n\n  // Remove this leaf.\n  next ? parent[i] = next : delete parent[i];\n\n  // If the parent now contains exactly one leaf, collapse superfluous parents.\n  if ((node = parent[0] || parent[1] || parent[2] || parent[3])\n      && node === (parent[3] || parent[2] || parent[1] || parent[0])\n      && !node.length) {\n    if (retainer) retainer[j] = node;\n    else this._root = node;\n  }\n\n  return this;\n}\n\nexport function removeAll(data) {\n  for (var i = 0, n = data.length; i < n; ++i) this.remove(data[i]);\n  return this;\n}\n","export default function() {\n  return this._root;\n}\n","export default function() {\n  var size = 0;\n  this.visit(function(node) {\n    if (!node.length) do ++size; while (node = node.next)\n  });\n  return size;\n}\n","import Quad from \"./quad\";\n\nexport default function(callback) {\n  var quads = [], q, node = this._root, child, x0, y0, x1, y1;\n  if (node) quads.push(new Quad(node, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    if (!callback(node = q.node, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1) && node.length) {\n      var xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n    }\n  }\n  return this;\n}\n","import Quad from \"./quad\";\n\nexport default function(callback) {\n  var quads = [], next = [], q;\n  if (this._root) quads.push(new Quad(this._root, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    var node = q.node;\n    if (node.length) {\n      var child, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1, xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n    }\n    next.push(q);\n  }\n  while (q = next.pop()) {\n    callback(q.node, q.x0, q.y0, q.x1, q.y1);\n  }\n  return this;\n}\n","var EOL = {},\n    EOF = {},\n    QUOTE = 34,\n    NEWLINE = 10,\n    RETURN = 13;\n\nfunction objectConverter(columns) {\n  return new Function(\"d\", \"return {\" + columns.map(function(name, i) {\n    return JSON.stringify(name) + \": d[\" + i + \"]\";\n  }).join(\",\") + \"}\");\n}\n\nfunction customConverter(columns, f) {\n  var object = objectConverter(columns);\n  return function(row, i) {\n    return f(object(row), i, columns);\n  };\n}\n\n// Compute unique columns in order of discovery.\nfunction inferColumns(rows) {\n  var columnSet = Object.create(null),\n      columns = [];\n\n  rows.forEach(function(row) {\n    for (var column in row) {\n      if (!(column in columnSet)) {\n        columns.push(columnSet[column] = column);\n      }\n    }\n  });\n\n  return columns;\n}\n\nexport default function(delimiter) {\n  var reFormat = new RegExp(\"[\\\"\" + delimiter + \"\\n\\r]\"),\n      DELIMITER = delimiter.charCodeAt(0);\n\n  function parse(text, f) {\n    var convert, columns, rows = parseRows(text, function(row, i) {\n      if (convert) return convert(row, i - 1);\n      columns = row, convert = f ? customConverter(row, f) : objectConverter(row);\n    });\n    rows.columns = columns || [];\n    return rows;\n  }\n\n  function parseRows(text, f) {\n    var rows = [], // output rows\n        N = text.length,\n        I = 0, // current character index\n        n = 0, // current line number\n        t, // current token\n        eof = N <= 0, // current token followed by EOF?\n        eol = false; // current token followed by EOL?\n\n    // Strip the trailing newline.\n    if (text.charCodeAt(N - 1) === NEWLINE) --N;\n    if (text.charCodeAt(N - 1) === RETURN) --N;\n\n    function token() {\n      if (eof) return EOF;\n      if (eol) return eol = false, EOL;\n\n      // Unescape quotes.\n      var i, j = I, c;\n      if (text.charCodeAt(j) === QUOTE) {\n        while (I++ < N && text.charCodeAt(I) !== QUOTE || text.charCodeAt(++I) === QUOTE);\n        if ((i = I) >= N) eof = true;\n        else if ((c = text.charCodeAt(I++)) === NEWLINE) eol = true;\n        else if (c === RETURN) { eol = true; if (text.charCodeAt(I) === NEWLINE) ++I; }\n        return text.slice(j + 1, i - 1).replace(/\"\"/g, \"\\\"\");\n      }\n\n      // Find next delimiter or newline.\n      while (I < N) {\n        if ((c = text.charCodeAt(i = I++)) === NEWLINE) eol = true;\n        else if (c === RETURN) { eol = true; if (text.charCodeAt(I) === NEWLINE) ++I; }\n        else if (c !== DELIMITER) continue;\n        return text.slice(j, i);\n      }\n\n      // Return last token before EOF.\n      return eof = true, text.slice(j, N);\n    }\n\n    while ((t = token()) !== EOF) {\n      var row = [];\n      while (t !== EOL && t !== EOF) row.push(t), t = token();\n      if (f && (row = f(row, n++)) == null) continue;\n      rows.push(row);\n    }\n\n    return rows;\n  }\n\n  function format(rows, columns) {\n    if (columns == null) columns = inferColumns(rows);\n    return [columns.map(formatValue).join(delimiter)].concat(rows.map(function(row) {\n      return columns.map(function(column) {\n        return formatValue(row[column]);\n      }).join(delimiter);\n    })).join(\"\\n\");\n  }\n\n  function formatRows(rows) {\n    return rows.map(formatRow).join(\"\\n\");\n  }\n\n  function formatRow(row) {\n    return row.map(formatValue).join(delimiter);\n  }\n\n  function formatValue(text) {\n    return text == null ? \"\"\n        : reFormat.test(text += \"\") ? \"\\\"\" + text.replace(/\"/g, \"\\\"\\\"\") + \"\\\"\"\n        : text;\n  }\n\n  return {\n    parse: parse,\n    parseRows: parseRows,\n    format: format,\n    formatRows: formatRows\n  };\n}\n","import dsv from \"./dsv\";\n\nvar csv = dsv(\",\");\n\nexport var csvParse = csv.parse;\nexport var csvParseRows = csv.parseRows;\nexport var csvFormat = csv.format;\nexport var csvFormatRows = csv.formatRows;\n","import dsv from \"./dsv\";\n\nvar tsv = dsv(\"\\t\");\n\nexport var tsvParse = tsv.parse;\nexport var tsvParseRows = tsv.parseRows;\nexport var tsvFormat = tsv.format;\nexport var tsvFormatRows = tsv.formatRows;\n","export function linear(t) {\n  return +t;\n}\n","export function quadIn(t) {\n  return t * t;\n}\n\nexport function quadOut(t) {\n  return t * (2 - t);\n}\n\nexport function quadInOut(t) {\n  return ((t *= 2) <= 1 ? t * t : --t * (2 - t) + 1) / 2;\n}\n","export function cubicIn(t) {\n  return t * t * t;\n}\n\nexport function cubicOut(t) {\n  return --t * t * t + 1;\n}\n\nexport function cubicInOut(t) {\n  return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;\n}\n","var exponent = 3;\n\nexport var polyIn = (function custom(e) {\n  e = +e;\n\n  function polyIn(t) {\n    return Math.pow(t, e);\n  }\n\n  polyIn.exponent = custom;\n\n  return polyIn;\n})(exponent);\n\nexport var polyOut = (function custom(e) {\n  e = +e;\n\n  function polyOut(t) {\n    return 1 - Math.pow(1 - t, e);\n  }\n\n  polyOut.exponent = custom;\n\n  return polyOut;\n})(exponent);\n\nexport var polyInOut = (function custom(e) {\n  e = +e;\n\n  function polyInOut(t) {\n    return ((t *= 2) <= 1 ? Math.pow(t, e) : 2 - Math.pow(2 - t, e)) / 2;\n  }\n\n  polyInOut.exponent = custom;\n\n  return polyInOut;\n})(exponent);\n","var pi = Math.PI,\n    halfPi = pi / 2;\n\nexport function sinIn(t) {\n  return 1 - Math.cos(t * halfPi);\n}\n\nexport function sinOut(t) {\n  return Math.sin(t * halfPi);\n}\n\nexport function sinInOut(t) {\n  return (1 - Math.cos(pi * t)) / 2;\n}\n","export function expIn(t) {\n  return Math.pow(2, 10 * t - 10);\n}\n\nexport function expOut(t) {\n  return 1 - Math.pow(2, -10 * t);\n}\n\nexport function expInOut(t) {\n  return ((t *= 2) <= 1 ? Math.pow(2, 10 * t - 10) : 2 - Math.pow(2, 10 - 10 * t)) / 2;\n}\n","export function circleIn(t) {\n  return 1 - Math.sqrt(1 - t * t);\n}\n\nexport function circleOut(t) {\n  return Math.sqrt(1 - --t * t);\n}\n\nexport function circleInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - Math.sqrt(1 - t * t) : Math.sqrt(1 - (t -= 2) * t) + 1) / 2;\n}\n","var b1 = 4 / 11,\n    b2 = 6 / 11,\n    b3 = 8 / 11,\n    b4 = 3 / 4,\n    b5 = 9 / 11,\n    b6 = 10 / 11,\n    b7 = 15 / 16,\n    b8 = 21 / 22,\n    b9 = 63 / 64,\n    b0 = 1 / b1 / b1;\n\nexport function bounceIn(t) {\n  return 1 - bounceOut(1 - t);\n}\n\nexport function bounceOut(t) {\n  return (t = +t) < b1 ? b0 * t * t : t < b3 ? b0 * (t -= b2) * t + b4 : t < b6 ? b0 * (t -= b5) * t + b7 : b0 * (t -= b8) * t + b9;\n}\n\nexport function bounceInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - bounceOut(1 - t) : bounceOut(t - 1) + 1) / 2;\n}\n","var overshoot = 1.70158;\n\nexport var backIn = (function custom(s) {\n  s = +s;\n\n  function backIn(t) {\n    return t * t * ((s + 1) * t - s);\n  }\n\n  backIn.overshoot = custom;\n\n  return backIn;\n})(overshoot);\n\nexport var backOut = (function custom(s) {\n  s = +s;\n\n  function backOut(t) {\n    return --t * t * ((s + 1) * t + s) + 1;\n  }\n\n  backOut.overshoot = custom;\n\n  return backOut;\n})(overshoot);\n\nexport var backInOut = (function custom(s) {\n  s = +s;\n\n  function backInOut(t) {\n    return ((t *= 2) < 1 ? t * t * ((s + 1) * t - s) : (t -= 2) * t * ((s + 1) * t + s) + 2) / 2;\n  }\n\n  backInOut.overshoot = custom;\n\n  return backInOut;\n})(overshoot);\n","var tau = 2 * Math.PI,\n    amplitude = 1,\n    period = 0.3;\n\nexport var elasticIn = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticIn(t) {\n    return a * Math.pow(2, 10 * --t) * Math.sin((s - t) / p);\n  }\n\n  elasticIn.amplitude = function(a) { return custom(a, p * tau); };\n  elasticIn.period = function(p) { return custom(a, p); };\n\n  return elasticIn;\n})(amplitude, period);\n\nexport var elasticOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticOut(t) {\n    return 1 - a * Math.pow(2, -10 * (t = +t)) * Math.sin((t + s) / p);\n  }\n\n  elasticOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticOut.period = function(p) { return custom(a, p); };\n\n  return elasticOut;\n})(amplitude, period);\n\nexport var elasticInOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticInOut(t) {\n    return ((t = t * 2 - 1) < 0\n        ? a * Math.pow(2, 10 * t) * Math.sin((s - t) / p)\n        : 2 - a * Math.pow(2, -10 * t) * Math.sin((s + t) / p)) / 2;\n  }\n\n  elasticInOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticInOut.period = function(p) { return custom(a, p); };\n\n  return elasticInOut;\n})(amplitude, period);\n","export var slice = Array.prototype.slice;\n","export default function(x) {\n  return x;\n}\n","import {slice} from \"./array\";\nimport identity from \"./identity\";\n\nvar top = 1,\n    right = 2,\n    bottom = 3,\n    left = 4,\n    epsilon = 1e-6;\n\nfunction translateX(x) {\n  return \"translate(\" + (x + 0.5) + \",0)\";\n}\n\nfunction translateY(y) {\n  return \"translate(0,\" + (y + 0.5) + \")\";\n}\n\nfunction number(scale) {\n  return function(d) {\n    return +scale(d);\n  };\n}\n\nfunction center(scale) {\n  var offset = Math.max(0, scale.bandwidth() - 1) / 2; // Adjust for 0.5px offset.\n  if (scale.round()) offset = Math.round(offset);\n  return function(d) {\n    return +scale(d) + offset;\n  };\n}\n\nfunction entering() {\n  return !this.__axis;\n}\n\nfunction axis(orient, scale) {\n  var tickArguments = [],\n      tickValues = null,\n      tickFormat = null,\n      tickSizeInner = 6,\n      tickSizeOuter = 6,\n      tickPadding = 3,\n      k = orient === top || orient === left ? -1 : 1,\n      x = orient === left || orient === right ? \"x\" : \"y\",\n      transform = orient === top || orient === bottom ? translateX : translateY;\n\n  function axis(context) {\n    var values = tickValues == null ? (scale.ticks ? scale.ticks.apply(scale, tickArguments) : scale.domain()) : tickValues,\n        format = tickFormat == null ? (scale.tickFormat ? scale.tickFormat.apply(scale, tickArguments) : identity) : tickFormat,\n        spacing = Math.max(tickSizeInner, 0) + tickPadding,\n        range = scale.range(),\n        range0 = +range[0] + 0.5,\n        range1 = +range[range.length - 1] + 0.5,\n        position = (scale.bandwidth ? center : number)(scale.copy()),\n        selection = context.selection ? context.selection() : context,\n        path = selection.selectAll(\".domain\").data([null]),\n        tick = selection.selectAll(\".tick\").data(values, scale).order(),\n        tickExit = tick.exit(),\n        tickEnter = tick.enter().append(\"g\").attr(\"class\", \"tick\"),\n        line = tick.select(\"line\"),\n        text = tick.select(\"text\");\n\n    path = path.merge(path.enter().insert(\"path\", \".tick\")\n        .attr(\"class\", \"domain\")\n        .attr(\"stroke\", \"#000\"));\n\n    tick = tick.merge(tickEnter);\n\n    line = line.merge(tickEnter.append(\"line\")\n        .attr(\"stroke\", \"#000\")\n        .attr(x + \"2\", k * tickSizeInner));\n\n    text = text.merge(tickEnter.append(\"text\")\n        .attr(\"fill\", \"#000\")\n        .attr(x, k * spacing)\n        .attr(\"dy\", orient === top ? \"0em\" : orient === bottom ? \"0.71em\" : \"0.32em\"));\n\n    if (context !== selection) {\n      path = path.transition(context);\n      tick = tick.transition(context);\n      line = line.transition(context);\n      text = text.transition(context);\n\n      tickExit = tickExit.transition(context)\n          .attr(\"opacity\", epsilon)\n          .attr(\"transform\", function(d) { return isFinite(d = position(d)) ? transform(d) : this.getAttribute(\"transform\"); });\n\n      tickEnter\n          .attr(\"opacity\", epsilon)\n          .attr(\"transform\", function(d) { var p = this.parentNode.__axis; return transform(p && isFinite(p = p(d)) ? p : position(d)); });\n    }\n\n    tickExit.remove();\n\n    path\n        .attr(\"d\", orient === left || orient == right\n            ? \"M\" + k * tickSizeOuter + \",\" + range0 + \"H0.5V\" + range1 + \"H\" + k * tickSizeOuter\n            : \"M\" + range0 + \",\" + k * tickSizeOuter + \"V0.5H\" + range1 + \"V\" + k * tickSizeOuter);\n\n    tick\n        .attr(\"opacity\", 1)\n        .attr(\"transform\", function(d) { return transform(position(d)); });\n\n    line\n        .attr(x + \"2\", k * tickSizeInner);\n\n    text\n        .attr(x, k * spacing)\n        .text(format);\n\n    selection.filter(entering)\n        .attr(\"fill\", \"none\")\n        .attr(\"font-size\", 10)\n        .attr(\"font-family\", \"sans-serif\")\n        .attr(\"text-anchor\", orient === right ? \"start\" : orient === left ? \"end\" : \"middle\");\n\n    selection\n        .each(function() { this.__axis = position; });\n  }\n\n  axis.scale = function(_) {\n    return arguments.length ? (scale = _, axis) : scale;\n  };\n\n  axis.ticks = function() {\n    return tickArguments = slice.call(arguments), axis;\n  };\n\n  axis.tickArguments = function(_) {\n    return arguments.length ? (tickArguments = _ == null ? [] : slice.call(_), axis) : tickArguments.slice();\n  };\n\n  axis.tickValues = function(_) {\n    return arguments.length ? (tickValues = _ == null ? null : slice.call(_), axis) : tickValues && tickValues.slice();\n  };\n\n  axis.tickFormat = function(_) {\n    return arguments.length ? (tickFormat = _, axis) : tickFormat;\n  };\n\n  axis.tickSize = function(_) {\n    return arguments.length ? (tickSizeInner = tickSizeOuter = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeInner = function(_) {\n    return arguments.length ? (tickSizeInner = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeOuter = function(_) {\n    return arguments.length ? (tickSizeOuter = +_, axis) : tickSizeOuter;\n  };\n\n  axis.tickPadding = function(_) {\n    return arguments.length ? (tickPadding = +_, axis) : tickPadding;\n  };\n\n  return axis;\n}\n\nexport function axisTop(scale) {\n  return axis(top, scale);\n}\n\nexport function axisRight(scale) {\n  return axis(right, scale);\n}\n\nexport function axisBottom(scale) {\n  return axis(bottom, scale);\n}\n\nexport function axisLeft(scale) {\n  return axis(left, scale);\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function(target, type, selection) {\n  this.target = target;\n  this.type = type;\n  this.selection = selection;\n}\n","import {event} from \"d3-selection\";\n\nexport function nopropagation() {\n  event.stopImmediatePropagation();\n}\n\nexport default function() {\n  event.preventDefault();\n  event.stopImmediatePropagation();\n}\n","import {dispatch} from \"d3-dispatch\";\nimport {dragDisable, dragEnable} from \"d3-drag\";\nimport {interpolate} from \"d3-interpolate\";\nimport {customEvent, event, mouse, select} from \"d3-selection\";\nimport {interrupt} from \"d3-transition\";\nimport constant from \"./constant\";\nimport BrushEvent from \"./event\";\nimport noevent, {nopropagation} from \"./noevent\";\n\nvar MODE_DRAG = {name: \"drag\"},\n    MODE_SPACE = {name: \"space\"},\n    MODE_HANDLE = {name: \"handle\"},\n    MODE_CENTER = {name: \"center\"};\n\nvar X = {\n  name: \"x\",\n  handles: [\"e\", \"w\"].map(type),\n  input: function(x, e) { return x && [[x[0], e[0][1]], [x[1], e[1][1]]]; },\n  output: function(xy) { return xy && [xy[0][0], xy[1][0]]; }\n};\n\nvar Y = {\n  name: \"y\",\n  handles: [\"n\", \"s\"].map(type),\n  input: function(y, e) { return y && [[e[0][0], y[0]], [e[1][0], y[1]]]; },\n  output: function(xy) { return xy && [xy[0][1], xy[1][1]]; }\n};\n\nvar XY = {\n  name: \"xy\",\n  handles: [\"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\"].map(type),\n  input: function(xy) { return xy; },\n  output: function(xy) { return xy; }\n};\n\nvar cursors = {\n  overlay: \"crosshair\",\n  selection: \"move\",\n  n: \"ns-resize\",\n  e: \"ew-resize\",\n  s: \"ns-resize\",\n  w: \"ew-resize\",\n  nw: \"nwse-resize\",\n  ne: \"nesw-resize\",\n  se: \"nwse-resize\",\n  sw: \"nesw-resize\"\n};\n\nvar flipX = {\n  e: \"w\",\n  w: \"e\",\n  nw: \"ne\",\n  ne: \"nw\",\n  se: \"sw\",\n  sw: \"se\"\n};\n\nvar flipY = {\n  n: \"s\",\n  s: \"n\",\n  nw: \"sw\",\n  ne: \"se\",\n  se: \"ne\",\n  sw: \"nw\"\n};\n\nvar signsX = {\n  overlay: +1,\n  selection: +1,\n  n: null,\n  e: +1,\n  s: null,\n  w: -1,\n  nw: -1,\n  ne: +1,\n  se: +1,\n  sw: -1\n};\n\nvar signsY = {\n  overlay: +1,\n  selection: +1,\n  n: -1,\n  e: null,\n  s: +1,\n  w: null,\n  nw: -1,\n  ne: -1,\n  se: +1,\n  sw: +1\n};\n\nfunction type(t) {\n  return {type: t};\n}\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter() {\n  return !event.button;\n}\n\nfunction defaultExtent() {\n  var svg = this.ownerSVGElement || this;\n  return [[0, 0], [svg.width.baseVal.value, svg.height.baseVal.value]];\n}\n\n// Like d3.local, but with the name “__brush” rather than auto-generated.\nfunction local(node) {\n  while (!node.__brush) if (!(node = node.parentNode)) return;\n  return node.__brush;\n}\n\nfunction empty(extent) {\n  return extent[0][0] === extent[1][0]\n      || extent[0][1] === extent[1][1];\n}\n\nexport function brushSelection(node) {\n  var state = node.__brush;\n  return state ? state.dim.output(state.selection) : null;\n}\n\nexport function brushX() {\n  return brush(X);\n}\n\nexport function brushY() {\n  return brush(Y);\n}\n\nexport default function() {\n  return brush(XY);\n}\n\nfunction brush(dim) {\n  var extent = defaultExtent,\n      filter = defaultFilter,\n      listeners = dispatch(brush, \"start\", \"brush\", \"end\"),\n      handleSize = 6,\n      touchending;\n\n  function brush(group) {\n    var overlay = group\n        .property(\"__brush\", initialize)\n      .selectAll(\".overlay\")\n      .data([type(\"overlay\")]);\n\n    overlay.enter().append(\"rect\")\n        .attr(\"class\", \"overlay\")\n        .attr(\"pointer-events\", \"all\")\n        .attr(\"cursor\", cursors.overlay)\n      .merge(overlay)\n        .each(function() {\n          var extent = local(this).extent;\n          select(this)\n              .attr(\"x\", extent[0][0])\n              .attr(\"y\", extent[0][1])\n              .attr(\"width\", extent[1][0] - extent[0][0])\n              .attr(\"height\", extent[1][1] - extent[0][1]);\n        });\n\n    group.selectAll(\".selection\")\n      .data([type(\"selection\")])\n      .enter().append(\"rect\")\n        .attr(\"class\", \"selection\")\n        .attr(\"cursor\", cursors.selection)\n        .attr(\"fill\", \"#777\")\n        .attr(\"fill-opacity\", 0.3)\n        .attr(\"stroke\", \"#fff\")\n        .attr(\"shape-rendering\", \"crispEdges\");\n\n    var handle = group.selectAll(\".handle\")\n      .data(dim.handles, function(d) { return d.type; });\n\n    handle.exit().remove();\n\n    handle.enter().append(\"rect\")\n        .attr(\"class\", function(d) { return \"handle handle--\" + d.type; })\n        .attr(\"cursor\", function(d) { return cursors[d.type]; });\n\n    group\n        .each(redraw)\n        .attr(\"fill\", \"none\")\n        .attr(\"pointer-events\", \"all\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\")\n        .on(\"mousedown.brush touchstart.brush\", started);\n  }\n\n  brush.move = function(group, selection) {\n    if (group.selection) {\n      group\n          .on(\"start.brush\", function() { emitter(this, arguments).beforestart().start(); })\n          .on(\"interrupt.brush end.brush\", function() { emitter(this, arguments).end(); })\n          .tween(\"brush\", function() {\n            var that = this,\n                state = that.__brush,\n                emit = emitter(that, arguments),\n                selection0 = state.selection,\n                selection1 = dim.input(typeof selection === \"function\" ? selection.apply(this, arguments) : selection, state.extent),\n                i = interpolate(selection0, selection1);\n\n            function tween(t) {\n              state.selection = t === 1 && empty(selection1) ? null : i(t);\n              redraw.call(that);\n              emit.brush();\n            }\n\n            return selection0 && selection1 ? tween : tween(1);\n          });\n    } else {\n      group\n          .each(function() {\n            var that = this,\n                args = arguments,\n                state = that.__brush,\n                selection1 = dim.input(typeof selection === \"function\" ? selection.apply(that, args) : selection, state.extent),\n                emit = emitter(that, args).beforestart();\n\n            interrupt(that);\n            state.selection = selection1 == null || empty(selection1) ? null : selection1;\n            redraw.call(that);\n            emit.start().brush().end();\n          });\n    }\n  };\n\n  function redraw() {\n    var group = select(this),\n        selection = local(this).selection;\n\n    if (selection) {\n      group.selectAll(\".selection\")\n          .style(\"display\", null)\n          .attr(\"x\", selection[0][0])\n          .attr(\"y\", selection[0][1])\n          .attr(\"width\", selection[1][0] - selection[0][0])\n          .attr(\"height\", selection[1][1] - selection[0][1]);\n\n      group.selectAll(\".handle\")\n          .style(\"display\", null)\n          .attr(\"x\", function(d) { return d.type[d.type.length - 1] === \"e\" ? selection[1][0] - handleSize / 2 : selection[0][0] - handleSize / 2; })\n          .attr(\"y\", function(d) { return d.type[0] === \"s\" ? selection[1][1] - handleSize / 2 : selection[0][1] - handleSize / 2; })\n          .attr(\"width\", function(d) { return d.type === \"n\" || d.type === \"s\" ? selection[1][0] - selection[0][0] + handleSize : handleSize; })\n          .attr(\"height\", function(d) { return d.type === \"e\" || d.type === \"w\" ? selection[1][1] - selection[0][1] + handleSize : handleSize; });\n    }\n\n    else {\n      group.selectAll(\".selection,.handle\")\n          .style(\"display\", \"none\")\n          .attr(\"x\", null)\n          .attr(\"y\", null)\n          .attr(\"width\", null)\n          .attr(\"height\", null);\n    }\n  }\n\n  function emitter(that, args) {\n    return that.__brush.emitter || new Emitter(that, args);\n  }\n\n  function Emitter(that, args) {\n    this.that = that;\n    this.args = args;\n    this.state = that.__brush;\n    this.active = 0;\n  }\n\n  Emitter.prototype = {\n    beforestart: function() {\n      if (++this.active === 1) this.state.emitter = this, this.starting = true;\n      return this;\n    },\n    start: function() {\n      if (this.starting) this.starting = false, this.emit(\"start\");\n      return this;\n    },\n    brush: function() {\n      this.emit(\"brush\");\n      return this;\n    },\n    end: function() {\n      if (--this.active === 0) delete this.state.emitter, this.emit(\"end\");\n      return this;\n    },\n    emit: function(type) {\n      customEvent(new BrushEvent(brush, type, dim.output(this.state.selection)), listeners.apply, listeners, [type, this.that, this.args]);\n    }\n  };\n\n  function started() {\n    if (event.touches) { if (event.changedTouches.length < event.touches.length) return noevent(); }\n    else if (touchending) return;\n    if (!filter.apply(this, arguments)) return;\n\n    var that = this,\n        type = event.target.__data__.type,\n        mode = (event.metaKey ? type = \"overlay\" : type) === \"selection\" ? MODE_DRAG : (event.altKey ? MODE_CENTER : MODE_HANDLE),\n        signX = dim === Y ? null : signsX[type],\n        signY = dim === X ? null : signsY[type],\n        state = local(that),\n        extent = state.extent,\n        selection = state.selection,\n        W = extent[0][0], w0, w1,\n        N = extent[0][1], n0, n1,\n        E = extent[1][0], e0, e1,\n        S = extent[1][1], s0, s1,\n        dx,\n        dy,\n        moving,\n        shifting = signX && signY && event.shiftKey,\n        lockX,\n        lockY,\n        point0 = mouse(that),\n        point = point0,\n        emit = emitter(that, arguments).beforestart();\n\n    if (type === \"overlay\") {\n      state.selection = selection = [\n        [w0 = dim === Y ? W : point0[0], n0 = dim === X ? N : point0[1]],\n        [e0 = dim === Y ? E : w0, s0 = dim === X ? S : n0]\n      ];\n    } else {\n      w0 = selection[0][0];\n      n0 = selection[0][1];\n      e0 = selection[1][0];\n      s0 = selection[1][1];\n    }\n\n    w1 = w0;\n    n1 = n0;\n    e1 = e0;\n    s1 = s0;\n\n    var group = select(that)\n        .attr(\"pointer-events\", \"none\");\n\n    var overlay = group.selectAll(\".overlay\")\n        .attr(\"cursor\", cursors[type]);\n\n    if (event.touches) {\n      group\n          .on(\"touchmove.brush\", moved, true)\n          .on(\"touchend.brush touchcancel.brush\", ended, true);\n    } else {\n      var view = select(event.view)\n          .on(\"keydown.brush\", keydowned, true)\n          .on(\"keyup.brush\", keyupped, true)\n          .on(\"mousemove.brush\", moved, true)\n          .on(\"mouseup.brush\", ended, true);\n\n      dragDisable(event.view);\n    }\n\n    nopropagation();\n    interrupt(that);\n    redraw.call(that);\n    emit.start();\n\n    function moved() {\n      var point1 = mouse(that);\n      if (shifting && !lockX && !lockY) {\n        if (Math.abs(point1[0] - point[0]) > Math.abs(point1[1] - point[1])) lockY = true;\n        else lockX = true;\n      }\n      point = point1;\n      moving = true;\n      noevent();\n      move();\n    }\n\n    function move() {\n      var t;\n\n      dx = point[0] - point0[0];\n      dy = point[1] - point0[1];\n\n      switch (mode) {\n        case MODE_SPACE:\n        case MODE_DRAG: {\n          if (signX) dx = Math.max(W - w0, Math.min(E - e0, dx)), w1 = w0 + dx, e1 = e0 + dx;\n          if (signY) dy = Math.max(N - n0, Math.min(S - s0, dy)), n1 = n0 + dy, s1 = s0 + dy;\n          break;\n        }\n        case MODE_HANDLE: {\n          if (signX < 0) dx = Math.max(W - w0, Math.min(E - w0, dx)), w1 = w0 + dx, e1 = e0;\n          else if (signX > 0) dx = Math.max(W - e0, Math.min(E - e0, dx)), w1 = w0, e1 = e0 + dx;\n          if (signY < 0) dy = Math.max(N - n0, Math.min(S - n0, dy)), n1 = n0 + dy, s1 = s0;\n          else if (signY > 0) dy = Math.max(N - s0, Math.min(S - s0, dy)), n1 = n0, s1 = s0 + dy;\n          break;\n        }\n        case MODE_CENTER: {\n          if (signX) w1 = Math.max(W, Math.min(E, w0 - dx * signX)), e1 = Math.max(W, Math.min(E, e0 + dx * signX));\n          if (signY) n1 = Math.max(N, Math.min(S, n0 - dy * signY)), s1 = Math.max(N, Math.min(S, s0 + dy * signY));\n          break;\n        }\n      }\n\n      if (e1 < w1) {\n        signX *= -1;\n        t = w0, w0 = e0, e0 = t;\n        t = w1, w1 = e1, e1 = t;\n        if (type in flipX) overlay.attr(\"cursor\", cursors[type = flipX[type]]);\n      }\n\n      if (s1 < n1) {\n        signY *= -1;\n        t = n0, n0 = s0, s0 = t;\n        t = n1, n1 = s1, s1 = t;\n        if (type in flipY) overlay.attr(\"cursor\", cursors[type = flipY[type]]);\n      }\n\n      if (state.selection) selection = state.selection; // May be set by brush.move!\n      if (lockX) w1 = selection[0][0], e1 = selection[1][0];\n      if (lockY) n1 = selection[0][1], s1 = selection[1][1];\n\n      if (selection[0][0] !== w1\n          || selection[0][1] !== n1\n          || selection[1][0] !== e1\n          || selection[1][1] !== s1) {\n        state.selection = [[w1, n1], [e1, s1]];\n        redraw.call(that);\n        emit.brush();\n      }\n    }\n\n    function ended() {\n      nopropagation();\n      if (event.touches) {\n        if (event.touches.length) return;\n        if (touchending) clearTimeout(touchending);\n        touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n        group.on(\"touchmove.brush touchend.brush touchcancel.brush\", null);\n      } else {\n        dragEnable(event.view, moving);\n        view.on(\"keydown.brush keyup.brush mousemove.brush mouseup.brush\", null);\n      }\n      group.attr(\"pointer-events\", \"all\");\n      overlay.attr(\"cursor\", cursors.overlay);\n      if (state.selection) selection = state.selection; // May be set by brush.move (on start)!\n      if (empty(selection)) state.selection = null, redraw.call(that);\n      emit.end();\n    }\n\n    function keydowned() {\n      switch (event.keyCode) {\n        case 16: { // SHIFT\n          shifting = signX && signY;\n          break;\n        }\n        case 18: { // ALT\n          if (mode === MODE_HANDLE) {\n            if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n            if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n            mode = MODE_CENTER;\n            move();\n          }\n          break;\n        }\n        case 32: { // SPACE; takes priority over ALT\n          if (mode === MODE_HANDLE || mode === MODE_CENTER) {\n            if (signX < 0) e0 = e1 - dx; else if (signX > 0) w0 = w1 - dx;\n            if (signY < 0) s0 = s1 - dy; else if (signY > 0) n0 = n1 - dy;\n            mode = MODE_SPACE;\n            overlay.attr(\"cursor\", cursors.selection);\n            move();\n          }\n          break;\n        }\n        default: return;\n      }\n      noevent();\n    }\n\n    function keyupped() {\n      switch (event.keyCode) {\n        case 16: { // SHIFT\n          if (shifting) {\n            lockX = lockY = shifting = false;\n            move();\n          }\n          break;\n        }\n        case 18: { // ALT\n          if (mode === MODE_CENTER) {\n            if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n            if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n            mode = MODE_HANDLE;\n            move();\n          }\n          break;\n        }\n        case 32: { // SPACE\n          if (mode === MODE_SPACE) {\n            if (event.altKey) {\n              if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n              if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n              mode = MODE_CENTER;\n            } else {\n              if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n              if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n              mode = MODE_HANDLE;\n            }\n            overlay.attr(\"cursor\", cursors[type]);\n            move();\n          }\n          break;\n        }\n        default: return;\n      }\n      noevent();\n    }\n  }\n\n  function initialize() {\n    var state = this.__brush || {selection: null};\n    state.extent = extent.apply(this, arguments);\n    state.dim = dim;\n    return state;\n  }\n\n  brush.extent = function(_) {\n    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), brush) : extent;\n  };\n\n  brush.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant(!!_), brush) : filter;\n  };\n\n  brush.handleSize = function(_) {\n    return arguments.length ? (handleSize = +_, brush) : handleSize;\n  };\n\n  brush.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? brush : value;\n  };\n\n  return brush;\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export function Transform(k, x, y) {\n  this.k = k;\n  this.x = x;\n  this.y = y;\n}\n\nTransform.prototype = {\n  constructor: Transform,\n  scale: function(k) {\n    return k === 1 ? this : new Transform(this.k * k, this.x, this.y);\n  },\n  translate: function(x, y) {\n    return x === 0 & y === 0 ? this : new Transform(this.k, this.x + this.k * x, this.y + this.k * y);\n  },\n  apply: function(point) {\n    return [point[0] * this.k + this.x, point[1] * this.k + this.y];\n  },\n  applyX: function(x) {\n    return x * this.k + this.x;\n  },\n  applyY: function(y) {\n    return y * this.k + this.y;\n  },\n  invert: function(location) {\n    return [(location[0] - this.x) / this.k, (location[1] - this.y) / this.k];\n  },\n  invertX: function(x) {\n    return (x - this.x) / this.k;\n  },\n  invertY: function(y) {\n    return (y - this.y) / this.k;\n  },\n  rescaleX: function(x) {\n    return x.copy().domain(x.range().map(this.invertX, this).map(x.invert, x));\n  },\n  rescaleY: function(y) {\n    return y.copy().domain(y.range().map(this.invertY, this).map(y.invert, y));\n  },\n  toString: function() {\n    return \"translate(\" + this.x + \",\" + this.y + \") scale(\" + this.k + \")\";\n  }\n};\n\nexport var identity = new Transform(1, 0, 0);\n\ntransform.prototype = Transform.prototype;\n\nexport default function transform(node) {\n  return node.__zoom || identity;\n}\n","import {event} from \"d3-selection\";\n\nexport function nopropagation() {\n  event.stopImmediatePropagation();\n}\n\nexport default function() {\n  event.preventDefault();\n  event.stopImmediatePropagation();\n}\n","import {dispatch} from \"d3-dispatch\";\nimport {dragDisable, dragEnable} from \"d3-drag\";\nimport {interpolateZoom} from \"d3-interpolate\";\nimport {event, customEvent, select, mouse, touch} from \"d3-selection\";\nimport {interrupt} from \"d3-transition\";\nimport constant from \"./constant\";\nimport ZoomEvent from \"./event\";\nimport {Transform, identity} from \"./transform\";\nimport noevent, {nopropagation} from \"./noevent\";\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter() {\n  return !event.button;\n}\n\nfunction defaultExtent() {\n  var e = this, w, h;\n  if (e instanceof SVGElement) {\n    e = e.ownerSVGElement || e;\n    w = e.width.baseVal.value;\n    h = e.height.baseVal.value;\n  } else {\n    w = e.clientWidth;\n    h = e.clientHeight;\n  }\n  return [[0, 0], [w, h]];\n}\n\nfunction defaultTransform() {\n  return this.__zoom || identity;\n}\n\nfunction defaultWheelDelta() {\n  return -event.deltaY * (event.deltaMode ? 120 : 1) / 500;\n}\n\nfunction defaultTouchable() {\n  return \"ontouchstart\" in this;\n}\n\nfunction defaultConstrain(transform, extent, translateExtent) {\n  var dx0 = transform.invertX(extent[0][0]) - translateExtent[0][0],\n      dx1 = transform.invertX(extent[1][0]) - translateExtent[1][0],\n      dy0 = transform.invertY(extent[0][1]) - translateExtent[0][1],\n      dy1 = transform.invertY(extent[1][1]) - translateExtent[1][1];\n  return transform.translate(\n    dx1 > dx0 ? (dx0 + dx1) / 2 : Math.min(0, dx0) || Math.max(0, dx1),\n    dy1 > dy0 ? (dy0 + dy1) / 2 : Math.min(0, dy0) || Math.max(0, dy1)\n  );\n}\n\nexport default function() {\n  var filter = defaultFilter,\n      extent = defaultExtent,\n      constrain = defaultConstrain,\n      wheelDelta = defaultWheelDelta,\n      touchable = defaultTouchable,\n      scaleExtent = [0, Infinity],\n      translateExtent = [[-Infinity, -Infinity], [Infinity, Infinity]],\n      duration = 250,\n      interpolate = interpolateZoom,\n      gestures = [],\n      listeners = dispatch(\"start\", \"zoom\", \"end\"),\n      touchstarting,\n      touchending,\n      touchDelay = 500,\n      wheelDelay = 150,\n      clickDistance2 = 0;\n\n  function zoom(selection) {\n    selection\n        .property(\"__zoom\", defaultTransform)\n        .on(\"wheel.zoom\", wheeled)\n        .on(\"mousedown.zoom\", mousedowned)\n        .on(\"dblclick.zoom\", dblclicked)\n      .filter(touchable)\n        .on(\"touchstart.zoom\", touchstarted)\n        .on(\"touchmove.zoom\", touchmoved)\n        .on(\"touchend.zoom touchcancel.zoom\", touchended)\n        .style(\"touch-action\", \"none\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n  }\n\n  zoom.transform = function(collection, transform) {\n    var selection = collection.selection ? collection.selection() : collection;\n    selection.property(\"__zoom\", defaultTransform);\n    if (collection !== selection) {\n      schedule(collection, transform);\n    } else {\n      selection.interrupt().each(function() {\n        gesture(this, arguments)\n            .start()\n            .zoom(null, typeof transform === \"function\" ? transform.apply(this, arguments) : transform)\n            .end();\n      });\n    }\n  };\n\n  zoom.scaleBy = function(selection, k) {\n    zoom.scaleTo(selection, function() {\n      var k0 = this.__zoom.k,\n          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n      return k0 * k1;\n    });\n  };\n\n  zoom.scaleTo = function(selection, k) {\n    zoom.transform(selection, function() {\n      var e = extent.apply(this, arguments),\n          t0 = this.__zoom,\n          p0 = centroid(e),\n          p1 = t0.invert(p0),\n          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n      return constrain(translate(scale(t0, k1), p0, p1), e, translateExtent);\n    });\n  };\n\n  zoom.translateBy = function(selection, x, y) {\n    zoom.transform(selection, function() {\n      return constrain(this.__zoom.translate(\n        typeof x === \"function\" ? x.apply(this, arguments) : x,\n        typeof y === \"function\" ? y.apply(this, arguments) : y\n      ), extent.apply(this, arguments), translateExtent);\n    });\n  };\n\n  zoom.translateTo = function(selection, x, y) {\n    zoom.transform(selection, function() {\n      var e = extent.apply(this, arguments),\n          t = this.__zoom,\n          p = centroid(e);\n      return constrain(identity.translate(p[0], p[1]).scale(t.k).translate(\n        typeof x === \"function\" ? -x.apply(this, arguments) : -x,\n        typeof y === \"function\" ? -y.apply(this, arguments) : -y\n      ), e, translateExtent);\n    });\n  };\n\n  function scale(transform, k) {\n    k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], k));\n    return k === transform.k ? transform : new Transform(k, transform.x, transform.y);\n  }\n\n  function translate(transform, p0, p1) {\n    var x = p0[0] - p1[0] * transform.k, y = p0[1] - p1[1] * transform.k;\n    return x === transform.x && y === transform.y ? transform : new Transform(transform.k, x, y);\n  }\n\n  function centroid(extent) {\n    return [(+extent[0][0] + +extent[1][0]) / 2, (+extent[0][1] + +extent[1][1]) / 2];\n  }\n\n  function schedule(transition, transform, center) {\n    transition\n        .on(\"start.zoom\", function() { gesture(this, arguments).start(); })\n        .on(\"interrupt.zoom end.zoom\", function() { gesture(this, arguments).end(); })\n        .tween(\"zoom\", function() {\n          var that = this,\n              args = arguments,\n              g = gesture(that, args),\n              e = extent.apply(that, args),\n              p = center || centroid(e),\n              w = Math.max(e[1][0] - e[0][0], e[1][1] - e[0][1]),\n              a = that.__zoom,\n              b = typeof transform === \"function\" ? transform.apply(that, args) : transform,\n              i = interpolate(a.invert(p).concat(w / a.k), b.invert(p).concat(w / b.k));\n          return function(t) {\n            if (t === 1) t = b; // Avoid rounding error on end.\n            else { var l = i(t), k = w / l[2]; t = new Transform(k, p[0] - l[0] * k, p[1] - l[1] * k); }\n            g.zoom(null, t);\n          };\n        });\n  }\n\n  function gesture(that, args) {\n    for (var i = 0, n = gestures.length, g; i < n; ++i) {\n      if ((g = gestures[i]).that === that) {\n        return g;\n      }\n    }\n    return new Gesture(that, args);\n  }\n\n  function Gesture(that, args) {\n    this.that = that;\n    this.args = args;\n    this.index = -1;\n    this.active = 0;\n    this.extent = extent.apply(that, args);\n  }\n\n  Gesture.prototype = {\n    start: function() {\n      if (++this.active === 1) {\n        this.index = gestures.push(this) - 1;\n        this.emit(\"start\");\n      }\n      return this;\n    },\n    zoom: function(key, transform) {\n      if (this.mouse && key !== \"mouse\") this.mouse[1] = transform.invert(this.mouse[0]);\n      if (this.touch0 && key !== \"touch\") this.touch0[1] = transform.invert(this.touch0[0]);\n      if (this.touch1 && key !== \"touch\") this.touch1[1] = transform.invert(this.touch1[0]);\n      this.that.__zoom = transform;\n      this.emit(\"zoom\");\n      return this;\n    },\n    end: function() {\n      if (--this.active === 0) {\n        gestures.splice(this.index, 1);\n        this.index = -1;\n        this.emit(\"end\");\n      }\n      return this;\n    },\n    emit: function(type) {\n      customEvent(new ZoomEvent(zoom, type, this.that.__zoom), listeners.apply, listeners, [type, this.that, this.args]);\n    }\n  };\n\n  function wheeled() {\n    if (!filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        t = this.__zoom,\n        k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], t.k * Math.pow(2, wheelDelta.apply(this, arguments)))),\n        p = mouse(this);\n\n    // If the mouse is in the same location as before, reuse it.\n    // If there were recent wheel events, reset the wheel idle timeout.\n    if (g.wheel) {\n      if (g.mouse[0][0] !== p[0] || g.mouse[0][1] !== p[1]) {\n        g.mouse[1] = t.invert(g.mouse[0] = p);\n      }\n      clearTimeout(g.wheel);\n    }\n\n    // If this wheel event won’t trigger a transform change, ignore it.\n    else if (t.k === k) return;\n\n    // Otherwise, capture the mouse point and location at the start.\n    else {\n      g.mouse = [p, t.invert(p)];\n      interrupt(this);\n      g.start();\n    }\n\n    noevent();\n    g.wheel = setTimeout(wheelidled, wheelDelay);\n    g.zoom(\"mouse\", constrain(translate(scale(t, k), g.mouse[0], g.mouse[1]), g.extent, translateExtent));\n\n    function wheelidled() {\n      g.wheel = null;\n      g.end();\n    }\n  }\n\n  function mousedowned() {\n    if (touchending || !filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        v = select(event.view).on(\"mousemove.zoom\", mousemoved, true).on(\"mouseup.zoom\", mouseupped, true),\n        p = mouse(this),\n        x0 = event.clientX,\n        y0 = event.clientY;\n\n    dragDisable(event.view);\n    nopropagation();\n    g.mouse = [p, this.__zoom.invert(p)];\n    interrupt(this);\n    g.start();\n\n    function mousemoved() {\n      noevent();\n      if (!g.moved) {\n        var dx = event.clientX - x0, dy = event.clientY - y0;\n        g.moved = dx * dx + dy * dy > clickDistance2;\n      }\n      g.zoom(\"mouse\", constrain(translate(g.that.__zoom, g.mouse[0] = mouse(g.that), g.mouse[1]), g.extent, translateExtent));\n    }\n\n    function mouseupped() {\n      v.on(\"mousemove.zoom mouseup.zoom\", null);\n      dragEnable(event.view, g.moved);\n      noevent();\n      g.end();\n    }\n  }\n\n  function dblclicked() {\n    if (!filter.apply(this, arguments)) return;\n    var t0 = this.__zoom,\n        p0 = mouse(this),\n        p1 = t0.invert(p0),\n        k1 = t0.k * (event.shiftKey ? 0.5 : 2),\n        t1 = constrain(translate(scale(t0, k1), p0, p1), extent.apply(this, arguments), translateExtent);\n\n    noevent();\n    if (duration > 0) select(this).transition().duration(duration).call(schedule, t1, p0);\n    else select(this).call(zoom.transform, t1);\n  }\n\n  function touchstarted() {\n    if (!filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        touches = event.changedTouches,\n        started,\n        n = touches.length, i, t, p;\n\n    nopropagation();\n    for (i = 0; i < n; ++i) {\n      t = touches[i], p = touch(this, touches, t.identifier);\n      p = [p, this.__zoom.invert(p), t.identifier];\n      if (!g.touch0) g.touch0 = p, started = true;\n      else if (!g.touch1) g.touch1 = p;\n    }\n\n    // If this is a dbltap, reroute to the (optional) dblclick.zoom handler.\n    if (touchstarting) {\n      touchstarting = clearTimeout(touchstarting);\n      if (!g.touch1) {\n        g.end();\n        p = select(this).on(\"dblclick.zoom\");\n        if (p) p.apply(this, arguments);\n        return;\n      }\n    }\n\n    if (started) {\n      touchstarting = setTimeout(function() { touchstarting = null; }, touchDelay);\n      interrupt(this);\n      g.start();\n    }\n  }\n\n  function touchmoved() {\n    var g = gesture(this, arguments),\n        touches = event.changedTouches,\n        n = touches.length, i, t, p, l;\n\n    noevent();\n    if (touchstarting) touchstarting = clearTimeout(touchstarting);\n    for (i = 0; i < n; ++i) {\n      t = touches[i], p = touch(this, touches, t.identifier);\n      if (g.touch0 && g.touch0[2] === t.identifier) g.touch0[0] = p;\n      else if (g.touch1 && g.touch1[2] === t.identifier) g.touch1[0] = p;\n    }\n    t = g.that.__zoom;\n    if (g.touch1) {\n      var p0 = g.touch0[0], l0 = g.touch0[1],\n          p1 = g.touch1[0], l1 = g.touch1[1],\n          dp = (dp = p1[0] - p0[0]) * dp + (dp = p1[1] - p0[1]) * dp,\n          dl = (dl = l1[0] - l0[0]) * dl + (dl = l1[1] - l0[1]) * dl;\n      t = scale(t, Math.sqrt(dp / dl));\n      p = [(p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2];\n      l = [(l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2];\n    }\n    else if (g.touch0) p = g.touch0[0], l = g.touch0[1];\n    else return;\n    g.zoom(\"touch\", constrain(translate(t, p, l), g.extent, translateExtent));\n  }\n\n  function touchended() {\n    var g = gesture(this, arguments),\n        touches = event.changedTouches,\n        n = touches.length, i, t;\n\n    nopropagation();\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function() { touchending = null; }, touchDelay);\n    for (i = 0; i < n; ++i) {\n      t = touches[i];\n      if (g.touch0 && g.touch0[2] === t.identifier) delete g.touch0;\n      else if (g.touch1 && g.touch1[2] === t.identifier) delete g.touch1;\n    }\n    if (g.touch1 && !g.touch0) g.touch0 = g.touch1, delete g.touch1;\n    if (g.touch0) g.touch0[1] = this.__zoom.invert(g.touch0[0]);\n    else g.end();\n  }\n\n  zoom.wheelDelta = function(_) {\n    return arguments.length ? (wheelDelta = typeof _ === \"function\" ? _ : constant(+_), zoom) : wheelDelta;\n  };\n\n  zoom.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant(!!_), zoom) : filter;\n  };\n\n  zoom.touchable = function(_) {\n    return arguments.length ? (touchable = typeof _ === \"function\" ? _ : constant(!!_), zoom) : touchable;\n  };\n\n  zoom.extent = function(_) {\n    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), zoom) : extent;\n  };\n\n  zoom.scaleExtent = function(_) {\n    return arguments.length ? (scaleExtent[0] = +_[0], scaleExtent[1] = +_[1], zoom) : [scaleExtent[0], scaleExtent[1]];\n  };\n\n  zoom.translateExtent = function(_) {\n    return arguments.length ? (translateExtent[0][0] = +_[0][0], translateExtent[1][0] = +_[1][0], translateExtent[0][1] = +_[0][1], translateExtent[1][1] = +_[1][1], zoom) : [[translateExtent[0][0], translateExtent[0][1]], [translateExtent[1][0], translateExtent[1][1]]];\n  };\n\n  zoom.constrain = function(_) {\n    return arguments.length ? (constrain = _, zoom) : constrain;\n  };\n\n  zoom.duration = function(_) {\n    return arguments.length ? (duration = +_, zoom) : duration;\n  };\n\n  zoom.interpolate = function(_) {\n    return arguments.length ? (interpolate = _, zoom) : interpolate;\n  };\n\n  zoom.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? zoom : value;\n  };\n\n  zoom.clickDistance = function(_) {\n    return arguments.length ? (clickDistance2 = (_ = +_) * _, zoom) : Math.sqrt(clickDistance2);\n  };\n\n  return zoom;\n}\n","export default function ZoomEvent(target, type, transform) {\n  this.target = target;\n  this.type = type;\n  this.transform = transform;\n}\n","export var cos = Math.cos;\nexport var sin = Math.sin;\nexport var pi = Math.PI;\nexport var halfPi = pi / 2;\nexport var tau = pi * 2;\nexport var max = Math.max;\n","import {range} from \"d3-array\";\nimport {max, tau} from \"./math\";\n\nfunction compareValue(compare) {\n  return function(a, b) {\n    return compare(\n      a.source.value + a.target.value,\n      b.source.value + b.target.value\n    );\n  };\n}\n\nexport default function() {\n  var padAngle = 0,\n      sortGroups = null,\n      sortSubgroups = null,\n      sortChords = null;\n\n  function chord(matrix) {\n    var n = matrix.length,\n        groupSums = [],\n        groupIndex = range(n),\n        subgroupIndex = [],\n        chords = [],\n        groups = chords.groups = new Array(n),\n        subgroups = new Array(n * n),\n        k,\n        x,\n        x0,\n        dx,\n        i,\n        j;\n\n    // Compute the sum.\n    k = 0, i = -1; while (++i < n) {\n      x = 0, j = -1; while (++j < n) {\n        x += matrix[i][j];\n      }\n      groupSums.push(x);\n      subgroupIndex.push(range(n));\n      k += x;\n    }\n\n    // Sort groups…\n    if (sortGroups) groupIndex.sort(function(a, b) {\n      return sortGroups(groupSums[a], groupSums[b]);\n    });\n\n    // Sort subgroups…\n    if (sortSubgroups) subgroupIndex.forEach(function(d, i) {\n      d.sort(function(a, b) {\n        return sortSubgroups(matrix[i][a], matrix[i][b]);\n      });\n    });\n\n    // Convert the sum to scaling factor for [0, 2pi].\n    // TODO Allow start and end angle to be specified?\n    // TODO Allow padding to be specified as percentage?\n    k = max(0, tau - padAngle * n) / k;\n    dx = k ? padAngle : tau / n;\n\n    // Compute the start and end angle for each group and subgroup.\n    // Note: Opera has a bug reordering object literal properties!\n    x = 0, i = -1; while (++i < n) {\n      x0 = x, j = -1; while (++j < n) {\n        var di = groupIndex[i],\n            dj = subgroupIndex[di][j],\n            v = matrix[di][dj],\n            a0 = x,\n            a1 = x += v * k;\n        subgroups[dj * n + di] = {\n          index: di,\n          subindex: dj,\n          startAngle: a0,\n          endAngle: a1,\n          value: v\n        };\n      }\n      groups[di] = {\n        index: di,\n        startAngle: x0,\n        endAngle: x,\n        value: groupSums[di]\n      };\n      x += dx;\n    }\n\n    // Generate chords for each (non-empty) subgroup-subgroup link.\n    i = -1; while (++i < n) {\n      j = i - 1; while (++j < n) {\n        var source = subgroups[j * n + i],\n            target = subgroups[i * n + j];\n        if (source.value || target.value) {\n          chords.push(source.value < target.value\n              ? {source: target, target: source}\n              : {source: source, target: target});\n        }\n      }\n    }\n\n    return sortChords ? chords.sort(sortChords) : chords;\n  }\n\n  chord.padAngle = function(_) {\n    return arguments.length ? (padAngle = max(0, _), chord) : padAngle;\n  };\n\n  chord.sortGroups = function(_) {\n    return arguments.length ? (sortGroups = _, chord) : sortGroups;\n  };\n\n  chord.sortSubgroups = function(_) {\n    return arguments.length ? (sortSubgroups = _, chord) : sortSubgroups;\n  };\n\n  chord.sortChords = function(_) {\n    return arguments.length ? (_ == null ? sortChords = null : (sortChords = compareValue(_))._ = _, chord) : sortChords && sortChords._;\n  };\n\n  return chord;\n}\n","export var slice = Array.prototype.slice;\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","import {slice} from \"./array\";\nimport constant from \"./constant\";\nimport {cos, halfPi, sin} from \"./math\";\nimport {path} from \"d3-path\";\n\nfunction defaultSource(d) {\n  return d.source;\n}\n\nfunction defaultTarget(d) {\n  return d.target;\n}\n\nfunction defaultRadius(d) {\n  return d.radius;\n}\n\nfunction defaultStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction defaultEndAngle(d) {\n  return d.endAngle;\n}\n\nexport default function() {\n  var source = defaultSource,\n      target = defaultTarget,\n      radius = defaultRadius,\n      startAngle = defaultStartAngle,\n      endAngle = defaultEndAngle,\n      context = null;\n\n  function ribbon() {\n    var buffer,\n        argv = slice.call(arguments),\n        s = source.apply(this, argv),\n        t = target.apply(this, argv),\n        sr = +radius.apply(this, (argv[0] = s, argv)),\n        sa0 = startAngle.apply(this, argv) - halfPi,\n        sa1 = endAngle.apply(this, argv) - halfPi,\n        sx0 = sr * cos(sa0),\n        sy0 = sr * sin(sa0),\n        tr = +radius.apply(this, (argv[0] = t, argv)),\n        ta0 = startAngle.apply(this, argv) - halfPi,\n        ta1 = endAngle.apply(this, argv) - halfPi;\n\n    if (!context) context = buffer = path();\n\n    context.moveTo(sx0, sy0);\n    context.arc(0, 0, sr, sa0, sa1);\n    if (sa0 !== ta0 || sa1 !== ta1) { // TODO sr !== tr?\n      context.quadraticCurveTo(0, 0, tr * cos(ta0), tr * sin(ta0));\n      context.arc(0, 0, tr, ta0, ta1);\n    }\n    context.quadraticCurveTo(0, 0, sx0, sy0);\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  ribbon.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), ribbon) : radius;\n  };\n\n  ribbon.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), ribbon) : startAngle;\n  };\n\n  ribbon.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), ribbon) : endAngle;\n  };\n\n  ribbon.source = function(_) {\n    return arguments.length ? (source = _, ribbon) : source;\n  };\n\n  ribbon.target = function(_) {\n    return arguments.length ? (target = _, ribbon) : target;\n  };\n\n  ribbon.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), ribbon) : context;\n  };\n\n  return ribbon;\n}\n","export default function(polygon) {\n  var i = -1,\n      n = polygon.length,\n      a,\n      b = polygon[n - 1],\n      area = 0;\n\n  while (++i < n) {\n    a = b;\n    b = polygon[i];\n    area += a[1] * b[0] - a[0] * b[1];\n  }\n\n  return area / 2;\n}\n","export default function(polygon) {\n  var i = -1,\n      n = polygon.length,\n      x = 0,\n      y = 0,\n      a,\n      b = polygon[n - 1],\n      c,\n      k = 0;\n\n  while (++i < n) {\n    a = b;\n    b = polygon[i];\n    k += c = a[0] * b[1] - b[0] * a[1];\n    x += (a[0] + b[0]) * c;\n    y += (a[1] + b[1]) * c;\n  }\n\n  return k *= 3, [x / k, y / k];\n}\n","// Returns the 2D cross product of AB and AC vectors, i.e., the z-component of\n// the 3D cross product in a quadrant I Cartesian coordinate system (+x is\n// right, +y is up). Returns a positive value if ABC is counter-clockwise,\n// negative if clockwise, and zero if the points are collinear.\nexport default function(a, b, c) {\n  return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n}\n","import cross from \"./cross\";\n\nfunction lexicographicOrder(a, b) {\n  return a[0] - b[0] || a[1] - b[1];\n}\n\n// Computes the upper convex hull per the monotone chain algorithm.\n// Assumes points.length >= 3, is sorted by x, unique in y.\n// Returns an array of indices into points in left-to-right order.\nfunction computeUpperHullIndexes(points) {\n  var n = points.length,\n      indexes = [0, 1],\n      size = 2;\n\n  for (var i = 2; i < n; ++i) {\n    while (size > 1 && cross(points[indexes[size - 2]], points[indexes[size - 1]], points[i]) <= 0) --size;\n    indexes[size++] = i;\n  }\n\n  return indexes.slice(0, size); // remove popped points\n}\n\nexport default function(points) {\n  if ((n = points.length) < 3) return null;\n\n  var i,\n      n,\n      sortedPoints = new Array(n),\n      flippedPoints = new Array(n);\n\n  for (i = 0; i < n; ++i) sortedPoints[i] = [+points[i][0], +points[i][1], i];\n  sortedPoints.sort(lexicographicOrder);\n  for (i = 0; i < n; ++i) flippedPoints[i] = [sortedPoints[i][0], -sortedPoints[i][1]];\n\n  var upperIndexes = computeUpperHullIndexes(sortedPoints),\n      lowerIndexes = computeUpperHullIndexes(flippedPoints);\n\n  // Construct the hull polygon, removing possible duplicate endpoints.\n  var skipLeft = lowerIndexes[0] === upperIndexes[0],\n      skipRight = lowerIndexes[lowerIndexes.length - 1] === upperIndexes[upperIndexes.length - 1],\n      hull = [];\n\n  // Add upper hull in right-to-l order.\n  // Then add lower hull in left-to-right order.\n  for (i = upperIndexes.length - 1; i >= 0; --i) hull.push(points[sortedPoints[upperIndexes[i]][2]]);\n  for (i = +skipLeft; i < lowerIndexes.length - skipRight; ++i) hull.push(points[sortedPoints[lowerIndexes[i]][2]]);\n\n  return hull;\n}\n","export default function(polygon, point) {\n  var n = polygon.length,\n      p = polygon[n - 1],\n      x = point[0], y = point[1],\n      x0 = p[0], y0 = p[1],\n      x1, y1,\n      inside = false;\n\n  for (var i = 0; i < n; ++i) {\n    p = polygon[i], x1 = p[0], y1 = p[1];\n    if (((y1 > y) !== (y0 > y)) && (x < (x0 - x1) * (y - y1) / (y0 - y1) + x1)) inside = !inside;\n    x0 = x1, y0 = y1;\n  }\n\n  return inside;\n}\n","export default function(polygon) {\n  var i = -1,\n      n = polygon.length,\n      b = polygon[n - 1],\n      xa,\n      ya,\n      xb = b[0],\n      yb = b[1],\n      perimeter = 0;\n\n  while (++i < n) {\n    xa = xb;\n    ya = yb;\n    b = polygon[i];\n    xb = b[0];\n    yb = b[1];\n    xa -= xb;\n    ya -= yb;\n    perimeter += Math.sqrt(xa * xa + ya * ya);\n  }\n\n  return perimeter;\n}\n","export default function() {\n  return Math.random();\n}\n","import defaultSource from \"./defaultSource\";\n\nexport default (function sourceRandomUniform(source) {\n  function randomUniform(min, max) {\n    min = min == null ? 0 : +min;\n    max = max == null ? 1 : +max;\n    if (arguments.length === 1) max = min, min = 0;\n    else max -= min;\n    return function() {\n      return source() * max + min;\n    };\n  }\n\n  randomUniform.source = sourceRandomUniform;\n\n  return randomUniform;\n})(defaultSource);\n","import defaultSource from \"./defaultSource\";\n\nexport default (function sourceRandomNormal(source) {\n  function randomNormal(mu, sigma) {\n    var x, r;\n    mu = mu == null ? 0 : +mu;\n    sigma = sigma == null ? 1 : +sigma;\n    return function() {\n      var y;\n\n      // If available, use the second previously-generated uniform random.\n      if (x != null) y = x, x = null;\n\n      // Otherwise, generate a new x and y.\n      else do {\n        x = source() * 2 - 1;\n        y = source() * 2 - 1;\n        r = x * x + y * y;\n      } while (!r || r > 1);\n\n      return mu + sigma * y * Math.sqrt(-2 * Math.log(r) / r);\n    };\n  }\n\n  randomNormal.source = sourceRandomNormal;\n\n  return randomNormal;\n})(defaultSource);\n","import defaultSource from \"./defaultSource\";\nimport normal from \"./normal\";\n\nexport default (function sourceRandomLogNormal(source) {\n  function randomLogNormal() {\n    var randomNormal = normal.source(source).apply(this, arguments);\n    return function() {\n      return Math.exp(randomNormal());\n    };\n  }\n\n  randomLogNormal.source = sourceRandomLogNormal;\n\n  return randomLogNormal;\n})(defaultSource);\n","import defaultSource from \"./defaultSource\";\n\nexport default (function sourceRandomIrwinHall(source) {\n  function randomIrwinHall(n) {\n    return function() {\n      for (var sum = 0, i = 0; i < n; ++i) sum += source();\n      return sum;\n    };\n  }\n\n  randomIrwinHall.source = sourceRandomIrwinHall;\n\n  return randomIrwinHall;\n})(defaultSource);\n","import defaultSource from \"./defaultSource\";\nimport irwinHall from \"./irwinHall\";\n\nexport default (function sourceRandomBates(source) {\n  function randomBates(n) {\n    var randomIrwinHall = irwinHall.source(source)(n);\n    return function() {\n      return randomIrwinHall() / n;\n    };\n  }\n\n  randomBates.source = sourceRandomBates;\n\n  return randomBates;\n})(defaultSource);\n","import defaultSource from \"./defaultSource\";\n\nexport default (function sourceRandomExponential(source) {\n  function randomExponential(lambda) {\n    return function() {\n      return -Math.log(1 - source()) / lambda;\n    };\n  }\n\n  randomExponential.source = sourceRandomExponential;\n\n  return randomExponential;\n})(defaultSource);\n","function responseBlob(response) {\n  if (!response.ok) throw new Error(response.status + \" \" + response.statusText);\n  return response.blob();\n}\n\nexport default function(input, init) {\n  return fetch(input, init).then(responseBlob);\n}\n","function responseArrayBuffer(response) {\n  if (!response.ok) throw new Error(response.status + \" \" + response.statusText);\n  return response.arrayBuffer();\n}\n\nexport default function(input, init) {\n  return fetch(input, init).then(responseArrayBuffer);\n}\n","function responseText(response) {\n  if (!response.ok) throw new Error(response.status + \" \" + response.statusText);\n  return response.text();\n}\n\nexport default function(input, init) {\n  return fetch(input, init).then(responseText);\n}\n","import {csvParse, dsvFormat, tsvParse} from \"d3-dsv\";\nimport text from \"./text\";\n\nfunction dsvParse(parse) {\n  return function(input, init, row) {\n    if (arguments.length === 2 && typeof init === \"function\") row = init, init = undefined;\n    return text(input, init).then(function(response) {\n      return parse(response, row);\n    });\n  };\n}\n\nexport default function dsv(delimiter, input, init, row) {\n  if (arguments.length === 3 && typeof init === \"function\") row = init, init = undefined;\n  var format = dsvFormat(delimiter);\n  return text(input, init).then(function(response) {\n    return format.parse(response, row);\n  });\n}\n\nexport var csv = dsvParse(csvParse);\nexport var tsv = dsvParse(tsvParse);\n","export default function(input, init) {\n  return new Promise(function(resolve, reject) {\n    var image = new Image;\n    for (var key in init) image[key] = init[key];\n    image.onerror = reject;\n    image.onload = function() { resolve(image); };\n    image.src = input;\n  });\n}\n","function responseJson(response) {\n  if (!response.ok) throw new Error(response.status + \" \" + response.statusText);\n  return response.json();\n}\n\nexport default function(input, init) {\n  return fetch(input, init).then(responseJson);\n}\n","import text from \"./text\";\n\nfunction parser(type) {\n  return function(input, init)  {\n    return text(input, init).then(function(text) {\n      return (new DOMParser).parseFromString(text, type);\n    });\n  };\n}\n\nexport default parser(\"application/xml\");\n\nexport var html = parser(\"text/html\");\n\nexport var svg = parser(\"image/svg+xml\");\n","var array = Array.prototype;\n\nexport var slice = array.slice;\n","export default function(a, b) {\n  return a - b;\n}\n","export default function(ring) {\n  var i = 0, n = ring.length, area = ring[n - 1][1] * ring[0][0] - ring[n - 1][0] * ring[0][1];\n  while (++i < n) area += ring[i - 1][1] * ring[i][0] - ring[i - 1][0] * ring[i][1];\n  return area;\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function(ring, hole) {\n  var i = -1, n = hole.length, c;\n  while (++i < n) if (c = ringContains(ring, hole[i])) return c;\n  return 0;\n}\n\nfunction ringContains(ring, point) {\n  var x = point[0], y = point[1], contains = -1;\n  for (var i = 0, n = ring.length, j = n - 1; i < n; j = i++) {\n    var pi = ring[i], xi = pi[0], yi = pi[1], pj = ring[j], xj = pj[0], yj = pj[1];\n    if (segmentContains(pi, pj, point)) return 0;\n    if (((yi > y) !== (yj > y)) && ((x < (xj - xi) * (y - yi) / (yj - yi) + xi))) contains = -contains;\n  }\n  return contains;\n}\n\nfunction segmentContains(a, b, c) {\n  var i; return collinear(a, b, c) && within(a[i = +(a[0] === b[0])], c[i], b[i]);\n}\n\nfunction collinear(a, b, c) {\n  return (b[0] - a[0]) * (c[1] - a[1]) === (c[0] - a[0]) * (b[1] - a[1]);\n}\n\nfunction within(p, q, r) {\n  return p <= q && q <= r || r <= q && q <= p;\n}\n","export default function() {}\n","import {extent, thresholdSturges, tickStep, range} from \"d3-array\";\nimport {slice} from \"./array\";\nimport ascending from \"./ascending\";\nimport area from \"./area\";\nimport constant from \"./constant\";\nimport contains from \"./contains\";\nimport noop from \"./noop\";\n\nvar cases = [\n  [],\n  [[[1.0, 1.5], [0.5, 1.0]]],\n  [[[1.5, 1.0], [1.0, 1.5]]],\n  [[[1.5, 1.0], [0.5, 1.0]]],\n  [[[1.0, 0.5], [1.5, 1.0]]],\n  [[[1.0, 1.5], [0.5, 1.0]], [[1.0, 0.5], [1.5, 1.0]]],\n  [[[1.0, 0.5], [1.0, 1.5]]],\n  [[[1.0, 0.5], [0.5, 1.0]]],\n  [[[0.5, 1.0], [1.0, 0.5]]],\n  [[[1.0, 1.5], [1.0, 0.5]]],\n  [[[0.5, 1.0], [1.0, 0.5]], [[1.5, 1.0], [1.0, 1.5]]],\n  [[[1.5, 1.0], [1.0, 0.5]]],\n  [[[0.5, 1.0], [1.5, 1.0]]],\n  [[[1.0, 1.5], [1.5, 1.0]]],\n  [[[0.5, 1.0], [1.0, 1.5]]],\n  []\n];\n\nexport default function() {\n  var dx = 1,\n      dy = 1,\n      threshold = thresholdSturges,\n      smooth = smoothLinear;\n\n  function contours(values) {\n    var tz = threshold(values);\n\n    // Convert number of thresholds into uniform thresholds.\n    if (!Array.isArray(tz)) {\n      var domain = extent(values), start = domain[0], stop = domain[1];\n      tz = tickStep(start, stop, tz);\n      tz = range(Math.floor(start / tz) * tz, Math.floor(stop / tz) * tz, tz);\n    } else {\n      tz = tz.slice().sort(ascending);\n    }\n\n    return tz.map(function(value) {\n      return contour(values, value);\n    });\n  }\n\n  // Accumulate, smooth contour rings, assign holes to exterior rings.\n  // Based on https://github.com/mbostock/shapefile/blob/v0.6.2/shp/polygon.js\n  function contour(values, value) {\n    var polygons = [],\n        holes = [];\n\n    isorings(values, value, function(ring) {\n      smooth(ring, values, value);\n      if (area(ring) > 0) polygons.push([ring]);\n      else holes.push(ring);\n    });\n\n    holes.forEach(function(hole) {\n      for (var i = 0, n = polygons.length, polygon; i < n; ++i) {\n        if (contains((polygon = polygons[i])[0], hole) !== -1) {\n          polygon.push(hole);\n          return;\n        }\n      }\n    });\n\n    return {\n      type: \"MultiPolygon\",\n      value: value,\n      coordinates: polygons\n    };\n  }\n\n  // Marching squares with isolines stitched into rings.\n  // Based on https://github.com/topojson/topojson-client/blob/v3.0.0/src/stitch.js\n  function isorings(values, value, callback) {\n    var fragmentByStart = new Array,\n        fragmentByEnd = new Array,\n        x, y, t0, t1, t2, t3;\n\n    // Special case for the first row (y = -1, t2 = t3 = 0).\n    x = y = -1;\n    t1 = values[0] >= value;\n    cases[t1 << 1].forEach(stitch);\n    while (++x < dx - 1) {\n      t0 = t1, t1 = values[x + 1] >= value;\n      cases[t0 | t1 << 1].forEach(stitch);\n    }\n    cases[t1 << 0].forEach(stitch);\n\n    // General case for the intermediate rows.\n    while (++y < dy - 1) {\n      x = -1;\n      t1 = values[y * dx + dx] >= value;\n      t2 = values[y * dx] >= value;\n      cases[t1 << 1 | t2 << 2].forEach(stitch);\n      while (++x < dx - 1) {\n        t0 = t1, t1 = values[y * dx + dx + x + 1] >= value;\n        t3 = t2, t2 = values[y * dx + x + 1] >= value;\n        cases[t0 | t1 << 1 | t2 << 2 | t3 << 3].forEach(stitch);\n      }\n      cases[t1 | t2 << 3].forEach(stitch);\n    }\n\n    // Special case for the last row (y = dy - 1, t0 = t1 = 0).\n    x = -1;\n    t2 = values[y * dx] >= value;\n    cases[t2 << 2].forEach(stitch);\n    while (++x < dx - 1) {\n      t3 = t2, t2 = values[y * dx + x + 1] >= value;\n      cases[t2 << 2 | t3 << 3].forEach(stitch);\n    }\n    cases[t2 << 3].forEach(stitch);\n\n    function stitch(line) {\n      var start = [line[0][0] + x, line[0][1] + y],\n          end = [line[1][0] + x, line[1][1] + y],\n          startIndex = index(start),\n          endIndex = index(end),\n          f, g;\n      if (f = fragmentByEnd[startIndex]) {\n        if (g = fragmentByStart[endIndex]) {\n          delete fragmentByEnd[f.end];\n          delete fragmentByStart[g.start];\n          if (f === g) {\n            f.ring.push(end);\n            callback(f.ring);\n          } else {\n            fragmentByStart[f.start] = fragmentByEnd[g.end] = {start: f.start, end: g.end, ring: f.ring.concat(g.ring)};\n          }\n        } else {\n          delete fragmentByEnd[f.end];\n          f.ring.push(end);\n          fragmentByEnd[f.end = endIndex] = f;\n        }\n      } else if (f = fragmentByStart[endIndex]) {\n        if (g = fragmentByEnd[startIndex]) {\n          delete fragmentByStart[f.start];\n          delete fragmentByEnd[g.end];\n          if (f === g) {\n            f.ring.push(end);\n            callback(f.ring);\n          } else {\n            fragmentByStart[g.start] = fragmentByEnd[f.end] = {start: g.start, end: f.end, ring: g.ring.concat(f.ring)};\n          }\n        } else {\n          delete fragmentByStart[f.start];\n          f.ring.unshift(start);\n          fragmentByStart[f.start = startIndex] = f;\n        }\n      } else {\n        fragmentByStart[startIndex] = fragmentByEnd[endIndex] = {start: startIndex, end: endIndex, ring: [start, end]};\n      }\n    }\n  }\n\n  function index(point) {\n    return point[0] * 2 + point[1] * (dx + 1) * 4;\n  }\n\n  function smoothLinear(ring, values, value) {\n    ring.forEach(function(point) {\n      var x = point[0],\n          y = point[1],\n          xt = x | 0,\n          yt = y | 0,\n          v0,\n          v1 = values[yt * dx + xt];\n      if (x > 0 && x < dx && xt === x) {\n        v0 = values[yt * dx + xt - 1];\n        point[0] = x + (value - v0) / (v1 - v0) - 0.5;\n      }\n      if (y > 0 && y < dy && yt === y) {\n        v0 = values[(yt - 1) * dx + xt];\n        point[1] = y + (value - v0) / (v1 - v0) - 0.5;\n      }\n    });\n  }\n\n  contours.contour = contour;\n\n  contours.size = function(_) {\n    if (!arguments.length) return [dx, dy];\n    var _0 = Math.ceil(_[0]), _1 = Math.ceil(_[1]);\n    if (!(_0 > 0) || !(_1 > 0)) throw new Error(\"invalid size\");\n    return dx = _0, dy = _1, contours;\n  };\n\n  contours.thresholds = function(_) {\n    return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant(slice.call(_)) : constant(_), contours) : threshold;\n  };\n\n  contours.smooth = function(_) {\n    return arguments.length ? (smooth = _ ? smoothLinear : noop, contours) : smooth === smoothLinear;\n  };\n\n  return contours;\n}\n","// TODO Optimize edge cases.\n// TODO Optimize index calculation.\n// TODO Optimize arguments.\nexport function blurX(source, target, r) {\n  var n = source.width,\n      m = source.height,\n      w = (r << 1) + 1;\n  for (var j = 0; j < m; ++j) {\n    for (var i = 0, sr = 0; i < n + r; ++i) {\n      if (i < n) {\n        sr += source.data[i + j * n];\n      }\n      if (i >= r) {\n        if (i >= w) {\n          sr -= source.data[i - w + j * n];\n        }\n        target.data[i - r + j * n] = sr / Math.min(i + 1, n - 1 + w - i, w);\n      }\n    }\n  }\n}\n\n// TODO Optimize edge cases.\n// TODO Optimize index calculation.\n// TODO Optimize arguments.\nexport function blurY(source, target, r) {\n  var n = source.width,\n      m = source.height,\n      w = (r << 1) + 1;\n  for (var i = 0; i < n; ++i) {\n    for (var j = 0, sr = 0; j < m + r; ++j) {\n      if (j < m) {\n        sr += source.data[i + j * n];\n      }\n      if (j >= r) {\n        if (j >= w) {\n          sr -= source.data[i + (j - w) * n];\n        }\n        target.data[i + (j - r) * n] = sr / Math.min(j + 1, m - 1 + w - j, w);\n      }\n    }\n  }\n}\n","import {max, range, tickStep} from \"d3-array\";\nimport {slice} from \"./array\";\nimport {blurX, blurY} from \"./blur\";\nimport constant from \"./constant\";\nimport contours from \"./contours\";\n\nfunction defaultX(d) {\n  return d[0];\n}\n\nfunction defaultY(d) {\n  return d[1];\n}\n\nexport default function() {\n  var x = defaultX,\n      y = defaultY,\n      dx = 960,\n      dy = 500,\n      r = 20, // blur radius\n      k = 2, // log2(grid cell size)\n      o = r * 3, // grid offset, to pad for blur\n      n = (dx + o * 2) >> k, // grid width\n      m = (dy + o * 2) >> k, // grid height\n      threshold = constant(20);\n\n  function density(data) {\n    var values0 = new Float32Array(n * m),\n        values1 = new Float32Array(n * m);\n\n    data.forEach(function(d, i, data) {\n      var xi = (x(d, i, data) + o) >> k,\n          yi = (y(d, i, data) + o) >> k;\n      if (xi >= 0 && xi < n && yi >= 0 && yi < m) {\n        ++values0[xi + yi * n];\n      }\n    });\n\n    // TODO Optimize.\n    blurX({width: n, height: m, data: values0}, {width: n, height: m, data: values1}, r >> k);\n    blurY({width: n, height: m, data: values1}, {width: n, height: m, data: values0}, r >> k);\n    blurX({width: n, height: m, data: values0}, {width: n, height: m, data: values1}, r >> k);\n    blurY({width: n, height: m, data: values1}, {width: n, height: m, data: values0}, r >> k);\n    blurX({width: n, height: m, data: values0}, {width: n, height: m, data: values1}, r >> k);\n    blurY({width: n, height: m, data: values1}, {width: n, height: m, data: values0}, r >> k);\n\n    var tz = threshold(values0);\n\n    // Convert number of thresholds into uniform thresholds.\n    if (!Array.isArray(tz)) {\n      var stop = max(values0);\n      tz = tickStep(0, stop, tz);\n      tz = range(0, Math.floor(stop / tz) * tz, tz);\n      tz.shift();\n    }\n\n    return contours()\n        .thresholds(tz)\n        .size([n, m])\n      (values0)\n        .map(transform);\n  }\n\n  function transform(geometry) {\n    geometry.value *= Math.pow(2, -2 * k); // Density in points per square pixel.\n    geometry.coordinates.forEach(transformPolygon);\n    return geometry;\n  }\n\n  function transformPolygon(coordinates) {\n    coordinates.forEach(transformRing);\n  }\n\n  function transformRing(coordinates) {\n    coordinates.forEach(transformPoint);\n  }\n\n  // TODO Optimize.\n  function transformPoint(coordinates) {\n    coordinates[0] = coordinates[0] * Math.pow(2, k) - o;\n    coordinates[1] = coordinates[1] * Math.pow(2, k) - o;\n  }\n\n  function resize() {\n    o = r * 3;\n    n = (dx + o * 2) >> k;\n    m = (dy + o * 2) >> k;\n    return density;\n  }\n\n  density.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), density) : x;\n  };\n\n  density.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), density) : y;\n  };\n\n  density.size = function(_) {\n    if (!arguments.length) return [dx, dy];\n    var _0 = Math.ceil(_[0]), _1 = Math.ceil(_[1]);\n    if (!(_0 >= 0) && !(_0 >= 0)) throw new Error(\"invalid size\");\n    return dx = _0, dy = _1, resize();\n  };\n\n  density.cellSize = function(_) {\n    if (!arguments.length) return 1 << k;\n    if (!((_ = +_) >= 1)) throw new Error(\"invalid cell size\");\n    return k = Math.floor(Math.log(_) / Math.LN2), resize();\n  };\n\n  density.thresholds = function(_) {\n    return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant(slice.call(_)) : constant(_), density) : threshold;\n  };\n\n  density.bandwidth = function(_) {\n    if (!arguments.length) return Math.sqrt(r * (r + 1));\n    if (!((_ = +_) >= 0)) throw new Error(\"invalid bandwidth\");\n    return r = Math.round((Math.sqrt(4 * _ * _ + 1) - 1) / 2), resize();\n  };\n\n  return density;\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export function x(d) {\n  return d[0];\n}\n\nexport function y(d) {\n  return d[1];\n}\n","function RedBlackTree() {\n  this._ = null; // root node\n}\n\nexport function RedBlackNode(node) {\n  node.U = // parent node\n  node.C = // color - true for red, false for black\n  node.L = // left node\n  node.R = // right node\n  node.P = // previous node\n  node.N = null; // next node\n}\n\nRedBlackTree.prototype = {\n  constructor: RedBlackTree,\n\n  insert: function(after, node) {\n    var parent, grandpa, uncle;\n\n    if (after) {\n      node.P = after;\n      node.N = after.N;\n      if (after.N) after.N.P = node;\n      after.N = node;\n      if (after.R) {\n        after = after.R;\n        while (after.L) after = after.L;\n        after.L = node;\n      } else {\n        after.R = node;\n      }\n      parent = after;\n    } else if (this._) {\n      after = RedBlackFirst(this._);\n      node.P = null;\n      node.N = after;\n      after.P = after.L = node;\n      parent = after;\n    } else {\n      node.P = node.N = null;\n      this._ = node;\n      parent = null;\n    }\n    node.L = node.R = null;\n    node.U = parent;\n    node.C = true;\n\n    after = node;\n    while (parent && parent.C) {\n      grandpa = parent.U;\n      if (parent === grandpa.L) {\n        uncle = grandpa.R;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.R) {\n            RedBlackRotateLeft(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateRight(this, grandpa);\n        }\n      } else {\n        uncle = grandpa.L;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.L) {\n            RedBlackRotateRight(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateLeft(this, grandpa);\n        }\n      }\n      parent = after.U;\n    }\n    this._.C = false;\n  },\n\n  remove: function(node) {\n    if (node.N) node.N.P = node.P;\n    if (node.P) node.P.N = node.N;\n    node.N = node.P = null;\n\n    var parent = node.U,\n        sibling,\n        left = node.L,\n        right = node.R,\n        next,\n        red;\n\n    if (!left) next = right;\n    else if (!right) next = left;\n    else next = RedBlackFirst(right);\n\n    if (parent) {\n      if (parent.L === node) parent.L = next;\n      else parent.R = next;\n    } else {\n      this._ = next;\n    }\n\n    if (left && right) {\n      red = next.C;\n      next.C = node.C;\n      next.L = left;\n      left.U = next;\n      if (next !== right) {\n        parent = next.U;\n        next.U = node.U;\n        node = next.R;\n        parent.L = node;\n        next.R = right;\n        right.U = next;\n      } else {\n        next.U = parent;\n        parent = next;\n        node = next.R;\n      }\n    } else {\n      red = node.C;\n      node = next;\n    }\n\n    if (node) node.U = parent;\n    if (red) return;\n    if (node && node.C) { node.C = false; return; }\n\n    do {\n      if (node === this._) break;\n      if (node === parent.L) {\n        sibling = parent.R;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateLeft(this, parent);\n          sibling = parent.R;\n        }\n        if ((sibling.L && sibling.L.C)\n            || (sibling.R && sibling.R.C)) {\n          if (!sibling.R || !sibling.R.C) {\n            sibling.L.C = false;\n            sibling.C = true;\n            RedBlackRotateRight(this, sibling);\n            sibling = parent.R;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.R.C = false;\n          RedBlackRotateLeft(this, parent);\n          node = this._;\n          break;\n        }\n      } else {\n        sibling = parent.L;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateRight(this, parent);\n          sibling = parent.L;\n        }\n        if ((sibling.L && sibling.L.C)\n          || (sibling.R && sibling.R.C)) {\n          if (!sibling.L || !sibling.L.C) {\n            sibling.R.C = false;\n            sibling.C = true;\n            RedBlackRotateLeft(this, sibling);\n            sibling = parent.L;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.L.C = false;\n          RedBlackRotateRight(this, parent);\n          node = this._;\n          break;\n        }\n      }\n      sibling.C = true;\n      node = parent;\n      parent = parent.U;\n    } while (!node.C);\n\n    if (node) node.C = false;\n  }\n};\n\nfunction RedBlackRotateLeft(tree, node) {\n  var p = node,\n      q = node.R,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.R = q.L;\n  if (p.R) p.R.U = p;\n  q.L = p;\n}\n\nfunction RedBlackRotateRight(tree, node) {\n  var p = node,\n      q = node.L,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.L = q.R;\n  if (p.L) p.L.U = p;\n  q.R = p;\n}\n\nfunction RedBlackFirst(node) {\n  while (node.L) node = node.L;\n  return node;\n}\n\nexport default RedBlackTree;\n","import {cells, edges, epsilon} from \"./Diagram\";\n\nexport function createEdge(left, right, v0, v1) {\n  var edge = [null, null],\n      index = edges.push(edge) - 1;\n  edge.left = left;\n  edge.right = right;\n  if (v0) setEdgeEnd(edge, left, right, v0);\n  if (v1) setEdgeEnd(edge, right, left, v1);\n  cells[left.index].halfedges.push(index);\n  cells[right.index].halfedges.push(index);\n  return edge;\n}\n\nexport function createBorderEdge(left, v0, v1) {\n  var edge = [v0, v1];\n  edge.left = left;\n  return edge;\n}\n\nexport function setEdgeEnd(edge, left, right, vertex) {\n  if (!edge[0] && !edge[1]) {\n    edge[0] = vertex;\n    edge.left = left;\n    edge.right = right;\n  } else if (edge.left === right) {\n    edge[1] = vertex;\n  } else {\n    edge[0] = vertex;\n  }\n}\n\n// Liang–Barsky line clipping.\nfunction clipEdge(edge, x0, y0, x1, y1) {\n  var a = edge[0],\n      b = edge[1],\n      ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (!(t0 > 0) && !(t1 < 1)) return true; // TODO Better check?\n\n  if (t0 > 0) edge[0] = [ax + t0 * dx, ay + t0 * dy];\n  if (t1 < 1) edge[1] = [ax + t1 * dx, ay + t1 * dy];\n  return true;\n}\n\nfunction connectEdge(edge, x0, y0, x1, y1) {\n  var v1 = edge[1];\n  if (v1) return true;\n\n  var v0 = edge[0],\n      left = edge.left,\n      right = edge.right,\n      lx = left[0],\n      ly = left[1],\n      rx = right[0],\n      ry = right[1],\n      fx = (lx + rx) / 2,\n      fy = (ly + ry) / 2,\n      fm,\n      fb;\n\n  if (ry === ly) {\n    if (fx < x0 || fx >= x1) return;\n    if (lx > rx) {\n      if (!v0) v0 = [fx, y0];\n      else if (v0[1] >= y1) return;\n      v1 = [fx, y1];\n    } else {\n      if (!v0) v0 = [fx, y1];\n      else if (v0[1] < y0) return;\n      v1 = [fx, y0];\n    }\n  } else {\n    fm = (lx - rx) / (ry - ly);\n    fb = fy - fm * fx;\n    if (fm < -1 || fm > 1) {\n      if (lx > rx) {\n        if (!v0) v0 = [(y0 - fb) / fm, y0];\n        else if (v0[1] >= y1) return;\n        v1 = [(y1 - fb) / fm, y1];\n      } else {\n        if (!v0) v0 = [(y1 - fb) / fm, y1];\n        else if (v0[1] < y0) return;\n        v1 = [(y0 - fb) / fm, y0];\n      }\n    } else {\n      if (ly < ry) {\n        if (!v0) v0 = [x0, fm * x0 + fb];\n        else if (v0[0] >= x1) return;\n        v1 = [x1, fm * x1 + fb];\n      } else {\n        if (!v0) v0 = [x1, fm * x1 + fb];\n        else if (v0[0] < x0) return;\n        v1 = [x0, fm * x0 + fb];\n      }\n    }\n  }\n\n  edge[0] = v0;\n  edge[1] = v1;\n  return true;\n}\n\nexport function clipEdges(x0, y0, x1, y1) {\n  var i = edges.length,\n      edge;\n\n  while (i--) {\n    if (!connectEdge(edge = edges[i], x0, y0, x1, y1)\n        || !clipEdge(edge, x0, y0, x1, y1)\n        || !(Math.abs(edge[0][0] - edge[1][0]) > epsilon\n            || Math.abs(edge[0][1] - edge[1][1]) > epsilon)) {\n      delete edges[i];\n    }\n  }\n}\n","import {createBorderEdge} from \"./Edge\";\nimport {cells, edges, epsilon} from \"./Diagram\";\n\nexport function createCell(site) {\n  return cells[site.index] = {\n    site: site,\n    halfedges: []\n  };\n}\n\nfunction cellHalfedgeAngle(cell, edge) {\n  var site = cell.site,\n      va = edge.left,\n      vb = edge.right;\n  if (site === vb) vb = va, va = site;\n  if (vb) return Math.atan2(vb[1] - va[1], vb[0] - va[0]);\n  if (site === va) va = edge[1], vb = edge[0];\n  else va = edge[0], vb = edge[1];\n  return Math.atan2(va[0] - vb[0], vb[1] - va[1]);\n}\n\nexport function cellHalfedgeStart(cell, edge) {\n  return edge[+(edge.left !== cell.site)];\n}\n\nexport function cellHalfedgeEnd(cell, edge) {\n  return edge[+(edge.left === cell.site)];\n}\n\nexport function sortCellHalfedges() {\n  for (var i = 0, n = cells.length, cell, halfedges, j, m; i < n; ++i) {\n    if ((cell = cells[i]) && (m = (halfedges = cell.halfedges).length)) {\n      var index = new Array(m),\n          array = new Array(m);\n      for (j = 0; j < m; ++j) index[j] = j, array[j] = cellHalfedgeAngle(cell, edges[halfedges[j]]);\n      index.sort(function(i, j) { return array[j] - array[i]; });\n      for (j = 0; j < m; ++j) array[j] = halfedges[index[j]];\n      for (j = 0; j < m; ++j) halfedges[j] = array[j];\n    }\n  }\n}\n\nexport function clipCells(x0, y0, x1, y1) {\n  var nCells = cells.length,\n      iCell,\n      cell,\n      site,\n      iHalfedge,\n      halfedges,\n      nHalfedges,\n      start,\n      startX,\n      startY,\n      end,\n      endX,\n      endY,\n      cover = true;\n\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      site = cell.site;\n      halfedges = cell.halfedges;\n      iHalfedge = halfedges.length;\n\n      // Remove any dangling clipped edges.\n      while (iHalfedge--) {\n        if (!edges[halfedges[iHalfedge]]) {\n          halfedges.splice(iHalfedge, 1);\n        }\n      }\n\n      // Insert any border edges as necessary.\n      iHalfedge = 0, nHalfedges = halfedges.length;\n      while (iHalfedge < nHalfedges) {\n        end = cellHalfedgeEnd(cell, edges[halfedges[iHalfedge]]), endX = end[0], endY = end[1];\n        start = cellHalfedgeStart(cell, edges[halfedges[++iHalfedge % nHalfedges]]), startX = start[0], startY = start[1];\n        if (Math.abs(endX - startX) > epsilon || Math.abs(endY - startY) > epsilon) {\n          halfedges.splice(iHalfedge, 0, edges.push(createBorderEdge(site, end,\n              Math.abs(endX - x0) < epsilon && y1 - endY > epsilon ? [x0, Math.abs(startX - x0) < epsilon ? startY : y1]\n              : Math.abs(endY - y1) < epsilon && x1 - endX > epsilon ? [Math.abs(startY - y1) < epsilon ? startX : x1, y1]\n              : Math.abs(endX - x1) < epsilon && endY - y0 > epsilon ? [x1, Math.abs(startX - x1) < epsilon ? startY : y0]\n              : Math.abs(endY - y0) < epsilon && endX - x0 > epsilon ? [Math.abs(startY - y0) < epsilon ? startX : x0, y0]\n              : null)) - 1);\n          ++nHalfedges;\n        }\n      }\n\n      if (nHalfedges) cover = false;\n    }\n  }\n\n  // If there weren’t any edges, have the closest site cover the extent.\n  // It doesn’t matter which corner of the extent we measure!\n  if (cover) {\n    var dx, dy, d2, dc = Infinity;\n\n    for (iCell = 0, cover = null; iCell < nCells; ++iCell) {\n      if (cell = cells[iCell]) {\n        site = cell.site;\n        dx = site[0] - x0;\n        dy = site[1] - y0;\n        d2 = dx * dx + dy * dy;\n        if (d2 < dc) dc = d2, cover = cell;\n      }\n    }\n\n    if (cover) {\n      var v00 = [x0, y0], v01 = [x0, y1], v11 = [x1, y1], v10 = [x1, y0];\n      cover.halfedges.push(\n        edges.push(createBorderEdge(site = cover.site, v00, v01)) - 1,\n        edges.push(createBorderEdge(site, v01, v11)) - 1,\n        edges.push(createBorderEdge(site, v11, v10)) - 1,\n        edges.push(createBorderEdge(site, v10, v00)) - 1\n      );\n    }\n  }\n\n  // Lastly delete any cells with no edges; these were entirely clipped.\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      if (!cell.halfedges.length) {\n        delete cells[iCell];\n      }\n    }\n  }\n}\n","import {RedBlackNode} from \"./RedBlackTree\";\nimport {circles, epsilon2} from \"./Diagram\";\n\nvar circlePool = [];\n\nexport var firstCircle;\n\nfunction Circle() {\n  RedBlackNode(this);\n  this.x =\n  this.y =\n  this.arc =\n  this.site =\n  this.cy = null;\n}\n\nexport function attachCircle(arc) {\n  var lArc = arc.P,\n      rArc = arc.N;\n\n  if (!lArc || !rArc) return;\n\n  var lSite = lArc.site,\n      cSite = arc.site,\n      rSite = rArc.site;\n\n  if (lSite === rSite) return;\n\n  var bx = cSite[0],\n      by = cSite[1],\n      ax = lSite[0] - bx,\n      ay = lSite[1] - by,\n      cx = rSite[0] - bx,\n      cy = rSite[1] - by;\n\n  var d = 2 * (ax * cy - ay * cx);\n  if (d >= -epsilon2) return;\n\n  var ha = ax * ax + ay * ay,\n      hc = cx * cx + cy * cy,\n      x = (cy * ha - ay * hc) / d,\n      y = (ax * hc - cx * ha) / d;\n\n  var circle = circlePool.pop() || new Circle;\n  circle.arc = arc;\n  circle.site = cSite;\n  circle.x = x + bx;\n  circle.y = (circle.cy = y + by) + Math.sqrt(x * x + y * y); // y bottom\n\n  arc.circle = circle;\n\n  var before = null,\n      node = circles._;\n\n  while (node) {\n    if (circle.y < node.y || (circle.y === node.y && circle.x <= node.x)) {\n      if (node.L) node = node.L;\n      else { before = node.P; break; }\n    } else {\n      if (node.R) node = node.R;\n      else { before = node; break; }\n    }\n  }\n\n  circles.insert(before, circle);\n  if (!before) firstCircle = circle;\n}\n\nexport function detachCircle(arc) {\n  var circle = arc.circle;\n  if (circle) {\n    if (!circle.P) firstCircle = circle.N;\n    circles.remove(circle);\n    circlePool.push(circle);\n    RedBlackNode(circle);\n    arc.circle = null;\n  }\n}\n","import {RedBlackNode} from \"./RedBlackTree\";\nimport {createCell} from \"./Cell\";\nimport {attachCircle, detachCircle} from \"./Circle\";\nimport {createEdge, setEdgeEnd} from \"./Edge\";\nimport {beaches, epsilon} from \"./Diagram\";\n\nvar beachPool = [];\n\nfunction Beach() {\n  RedBlackNode(this);\n  this.edge =\n  this.site =\n  this.circle = null;\n}\n\nfunction createBeach(site) {\n  var beach = beachPool.pop() || new Beach;\n  beach.site = site;\n  return beach;\n}\n\nfunction detachBeach(beach) {\n  detachCircle(beach);\n  beaches.remove(beach);\n  beachPool.push(beach);\n  RedBlackNode(beach);\n}\n\nexport function removeBeach(beach) {\n  var circle = beach.circle,\n      x = circle.x,\n      y = circle.cy,\n      vertex = [x, y],\n      previous = beach.P,\n      next = beach.N,\n      disappearing = [beach];\n\n  detachBeach(beach);\n\n  var lArc = previous;\n  while (lArc.circle\n      && Math.abs(x - lArc.circle.x) < epsilon\n      && Math.abs(y - lArc.circle.cy) < epsilon) {\n    previous = lArc.P;\n    disappearing.unshift(lArc);\n    detachBeach(lArc);\n    lArc = previous;\n  }\n\n  disappearing.unshift(lArc);\n  detachCircle(lArc);\n\n  var rArc = next;\n  while (rArc.circle\n      && Math.abs(x - rArc.circle.x) < epsilon\n      && Math.abs(y - rArc.circle.cy) < epsilon) {\n    next = rArc.N;\n    disappearing.push(rArc);\n    detachBeach(rArc);\n    rArc = next;\n  }\n\n  disappearing.push(rArc);\n  detachCircle(rArc);\n\n  var nArcs = disappearing.length,\n      iArc;\n  for (iArc = 1; iArc < nArcs; ++iArc) {\n    rArc = disappearing[iArc];\n    lArc = disappearing[iArc - 1];\n    setEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n  }\n\n  lArc = disappearing[0];\n  rArc = disappearing[nArcs - 1];\n  rArc.edge = createEdge(lArc.site, rArc.site, null, vertex);\n\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nexport function addBeach(site) {\n  var x = site[0],\n      directrix = site[1],\n      lArc,\n      rArc,\n      dxl,\n      dxr,\n      node = beaches._;\n\n  while (node) {\n    dxl = leftBreakPoint(node, directrix) - x;\n    if (dxl > epsilon) node = node.L; else {\n      dxr = x - rightBreakPoint(node, directrix);\n      if (dxr > epsilon) {\n        if (!node.R) {\n          lArc = node;\n          break;\n        }\n        node = node.R;\n      } else {\n        if (dxl > -epsilon) {\n          lArc = node.P;\n          rArc = node;\n        } else if (dxr > -epsilon) {\n          lArc = node;\n          rArc = node.N;\n        } else {\n          lArc = rArc = node;\n        }\n        break;\n      }\n    }\n  }\n\n  createCell(site);\n  var newArc = createBeach(site);\n  beaches.insert(lArc, newArc);\n\n  if (!lArc && !rArc) return;\n\n  if (lArc === rArc) {\n    detachCircle(lArc);\n    rArc = createBeach(lArc.site);\n    beaches.insert(newArc, rArc);\n    newArc.edge = rArc.edge = createEdge(lArc.site, newArc.site);\n    attachCircle(lArc);\n    attachCircle(rArc);\n    return;\n  }\n\n  if (!rArc) { // && lArc\n    newArc.edge = createEdge(lArc.site, newArc.site);\n    return;\n  }\n\n  // else lArc !== rArc\n  detachCircle(lArc);\n  detachCircle(rArc);\n\n  var lSite = lArc.site,\n      ax = lSite[0],\n      ay = lSite[1],\n      bx = site[0] - ax,\n      by = site[1] - ay,\n      rSite = rArc.site,\n      cx = rSite[0] - ax,\n      cy = rSite[1] - ay,\n      d = 2 * (bx * cy - by * cx),\n      hb = bx * bx + by * by,\n      hc = cx * cx + cy * cy,\n      vertex = [(cy * hb - by * hc) / d + ax, (bx * hc - cx * hb) / d + ay];\n\n  setEdgeEnd(rArc.edge, lSite, rSite, vertex);\n  newArc.edge = createEdge(lSite, site, null, vertex);\n  rArc.edge = createEdge(site, rSite, null, vertex);\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nfunction leftBreakPoint(arc, directrix) {\n  var site = arc.site,\n      rfocx = site[0],\n      rfocy = site[1],\n      pby2 = rfocy - directrix;\n\n  if (!pby2) return rfocx;\n\n  var lArc = arc.P;\n  if (!lArc) return -Infinity;\n\n  site = lArc.site;\n  var lfocx = site[0],\n      lfocy = site[1],\n      plby2 = lfocy - directrix;\n\n  if (!plby2) return lfocx;\n\n  var hl = lfocx - rfocx,\n      aby2 = 1 / pby2 - 1 / plby2,\n      b = hl / plby2;\n\n  if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n\n  return (rfocx + lfocx) / 2;\n}\n\nfunction rightBreakPoint(arc, directrix) {\n  var rArc = arc.N;\n  if (rArc) return leftBreakPoint(rArc, directrix);\n  var site = arc.site;\n  return site[1] === directrix ? site[0] : Infinity;\n}\n","import {addBeach, removeBeach} from \"./Beach\";\nimport {sortCellHalfedges, cellHalfedgeStart, clipCells} from \"./Cell\";\nimport {firstCircle} from \"./Circle\";\nimport {clipEdges} from \"./Edge\";\nimport RedBlackTree from \"./RedBlackTree\";\n\nexport var epsilon = 1e-6;\nexport var epsilon2 = 1e-12;\nexport var beaches;\nexport var cells;\nexport var circles;\nexport var edges;\n\nfunction triangleArea(a, b, c) {\n  return (a[0] - c[0]) * (b[1] - a[1]) - (a[0] - b[0]) * (c[1] - a[1]);\n}\n\nfunction lexicographic(a, b) {\n  return b[1] - a[1]\n      || b[0] - a[0];\n}\n\nexport default function Diagram(sites, extent) {\n  var site = sites.sort(lexicographic).pop(),\n      x,\n      y,\n      circle;\n\n  edges = [];\n  cells = new Array(sites.length);\n  beaches = new RedBlackTree;\n  circles = new RedBlackTree;\n\n  while (true) {\n    circle = firstCircle;\n    if (site && (!circle || site[1] < circle.y || (site[1] === circle.y && site[0] < circle.x))) {\n      if (site[0] !== x || site[1] !== y) {\n        addBeach(site);\n        x = site[0], y = site[1];\n      }\n      site = sites.pop();\n    } else if (circle) {\n      removeBeach(circle.arc);\n    } else {\n      break;\n    }\n  }\n\n  sortCellHalfedges();\n\n  if (extent) {\n    var x0 = +extent[0][0],\n        y0 = +extent[0][1],\n        x1 = +extent[1][0],\n        y1 = +extent[1][1];\n    clipEdges(x0, y0, x1, y1);\n    clipCells(x0, y0, x1, y1);\n  }\n\n  this.edges = edges;\n  this.cells = cells;\n\n  beaches =\n  circles =\n  edges =\n  cells = null;\n}\n\nDiagram.prototype = {\n  constructor: Diagram,\n\n  polygons: function() {\n    var edges = this.edges;\n\n    return this.cells.map(function(cell) {\n      var polygon = cell.halfedges.map(function(i) { return cellHalfedgeStart(cell, edges[i]); });\n      polygon.data = cell.site.data;\n      return polygon;\n    });\n  },\n\n  triangles: function() {\n    var triangles = [],\n        edges = this.edges;\n\n    this.cells.forEach(function(cell, i) {\n      if (!(m = (halfedges = cell.halfedges).length)) return;\n      var site = cell.site,\n          halfedges,\n          j = -1,\n          m,\n          s0,\n          e1 = edges[halfedges[m - 1]],\n          s1 = e1.left === site ? e1.right : e1.left;\n\n      while (++j < m) {\n        s0 = s1;\n        e1 = edges[halfedges[j]];\n        s1 = e1.left === site ? e1.right : e1.left;\n        if (s0 && s1 && i < s0.index && i < s1.index && triangleArea(site, s0, s1) < 0) {\n          triangles.push([site.data, s0.data, s1.data]);\n        }\n      }\n    });\n\n    return triangles;\n  },\n\n  links: function() {\n    return this.edges.filter(function(edge) {\n      return edge.right;\n    }).map(function(edge) {\n      return {\n        source: edge.left.data,\n        target: edge.right.data\n      };\n    });\n  },\n\n  find: function(x, y, radius) {\n    var that = this, i0, i1 = that._found || 0, n = that.cells.length, cell;\n\n    // Use the previously-found cell, or start with an arbitrary one.\n    while (!(cell = that.cells[i1])) if (++i1 >= n) return null;\n    var dx = x - cell.site[0], dy = y - cell.site[1], d2 = dx * dx + dy * dy;\n\n    // Traverse the half-edges to find a closer cell, if any.\n    do {\n      cell = that.cells[i0 = i1], i1 = null;\n      cell.halfedges.forEach(function(e) {\n        var edge = that.edges[e], v = edge.left;\n        if ((v === cell.site || !v) && !(v = edge.right)) return;\n        var vx = x - v[0], vy = y - v[1], v2 = vx * vx + vy * vy;\n        if (v2 < d2) d2 = v2, i1 = v.index;\n      });\n    } while (i1 !== null);\n\n    that._found = i0;\n\n    return radius == null || d2 <= radius * radius ? cell.site : null;\n  }\n}\n","import constant from \"./constant\";\nimport {x as pointX, y as pointY} from \"./point\";\nimport Diagram, {epsilon} from \"./Diagram\";\n\nexport default function() {\n  var x = pointX,\n      y = pointY,\n      extent = null;\n\n  function voronoi(data) {\n    return new Diagram(data.map(function(d, i) {\n      var s = [Math.round(x(d, i, data) / epsilon) * epsilon, Math.round(y(d, i, data) / epsilon) * epsilon];\n      s.index = i;\n      s.data = d;\n      return s;\n    }), extent);\n  }\n\n  voronoi.polygons = function(data) {\n    return voronoi(data).polygons();\n  };\n\n  voronoi.links = function(data) {\n    return voronoi(data).links();\n  };\n\n  voronoi.triangles = function(data) {\n    return voronoi(data).triangles();\n  };\n\n  voronoi.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), voronoi) : x;\n  };\n\n  voronoi.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), voronoi) : y;\n  };\n\n  voronoi.extent = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]], voronoi) : extent && [[extent[0][0], extent[0][1]], [extent[1][0], extent[1][1]]];\n  };\n\n  voronoi.size = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[0, 0], [+_[0], +_[1]]], voronoi) : extent && [extent[1][0] - extent[0][0], extent[1][1] - extent[0][1]];\n  };\n\n  return voronoi;\n}\n","export default function(x, y) {\n  var nodes;\n\n  if (x == null) x = 0;\n  if (y == null) y = 0;\n\n  function force() {\n    var i,\n        n = nodes.length,\n        node,\n        sx = 0,\n        sy = 0;\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i], sx += node.x, sy += node.y;\n    }\n\n    for (sx = sx / n - x, sy = sy / n - y, i = 0; i < n; ++i) {\n      node = nodes[i], node.x -= sx, node.y -= sy;\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = +_, force) : x;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = +_, force) : y;\n  };\n\n  return force;\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function() {\n  return (Math.random() - 0.5) * 1e-6;\n}\n","import constant from \"./constant\";\nimport jiggle from \"./jiggle\";\nimport {quadtree} from \"d3-quadtree\";\n\nfunction x(d) {\n  return d.x + d.vx;\n}\n\nfunction y(d) {\n  return d.y + d.vy;\n}\n\nexport default function(radius) {\n  var nodes,\n      radii,\n      strength = 1,\n      iterations = 1;\n\n  if (typeof radius !== \"function\") radius = constant(radius == null ? 1 : +radius);\n\n  function force() {\n    var i, n = nodes.length,\n        tree,\n        node,\n        xi,\n        yi,\n        ri,\n        ri2;\n\n    for (var k = 0; k < iterations; ++k) {\n      tree = quadtree(nodes, x, y).visitAfter(prepare);\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        ri = radii[node.index], ri2 = ri * ri;\n        xi = node.x + node.vx;\n        yi = node.y + node.vy;\n        tree.visit(apply);\n      }\n    }\n\n    function apply(quad, x0, y0, x1, y1) {\n      var data = quad.data, rj = quad.r, r = ri + rj;\n      if (data) {\n        if (data.index > node.index) {\n          var x = xi - data.x - data.vx,\n              y = yi - data.y - data.vy,\n              l = x * x + y * y;\n          if (l < r * r) {\n            if (x === 0) x = jiggle(), l += x * x;\n            if (y === 0) y = jiggle(), l += y * y;\n            l = (r - (l = Math.sqrt(l))) / l * strength;\n            node.vx += (x *= l) * (r = (rj *= rj) / (ri2 + rj));\n            node.vy += (y *= l) * r;\n            data.vx -= x * (r = 1 - r);\n            data.vy -= y * r;\n          }\n        }\n        return;\n      }\n      return x0 > xi + r || x1 < xi - r || y0 > yi + r || y1 < yi - r;\n    }\n  }\n\n  function prepare(quad) {\n    if (quad.data) return quad.r = radii[quad.data.index];\n    for (var i = quad.r = 0; i < 4; ++i) {\n      if (quad[i] && quad[i].r > quad.r) {\n        quad.r = quad[i].r;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length, node;\n    radii = new Array(n);\n    for (i = 0; i < n; ++i) node = nodes[i], radii[node.index] = +radius(node, i, nodes);\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = +_, force) : strength;\n  };\n\n  force.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : radius;\n  };\n\n  return force;\n}\n","import constant from \"./constant\";\nimport jiggle from \"./jiggle\";\nimport {map} from \"d3-collection\";\n\nfunction index(d) {\n  return d.index;\n}\n\nfunction find(nodeById, nodeId) {\n  var node = nodeById.get(nodeId);\n  if (!node) throw new Error(\"missing: \" + nodeId);\n  return node;\n}\n\nexport default function(links) {\n  var id = index,\n      strength = defaultStrength,\n      strengths,\n      distance = constant(30),\n      distances,\n      nodes,\n      count,\n      bias,\n      iterations = 1;\n\n  if (links == null) links = [];\n\n  function defaultStrength(link) {\n    return 1 / Math.min(count[link.source.index], count[link.target.index]);\n  }\n\n  function force(alpha) {\n    for (var k = 0, n = links.length; k < iterations; ++k) {\n      for (var i = 0, link, source, target, x, y, l, b; i < n; ++i) {\n        link = links[i], source = link.source, target = link.target;\n        x = target.x + target.vx - source.x - source.vx || jiggle();\n        y = target.y + target.vy - source.y - source.vy || jiggle();\n        l = Math.sqrt(x * x + y * y);\n        l = (l - distances[i]) / l * alpha * strengths[i];\n        x *= l, y *= l;\n        target.vx -= x * (b = bias[i]);\n        target.vy -= y * b;\n        source.vx += x * (b = 1 - b);\n        source.vy += y * b;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n\n    var i,\n        n = nodes.length,\n        m = links.length,\n        nodeById = map(nodes, id),\n        link;\n\n    for (i = 0, count = new Array(n); i < m; ++i) {\n      link = links[i], link.index = i;\n      if (typeof link.source !== \"object\") link.source = find(nodeById, link.source);\n      if (typeof link.target !== \"object\") link.target = find(nodeById, link.target);\n      count[link.source.index] = (count[link.source.index] || 0) + 1;\n      count[link.target.index] = (count[link.target.index] || 0) + 1;\n    }\n\n    for (i = 0, bias = new Array(m); i < m; ++i) {\n      link = links[i], bias[i] = count[link.source.index] / (count[link.source.index] + count[link.target.index]);\n    }\n\n    strengths = new Array(m), initializeStrength();\n    distances = new Array(m), initializeDistance();\n  }\n\n  function initializeStrength() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      strengths[i] = +strength(links[i], i, links);\n    }\n  }\n\n  function initializeDistance() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      distances[i] = +distance(links[i], i, links);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.links = function(_) {\n    return arguments.length ? (links = _, initialize(), force) : links;\n  };\n\n  force.id = function(_) {\n    return arguments.length ? (id = _, force) : id;\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initializeStrength(), force) : strength;\n  };\n\n  force.distance = function(_) {\n    return arguments.length ? (distance = typeof _ === \"function\" ? _ : constant(+_), initializeDistance(), force) : distance;\n  };\n\n  return force;\n}\n","import {dispatch} from \"d3-dispatch\";\nimport {map} from \"d3-collection\";\nimport {timer} from \"d3-timer\";\n\nexport function x(d) {\n  return d.x;\n}\n\nexport function y(d) {\n  return d.y;\n}\n\nvar initialRadius = 10,\n    initialAngle = Math.PI * (3 - Math.sqrt(5));\n\nexport default function(nodes) {\n  var simulation,\n      alpha = 1,\n      alphaMin = 0.001,\n      alphaDecay = 1 - Math.pow(alphaMin, 1 / 300),\n      alphaTarget = 0,\n      velocityDecay = 0.6,\n      forces = map(),\n      stepper = timer(step),\n      event = dispatch(\"tick\", \"end\");\n\n  if (nodes == null) nodes = [];\n\n  function step() {\n    tick();\n    event.call(\"tick\", simulation);\n    if (alpha < alphaMin) {\n      stepper.stop();\n      event.call(\"end\", simulation);\n    }\n  }\n\n  function tick() {\n    var i, n = nodes.length, node;\n\n    alpha += (alphaTarget - alpha) * alphaDecay;\n\n    forces.each(function(force) {\n      force(alpha);\n    });\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i];\n      if (node.fx == null) node.x += node.vx *= velocityDecay;\n      else node.x = node.fx, node.vx = 0;\n      if (node.fy == null) node.y += node.vy *= velocityDecay;\n      else node.y = node.fy, node.vy = 0;\n    }\n  }\n\n  function initializeNodes() {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.index = i;\n      if (isNaN(node.x) || isNaN(node.y)) {\n        var radius = initialRadius * Math.sqrt(i), angle = i * initialAngle;\n        node.x = radius * Math.cos(angle);\n        node.y = radius * Math.sin(angle);\n      }\n      if (isNaN(node.vx) || isNaN(node.vy)) {\n        node.vx = node.vy = 0;\n      }\n    }\n  }\n\n  function initializeForce(force) {\n    if (force.initialize) force.initialize(nodes);\n    return force;\n  }\n\n  initializeNodes();\n\n  return simulation = {\n    tick: tick,\n\n    restart: function() {\n      return stepper.restart(step), simulation;\n    },\n\n    stop: function() {\n      return stepper.stop(), simulation;\n    },\n\n    nodes: function(_) {\n      return arguments.length ? (nodes = _, initializeNodes(), forces.each(initializeForce), simulation) : nodes;\n    },\n\n    alpha: function(_) {\n      return arguments.length ? (alpha = +_, simulation) : alpha;\n    },\n\n    alphaMin: function(_) {\n      return arguments.length ? (alphaMin = +_, simulation) : alphaMin;\n    },\n\n    alphaDecay: function(_) {\n      return arguments.length ? (alphaDecay = +_, simulation) : +alphaDecay;\n    },\n\n    alphaTarget: function(_) {\n      return arguments.length ? (alphaTarget = +_, simulation) : alphaTarget;\n    },\n\n    velocityDecay: function(_) {\n      return arguments.length ? (velocityDecay = 1 - _, simulation) : 1 - velocityDecay;\n    },\n\n    force: function(name, _) {\n      return arguments.length > 1 ? ((_ == null ? forces.remove(name) : forces.set(name, initializeForce(_))), simulation) : forces.get(name);\n    },\n\n    find: function(x, y, radius) {\n      var i = 0,\n          n = nodes.length,\n          dx,\n          dy,\n          d2,\n          node,\n          closest;\n\n      if (radius == null) radius = Infinity;\n      else radius *= radius;\n\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        dx = x - node.x;\n        dy = y - node.y;\n        d2 = dx * dx + dy * dy;\n        if (d2 < radius) closest = node, radius = d2;\n      }\n\n      return closest;\n    },\n\n    on: function(name, _) {\n      return arguments.length > 1 ? (event.on(name, _), simulation) : event.on(name);\n    }\n  };\n}\n","import constant from \"./constant\";\nimport jiggle from \"./jiggle\";\nimport {quadtree} from \"d3-quadtree\";\nimport {x, y} from \"./simulation\";\n\nexport default function() {\n  var nodes,\n      node,\n      alpha,\n      strength = constant(-30),\n      strengths,\n      distanceMin2 = 1,\n      distanceMax2 = Infinity,\n      theta2 = 0.81;\n\n  function force(_) {\n    var i, n = nodes.length, tree = quadtree(nodes, x, y).visitAfter(accumulate);\n    for (alpha = _, i = 0; i < n; ++i) node = nodes[i], tree.visit(apply);\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length, node;\n    strengths = new Array(n);\n    for (i = 0; i < n; ++i) node = nodes[i], strengths[node.index] = +strength(node, i, nodes);\n  }\n\n  function accumulate(quad) {\n    var strength = 0, q, c, weight = 0, x, y, i;\n\n    // For internal nodes, accumulate forces from child quadrants.\n    if (quad.length) {\n      for (x = y = i = 0; i < 4; ++i) {\n        if ((q = quad[i]) && (c = Math.abs(q.value))) {\n          strength += q.value, weight += c, x += c * q.x, y += c * q.y;\n        }\n      }\n      quad.x = x / weight;\n      quad.y = y / weight;\n    }\n\n    // For leaf nodes, accumulate forces from coincident quadrants.\n    else {\n      q = quad;\n      q.x = q.data.x;\n      q.y = q.data.y;\n      do strength += strengths[q.data.index];\n      while (q = q.next);\n    }\n\n    quad.value = strength;\n  }\n\n  function apply(quad, x1, _, x2) {\n    if (!quad.value) return true;\n\n    var x = quad.x - node.x,\n        y = quad.y - node.y,\n        w = x2 - x1,\n        l = x * x + y * y;\n\n    // Apply the Barnes-Hut approximation if possible.\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (w * w / theta2 < l) {\n      if (l < distanceMax2) {\n        if (x === 0) x = jiggle(), l += x * x;\n        if (y === 0) y = jiggle(), l += y * y;\n        if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n        node.vx += x * quad.value * alpha / l;\n        node.vy += y * quad.value * alpha / l;\n      }\n      return true;\n    }\n\n    // Otherwise, process points directly.\n    else if (quad.length || l >= distanceMax2) return;\n\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (quad.data !== node || quad.next) {\n      if (x === 0) x = jiggle(), l += x * x;\n      if (y === 0) y = jiggle(), l += y * y;\n      if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n    }\n\n    do if (quad.data !== node) {\n      w = strengths[quad.data.index] * alpha / l;\n      node.vx += x * w;\n      node.vy += y * w;\n    } while (quad = quad.next);\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n  };\n\n  force.distanceMin = function(_) {\n    return arguments.length ? (distanceMin2 = _ * _, force) : Math.sqrt(distanceMin2);\n  };\n\n  force.distanceMax = function(_) {\n    return arguments.length ? (distanceMax2 = _ * _, force) : Math.sqrt(distanceMax2);\n  };\n\n  force.theta = function(_) {\n    return arguments.length ? (theta2 = _ * _, force) : Math.sqrt(theta2);\n  };\n\n  return force;\n}\n","import constant from \"./constant\";\n\nexport default function(radius, x, y) {\n  var nodes,\n      strength = constant(0.1),\n      strengths,\n      radiuses;\n\n  if (typeof radius !== \"function\") radius = constant(+radius);\n  if (x == null) x = 0;\n  if (y == null) y = 0;\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length; i < n; ++i) {\n      var node = nodes[i],\n          dx = node.x - x || 1e-6,\n          dy = node.y - y || 1e-6,\n          r = Math.sqrt(dx * dx + dy * dy),\n          k = (radiuses[i] - r) * strengths[i] * alpha / r;\n      node.vx += dx * k;\n      node.vy += dy * k;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    radiuses = new Array(n);\n    for (i = 0; i < n; ++i) {\n      radiuses[i] = +radius(nodes[i], i, nodes);\n      strengths[i] = isNaN(radiuses[i]) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _, initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n  };\n\n  force.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : radius;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = +_, force) : x;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = +_, force) : y;\n  };\n\n  return force;\n}\n","import constant from \"./constant\";\n\nexport default function(x) {\n  var strength = constant(0.1),\n      nodes,\n      strengths,\n      xz;\n\n  if (typeof x !== \"function\") x = constant(x == null ? 0 : +x);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vx += (xz[i] - node.x) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    xz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(xz[i] = +x(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : x;\n  };\n\n  return force;\n}\n","import constant from \"./constant\";\n\nexport default function(y) {\n  var strength = constant(0.1),\n      nodes,\n      strengths,\n      yz;\n\n  if (typeof y !== \"function\") y = constant(y == null ? 0 : +y);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vy += (yz[i] - node.y) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    yz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(yz[i] = +y(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : y;\n  };\n\n  return force;\n}\n","var array = Array.prototype;\n\nexport var map = array.map;\nexport var slice = array.slice;\n","import {map} from \"d3-collection\";\nimport {slice} from \"./array\";\n\nexport var implicit = {name: \"implicit\"};\n\nexport default function ordinal(range) {\n  var index = map(),\n      domain = [],\n      unknown = implicit;\n\n  range = range == null ? [] : slice.call(range);\n\n  function scale(d) {\n    var key = d + \"\", i = index.get(key);\n    if (!i) {\n      if (unknown !== implicit) return unknown;\n      index.set(key, i = domain.push(d));\n    }\n    return range[(i - 1) % range.length];\n  }\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [], index = map();\n    var i = -1, n = _.length, d, key;\n    while (++i < n) if (!index.has(key = (d = _[i]) + \"\")) index.set(key, domain.push(d));\n    return scale;\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), scale) : range.slice();\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.copy = function() {\n    return ordinal()\n        .domain(domain)\n        .range(range)\n        .unknown(unknown);\n  };\n\n  return scale;\n}\n","import {range as sequence} from \"d3-array\";\nimport ordinal from \"./ordinal\";\n\nexport default function band() {\n  var scale = ordinal().unknown(undefined),\n      domain = scale.domain,\n      ordinalRange = scale.range,\n      range = [0, 1],\n      step,\n      bandwidth,\n      round = false,\n      paddingInner = 0,\n      paddingOuter = 0,\n      align = 0.5;\n\n  delete scale.unknown;\n\n  function rescale() {\n    var n = domain().length,\n        reverse = range[1] < range[0],\n        start = range[reverse - 0],\n        stop = range[1 - reverse];\n    step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);\n    if (round) step = Math.floor(step);\n    start += (stop - start - step * (n - paddingInner)) * align;\n    bandwidth = step * (1 - paddingInner);\n    if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);\n    var values = sequence(n).map(function(i) { return start + step * i; });\n    return ordinalRange(reverse ? values.reverse() : values);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = [+_[0], +_[1]], rescale()) : range.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range = [+_[0], +_[1]], round = true, rescale();\n  };\n\n  scale.bandwidth = function() {\n    return bandwidth;\n  };\n\n  scale.step = function() {\n    return step;\n  };\n\n  scale.round = function(_) {\n    return arguments.length ? (round = !!_, rescale()) : round;\n  };\n\n  scale.padding = function(_) {\n    return arguments.length ? (paddingInner = paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingInner = function(_) {\n    return arguments.length ? (paddingInner = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingOuter = function(_) {\n    return arguments.length ? (paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingOuter;\n  };\n\n  scale.align = function(_) {\n    return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;\n  };\n\n  scale.copy = function() {\n    return band()\n        .domain(domain())\n        .range(range)\n        .round(round)\n        .paddingInner(paddingInner)\n        .paddingOuter(paddingOuter)\n        .align(align);\n  };\n\n  return rescale();\n}\n\nfunction pointish(scale) {\n  var copy = scale.copy;\n\n  scale.padding = scale.paddingOuter;\n  delete scale.paddingInner;\n  delete scale.paddingOuter;\n\n  scale.copy = function() {\n    return pointish(copy());\n  };\n\n  return scale;\n}\n\nexport function point() {\n  return pointish(band().paddingInner(1));\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function(x) {\n  return +x;\n}\n","import {bisect} from \"d3-array\";\nimport {interpolate as interpolateValue, interpolateRound} from \"d3-interpolate\";\nimport {map, slice} from \"./array\";\nimport constant from \"./constant\";\nimport number from \"./number\";\n\nvar unit = [0, 1];\n\nexport function deinterpolateLinear(a, b) {\n  return (b -= (a = +a))\n      ? function(x) { return (x - a) / b; }\n      : constant(b);\n}\n\nfunction deinterpolateClamp(deinterpolate) {\n  return function(a, b) {\n    var d = deinterpolate(a = +a, b = +b);\n    return function(x) { return x <= a ? 0 : x >= b ? 1 : d(x); };\n  };\n}\n\nfunction reinterpolateClamp(reinterpolate) {\n  return function(a, b) {\n    var r = reinterpolate(a = +a, b = +b);\n    return function(t) { return t <= 0 ? a : t >= 1 ? b : r(t); };\n  };\n}\n\nfunction bimap(domain, range, deinterpolate, reinterpolate) {\n  var d0 = domain[0], d1 = domain[1], r0 = range[0], r1 = range[1];\n  if (d1 < d0) d0 = deinterpolate(d1, d0), r0 = reinterpolate(r1, r0);\n  else d0 = deinterpolate(d0, d1), r0 = reinterpolate(r0, r1);\n  return function(x) { return r0(d0(x)); };\n}\n\nfunction polymap(domain, range, deinterpolate, reinterpolate) {\n  var j = Math.min(domain.length, range.length) - 1,\n      d = new Array(j),\n      r = new Array(j),\n      i = -1;\n\n  // Reverse descending domains.\n  if (domain[j] < domain[0]) {\n    domain = domain.slice().reverse();\n    range = range.slice().reverse();\n  }\n\n  while (++i < j) {\n    d[i] = deinterpolate(domain[i], domain[i + 1]);\n    r[i] = reinterpolate(range[i], range[i + 1]);\n  }\n\n  return function(x) {\n    var i = bisect(domain, x, 1, j) - 1;\n    return r[i](d[i](x));\n  };\n}\n\nexport function copy(source, target) {\n  return target\n      .domain(source.domain())\n      .range(source.range())\n      .interpolate(source.interpolate())\n      .clamp(source.clamp());\n}\n\n// deinterpolate(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\n// reinterpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding domain value x in [a,b].\nexport default function continuous(deinterpolate, reinterpolate) {\n  var domain = unit,\n      range = unit,\n      interpolate = interpolateValue,\n      clamp = false,\n      piecewise,\n      output,\n      input;\n\n  function rescale() {\n    piecewise = Math.min(domain.length, range.length) > 2 ? polymap : bimap;\n    output = input = null;\n    return scale;\n  }\n\n  function scale(x) {\n    return (output || (output = piecewise(domain, range, clamp ? deinterpolateClamp(deinterpolate) : deinterpolate, interpolate)))(+x);\n  }\n\n  scale.invert = function(y) {\n    return (input || (input = piecewise(range, domain, deinterpolateLinear, clamp ? reinterpolateClamp(reinterpolate) : reinterpolate)))(+y);\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = map.call(_, number), rescale()) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), rescale()) : range.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range = slice.call(_), interpolate = interpolateRound, rescale();\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, rescale()) : clamp;\n  };\n\n  scale.interpolate = function(_) {\n    return arguments.length ? (interpolate = _, rescale()) : interpolate;\n  };\n\n  return rescale();\n}\n","import {tickStep} from \"d3-array\";\nimport {format, formatPrefix, formatSpecifier, precisionFixed, precisionPrefix, precisionRound} from \"d3-format\";\n\nexport default function(domain, count, specifier) {\n  var start = domain[0],\n      stop = domain[domain.length - 1],\n      step = tickStep(start, stop, count == null ? 10 : count),\n      precision;\n  specifier = formatSpecifier(specifier == null ? \",f\" : specifier);\n  switch (specifier.type) {\n    case \"s\": {\n      var value = Math.max(Math.abs(start), Math.abs(stop));\n      if (specifier.precision == null && !isNaN(precision = precisionPrefix(step, value))) specifier.precision = precision;\n      return formatPrefix(specifier, value);\n    }\n    case \"\":\n    case \"e\":\n    case \"g\":\n    case \"p\":\n    case \"r\": {\n      if (specifier.precision == null && !isNaN(precision = precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === \"e\");\n      break;\n    }\n    case \"f\":\n    case \"%\": {\n      if (specifier.precision == null && !isNaN(precision = precisionFixed(step))) specifier.precision = precision - (specifier.type === \"%\") * 2;\n      break;\n    }\n  }\n  return format(specifier);\n}\n","import {ticks, tickIncrement} from \"d3-array\";\nimport {interpolateNumber as reinterpolate} from \"d3-interpolate\";\nimport {default as continuous, copy, deinterpolateLinear as deinterpolate} from \"./continuous\";\nimport tickFormat from \"./tickFormat\";\n\nexport function linearish(scale) {\n  var domain = scale.domain;\n\n  scale.ticks = function(count) {\n    var d = domain();\n    return ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return tickFormat(domain(), count, specifier);\n  };\n\n  scale.nice = function(count) {\n    if (count == null) count = 10;\n\n    var d = domain(),\n        i0 = 0,\n        i1 = d.length - 1,\n        start = d[i0],\n        stop = d[i1],\n        step;\n\n    if (stop < start) {\n      step = start, start = stop, stop = step;\n      step = i0, i0 = i1, i1 = step;\n    }\n\n    step = tickIncrement(start, stop, count);\n\n    if (step > 0) {\n      start = Math.floor(start / step) * step;\n      stop = Math.ceil(stop / step) * step;\n      step = tickIncrement(start, stop, count);\n    } else if (step < 0) {\n      start = Math.ceil(start * step) / step;\n      stop = Math.floor(stop * step) / step;\n      step = tickIncrement(start, stop, count);\n    }\n\n    if (step > 0) {\n      d[i0] = Math.floor(start / step) * step;\n      d[i1] = Math.ceil(stop / step) * step;\n      domain(d);\n    } else if (step < 0) {\n      d[i0] = Math.ceil(start * step) / step;\n      d[i1] = Math.floor(stop * step) / step;\n      domain(d);\n    }\n\n    return scale;\n  };\n\n  return scale;\n}\n\nexport default function linear() {\n  var scale = continuous(deinterpolate, reinterpolate);\n\n  scale.copy = function() {\n    return copy(scale, linear());\n  };\n\n  return linearish(scale);\n}\n","import {map} from \"./array\";\nimport {linearish} from \"./linear\";\nimport number from \"./number\";\n\nexport default function identity() {\n  var domain = [0, 1];\n\n  function scale(x) {\n    return +x;\n  }\n\n  scale.invert = scale;\n\n  scale.domain = scale.range = function(_) {\n    return arguments.length ? (domain = map.call(_, number), scale) : domain.slice();\n  };\n\n  scale.copy = function() {\n    return identity().domain(domain);\n  };\n\n  return linearish(scale);\n}\n","export default function(domain, interval) {\n  domain = domain.slice();\n\n  var i0 = 0,\n      i1 = domain.length - 1,\n      x0 = domain[i0],\n      x1 = domain[i1],\n      t;\n\n  if (x1 < x0) {\n    t = i0, i0 = i1, i1 = t;\n    t = x0, x0 = x1, x1 = t;\n  }\n\n  domain[i0] = interval.floor(x0);\n  domain[i1] = interval.ceil(x1);\n  return domain;\n}\n","import {ticks} from \"d3-array\";\nimport {format} from \"d3-format\";\nimport constant from \"./constant\";\nimport nice from \"./nice\";\nimport {default as continuous, copy} from \"./continuous\";\n\nfunction deinterpolate(a, b) {\n  return (b = Math.log(b / a))\n      ? function(x) { return Math.log(x / a) / b; }\n      : constant(b);\n}\n\nfunction reinterpolate(a, b) {\n  return a < 0\n      ? function(t) { return -Math.pow(-b, t) * Math.pow(-a, 1 - t); }\n      : function(t) { return Math.pow(b, t) * Math.pow(a, 1 - t); };\n}\n\nfunction pow10(x) {\n  return isFinite(x) ? +(\"1e\" + x) : x < 0 ? 0 : x;\n}\n\nfunction powp(base) {\n  return base === 10 ? pow10\n      : base === Math.E ? Math.exp\n      : function(x) { return Math.pow(base, x); };\n}\n\nfunction logp(base) {\n  return base === Math.E ? Math.log\n      : base === 10 && Math.log10\n      || base === 2 && Math.log2\n      || (base = Math.log(base), function(x) { return Math.log(x) / base; });\n}\n\nfunction reflect(f) {\n  return function(x) {\n    return -f(-x);\n  };\n}\n\nexport default function log() {\n  var scale = continuous(deinterpolate, reinterpolate).domain([1, 10]),\n      domain = scale.domain,\n      base = 10,\n      logs = logp(10),\n      pows = powp(10);\n\n  function rescale() {\n    logs = logp(base), pows = powp(base);\n    if (domain()[0] < 0) logs = reflect(logs), pows = reflect(pows);\n    return scale;\n  }\n\n  scale.base = function(_) {\n    return arguments.length ? (base = +_, rescale()) : base;\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.ticks = function(count) {\n    var d = domain(),\n        u = d[0],\n        v = d[d.length - 1],\n        r;\n\n    if (r = v < u) i = u, u = v, v = i;\n\n    var i = logs(u),\n        j = logs(v),\n        p,\n        k,\n        t,\n        n = count == null ? 10 : +count,\n        z = [];\n\n    if (!(base % 1) && j - i < n) {\n      i = Math.round(i) - 1, j = Math.round(j) + 1;\n      if (u > 0) for (; i < j; ++i) {\n        for (k = 1, p = pows(i); k < base; ++k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      } else for (; i < j; ++i) {\n        for (k = base - 1, p = pows(i); k >= 1; --k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      }\n    } else {\n      z = ticks(i, j, Math.min(j - i, n)).map(pows);\n    }\n\n    return r ? z.reverse() : z;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    if (specifier == null) specifier = base === 10 ? \".0e\" : \",\";\n    if (typeof specifier !== \"function\") specifier = format(specifier);\n    if (count === Infinity) return specifier;\n    if (count == null) count = 10;\n    var k = Math.max(1, base * count / scale.ticks().length); // TODO fast estimate?\n    return function(d) {\n      var i = d / pows(Math.round(logs(d)));\n      if (i * base < base - 0.5) i *= base;\n      return i <= k ? specifier(d) : \"\";\n    };\n  };\n\n  scale.nice = function() {\n    return domain(nice(domain(), {\n      floor: function(x) { return pows(Math.floor(logs(x))); },\n      ceil: function(x) { return pows(Math.ceil(logs(x))); }\n    }));\n  };\n\n  scale.copy = function() {\n    return copy(scale, log().base(base));\n  };\n\n  return scale;\n}\n","import constant from \"./constant\";\nimport {linearish} from \"./linear\";\nimport {default as continuous, copy} from \"./continuous\";\n\nfunction raise(x, exponent) {\n  return x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);\n}\n\nexport default function pow() {\n  var exponent = 1,\n      scale = continuous(deinterpolate, reinterpolate),\n      domain = scale.domain;\n\n  function deinterpolate(a, b) {\n    return (b = raise(b, exponent) - (a = raise(a, exponent)))\n        ? function(x) { return (raise(x, exponent) - a) / b; }\n        : constant(b);\n  }\n\n  function reinterpolate(a, b) {\n    b = raise(b, exponent) - (a = raise(a, exponent));\n    return function(t) { return raise(a + b * t, 1 / exponent); };\n  }\n\n  scale.exponent = function(_) {\n    return arguments.length ? (exponent = +_, domain(domain())) : exponent;\n  };\n\n  scale.copy = function() {\n    return copy(scale, pow().exponent(exponent));\n  };\n\n  return linearish(scale);\n}\n\nexport function sqrt() {\n  return pow().exponent(0.5);\n}\n","import {ascending, bisect, quantile as threshold} from \"d3-array\";\nimport {slice} from \"./array\";\n\nexport default function quantile() {\n  var domain = [],\n      range = [],\n      thresholds = [];\n\n  function rescale() {\n    var i = 0, n = Math.max(1, range.length);\n    thresholds = new Array(n - 1);\n    while (++i < n) thresholds[i - 1] = threshold(domain, i / n);\n    return scale;\n  }\n\n  function scale(x) {\n    if (!isNaN(x = +x)) return range[bisect(thresholds, x)];\n  }\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return i < 0 ? [NaN, NaN] : [\n      i > 0 ? thresholds[i - 1] : domain[0],\n      i < thresholds.length ? thresholds[i] : domain[domain.length - 1]\n    ];\n  };\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [];\n    for (var i = 0, n = _.length, d; i < n; ++i) if (d = _[i], d != null && !isNaN(d = +d)) domain.push(d);\n    domain.sort(ascending);\n    return rescale();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), rescale()) : range.slice();\n  };\n\n  scale.quantiles = function() {\n    return thresholds.slice();\n  };\n\n  scale.copy = function() {\n    return quantile()\n        .domain(domain)\n        .range(range);\n  };\n\n  return scale;\n}\n","import {bisect} from \"d3-array\";\nimport {slice} from \"./array\";\nimport {linearish} from \"./linear\";\n\nexport default function quantize() {\n  var x0 = 0,\n      x1 = 1,\n      n = 1,\n      domain = [0.5],\n      range = [0, 1];\n\n  function scale(x) {\n    if (x <= x) return range[bisect(domain, x, 0, n)];\n  }\n\n  function rescale() {\n    var i = -1;\n    domain = new Array(n);\n    while (++i < n) domain[i] = ((i + 1) * x1 - (i - n) * x0) / (n + 1);\n    return scale;\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], rescale()) : [x0, x1];\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (n = (range = slice.call(_)).length - 1, rescale()) : range.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return i < 0 ? [NaN, NaN]\n        : i < 1 ? [x0, domain[0]]\n        : i >= n ? [domain[n - 1], x1]\n        : [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return quantize()\n        .domain([x0, x1])\n        .range(range);\n  };\n\n  return linearish(scale);\n}\n","import {bisect} from \"d3-array\";\nimport {slice} from \"./array\";\n\nexport default function threshold() {\n  var domain = [0.5],\n      range = [0, 1],\n      n = 1;\n\n  function scale(x) {\n    if (x <= x) return range[bisect(domain, x, 0, n)];\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = slice.call(_), n = Math.min(domain.length, range.length - 1), scale) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), n = Math.min(domain.length, range.length - 1), scale) : range.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return threshold()\n        .domain(domain)\n        .range(range);\n  };\n\n  return scale;\n}\n","import {bisector, tickStep} from \"d3-array\";\nimport {interpolateNumber as reinterpolate} from \"d3-interpolate\";\nimport {timeYear, timeMonth, timeWeek, timeDay, timeHour, timeMinute, timeSecond, timeMillisecond} from \"d3-time\";\nimport {timeFormat} from \"d3-time-format\";\nimport {map} from \"./array\";\nimport {default as continuous, copy, deinterpolateLinear as deinterpolate} from \"./continuous\";\nimport nice from \"./nice\";\n\nvar durationSecond = 1000,\n    durationMinute = durationSecond * 60,\n    durationHour = durationMinute * 60,\n    durationDay = durationHour * 24,\n    durationWeek = durationDay * 7,\n    durationMonth = durationDay * 30,\n    durationYear = durationDay * 365;\n\nfunction date(t) {\n  return new Date(t);\n}\n\nfunction number(t) {\n  return t instanceof Date ? +t : +new Date(+t);\n}\n\nexport function calendar(year, month, week, day, hour, minute, second, millisecond, format) {\n  var scale = continuous(deinterpolate, reinterpolate),\n      invert = scale.invert,\n      domain = scale.domain;\n\n  var formatMillisecond = format(\".%L\"),\n      formatSecond = format(\":%S\"),\n      formatMinute = format(\"%I:%M\"),\n      formatHour = format(\"%I %p\"),\n      formatDay = format(\"%a %d\"),\n      formatWeek = format(\"%b %d\"),\n      formatMonth = format(\"%B\"),\n      formatYear = format(\"%Y\");\n\n  var tickIntervals = [\n    [second,  1,      durationSecond],\n    [second,  5,  5 * durationSecond],\n    [second, 15, 15 * durationSecond],\n    [second, 30, 30 * durationSecond],\n    [minute,  1,      durationMinute],\n    [minute,  5,  5 * durationMinute],\n    [minute, 15, 15 * durationMinute],\n    [minute, 30, 30 * durationMinute],\n    [  hour,  1,      durationHour  ],\n    [  hour,  3,  3 * durationHour  ],\n    [  hour,  6,  6 * durationHour  ],\n    [  hour, 12, 12 * durationHour  ],\n    [   day,  1,      durationDay   ],\n    [   day,  2,  2 * durationDay   ],\n    [  week,  1,      durationWeek  ],\n    [ month,  1,      durationMonth ],\n    [ month,  3,  3 * durationMonth ],\n    [  year,  1,      durationYear  ]\n  ];\n\n  function tickFormat(date) {\n    return (second(date) < date ? formatMillisecond\n        : minute(date) < date ? formatSecond\n        : hour(date) < date ? formatMinute\n        : day(date) < date ? formatHour\n        : month(date) < date ? (week(date) < date ? formatDay : formatWeek)\n        : year(date) < date ? formatMonth\n        : formatYear)(date);\n  }\n\n  function tickInterval(interval, start, stop, step) {\n    if (interval == null) interval = 10;\n\n    // If a desired tick count is specified, pick a reasonable tick interval\n    // based on the extent of the domain and a rough estimate of tick size.\n    // Otherwise, assume interval is already a time interval and use it.\n    if (typeof interval === \"number\") {\n      var target = Math.abs(stop - start) / interval,\n          i = bisector(function(i) { return i[2]; }).right(tickIntervals, target);\n      if (i === tickIntervals.length) {\n        step = tickStep(start / durationYear, stop / durationYear, interval);\n        interval = year;\n      } else if (i) {\n        i = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];\n        step = i[1];\n        interval = i[0];\n      } else {\n        step = Math.max(tickStep(start, stop, interval), 1);\n        interval = millisecond;\n      }\n    }\n\n    return step == null ? interval : interval.every(step);\n  }\n\n  scale.invert = function(y) {\n    return new Date(invert(y));\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? domain(map.call(_, number)) : domain().map(date);\n  };\n\n  scale.ticks = function(interval, step) {\n    var d = domain(),\n        t0 = d[0],\n        t1 = d[d.length - 1],\n        r = t1 < t0,\n        t;\n    if (r) t = t0, t0 = t1, t1 = t;\n    t = tickInterval(interval, t0, t1, step);\n    t = t ? t.range(t0, t1 + 1) : []; // inclusive stop\n    return r ? t.reverse() : t;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return specifier == null ? tickFormat : format(specifier);\n  };\n\n  scale.nice = function(interval, step) {\n    var d = domain();\n    return (interval = tickInterval(interval, d[0], d[d.length - 1], step))\n        ? domain(nice(d, interval))\n        : scale;\n  };\n\n  scale.copy = function() {\n    return copy(scale, calendar(year, month, week, day, hour, minute, second, millisecond, format));\n  };\n\n  return scale;\n}\n\nexport default function() {\n  return calendar(timeYear, timeMonth, timeWeek, timeDay, timeHour, timeMinute, timeSecond, timeMillisecond, timeFormat).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]);\n}\n","import {calendar} from \"./time\";\nimport {utcFormat} from \"d3-time-format\";\nimport {utcYear, utcMonth, utcWeek, utcDay, utcHour, utcMinute, utcSecond, utcMillisecond} from \"d3-time\";\n\nexport default function() {\n  return calendar(utcYear, utcMonth, utcWeek, utcDay, utcHour, utcMinute, utcSecond, utcMillisecond, utcFormat).domain([Date.UTC(2000, 0, 1), Date.UTC(2000, 0, 2)]);\n}\n","import {linearish} from \"./linear\";\n\nexport default function sequential(interpolator) {\n  var x0 = 0,\n      x1 = 1,\n      clamp = false;\n\n  function scale(x) {\n    var t = (x - x0) / (x1 - x0);\n    return interpolator(clamp ? Math.max(0, Math.min(1, t)) : t);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], scale) : [x0, x1];\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, scale) : clamp;\n  };\n\n  scale.interpolator = function(_) {\n    return arguments.length ? (interpolator = _, scale) : interpolator;\n  };\n\n  scale.copy = function() {\n    return sequential(interpolator).domain([x0, x1]).clamp(clamp);\n  };\n\n  return linearish(scale);\n}\n","function defaultSeparation(a, b) {\n  return a.parent === b.parent ? 1 : 2;\n}\n\nfunction meanX(children) {\n  return children.reduce(meanXReduce, 0) / children.length;\n}\n\nfunction meanXReduce(x, c) {\n  return x + c.x;\n}\n\nfunction maxY(children) {\n  return 1 + children.reduce(maxYReduce, 0);\n}\n\nfunction maxYReduce(y, c) {\n  return Math.max(y, c.y);\n}\n\nfunction leafLeft(node) {\n  var children;\n  while (children = node.children) node = children[0];\n  return node;\n}\n\nfunction leafRight(node) {\n  var children;\n  while (children = node.children) node = children[children.length - 1];\n  return node;\n}\n\nexport default function() {\n  var separation = defaultSeparation,\n      dx = 1,\n      dy = 1,\n      nodeSize = false;\n\n  function cluster(root) {\n    var previousNode,\n        x = 0;\n\n    // First walk, computing the initial x & y values.\n    root.eachAfter(function(node) {\n      var children = node.children;\n      if (children) {\n        node.x = meanX(children);\n        node.y = maxY(children);\n      } else {\n        node.x = previousNode ? x += separation(node, previousNode) : 0;\n        node.y = 0;\n        previousNode = node;\n      }\n    });\n\n    var left = leafLeft(root),\n        right = leafRight(root),\n        x0 = left.x - separation(left, right) / 2,\n        x1 = right.x + separation(right, left) / 2;\n\n    // Second walk, normalizing x & y to the desired size.\n    return root.eachAfter(nodeSize ? function(node) {\n      node.x = (node.x - root.x) * dx;\n      node.y = (root.y - node.y) * dy;\n    } : function(node) {\n      node.x = (node.x - x0) / (x1 - x0) * dx;\n      node.y = (1 - (root.y ? node.y / root.y : 1)) * dy;\n    });\n  }\n\n  cluster.separation = function(x) {\n    return arguments.length ? (separation = x, cluster) : separation;\n  };\n\n  cluster.size = function(x) {\n    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? null : [dx, dy]);\n  };\n\n  cluster.nodeSize = function(x) {\n    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? [dx, dy] : null);\n  };\n\n  return cluster;\n}\n","function count(node) {\n  var sum = 0,\n      children = node.children,\n      i = children && children.length;\n  if (!i) sum = 1;\n  else while (--i >= 0) sum += children[i].value;\n  node.value = sum;\n}\n\nexport default function() {\n  return this.eachAfter(count);\n}\n","import node_count from \"./count\";\nimport node_each from \"./each\";\nimport node_eachBefore from \"./eachBefore\";\nimport node_eachAfter from \"./eachAfter\";\nimport node_sum from \"./sum\";\nimport node_sort from \"./sort\";\nimport node_path from \"./path\";\nimport node_ancestors from \"./ancestors\";\nimport node_descendants from \"./descendants\";\nimport node_leaves from \"./leaves\";\nimport node_links from \"./links\";\n\nexport default function hierarchy(data, children) {\n  var root = new Node(data),\n      valued = +data.value && (root.value = data.value),\n      node,\n      nodes = [root],\n      child,\n      childs,\n      i,\n      n;\n\n  if (children == null) children = defaultChildren;\n\n  while (node = nodes.pop()) {\n    if (valued) node.value = +node.data.value;\n    if ((childs = children(node.data)) && (n = childs.length)) {\n      node.children = new Array(n);\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = node.children[i] = new Node(childs[i]));\n        child.parent = node;\n        child.depth = node.depth + 1;\n      }\n    }\n  }\n\n  return root.eachBefore(computeHeight);\n}\n\nfunction node_copy() {\n  return hierarchy(this).eachBefore(copyData);\n}\n\nfunction defaultChildren(d) {\n  return d.children;\n}\n\nfunction copyData(node) {\n  node.data = node.data.data;\n}\n\nexport function computeHeight(node) {\n  var height = 0;\n  do node.height = height;\n  while ((node = node.parent) && (node.height < ++height));\n}\n\nexport function Node(data) {\n  this.data = data;\n  this.depth =\n  this.height = 0;\n  this.parent = null;\n}\n\nNode.prototype = hierarchy.prototype = {\n  constructor: Node,\n  count: node_count,\n  each: node_each,\n  eachAfter: node_eachAfter,\n  eachBefore: node_eachBefore,\n  sum: node_sum,\n  sort: node_sort,\n  path: node_path,\n  ancestors: node_ancestors,\n  descendants: node_descendants,\n  leaves: node_leaves,\n  links: node_links,\n  copy: node_copy\n};\n","export default function(callback) {\n  var node = this, current, next = [node], children, i, n;\n  do {\n    current = next.reverse(), next = [];\n    while (node = current.pop()) {\n      callback(node), children = node.children;\n      if (children) for (i = 0, n = children.length; i < n; ++i) {\n        next.push(children[i]);\n      }\n    }\n  } while (next.length);\n  return this;\n}\n","export default function(callback) {\n  var node = this, nodes = [node], next = [], children, i, n;\n  while (node = nodes.pop()) {\n    next.push(node), children = node.children;\n    if (children) for (i = 0, n = children.length; i < n; ++i) {\n      nodes.push(children[i]);\n    }\n  }\n  while (node = next.pop()) {\n    callback(node);\n  }\n  return this;\n}\n","export default function(callback) {\n  var node = this, nodes = [node], children, i;\n  while (node = nodes.pop()) {\n    callback(node), children = node.children;\n    if (children) for (i = children.length - 1; i >= 0; --i) {\n      nodes.push(children[i]);\n    }\n  }\n  return this;\n}\n","export default function(value) {\n  return this.eachAfter(function(node) {\n    var sum = +value(node.data) || 0,\n        children = node.children,\n        i = children && children.length;\n    while (--i >= 0) sum += children[i].value;\n    node.value = sum;\n  });\n}\n","export default function(compare) {\n  return this.eachBefore(function(node) {\n    if (node.children) {\n      node.children.sort(compare);\n    }\n  });\n}\n","export default function(end) {\n  var start = this,\n      ancestor = leastCommonAncestor(start, end),\n      nodes = [start];\n  while (start !== ancestor) {\n    start = start.parent;\n    nodes.push(start);\n  }\n  var k = nodes.length;\n  while (end !== ancestor) {\n    nodes.splice(k, 0, end);\n    end = end.parent;\n  }\n  return nodes;\n}\n\nfunction leastCommonAncestor(a, b) {\n  if (a === b) return a;\n  var aNodes = a.ancestors(),\n      bNodes = b.ancestors(),\n      c = null;\n  a = aNodes.pop();\n  b = bNodes.pop();\n  while (a === b) {\n    c = a;\n    a = aNodes.pop();\n    b = bNodes.pop();\n  }\n  return c;\n}\n","export default function() {\n  var node = this, nodes = [node];\n  while (node = node.parent) {\n    nodes.push(node);\n  }\n  return nodes;\n}\n","export default function() {\n  var nodes = [];\n  this.each(function(node) {\n    nodes.push(node);\n  });\n  return nodes;\n}\n","export default function() {\n  var leaves = [];\n  this.eachBefore(function(node) {\n    if (!node.children) {\n      leaves.push(node);\n    }\n  });\n  return leaves;\n}\n","export default function() {\n  var root = this, links = [];\n  root.each(function(node) {\n    if (node !== root) { // Don’t include the root’s parent, if any.\n      links.push({source: node.parent, target: node});\n    }\n  });\n  return links;\n}\n","export var slice = Array.prototype.slice;\n\nexport function shuffle(array) {\n  var m = array.length,\n      t,\n      i;\n\n  while (m) {\n    i = Math.random() * m-- | 0;\n    t = array[m];\n    array[m] = array[i];\n    array[i] = t;\n  }\n\n  return array;\n}\n","import {shuffle, slice} from \"../array\";\n\nexport default function(circles) {\n  var i = 0, n = (circles = shuffle(slice.call(circles))).length, B = [], p, e;\n\n  while (i < n) {\n    p = circles[i];\n    if (e && enclosesWeak(e, p)) ++i;\n    else e = encloseBasis(B = extendBasis(B, p)), i = 0;\n  }\n\n  return e;\n}\n\nfunction extendBasis(B, p) {\n  var i, j;\n\n  if (enclosesWeakAll(p, B)) return [p];\n\n  // If we get here then B must have at least one element.\n  for (i = 0; i < B.length; ++i) {\n    if (enclosesNot(p, B[i])\n        && enclosesWeakAll(encloseBasis2(B[i], p), B)) {\n      return [B[i], p];\n    }\n  }\n\n  // If we get here then B must have at least two elements.\n  for (i = 0; i < B.length - 1; ++i) {\n    for (j = i + 1; j < B.length; ++j) {\n      if (enclosesNot(encloseBasis2(B[i], B[j]), p)\n          && enclosesNot(encloseBasis2(B[i], p), B[j])\n          && enclosesNot(encloseBasis2(B[j], p), B[i])\n          && enclosesWeakAll(encloseBasis3(B[i], B[j], p), B)) {\n        return [B[i], B[j], p];\n      }\n    }\n  }\n\n  // If we get here then something is very wrong.\n  throw new Error;\n}\n\nfunction enclosesNot(a, b) {\n  var dr = a.r - b.r, dx = b.x - a.x, dy = b.y - a.y;\n  return dr < 0 || dr * dr < dx * dx + dy * dy;\n}\n\nfunction enclosesWeak(a, b) {\n  var dr = a.r - b.r + 1e-6, dx = b.x - a.x, dy = b.y - a.y;\n  return dr > 0 && dr * dr > dx * dx + dy * dy;\n}\n\nfunction enclosesWeakAll(a, B) {\n  for (var i = 0; i < B.length; ++i) {\n    if (!enclosesWeak(a, B[i])) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction encloseBasis(B) {\n  switch (B.length) {\n    case 1: return encloseBasis1(B[0]);\n    case 2: return encloseBasis2(B[0], B[1]);\n    case 3: return encloseBasis3(B[0], B[1], B[2]);\n  }\n}\n\nfunction encloseBasis1(a) {\n  return {\n    x: a.x,\n    y: a.y,\n    r: a.r\n  };\n}\n\nfunction encloseBasis2(a, b) {\n  var x1 = a.x, y1 = a.y, r1 = a.r,\n      x2 = b.x, y2 = b.y, r2 = b.r,\n      x21 = x2 - x1, y21 = y2 - y1, r21 = r2 - r1,\n      l = Math.sqrt(x21 * x21 + y21 * y21);\n  return {\n    x: (x1 + x2 + x21 / l * r21) / 2,\n    y: (y1 + y2 + y21 / l * r21) / 2,\n    r: (l + r1 + r2) / 2\n  };\n}\n\nfunction encloseBasis3(a, b, c) {\n  var x1 = a.x, y1 = a.y, r1 = a.r,\n      x2 = b.x, y2 = b.y, r2 = b.r,\n      x3 = c.x, y3 = c.y, r3 = c.r,\n      a2 = x1 - x2,\n      a3 = x1 - x3,\n      b2 = y1 - y2,\n      b3 = y1 - y3,\n      c2 = r2 - r1,\n      c3 = r3 - r1,\n      d1 = x1 * x1 + y1 * y1 - r1 * r1,\n      d2 = d1 - x2 * x2 - y2 * y2 + r2 * r2,\n      d3 = d1 - x3 * x3 - y3 * y3 + r3 * r3,\n      ab = a3 * b2 - a2 * b3,\n      xa = (b2 * d3 - b3 * d2) / (ab * 2) - x1,\n      xb = (b3 * c2 - b2 * c3) / ab,\n      ya = (a3 * d2 - a2 * d3) / (ab * 2) - y1,\n      yb = (a2 * c3 - a3 * c2) / ab,\n      A = xb * xb + yb * yb - 1,\n      B = 2 * (r1 + xa * xb + ya * yb),\n      C = xa * xa + ya * ya - r1 * r1,\n      r = -(A ? (B + Math.sqrt(B * B - 4 * A * C)) / (2 * A) : C / B);\n  return {\n    x: x1 + xa + xb * r,\n    y: y1 + ya + yb * r,\n    r: r\n  };\n}\n","import enclose from \"./enclose\";\n\nfunction place(b, a, c) {\n  var dx = b.x - a.x, x, a2,\n      dy = b.y - a.y, y, b2,\n      d2 = dx * dx + dy * dy;\n  if (d2) {\n    a2 = a.r + c.r, a2 *= a2;\n    b2 = b.r + c.r, b2 *= b2;\n    if (a2 > b2) {\n      x = (d2 + b2 - a2) / (2 * d2);\n      y = Math.sqrt(Math.max(0, b2 / d2 - x * x));\n      c.x = b.x - x * dx - y * dy;\n      c.y = b.y - x * dy + y * dx;\n    } else {\n      x = (d2 + a2 - b2) / (2 * d2);\n      y = Math.sqrt(Math.max(0, a2 / d2 - x * x));\n      c.x = a.x + x * dx - y * dy;\n      c.y = a.y + x * dy + y * dx;\n    }\n  } else {\n    c.x = a.x + c.r;\n    c.y = a.y;\n  }\n}\n\nfunction intersects(a, b) {\n  var dr = a.r + b.r - 1e-6, dx = b.x - a.x, dy = b.y - a.y;\n  return dr > 0 && dr * dr > dx * dx + dy * dy;\n}\n\nfunction score(node) {\n  var a = node._,\n      b = node.next._,\n      ab = a.r + b.r,\n      dx = (a.x * b.r + b.x * a.r) / ab,\n      dy = (a.y * b.r + b.y * a.r) / ab;\n  return dx * dx + dy * dy;\n}\n\nfunction Node(circle) {\n  this._ = circle;\n  this.next = null;\n  this.previous = null;\n}\n\nexport function packEnclose(circles) {\n  if (!(n = circles.length)) return 0;\n\n  var a, b, c, n, aa, ca, i, j, k, sj, sk;\n\n  // Place the first circle.\n  a = circles[0], a.x = 0, a.y = 0;\n  if (!(n > 1)) return a.r;\n\n  // Place the second circle.\n  b = circles[1], a.x = -b.r, b.x = a.r, b.y = 0;\n  if (!(n > 2)) return a.r + b.r;\n\n  // Place the third circle.\n  place(b, a, c = circles[2]);\n\n  // Initialize the front-chain using the first three circles a, b and c.\n  a = new Node(a), b = new Node(b), c = new Node(c);\n  a.next = c.previous = b;\n  b.next = a.previous = c;\n  c.next = b.previous = a;\n\n  // Attempt to place each remaining circle…\n  pack: for (i = 3; i < n; ++i) {\n    place(a._, b._, c = circles[i]), c = new Node(c);\n\n    // Find the closest intersecting circle on the front-chain, if any.\n    // “Closeness” is determined by linear distance along the front-chain.\n    // “Ahead” or “behind” is likewise determined by linear distance.\n    j = b.next, k = a.previous, sj = b._.r, sk = a._.r;\n    do {\n      if (sj <= sk) {\n        if (intersects(j._, c._)) {\n          b = j, a.next = b, b.previous = a, --i;\n          continue pack;\n        }\n        sj += j._.r, j = j.next;\n      } else {\n        if (intersects(k._, c._)) {\n          a = k, a.next = b, b.previous = a, --i;\n          continue pack;\n        }\n        sk += k._.r, k = k.previous;\n      }\n    } while (j !== k.next);\n\n    // Success! Insert the new circle c between a and b.\n    c.previous = a, c.next = b, a.next = b.previous = b = c;\n\n    // Compute the new closest circle pair to the centroid.\n    aa = score(a);\n    while ((c = c.next) !== b) {\n      if ((ca = score(c)) < aa) {\n        a = c, aa = ca;\n      }\n    }\n    b = a.next;\n  }\n\n  // Compute the enclosing circle of the front chain.\n  a = [b._], c = b; while ((c = c.next) !== b) a.push(c._); c = enclose(a);\n\n  // Translate the circles to put the enclosing circle around the origin.\n  for (i = 0; i < n; ++i) a = circles[i], a.x -= c.x, a.y -= c.y;\n\n  return c.r;\n}\n\nexport default function(circles) {\n  packEnclose(circles);\n  return circles;\n}\n","export function optional(f) {\n  return f == null ? null : required(f);\n}\n\nexport function required(f) {\n  if (typeof f !== \"function\") throw new Error;\n  return f;\n}\n","export function constantZero() {\n  return 0;\n}\n\nexport default function(x) {\n  return function() {\n    return x;\n  };\n}\n","import {packEnclose} from \"./siblings\";\nimport {optional} from \"../accessors\";\nimport constant, {constantZero} from \"../constant\";\n\nfunction defaultRadius(d) {\n  return Math.sqrt(d.value);\n}\n\nexport default function() {\n  var radius = null,\n      dx = 1,\n      dy = 1,\n      padding = constantZero;\n\n  function pack(root) {\n    root.x = dx / 2, root.y = dy / 2;\n    if (radius) {\n      root.eachBefore(radiusLeaf(radius))\n          .eachAfter(packChildren(padding, 0.5))\n          .eachBefore(translateChild(1));\n    } else {\n      root.eachBefore(radiusLeaf(defaultRadius))\n          .eachAfter(packChildren(constantZero, 1))\n          .eachAfter(packChildren(padding, root.r / Math.min(dx, dy)))\n          .eachBefore(translateChild(Math.min(dx, dy) / (2 * root.r)));\n    }\n    return root;\n  }\n\n  pack.radius = function(x) {\n    return arguments.length ? (radius = optional(x), pack) : radius;\n  };\n\n  pack.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], pack) : [dx, dy];\n  };\n\n  pack.padding = function(x) {\n    return arguments.length ? (padding = typeof x === \"function\" ? x : constant(+x), pack) : padding;\n  };\n\n  return pack;\n}\n\nfunction radiusLeaf(radius) {\n  return function(node) {\n    if (!node.children) {\n      node.r = Math.max(0, +radius(node) || 0);\n    }\n  };\n}\n\nfunction packChildren(padding, k) {\n  return function(node) {\n    if (children = node.children) {\n      var children,\n          i,\n          n = children.length,\n          r = padding(node) * k || 0,\n          e;\n\n      if (r) for (i = 0; i < n; ++i) children[i].r += r;\n      e = packEnclose(children);\n      if (r) for (i = 0; i < n; ++i) children[i].r -= r;\n      node.r = e + r;\n    }\n  };\n}\n\nfunction translateChild(k) {\n  return function(node) {\n    var parent = node.parent;\n    node.r *= k;\n    if (parent) {\n      node.x = parent.x + k * node.x;\n      node.y = parent.y + k * node.y;\n    }\n  };\n}\n","export default function(node) {\n  node.x0 = Math.round(node.x0);\n  node.y0 = Math.round(node.y0);\n  node.x1 = Math.round(node.x1);\n  node.y1 = Math.round(node.y1);\n}\n","export default function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      node,\n      i = -1,\n      n = nodes.length,\n      k = parent.value && (x1 - x0) / parent.value;\n\n  while (++i < n) {\n    node = nodes[i], node.y0 = y0, node.y1 = y1;\n    node.x0 = x0, node.x1 = x0 += node.value * k;\n  }\n}\n","import roundNode from \"./treemap/round\";\nimport treemapDice from \"./treemap/dice\";\n\nexport default function() {\n  var dx = 1,\n      dy = 1,\n      padding = 0,\n      round = false;\n\n  function partition(root) {\n    var n = root.height + 1;\n    root.x0 =\n    root.y0 = padding;\n    root.x1 = dx;\n    root.y1 = dy / n;\n    root.eachBefore(positionNode(dy, n));\n    if (round) root.eachBefore(roundNode);\n    return root;\n  }\n\n  function positionNode(dy, n) {\n    return function(node) {\n      if (node.children) {\n        treemapDice(node, node.x0, dy * (node.depth + 1) / n, node.x1, dy * (node.depth + 2) / n);\n      }\n      var x0 = node.x0,\n          y0 = node.y0,\n          x1 = node.x1 - padding,\n          y1 = node.y1 - padding;\n      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n      node.x0 = x0;\n      node.y0 = y0;\n      node.x1 = x1;\n      node.y1 = y1;\n    };\n  }\n\n  partition.round = function(x) {\n    return arguments.length ? (round = !!x, partition) : round;\n  };\n\n  partition.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], partition) : [dx, dy];\n  };\n\n  partition.padding = function(x) {\n    return arguments.length ? (padding = +x, partition) : padding;\n  };\n\n  return partition;\n}\n","import {required} from \"./accessors\";\nimport {Node, computeHeight} from \"./hierarchy/index\";\n\nvar keyPrefix = \"$\", // Protect against keys like “__proto__”.\n    preroot = {depth: -1},\n    ambiguous = {};\n\nfunction defaultId(d) {\n  return d.id;\n}\n\nfunction defaultParentId(d) {\n  return d.parentId;\n}\n\nexport default function() {\n  var id = defaultId,\n      parentId = defaultParentId;\n\n  function stratify(data) {\n    var d,\n        i,\n        n = data.length,\n        root,\n        parent,\n        node,\n        nodes = new Array(n),\n        nodeId,\n        nodeKey,\n        nodeByKey = {};\n\n    for (i = 0; i < n; ++i) {\n      d = data[i], node = nodes[i] = new Node(d);\n      if ((nodeId = id(d, i, data)) != null && (nodeId += \"\")) {\n        nodeKey = keyPrefix + (node.id = nodeId);\n        nodeByKey[nodeKey] = nodeKey in nodeByKey ? ambiguous : node;\n      }\n    }\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i], nodeId = parentId(data[i], i, data);\n      if (nodeId == null || !(nodeId += \"\")) {\n        if (root) throw new Error(\"multiple roots\");\n        root = node;\n      } else {\n        parent = nodeByKey[keyPrefix + nodeId];\n        if (!parent) throw new Error(\"missing: \" + nodeId);\n        if (parent === ambiguous) throw new Error(\"ambiguous: \" + nodeId);\n        if (parent.children) parent.children.push(node);\n        else parent.children = [node];\n        node.parent = parent;\n      }\n    }\n\n    if (!root) throw new Error(\"no root\");\n    root.parent = preroot;\n    root.eachBefore(function(node) { node.depth = node.parent.depth + 1; --n; }).eachBefore(computeHeight);\n    root.parent = null;\n    if (n > 0) throw new Error(\"cycle\");\n\n    return root;\n  }\n\n  stratify.id = function(x) {\n    return arguments.length ? (id = required(x), stratify) : id;\n  };\n\n  stratify.parentId = function(x) {\n    return arguments.length ? (parentId = required(x), stratify) : parentId;\n  };\n\n  return stratify;\n}\n","import {Node} from \"./hierarchy/index\";\n\nfunction defaultSeparation(a, b) {\n  return a.parent === b.parent ? 1 : 2;\n}\n\n// function radialSeparation(a, b) {\n//   return (a.parent === b.parent ? 1 : 2) / a.depth;\n// }\n\n// This function is used to traverse the left contour of a subtree (or\n// subforest). It returns the successor of v on this contour. This successor is\n// either given by the leftmost child of v or by the thread of v. The function\n// returns null if and only if v is on the highest level of its subtree.\nfunction nextLeft(v) {\n  var children = v.children;\n  return children ? children[0] : v.t;\n}\n\n// This function works analogously to nextLeft.\nfunction nextRight(v) {\n  var children = v.children;\n  return children ? children[children.length - 1] : v.t;\n}\n\n// Shifts the current subtree rooted at w+. This is done by increasing\n// prelim(w+) and mod(w+) by shift.\nfunction moveSubtree(wm, wp, shift) {\n  var change = shift / (wp.i - wm.i);\n  wp.c -= change;\n  wp.s += shift;\n  wm.c += change;\n  wp.z += shift;\n  wp.m += shift;\n}\n\n// All other shifts, applied to the smaller subtrees between w- and w+, are\n// performed by this function. To prepare the shifts, we have to adjust\n// change(w+), shift(w+), and change(w-).\nfunction executeShifts(v) {\n  var shift = 0,\n      change = 0,\n      children = v.children,\n      i = children.length,\n      w;\n  while (--i >= 0) {\n    w = children[i];\n    w.z += shift;\n    w.m += shift;\n    shift += w.s + (change += w.c);\n  }\n}\n\n// If vi-’s ancestor is a sibling of v, returns vi-’s ancestor. Otherwise,\n// returns the specified (default) ancestor.\nfunction nextAncestor(vim, v, ancestor) {\n  return vim.a.parent === v.parent ? vim.a : ancestor;\n}\n\nfunction TreeNode(node, i) {\n  this._ = node;\n  this.parent = null;\n  this.children = null;\n  this.A = null; // default ancestor\n  this.a = this; // ancestor\n  this.z = 0; // prelim\n  this.m = 0; // mod\n  this.c = 0; // change\n  this.s = 0; // shift\n  this.t = null; // thread\n  this.i = i; // number\n}\n\nTreeNode.prototype = Object.create(Node.prototype);\n\nfunction treeRoot(root) {\n  var tree = new TreeNode(root, 0),\n      node,\n      nodes = [tree],\n      child,\n      children,\n      i,\n      n;\n\n  while (node = nodes.pop()) {\n    if (children = node._.children) {\n      node.children = new Array(n = children.length);\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = node.children[i] = new TreeNode(children[i], i));\n        child.parent = node;\n      }\n    }\n  }\n\n  (tree.parent = new TreeNode(null, 0)).children = [tree];\n  return tree;\n}\n\n// Node-link tree diagram using the Reingold-Tilford \"tidy\" algorithm\nexport default function() {\n  var separation = defaultSeparation,\n      dx = 1,\n      dy = 1,\n      nodeSize = null;\n\n  function tree(root) {\n    var t = treeRoot(root);\n\n    // Compute the layout using Buchheim et al.’s algorithm.\n    t.eachAfter(firstWalk), t.parent.m = -t.z;\n    t.eachBefore(secondWalk);\n\n    // If a fixed node size is specified, scale x and y.\n    if (nodeSize) root.eachBefore(sizeNode);\n\n    // If a fixed tree size is specified, scale x and y based on the extent.\n    // Compute the left-most, right-most, and depth-most nodes for extents.\n    else {\n      var left = root,\n          right = root,\n          bottom = root;\n      root.eachBefore(function(node) {\n        if (node.x < left.x) left = node;\n        if (node.x > right.x) right = node;\n        if (node.depth > bottom.depth) bottom = node;\n      });\n      var s = left === right ? 1 : separation(left, right) / 2,\n          tx = s - left.x,\n          kx = dx / (right.x + s + tx),\n          ky = dy / (bottom.depth || 1);\n      root.eachBefore(function(node) {\n        node.x = (node.x + tx) * kx;\n        node.y = node.depth * ky;\n      });\n    }\n\n    return root;\n  }\n\n  // Computes a preliminary x-coordinate for v. Before that, FIRST WALK is\n  // applied recursively to the children of v, as well as the function\n  // APPORTION. After spacing out the children by calling EXECUTE SHIFTS, the\n  // node v is placed to the midpoint of its outermost children.\n  function firstWalk(v) {\n    var children = v.children,\n        siblings = v.parent.children,\n        w = v.i ? siblings[v.i - 1] : null;\n    if (children) {\n      executeShifts(v);\n      var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n      if (w) {\n        v.z = w.z + separation(v._, w._);\n        v.m = v.z - midpoint;\n      } else {\n        v.z = midpoint;\n      }\n    } else if (w) {\n      v.z = w.z + separation(v._, w._);\n    }\n    v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n  }\n\n  // Computes all real x-coordinates by summing up the modifiers recursively.\n  function secondWalk(v) {\n    v._.x = v.z + v.parent.m;\n    v.m += v.parent.m;\n  }\n\n  // The core of the algorithm. Here, a new subtree is combined with the\n  // previous subtrees. Threads are used to traverse the inside and outside\n  // contours of the left and right subtree up to the highest common level. The\n  // vertices used for the traversals are vi+, vi-, vo-, and vo+, where the\n  // superscript o means outside and i means inside, the subscript - means left\n  // subtree and + means right subtree. For summing up the modifiers along the\n  // contour, we use respective variables si+, si-, so-, and so+. Whenever two\n  // nodes of the inside contours conflict, we compute the left one of the\n  // greatest uncommon ancestors using the function ANCESTOR and call MOVE\n  // SUBTREE to shift the subtree and prepare the shifts of smaller subtrees.\n  // Finally, we add a new thread (if necessary).\n  function apportion(v, w, ancestor) {\n    if (w) {\n      var vip = v,\n          vop = v,\n          vim = w,\n          vom = vip.parent.children[0],\n          sip = vip.m,\n          sop = vop.m,\n          sim = vim.m,\n          som = vom.m,\n          shift;\n      while (vim = nextRight(vim), vip = nextLeft(vip), vim && vip) {\n        vom = nextLeft(vom);\n        vop = nextRight(vop);\n        vop.a = v;\n        shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n        if (shift > 0) {\n          moveSubtree(nextAncestor(vim, v, ancestor), v, shift);\n          sip += shift;\n          sop += shift;\n        }\n        sim += vim.m;\n        sip += vip.m;\n        som += vom.m;\n        sop += vop.m;\n      }\n      if (vim && !nextRight(vop)) {\n        vop.t = vim;\n        vop.m += sim - sop;\n      }\n      if (vip && !nextLeft(vom)) {\n        vom.t = vip;\n        vom.m += sip - som;\n        ancestor = v;\n      }\n    }\n    return ancestor;\n  }\n\n  function sizeNode(node) {\n    node.x *= dx;\n    node.y = node.depth * dy;\n  }\n\n  tree.separation = function(x) {\n    return arguments.length ? (separation = x, tree) : separation;\n  };\n\n  tree.size = function(x) {\n    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], tree) : (nodeSize ? null : [dx, dy]);\n  };\n\n  tree.nodeSize = function(x) {\n    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], tree) : (nodeSize ? [dx, dy] : null);\n  };\n\n  return tree;\n}\n","export default function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      node,\n      i = -1,\n      n = nodes.length,\n      k = parent.value && (y1 - y0) / parent.value;\n\n  while (++i < n) {\n    node = nodes[i], node.x0 = x0, node.x1 = x1;\n    node.y0 = y0, node.y1 = y0 += node.value * k;\n  }\n}\n","import treemapDice from \"./dice\";\nimport treemapSlice from \"./slice\";\n\nexport var phi = (1 + Math.sqrt(5)) / 2;\n\nexport function squarifyRatio(ratio, parent, x0, y0, x1, y1) {\n  var rows = [],\n      nodes = parent.children,\n      row,\n      nodeValue,\n      i0 = 0,\n      i1 = 0,\n      n = nodes.length,\n      dx, dy,\n      value = parent.value,\n      sumValue,\n      minValue,\n      maxValue,\n      newRatio,\n      minRatio,\n      alpha,\n      beta;\n\n  while (i0 < n) {\n    dx = x1 - x0, dy = y1 - y0;\n\n    // Find the next non-empty node.\n    do sumValue = nodes[i1++].value; while (!sumValue && i1 < n);\n    minValue = maxValue = sumValue;\n    alpha = Math.max(dy / dx, dx / dy) / (value * ratio);\n    beta = sumValue * sumValue * alpha;\n    minRatio = Math.max(maxValue / beta, beta / minValue);\n\n    // Keep adding nodes while the aspect ratio maintains or improves.\n    for (; i1 < n; ++i1) {\n      sumValue += nodeValue = nodes[i1].value;\n      if (nodeValue < minValue) minValue = nodeValue;\n      if (nodeValue > maxValue) maxValue = nodeValue;\n      beta = sumValue * sumValue * alpha;\n      newRatio = Math.max(maxValue / beta, beta / minValue);\n      if (newRatio > minRatio) { sumValue -= nodeValue; break; }\n      minRatio = newRatio;\n    }\n\n    // Position and record the row orientation.\n    rows.push(row = {value: sumValue, dice: dx < dy, children: nodes.slice(i0, i1)});\n    if (row.dice) treemapDice(row, x0, y0, x1, value ? y0 += dy * sumValue / value : y1);\n    else treemapSlice(row, x0, y0, value ? x0 += dx * sumValue / value : x1, y1);\n    value -= sumValue, i0 = i1;\n  }\n\n  return rows;\n}\n\nexport default (function custom(ratio) {\n\n  function squarify(parent, x0, y0, x1, y1) {\n    squarifyRatio(ratio, parent, x0, y0, x1, y1);\n  }\n\n  squarify.ratio = function(x) {\n    return custom((x = +x) > 1 ? x : 1);\n  };\n\n  return squarify;\n})(phi);\n","import roundNode from \"./round\";\nimport squarify from \"./squarify\";\nimport {required} from \"../accessors\";\nimport constant, {constantZero} from \"../constant\";\n\nexport default function() {\n  var tile = squarify,\n      round = false,\n      dx = 1,\n      dy = 1,\n      paddingStack = [0],\n      paddingInner = constantZero,\n      paddingTop = constantZero,\n      paddingRight = constantZero,\n      paddingBottom = constantZero,\n      paddingLeft = constantZero;\n\n  function treemap(root) {\n    root.x0 =\n    root.y0 = 0;\n    root.x1 = dx;\n    root.y1 = dy;\n    root.eachBefore(positionNode);\n    paddingStack = [0];\n    if (round) root.eachBefore(roundNode);\n    return root;\n  }\n\n  function positionNode(node) {\n    var p = paddingStack[node.depth],\n        x0 = node.x0 + p,\n        y0 = node.y0 + p,\n        x1 = node.x1 - p,\n        y1 = node.y1 - p;\n    if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n    if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n    node.x0 = x0;\n    node.y0 = y0;\n    node.x1 = x1;\n    node.y1 = y1;\n    if (node.children) {\n      p = paddingStack[node.depth + 1] = paddingInner(node) / 2;\n      x0 += paddingLeft(node) - p;\n      y0 += paddingTop(node) - p;\n      x1 -= paddingRight(node) - p;\n      y1 -= paddingBottom(node) - p;\n      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n      tile(node, x0, y0, x1, y1);\n    }\n  }\n\n  treemap.round = function(x) {\n    return arguments.length ? (round = !!x, treemap) : round;\n  };\n\n  treemap.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], treemap) : [dx, dy];\n  };\n\n  treemap.tile = function(x) {\n    return arguments.length ? (tile = required(x), treemap) : tile;\n  };\n\n  treemap.padding = function(x) {\n    return arguments.length ? treemap.paddingInner(x).paddingOuter(x) : treemap.paddingInner();\n  };\n\n  treemap.paddingInner = function(x) {\n    return arguments.length ? (paddingInner = typeof x === \"function\" ? x : constant(+x), treemap) : paddingInner;\n  };\n\n  treemap.paddingOuter = function(x) {\n    return arguments.length ? treemap.paddingTop(x).paddingRight(x).paddingBottom(x).paddingLeft(x) : treemap.paddingTop();\n  };\n\n  treemap.paddingTop = function(x) {\n    return arguments.length ? (paddingTop = typeof x === \"function\" ? x : constant(+x), treemap) : paddingTop;\n  };\n\n  treemap.paddingRight = function(x) {\n    return arguments.length ? (paddingRight = typeof x === \"function\" ? x : constant(+x), treemap) : paddingRight;\n  };\n\n  treemap.paddingBottom = function(x) {\n    return arguments.length ? (paddingBottom = typeof x === \"function\" ? x : constant(+x), treemap) : paddingBottom;\n  };\n\n  treemap.paddingLeft = function(x) {\n    return arguments.length ? (paddingLeft = typeof x === \"function\" ? x : constant(+x), treemap) : paddingLeft;\n  };\n\n  return treemap;\n}\n","export default function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      i, n = nodes.length,\n      sum, sums = new Array(n + 1);\n\n  for (sums[0] = sum = i = 0; i < n; ++i) {\n    sums[i + 1] = sum += nodes[i].value;\n  }\n\n  partition(0, n, parent.value, x0, y0, x1, y1);\n\n  function partition(i, j, value, x0, y0, x1, y1) {\n    if (i >= j - 1) {\n      var node = nodes[i];\n      node.x0 = x0, node.y0 = y0;\n      node.x1 = x1, node.y1 = y1;\n      return;\n    }\n\n    var valueOffset = sums[i],\n        valueTarget = (value / 2) + valueOffset,\n        k = i + 1,\n        hi = j - 1;\n\n    while (k < hi) {\n      var mid = k + hi >>> 1;\n      if (sums[mid] < valueTarget) k = mid + 1;\n      else hi = mid;\n    }\n\n    if ((valueTarget - sums[k - 1]) < (sums[k] - valueTarget) && i + 1 < k) --k;\n\n    var valueLeft = sums[k] - valueOffset,\n        valueRight = value - valueLeft;\n\n    if ((x1 - x0) > (y1 - y0)) {\n      var xk = (x0 * valueRight + x1 * valueLeft) / value;\n      partition(i, k, valueLeft, x0, y0, xk, y1);\n      partition(k, j, valueRight, xk, y0, x1, y1);\n    } else {\n      var yk = (y0 * valueRight + y1 * valueLeft) / value;\n      partition(i, k, valueLeft, x0, y0, x1, yk);\n      partition(k, j, valueRight, x0, yk, x1, y1);\n    }\n  }\n}\n","import dice from \"./dice\";\nimport slice from \"./slice\";\n\nexport default function(parent, x0, y0, x1, y1) {\n  (parent.depth & 1 ? slice : dice)(parent, x0, y0, x1, y1);\n}\n","import treemapDice from \"./dice\";\nimport treemapSlice from \"./slice\";\nimport {phi, squarifyRatio} from \"./squarify\";\n\nexport default (function custom(ratio) {\n\n  function resquarify(parent, x0, y0, x1, y1) {\n    if ((rows = parent._squarify) && (rows.ratio === ratio)) {\n      var rows,\n          row,\n          nodes,\n          i,\n          j = -1,\n          n,\n          m = rows.length,\n          value = parent.value;\n\n      while (++j < m) {\n        row = rows[j], nodes = row.children;\n        for (i = row.value = 0, n = nodes.length; i < n; ++i) row.value += nodes[i].value;\n        if (row.dice) treemapDice(row, x0, y0, x1, y0 += (y1 - y0) * row.value / value);\n        else treemapSlice(row, x0, y0, x0 += (x1 - x0) * row.value / value, y1);\n        value -= row.value;\n      }\n    } else {\n      parent._squarify = rows = squarifyRatio(ratio, parent, x0, y0, x1, y1);\n      rows.ratio = ratio;\n    }\n  }\n\n  resquarify.ratio = function(x) {\n    return custom((x = +x) > 1 ? x : 1);\n  };\n\n  return resquarify;\n})(phi);\n","export default function(specifier) {\n  var n = specifier.length / 6 | 0, colors = new Array(n), i = 0;\n  while (i < n) colors[i] = \"#\" + specifier.slice(i * 6, ++i * 6);\n  return colors;\n}\n","import colors from \"../colors\";\n\nexport default colors(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\");\n","import colors from \"../colors\";\n\nexport default colors(\"7fc97fbeaed4fdc086ffff99386cb0f0027fbf5b17666666\");\n","import colors from \"../colors\";\n\nexport default colors(\"1b9e77d95f027570b3e7298a66a61ee6ab02a6761d666666\");\n","import colors from \"../colors\";\n\nexport default colors(\"a6cee31f78b4b2df8a33a02cfb9a99e31a1cfdbf6fff7f00cab2d66a3d9affff99b15928\");\n","import colors from \"../colors\";\n\nexport default colors(\"fbb4aeb3cde3ccebc5decbe4fed9a6ffffcce5d8bdfddaecf2f2f2\");\n","import colors from \"../colors\";\n\nexport default colors(\"b3e2cdfdcdaccbd5e8f4cae4e6f5c9fff2aef1e2cccccccc\");\n","import colors from \"../colors\";\n\nexport default colors(\"e41a1c377eb84daf4a984ea3ff7f00ffff33a65628f781bf999999\");\n","import colors from \"../colors\";\n\nexport default colors(\"66c2a5fc8d628da0cbe78ac3a6d854ffd92fe5c494b3b3b3\");\n","import colors from \"../colors\";\n\nexport default colors(\"8dd3c7ffffb3bebadafb807280b1d3fdb462b3de69fccde5d9d9d9bc80bdccebc5ffed6f\");\n","import {interpolateRgbBasis} from \"d3-interpolate\";\n\nexport default function(scheme) {\n  return interpolateRgbBasis(scheme[scheme.length - 1]);\n}\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"d8b365f5f5f55ab4ac\",\n  \"a6611adfc27d80cdc1018571\",\n  \"a6611adfc27df5f5f580cdc1018571\",\n  \"8c510ad8b365f6e8c3c7eae55ab4ac01665e\",\n  \"8c510ad8b365f6e8c3f5f5f5c7eae55ab4ac01665e\",\n  \"8c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e\",\n  \"8c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e\",\n  \"5430058c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e003c30\",\n  \"5430058c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e003c30\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"af8dc3f7f7f77fbf7b\",\n  \"7b3294c2a5cfa6dba0008837\",\n  \"7b3294c2a5cff7f7f7a6dba0008837\",\n  \"762a83af8dc3e7d4e8d9f0d37fbf7b1b7837\",\n  \"762a83af8dc3e7d4e8f7f7f7d9f0d37fbf7b1b7837\",\n  \"762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b7837\",\n  \"762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b7837\",\n  \"40004b762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b783700441b\",\n  \"40004b762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b783700441b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e9a3c9f7f7f7a1d76a\",\n  \"d01c8bf1b6dab8e1864dac26\",\n  \"d01c8bf1b6daf7f7f7b8e1864dac26\",\n  \"c51b7de9a3c9fde0efe6f5d0a1d76a4d9221\",\n  \"c51b7de9a3c9fde0eff7f7f7e6f5d0a1d76a4d9221\",\n  \"c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221\",\n  \"c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221\",\n  \"8e0152c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221276419\",\n  \"8e0152c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221276419\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"998ec3f7f7f7f1a340\",\n  \"5e3c99b2abd2fdb863e66101\",\n  \"5e3c99b2abd2f7f7f7fdb863e66101\",\n  \"542788998ec3d8daebfee0b6f1a340b35806\",\n  \"542788998ec3d8daebf7f7f7fee0b6f1a340b35806\",\n  \"5427888073acb2abd2d8daebfee0b6fdb863e08214b35806\",\n  \"5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b35806\",\n  \"2d004b5427888073acb2abd2d8daebfee0b6fdb863e08214b358067f3b08\",\n  \"2d004b5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b358067f3b08\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ef8a62f7f7f767a9cf\",\n  \"ca0020f4a58292c5de0571b0\",\n  \"ca0020f4a582f7f7f792c5de0571b0\",\n  \"b2182bef8a62fddbc7d1e5f067a9cf2166ac\",\n  \"b2182bef8a62fddbc7f7f7f7d1e5f067a9cf2166ac\",\n  \"b2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac\",\n  \"b2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac\",\n  \"67001fb2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac053061\",\n  \"67001fb2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac053061\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ef8a62ffffff999999\",\n  \"ca0020f4a582bababa404040\",\n  \"ca0020f4a582ffffffbababa404040\",\n  \"b2182bef8a62fddbc7e0e0e09999994d4d4d\",\n  \"b2182bef8a62fddbc7ffffffe0e0e09999994d4d4d\",\n  \"b2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d\",\n  \"b2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d\",\n  \"67001fb2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d1a1a1a\",\n  \"67001fb2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d1a1a1a\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fc8d59ffffbf91bfdb\",\n  \"d7191cfdae61abd9e92c7bb6\",\n  \"d7191cfdae61ffffbfabd9e92c7bb6\",\n  \"d73027fc8d59fee090e0f3f891bfdb4575b4\",\n  \"d73027fc8d59fee090ffffbfe0f3f891bfdb4575b4\",\n  \"d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4\",\n  \"d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4\",\n  \"a50026d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4313695\",\n  \"a50026d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4313695\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fc8d59ffffbf91cf60\",\n  \"d7191cfdae61a6d96a1a9641\",\n  \"d7191cfdae61ffffbfa6d96a1a9641\",\n  \"d73027fc8d59fee08bd9ef8b91cf601a9850\",\n  \"d73027fc8d59fee08bffffbfd9ef8b91cf601a9850\",\n  \"d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850\",\n  \"d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850\",\n  \"a50026d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850006837\",\n  \"a50026d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850006837\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fc8d59ffffbf99d594\",\n  \"d7191cfdae61abdda42b83ba\",\n  \"d7191cfdae61ffffbfabdda42b83ba\",\n  \"d53e4ffc8d59fee08be6f59899d5943288bd\",\n  \"d53e4ffc8d59fee08bffffbfe6f59899d5943288bd\",\n  \"d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd\",\n  \"d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd\",\n  \"9e0142d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd5e4fa2\",\n  \"9e0142d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd5e4fa2\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e5f5f999d8c92ca25f\",\n  \"edf8fbb2e2e266c2a4238b45\",\n  \"edf8fbb2e2e266c2a42ca25f006d2c\",\n  \"edf8fbccece699d8c966c2a42ca25f006d2c\",\n  \"edf8fbccece699d8c966c2a441ae76238b45005824\",\n  \"f7fcfde5f5f9ccece699d8c966c2a441ae76238b45005824\",\n  \"f7fcfde5f5f9ccece699d8c966c2a441ae76238b45006d2c00441b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e0ecf49ebcda8856a7\",\n  \"edf8fbb3cde38c96c688419d\",\n  \"edf8fbb3cde38c96c68856a7810f7c\",\n  \"edf8fbbfd3e69ebcda8c96c68856a7810f7c\",\n  \"edf8fbbfd3e69ebcda8c96c68c6bb188419d6e016b\",\n  \"f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d6e016b\",\n  \"f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d810f7c4d004b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e0f3dba8ddb543a2ca\",\n  \"f0f9e8bae4bc7bccc42b8cbe\",\n  \"f0f9e8bae4bc7bccc443a2ca0868ac\",\n  \"f0f9e8ccebc5a8ddb57bccc443a2ca0868ac\",\n  \"f0f9e8ccebc5a8ddb57bccc44eb3d32b8cbe08589e\",\n  \"f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe08589e\",\n  \"f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe0868ac084081\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fee8c8fdbb84e34a33\",\n  \"fef0d9fdcc8afc8d59d7301f\",\n  \"fef0d9fdcc8afc8d59e34a33b30000\",\n  \"fef0d9fdd49efdbb84fc8d59e34a33b30000\",\n  \"fef0d9fdd49efdbb84fc8d59ef6548d7301f990000\",\n  \"fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301f990000\",\n  \"fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301fb300007f0000\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ece2f0a6bddb1c9099\",\n  \"f6eff7bdc9e167a9cf02818a\",\n  \"f6eff7bdc9e167a9cf1c9099016c59\",\n  \"f6eff7d0d1e6a6bddb67a9cf1c9099016c59\",\n  \"f6eff7d0d1e6a6bddb67a9cf3690c002818a016450\",\n  \"fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016450\",\n  \"fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016c59014636\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ece7f2a6bddb2b8cbe\",\n  \"f1eef6bdc9e174a9cf0570b0\",\n  \"f1eef6bdc9e174a9cf2b8cbe045a8d\",\n  \"f1eef6d0d1e6a6bddb74a9cf2b8cbe045a8d\",\n  \"f1eef6d0d1e6a6bddb74a9cf3690c00570b0034e7b\",\n  \"fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0034e7b\",\n  \"fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0045a8d023858\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e7e1efc994c7dd1c77\",\n  \"f1eef6d7b5d8df65b0ce1256\",\n  \"f1eef6d7b5d8df65b0dd1c77980043\",\n  \"f1eef6d4b9dac994c7df65b0dd1c77980043\",\n  \"f1eef6d4b9dac994c7df65b0e7298ace125691003f\",\n  \"f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125691003f\",\n  \"f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125698004367001f\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fde0ddfa9fb5c51b8a\",\n  \"feebe2fbb4b9f768a1ae017e\",\n  \"feebe2fbb4b9f768a1c51b8a7a0177\",\n  \"feebe2fcc5c0fa9fb5f768a1c51b8a7a0177\",\n  \"feebe2fcc5c0fa9fb5f768a1dd3497ae017e7a0177\",\n  \"fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a0177\",\n  \"fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a017749006a\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"edf8b17fcdbb2c7fb8\",\n  \"ffffcca1dab441b6c4225ea8\",\n  \"ffffcca1dab441b6c42c7fb8253494\",\n  \"ffffccc7e9b47fcdbb41b6c42c7fb8253494\",\n  \"ffffccc7e9b47fcdbb41b6c41d91c0225ea80c2c84\",\n  \"ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea80c2c84\",\n  \"ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea8253494081d58\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"f7fcb9addd8e31a354\",\n  \"ffffccc2e69978c679238443\",\n  \"ffffccc2e69978c67931a354006837\",\n  \"ffffccd9f0a3addd8e78c67931a354006837\",\n  \"ffffccd9f0a3addd8e78c67941ab5d238443005a32\",\n  \"ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443005a32\",\n  \"ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443006837004529\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fff7bcfec44fd95f0e\",\n  \"ffffd4fed98efe9929cc4c02\",\n  \"ffffd4fed98efe9929d95f0e993404\",\n  \"ffffd4fee391fec44ffe9929d95f0e993404\",\n  \"ffffd4fee391fec44ffe9929ec7014cc4c028c2d04\",\n  \"ffffe5fff7bcfee391fec44ffe9929ec7014cc4c028c2d04\",\n  \"ffffe5fff7bcfee391fec44ffe9929ec7014cc4c02993404662506\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ffeda0feb24cf03b20\",\n  \"ffffb2fecc5cfd8d3ce31a1c\",\n  \"ffffb2fecc5cfd8d3cf03b20bd0026\",\n  \"ffffb2fed976feb24cfd8d3cf03b20bd0026\",\n  \"ffffb2fed976feb24cfd8d3cfc4e2ae31a1cb10026\",\n  \"ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cb10026\",\n  \"ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cbd0026800026\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"deebf79ecae13182bd\",\n  \"eff3ffbdd7e76baed62171b5\",\n  \"eff3ffbdd7e76baed63182bd08519c\",\n  \"eff3ffc6dbef9ecae16baed63182bd08519c\",\n  \"eff3ffc6dbef9ecae16baed64292c62171b5084594\",\n  \"f7fbffdeebf7c6dbef9ecae16baed64292c62171b5084594\",\n  \"f7fbffdeebf7c6dbef9ecae16baed64292c62171b508519c08306b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e5f5e0a1d99b31a354\",\n  \"edf8e9bae4b374c476238b45\",\n  \"edf8e9bae4b374c47631a354006d2c\",\n  \"edf8e9c7e9c0a1d99b74c47631a354006d2c\",\n  \"edf8e9c7e9c0a1d99b74c47641ab5d238b45005a32\",\n  \"f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45005a32\",\n  \"f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45006d2c00441b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"f0f0f0bdbdbd636363\",\n  \"f7f7f7cccccc969696525252\",\n  \"f7f7f7cccccc969696636363252525\",\n  \"f7f7f7d9d9d9bdbdbd969696636363252525\",\n  \"f7f7f7d9d9d9bdbdbd969696737373525252252525\",\n  \"fffffff0f0f0d9d9d9bdbdbd969696737373525252252525\",\n  \"fffffff0f0f0d9d9d9bdbdbd969696737373525252252525000000\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"efedf5bcbddc756bb1\",\n  \"f2f0f7cbc9e29e9ac86a51a3\",\n  \"f2f0f7cbc9e29e9ac8756bb154278f\",\n  \"f2f0f7dadaebbcbddc9e9ac8756bb154278f\",\n  \"f2f0f7dadaebbcbddc9e9ac8807dba6a51a34a1486\",\n  \"fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a34a1486\",\n  \"fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a354278f3f007d\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fee0d2fc9272de2d26\",\n  \"fee5d9fcae91fb6a4acb181d\",\n  \"fee5d9fcae91fb6a4ade2d26a50f15\",\n  \"fee5d9fcbba1fc9272fb6a4ade2d26a50f15\",\n  \"fee5d9fcbba1fc9272fb6a4aef3b2ccb181d99000d\",\n  \"fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181d99000d\",\n  \"fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181da50f1567000d\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fee6cefdae6be6550d\",\n  \"feeddefdbe85fd8d3cd94701\",\n  \"feeddefdbe85fd8d3ce6550da63603\",\n  \"feeddefdd0a2fdae6bfd8d3ce6550da63603\",\n  \"feeddefdd0a2fdae6bfd8d3cf16913d948018c2d04\",\n  \"fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d948018c2d04\",\n  \"fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d94801a636037f2704\"\n).map(colors);\n\nexport default ramp(scheme);\n","import {cubehelix} from \"d3-color\";\nimport {interpolateCubehelixLong} from \"d3-interpolate\";\n\nexport default interpolateCubehelixLong(cubehelix(300, 0.5, 0.0), cubehelix(-240, 0.5, 1.0));\n","import {cubehelix} from \"d3-color\";\nimport {interpolateCubehelixLong} from \"d3-interpolate\";\n\nexport var warm = interpolateCubehelixLong(cubehelix(-100, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nexport var cool = interpolateCubehelixLong(cubehelix(260, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nvar c = cubehelix();\n\nexport default function(t) {\n  if (t < 0 || t > 1) t -= Math.floor(t);\n  var ts = Math.abs(t - 0.5);\n  c.h = 360 * t - 100;\n  c.s = 1.5 - 1.5 * ts;\n  c.l = 0.8 - 0.9 * ts;\n  return c + \"\";\n}\n","import {rgb} from \"d3-color\";\n\nvar c = rgb(),\n    pi_1_3 = Math.PI / 3,\n    pi_2_3 = Math.PI * 2 / 3;\n\nexport default function(t) {\n  var x;\n  t = (0.5 - t) * Math.PI;\n  c.r = 255 * (x = Math.sin(t)) * x;\n  c.g = 255 * (x = Math.sin(t + pi_1_3)) * x;\n  c.b = 255 * (x = Math.sin(t + pi_2_3)) * x;\n  return c + \"\";\n}\n","import colors from \"../colors\";\n\nfunction ramp(range) {\n  var n = range.length;\n  return function(t) {\n    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n  };\n}\n\nexport default ramp(colors(\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\"));\n\nexport var magma = ramp(colors(\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\"));\n\nexport var inferno = ramp(colors(\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\"));\n\nexport var plasma = ramp(colors(\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\"));\n","export default function(x) {\n  return function constant() {\n    return x;\n  };\n}\n","export var abs = Math.abs;\nexport var atan2 = Math.atan2;\nexport var cos = Math.cos;\nexport var max = Math.max;\nexport var min = Math.min;\nexport var sin = Math.sin;\nexport var sqrt = Math.sqrt;\n\nexport var epsilon = 1e-12;\nexport var pi = Math.PI;\nexport var halfPi = pi / 2;\nexport var tau = 2 * pi;\n\nexport function acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\n}\n\nexport function asin(x) {\n  return x >= 1 ? halfPi : x <= -1 ? -halfPi : Math.asin(x);\n}\n","import {path} from \"d3-path\";\nimport constant from \"./constant\";\nimport {abs, acos, asin, atan2, cos, epsilon, halfPi, max, min, pi, sin, sqrt, tau} from \"./math\";\n\nfunction arcInnerRadius(d) {\n  return d.innerRadius;\n}\n\nfunction arcOuterRadius(d) {\n  return d.outerRadius;\n}\n\nfunction arcStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction arcEndAngle(d) {\n  return d.endAngle;\n}\n\nfunction arcPadAngle(d) {\n  return d && d.padAngle; // Note: optional!\n}\n\nfunction intersect(x0, y0, x1, y1, x2, y2, x3, y3) {\n  var x10 = x1 - x0, y10 = y1 - y0,\n      x32 = x3 - x2, y32 = y3 - y2,\n      t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / (y32 * x10 - x32 * y10);\n  return [x0 + t * x10, y0 + t * y10];\n}\n\n// Compute perpendicular offset line of length rc.\n// http://mathworld.wolfram.com/Circle-LineIntersection.html\nfunction cornerTangents(x0, y0, x1, y1, r1, rc, cw) {\n  var x01 = x0 - x1,\n      y01 = y0 - y1,\n      lo = (cw ? rc : -rc) / sqrt(x01 * x01 + y01 * y01),\n      ox = lo * y01,\n      oy = -lo * x01,\n      x11 = x0 + ox,\n      y11 = y0 + oy,\n      x10 = x1 + ox,\n      y10 = y1 + oy,\n      x00 = (x11 + x10) / 2,\n      y00 = (y11 + y10) / 2,\n      dx = x10 - x11,\n      dy = y10 - y11,\n      d2 = dx * dx + dy * dy,\n      r = r1 - rc,\n      D = x11 * y10 - x10 * y11,\n      d = (dy < 0 ? -1 : 1) * sqrt(max(0, r * r * d2 - D * D)),\n      cx0 = (D * dy - dx * d) / d2,\n      cy0 = (-D * dx - dy * d) / d2,\n      cx1 = (D * dy + dx * d) / d2,\n      cy1 = (-D * dx + dy * d) / d2,\n      dx0 = cx0 - x00,\n      dy0 = cy0 - y00,\n      dx1 = cx1 - x00,\n      dy1 = cy1 - y00;\n\n  // Pick the closer of the two intersection points.\n  // TODO Is there a faster way to determine which intersection to use?\n  if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\n  return {\n    cx: cx0,\n    cy: cy0,\n    x01: -ox,\n    y01: -oy,\n    x11: cx0 * (r1 / r - 1),\n    y11: cy0 * (r1 / r - 1)\n  };\n}\n\nexport default function() {\n  var innerRadius = arcInnerRadius,\n      outerRadius = arcOuterRadius,\n      cornerRadius = constant(0),\n      padRadius = null,\n      startAngle = arcStartAngle,\n      endAngle = arcEndAngle,\n      padAngle = arcPadAngle,\n      context = null;\n\n  function arc() {\n    var buffer,\n        r,\n        r0 = +innerRadius.apply(this, arguments),\n        r1 = +outerRadius.apply(this, arguments),\n        a0 = startAngle.apply(this, arguments) - halfPi,\n        a1 = endAngle.apply(this, arguments) - halfPi,\n        da = abs(a1 - a0),\n        cw = a1 > a0;\n\n    if (!context) context = buffer = path();\n\n    // Ensure that the outer radius is always larger than the inner radius.\n    if (r1 < r0) r = r1, r1 = r0, r0 = r;\n\n    // Is it a point?\n    if (!(r1 > epsilon)) context.moveTo(0, 0);\n\n    // Or is it a circle or annulus?\n    else if (da > tau - epsilon) {\n      context.moveTo(r1 * cos(a0), r1 * sin(a0));\n      context.arc(0, 0, r1, a0, a1, !cw);\n      if (r0 > epsilon) {\n        context.moveTo(r0 * cos(a1), r0 * sin(a1));\n        context.arc(0, 0, r0, a1, a0, cw);\n      }\n    }\n\n    // Or is it a circular or annular sector?\n    else {\n      var a01 = a0,\n          a11 = a1,\n          a00 = a0,\n          a10 = a1,\n          da0 = da,\n          da1 = da,\n          ap = padAngle.apply(this, arguments) / 2,\n          rp = (ap > epsilon) && (padRadius ? +padRadius.apply(this, arguments) : sqrt(r0 * r0 + r1 * r1)),\n          rc = min(abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),\n          rc0 = rc,\n          rc1 = rc,\n          t0,\n          t1;\n\n      // Apply padding? Note that since r1 ≥ r0, da1 ≥ da0.\n      if (rp > epsilon) {\n        var p0 = asin(rp / r0 * sin(ap)),\n            p1 = asin(rp / r1 * sin(ap));\n        if ((da0 -= p0 * 2) > epsilon) p0 *= (cw ? 1 : -1), a00 += p0, a10 -= p0;\n        else da0 = 0, a00 = a10 = (a0 + a1) / 2;\n        if ((da1 -= p1 * 2) > epsilon) p1 *= (cw ? 1 : -1), a01 += p1, a11 -= p1;\n        else da1 = 0, a01 = a11 = (a0 + a1) / 2;\n      }\n\n      var x01 = r1 * cos(a01),\n          y01 = r1 * sin(a01),\n          x10 = r0 * cos(a10),\n          y10 = r0 * sin(a10);\n\n      // Apply rounded corners?\n      if (rc > epsilon) {\n        var x11 = r1 * cos(a11),\n            y11 = r1 * sin(a11),\n            x00 = r0 * cos(a00),\n            y00 = r0 * sin(a00);\n\n        // Restrict the corner radius according to the sector angle.\n        if (da < pi) {\n          var oc = da0 > epsilon ? intersect(x01, y01, x00, y00, x11, y11, x10, y10) : [x10, y10],\n              ax = x01 - oc[0],\n              ay = y01 - oc[1],\n              bx = x11 - oc[0],\n              by = y11 - oc[1],\n              kc = 1 / sin(acos((ax * bx + ay * by) / (sqrt(ax * ax + ay * ay) * sqrt(bx * bx + by * by))) / 2),\n              lc = sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = min(rc, (r0 - lc) / (kc - 1));\n          rc1 = min(rc, (r1 - lc) / (kc + 1));\n        }\n      }\n\n      // Is the sector collapsed to a line?\n      if (!(da1 > epsilon)) context.moveTo(x01, y01);\n\n      // Does the sector’s outer ring have rounded corners?\n      else if (rc1 > epsilon) {\n        t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);\n        t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);\n\n        context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r1, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), !cw);\n          context.arc(t1.cx, t1.cy, rc1, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the outer ring just a circular arc?\n      else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw);\n\n      // Is there no inner ring, and it’s a circular sector?\n      // Or perhaps it’s an annular sector collapsed due to padding?\n      if (!(r0 > epsilon) || !(da0 > epsilon)) context.lineTo(x10, y10);\n\n      // Does the sector’s inner ring (or point) have rounded corners?\n      else if (rc0 > epsilon) {\n        t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);\n        t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);\n\n        context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r0, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), cw);\n          context.arc(t1.cx, t1.cy, rc0, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the inner ring just a circular arc?\n      else context.arc(0, 0, r0, a10, a00, cw);\n    }\n\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  arc.centroid = function() {\n    var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,\n        a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - pi / 2;\n    return [cos(a) * r, sin(a) * r];\n  };\n\n  arc.innerRadius = function(_) {\n    return arguments.length ? (innerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : innerRadius;\n  };\n\n  arc.outerRadius = function(_) {\n    return arguments.length ? (outerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : outerRadius;\n  };\n\n  arc.cornerRadius = function(_) {\n    return arguments.length ? (cornerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : cornerRadius;\n  };\n\n  arc.padRadius = function(_) {\n    return arguments.length ? (padRadius = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), arc) : padRadius;\n  };\n\n  arc.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : startAngle;\n  };\n\n  arc.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : endAngle;\n  };\n\n  arc.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : padAngle;\n  };\n\n  arc.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), arc) : context;\n  };\n\n  return arc;\n}\n","function Linear(context) {\n  this._context = context;\n}\n\nLinear.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: this._context.lineTo(x, y); break;\n    }\n  }\n};\n\nexport default function(context) {\n  return new Linear(context);\n}\n","export function x(p) {\n  return p[0];\n}\n\nexport function y(p) {\n  return p[1];\n}\n","import {path} from \"d3-path\";\nimport constant from \"./constant\";\nimport curveLinear from \"./curve/linear\";\nimport {x as pointX, y as pointY} from \"./point\";\n\nexport default function() {\n  var x = pointX,\n      y = pointY,\n      defined = constant(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function line(data) {\n    var i,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer;\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) output.lineStart();\n        else output.lineEnd();\n      }\n      if (defined0) output.point(+x(d, i, data), +y(d, i, data));\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  line.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), line) : x;\n  };\n\n  line.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), line) : y;\n  };\n\n  line.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), line) : defined;\n  };\n\n  line.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;\n  };\n\n  line.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;\n  };\n\n  return line;\n}\n","import {path} from \"d3-path\";\nimport constant from \"./constant\";\nimport curveLinear from \"./curve/linear\";\nimport line from \"./line\";\nimport {x as pointX, y as pointY} from \"./point\";\n\nexport default function() {\n  var x0 = pointX,\n      x1 = null,\n      y0 = constant(0),\n      y1 = pointY,\n      defined = constant(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function area(data) {\n    var i,\n        j,\n        k,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer,\n        x0z = new Array(n),\n        y0z = new Array(n);\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) {\n          j = i;\n          output.areaStart();\n          output.lineStart();\n        } else {\n          output.lineEnd();\n          output.lineStart();\n          for (k = i - 1; k >= j; --k) {\n            output.point(x0z[k], y0z[k]);\n          }\n          output.lineEnd();\n          output.areaEnd();\n        }\n      }\n      if (defined0) {\n        x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);\n        output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);\n      }\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  function arealine() {\n    return line().defined(defined).curve(curve).context(context);\n  }\n\n  area.x = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant(+_), x1 = null, area) : x0;\n  };\n\n  area.x0 = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant(+_), area) : x0;\n  };\n\n  area.x1 = function(_) {\n    return arguments.length ? (x1 = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), area) : x1;\n  };\n\n  area.y = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant(+_), y1 = null, area) : y0;\n  };\n\n  area.y0 = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant(+_), area) : y0;\n  };\n\n  area.y1 = function(_) {\n    return arguments.length ? (y1 = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), area) : y1;\n  };\n\n  area.lineX0 =\n  area.lineY0 = function() {\n    return arealine().x(x0).y(y0);\n  };\n\n  area.lineY1 = function() {\n    return arealine().x(x0).y(y1);\n  };\n\n  area.lineX1 = function() {\n    return arealine().x(x1).y(y0);\n  };\n\n  area.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), area) : defined;\n  };\n\n  area.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;\n  };\n\n  area.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;\n  };\n\n  return area;\n}\n","export default function(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n}\n","export default function(d) {\n  return d;\n}\n","import constant from \"./constant\";\nimport descending from \"./descending\";\nimport identity from \"./identity\";\nimport {tau} from \"./math\";\n\nexport default function() {\n  var value = identity,\n      sortValues = descending,\n      sort = null,\n      startAngle = constant(0),\n      endAngle = constant(tau),\n      padAngle = constant(0);\n\n  function pie(data) {\n    var i,\n        n = data.length,\n        j,\n        k,\n        sum = 0,\n        index = new Array(n),\n        arcs = new Array(n),\n        a0 = +startAngle.apply(this, arguments),\n        da = Math.min(tau, Math.max(-tau, endAngle.apply(this, arguments) - a0)),\n        a1,\n        p = Math.min(Math.abs(da) / n, padAngle.apply(this, arguments)),\n        pa = p * (da < 0 ? -1 : 1),\n        v;\n\n    for (i = 0; i < n; ++i) {\n      if ((v = arcs[index[i] = i] = +value(data[i], i, data)) > 0) {\n        sum += v;\n      }\n    }\n\n    // Optionally sort the arcs by previously-computed values or by data.\n    if (sortValues != null) index.sort(function(i, j) { return sortValues(arcs[i], arcs[j]); });\n    else if (sort != null) index.sort(function(i, j) { return sort(data[i], data[j]); });\n\n    // Compute the arcs! They are stored in the original data's order.\n    for (i = 0, k = sum ? (da - n * pa) / sum : 0; i < n; ++i, a0 = a1) {\n      j = index[i], v = arcs[j], a1 = a0 + (v > 0 ? v * k : 0) + pa, arcs[j] = {\n        data: data[j],\n        index: i,\n        value: v,\n        startAngle: a0,\n        endAngle: a1,\n        padAngle: p\n      };\n    }\n\n    return arcs;\n  }\n\n  pie.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(+_), pie) : value;\n  };\n\n  pie.sortValues = function(_) {\n    return arguments.length ? (sortValues = _, sort = null, pie) : sortValues;\n  };\n\n  pie.sort = function(_) {\n    return arguments.length ? (sort = _, sortValues = null, pie) : sort;\n  };\n\n  pie.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : startAngle;\n  };\n\n  pie.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : endAngle;\n  };\n\n  pie.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : padAngle;\n  };\n\n  return pie;\n}\n","import curveLinear from \"./linear\";\n\nexport var curveRadialLinear = curveRadial(curveLinear);\n\nfunction Radial(curve) {\n  this._curve = curve;\n}\n\nRadial.prototype = {\n  areaStart: function() {\n    this._curve.areaStart();\n  },\n  areaEnd: function() {\n    this._curve.areaEnd();\n  },\n  lineStart: function() {\n    this._curve.lineStart();\n  },\n  lineEnd: function() {\n    this._curve.lineEnd();\n  },\n  point: function(a, r) {\n    this._curve.point(r * Math.sin(a), r * -Math.cos(a));\n  }\n};\n\nexport default function curveRadial(curve) {\n\n  function radial(context) {\n    return new Radial(curve(context));\n  }\n\n  radial._curve = curve;\n\n  return radial;\n}\n","import curveRadial, {curveRadialLinear} from \"./curve/radial\";\nimport line from \"./line\";\n\nexport function lineRadial(l) {\n  var c = l.curve;\n\n  l.angle = l.x, delete l.x;\n  l.radius = l.y, delete l.y;\n\n  l.curve = function(_) {\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\n  };\n\n  return l;\n}\n\nexport default function() {\n  return lineRadial(line().curve(curveRadialLinear));\n}\n","import curveRadial, {curveRadialLinear} from \"./curve/radial\";\nimport area from \"./area\";\nimport {lineRadial} from \"./lineRadial\"\n\nexport default function() {\n  var a = area().curve(curveRadialLinear),\n      c = a.curve,\n      x0 = a.lineX0,\n      x1 = a.lineX1,\n      y0 = a.lineY0,\n      y1 = a.lineY1;\n\n  a.angle = a.x, delete a.x;\n  a.startAngle = a.x0, delete a.x0;\n  a.endAngle = a.x1, delete a.x1;\n  a.radius = a.y, delete a.y;\n  a.innerRadius = a.y0, delete a.y0;\n  a.outerRadius = a.y1, delete a.y1;\n  a.lineStartAngle = function() { return lineRadial(x0()); }, delete a.lineX0;\n  a.lineEndAngle = function() { return lineRadial(x1()); }, delete a.lineX1;\n  a.lineInnerRadius = function() { return lineRadial(y0()); }, delete a.lineY0;\n  a.lineOuterRadius = function() { return lineRadial(y1()); }, delete a.lineY1;\n\n  a.curve = function(_) {\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\n  };\n\n  return a;\n}\n","export default function(x, y) {\n  return [(y = +y) * Math.cos(x -= Math.PI / 2), y * Math.sin(x)];\n}\n","export var slice = Array.prototype.slice;\n","import {path} from \"d3-path\";\nimport {slice} from \"../array\";\nimport constant from \"../constant\";\nimport {x as pointX, y as pointY} from \"../point\";\nimport pointRadial from \"../pointRadial\";\n\nfunction linkSource(d) {\n  return d.source;\n}\n\nfunction linkTarget(d) {\n  return d.target;\n}\n\nfunction link(curve) {\n  var source = linkSource,\n      target = linkTarget,\n      x = pointX,\n      y = pointY,\n      context = null;\n\n  function link() {\n    var buffer, argv = slice.call(arguments), s = source.apply(this, argv), t = target.apply(this, argv);\n    if (!context) context = buffer = path();\n    curve(context, +x.apply(this, (argv[0] = s, argv)), +y.apply(this, argv), +x.apply(this, (argv[0] = t, argv)), +y.apply(this, argv));\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  link.source = function(_) {\n    return arguments.length ? (source = _, link) : source;\n  };\n\n  link.target = function(_) {\n    return arguments.length ? (target = _, link) : target;\n  };\n\n  link.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), link) : x;\n  };\n\n  link.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), link) : y;\n  };\n\n  link.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), link) : context;\n  };\n\n  return link;\n}\n\nfunction curveHorizontal(context, x0, y0, x1, y1) {\n  context.moveTo(x0, y0);\n  context.bezierCurveTo(x0 = (x0 + x1) / 2, y0, x0, y1, x1, y1);\n}\n\nfunction curveVertical(context, x0, y0, x1, y1) {\n  context.moveTo(x0, y0);\n  context.bezierCurveTo(x0, y0 = (y0 + y1) / 2, x1, y0, x1, y1);\n}\n\nfunction curveRadial(context, x0, y0, x1, y1) {\n  var p0 = pointRadial(x0, y0),\n      p1 = pointRadial(x0, y0 = (y0 + y1) / 2),\n      p2 = pointRadial(x1, y0),\n      p3 = pointRadial(x1, y1);\n  context.moveTo(p0[0], p0[1]);\n  context.bezierCurveTo(p1[0], p1[1], p2[0], p2[1], p3[0], p3[1]);\n}\n\nexport function linkHorizontal() {\n  return link(curveHorizontal);\n}\n\nexport function linkVertical() {\n  return link(curveVertical);\n}\n\nexport function linkRadial() {\n  var l = link(curveRadial);\n  l.angle = l.x, delete l.x;\n  l.radius = l.y, delete l.y;\n  return l;\n}\n","import {pi, tau} from \"../math\";\n\nexport default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / pi);\n    context.moveTo(r, 0);\n    context.arc(0, 0, r, 0, tau);\n  }\n};\n","export default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / 5) / 2;\n    context.moveTo(-3 * r, -r);\n    context.lineTo(-r, -r);\n    context.lineTo(-r, -3 * r);\n    context.lineTo(r, -3 * r);\n    context.lineTo(r, -r);\n    context.lineTo(3 * r, -r);\n    context.lineTo(3 * r, r);\n    context.lineTo(r, r);\n    context.lineTo(r, 3 * r);\n    context.lineTo(-r, 3 * r);\n    context.lineTo(-r, r);\n    context.lineTo(-3 * r, r);\n    context.closePath();\n  }\n};\n","var tan30 = Math.sqrt(1 / 3),\n    tan30_2 = tan30 * 2;\n\nexport default {\n  draw: function(context, size) {\n    var y = Math.sqrt(size / tan30_2),\n        x = y * tan30;\n    context.moveTo(0, -y);\n    context.lineTo(x, 0);\n    context.lineTo(0, y);\n    context.lineTo(-x, 0);\n    context.closePath();\n  }\n};\n","import {pi, tau} from \"../math\";\n\nvar ka = 0.89081309152928522810,\n    kr = Math.sin(pi / 10) / Math.sin(7 * pi / 10),\n    kx = Math.sin(tau / 10) * kr,\n    ky = -Math.cos(tau / 10) * kr;\n\nexport default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size * ka),\n        x = kx * r,\n        y = ky * r;\n    context.moveTo(0, -r);\n    context.lineTo(x, y);\n    for (var i = 1; i < 5; ++i) {\n      var a = tau * i / 5,\n          c = Math.cos(a),\n          s = Math.sin(a);\n      context.lineTo(s * r, -c * r);\n      context.lineTo(c * x - s * y, s * x + c * y);\n    }\n    context.closePath();\n  }\n};\n","export default {\n  draw: function(context, size) {\n    var w = Math.sqrt(size),\n        x = -w / 2;\n    context.rect(x, x, w, w);\n  }\n};\n","var sqrt3 = Math.sqrt(3);\n\nexport default {\n  draw: function(context, size) {\n    var y = -Math.sqrt(size / (sqrt3 * 3));\n    context.moveTo(0, y * 2);\n    context.lineTo(-sqrt3 * y, -y);\n    context.lineTo(sqrt3 * y, -y);\n    context.closePath();\n  }\n};\n","var c = -0.5,\n    s = Math.sqrt(3) / 2,\n    k = 1 / Math.sqrt(12),\n    a = (k / 2 + 1) * 3;\n\nexport default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / a),\n        x0 = r / 2,\n        y0 = r * k,\n        x1 = x0,\n        y1 = r * k + r,\n        x2 = -x1,\n        y2 = y1;\n    context.moveTo(x0, y0);\n    context.lineTo(x1, y1);\n    context.lineTo(x2, y2);\n    context.lineTo(c * x0 - s * y0, s * x0 + c * y0);\n    context.lineTo(c * x1 - s * y1, s * x1 + c * y1);\n    context.lineTo(c * x2 - s * y2, s * x2 + c * y2);\n    context.lineTo(c * x0 + s * y0, c * y0 - s * x0);\n    context.lineTo(c * x1 + s * y1, c * y1 - s * x1);\n    context.lineTo(c * x2 + s * y2, c * y2 - s * x2);\n    context.closePath();\n  }\n};\n","import {path} from \"d3-path\";\nimport circle from \"./symbol/circle\";\nimport cross from \"./symbol/cross\";\nimport diamond from \"./symbol/diamond\";\nimport star from \"./symbol/star\";\nimport square from \"./symbol/square\";\nimport triangle from \"./symbol/triangle\";\nimport wye from \"./symbol/wye\";\nimport constant from \"./constant\";\n\nexport var symbols = [\n  circle,\n  cross,\n  diamond,\n  square,\n  star,\n  triangle,\n  wye\n];\n\nexport default function() {\n  var type = constant(circle),\n      size = constant(64),\n      context = null;\n\n  function symbol() {\n    var buffer;\n    if (!context) context = buffer = path();\n    type.apply(this, arguments).draw(context, +size.apply(this, arguments));\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  symbol.type = function(_) {\n    return arguments.length ? (type = typeof _ === \"function\" ? _ : constant(_), symbol) : type;\n  };\n\n  symbol.size = function(_) {\n    return arguments.length ? (size = typeof _ === \"function\" ? _ : constant(+_), symbol) : size;\n  };\n\n  symbol.context = function(_) {\n    return arguments.length ? (context = _ == null ? null : _, symbol) : context;\n  };\n\n  return symbol;\n}\n","export default function() {}\n","export function point(that, x, y) {\n  that._context.bezierCurveTo(\n    (2 * that._x0 + that._x1) / 3,\n    (2 * that._y0 + that._y1) / 3,\n    (that._x0 + 2 * that._x1) / 3,\n    (that._y0 + 2 * that._y1) / 3,\n    (that._x0 + 4 * that._x1 + x) / 6,\n    (that._y0 + 4 * that._y1 + y) / 6\n  );\n}\n\nexport function Basis(context) {\n  this._context = context;\n}\n\nBasis.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 3: point(this, this._x1, this._y1); // proceed\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6); // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nexport default function(context) {\n  return new Basis(context);\n}\n","import noop from \"../noop\";\nimport {point} from \"./basis\";\n\nfunction BasisClosed(context) {\n  this._context = context;\n}\n\nBasisClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x2, this._y2);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.moveTo((this._x2 + 2 * this._x3) / 3, (this._y2 + 2 * this._y3) / 3);\n        this._context.lineTo((this._x3 + 2 * this._x2) / 3, (this._y3 + 2 * this._y2) / 3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x2, this._y2);\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x2 = x, this._y2 = y; break;\n      case 1: this._point = 2; this._x3 = x, this._y3 = y; break;\n      case 2: this._point = 3; this._x4 = x, this._y4 = y; this._context.moveTo((this._x0 + 4 * this._x1 + x) / 6, (this._y0 + 4 * this._y1 + y) / 6); break;\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nexport default function(context) {\n  return new BasisClosed(context);\n}\n","import {point} from \"./basis\";\n\nfunction BasisOpen(context) {\n  this._context = context;\n}\n\nBasisOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; var x0 = (this._x0 + 4 * this._x1 + x) / 6, y0 = (this._y0 + 4 * this._y1 + y) / 6; this._line ? this._context.lineTo(x0, y0) : this._context.moveTo(x0, y0); break;\n      case 3: this._point = 4; // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nexport default function(context) {\n  return new BasisOpen(context);\n}\n","import {Basis} from \"./basis\";\n\nfunction Bundle(context, beta) {\n  this._basis = new Basis(context);\n  this._beta = beta;\n}\n\nBundle.prototype = {\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n    this._basis.lineStart();\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        j = x.length - 1;\n\n    if (j > 0) {\n      var x0 = x[0],\n          y0 = y[0],\n          dx = x[j] - x0,\n          dy = y[j] - y0,\n          i = -1,\n          t;\n\n      while (++i <= j) {\n        t = i / j;\n        this._basis.point(\n          this._beta * x[i] + (1 - this._beta) * (x0 + t * dx),\n          this._beta * y[i] + (1 - this._beta) * (y0 + t * dy)\n        );\n      }\n    }\n\n    this._x = this._y = null;\n    this._basis.lineEnd();\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\nexport default (function custom(beta) {\n\n  function bundle(context) {\n    return beta === 1 ? new Basis(context) : new Bundle(context, beta);\n  }\n\n  bundle.beta = function(beta) {\n    return custom(+beta);\n  };\n\n  return bundle;\n})(0.85);\n","export function point(that, x, y) {\n  that._context.bezierCurveTo(\n    that._x1 + that._k * (that._x2 - that._x0),\n    that._y1 + that._k * (that._y2 - that._y0),\n    that._x2 + that._k * (that._x1 - x),\n    that._y2 + that._k * (that._y1 - y),\n    that._x2,\n    that._y2\n  );\n}\n\nexport function Cardinal(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinal.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: point(this, this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; this._x1 = x, this._y1 = y; break;\n      case 2: this._point = 3; // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new Cardinal(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n","import noop from \"../noop\";\nimport {point} from \"./cardinal\";\n\nexport function CardinalClosed(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalClosed(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n","import {point} from \"./cardinal\";\n\nexport function CardinalOpen(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalOpen(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n","import {epsilon} from \"../math\";\nimport {Cardinal} from \"./cardinal\";\n\nexport function point(that, x, y) {\n  var x1 = that._x1,\n      y1 = that._y1,\n      x2 = that._x2,\n      y2 = that._y2;\n\n  if (that._l01_a > epsilon) {\n    var a = 2 * that._l01_2a + 3 * that._l01_a * that._l12_a + that._l12_2a,\n        n = 3 * that._l01_a * (that._l01_a + that._l12_a);\n    x1 = (x1 * a - that._x0 * that._l12_2a + that._x2 * that._l01_2a) / n;\n    y1 = (y1 * a - that._y0 * that._l12_2a + that._y2 * that._l01_2a) / n;\n  }\n\n  if (that._l23_a > epsilon) {\n    var b = 2 * that._l23_2a + 3 * that._l23_a * that._l12_a + that._l12_2a,\n        m = 3 * that._l23_a * (that._l23_a + that._l12_a);\n    x2 = (x2 * b + that._x1 * that._l23_2a - x * that._l12_2a) / m;\n    y2 = (y2 * b + that._y1 * that._l23_2a - y * that._l12_2a) / m;\n  }\n\n  that._context.bezierCurveTo(x1, y1, x2, y2, that._x2, that._y2);\n}\n\nfunction CatmullRom(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRom.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: this.point(this._x2, this._y2); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; // proceed\n      default: point(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRom(context, alpha) : new Cardinal(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n","import {CardinalClosed} from \"./cardinalClosed\";\nimport noop from \"../noop\";\nimport {point} from \"./catmullRom\";\n\nfunction CatmullRomClosed(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomClosed(context, alpha) : new CardinalClosed(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n","import {CardinalOpen} from \"./cardinalOpen\";\nimport {point} from \"./catmullRom\";\n\nfunction CatmullRomOpen(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomOpen(context, alpha) : new CardinalOpen(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n","import noop from \"../noop\";\n\nfunction LinearClosed(context) {\n  this._context = context;\n}\n\nLinearClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._point) this._context.closePath();\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    if (this._point) this._context.lineTo(x, y);\n    else this._point = 1, this._context.moveTo(x, y);\n  }\n};\n\nexport default function(context) {\n  return new LinearClosed(context);\n}\n","function sign(x) {\n  return x < 0 ? -1 : 1;\n}\n\n// Calculate the slopes of the tangents (Hermite-type interpolation) based on\n// the following paper: Steffen, M. 1990. A Simple Method for Monotonic\n// Interpolation in One Dimension. Astronomy and Astrophysics, Vol. 239, NO.\n// NOV(II), P. 443, 1990.\nfunction slope3(that, x2, y2) {\n  var h0 = that._x1 - that._x0,\n      h1 = x2 - that._x1,\n      s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0),\n      s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0),\n      p = (s0 * h1 + s1 * h0) / (h0 + h1);\n  return (sign(s0) + sign(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;\n}\n\n// Calculate a one-sided slope.\nfunction slope2(that, t) {\n  var h = that._x1 - that._x0;\n  return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;\n}\n\n// According to https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Representations\n// \"you can express cubic Hermite interpolation in terms of cubic Bézier curves\n// with respect to the four values p0, p0 + m0 / 3, p1 - m1 / 3, p1\".\nfunction point(that, t0, t1) {\n  var x0 = that._x0,\n      y0 = that._y0,\n      x1 = that._x1,\n      y1 = that._y1,\n      dx = (x1 - x0) / 3;\n  that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);\n}\n\nfunction MonotoneX(context) {\n  this._context = context;\n}\n\nMonotoneX.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 =\n    this._t0 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n      case 3: point(this, this._t0, slope2(this, this._t0)); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    var t1 = NaN;\n\n    x = +x, y = +y;\n    if (x === this._x1 && y === this._y1) return; // Ignore coincident points.\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; point(this, slope2(this, t1 = slope3(this, x, y)), t1); break;\n      default: point(this, this._t0, t1 = slope3(this, x, y)); break;\n    }\n\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n    this._t0 = t1;\n  }\n}\n\nfunction MonotoneY(context) {\n  this._context = new ReflectContext(context);\n}\n\n(MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function(x, y) {\n  MonotoneX.prototype.point.call(this, y, x);\n};\n\nfunction ReflectContext(context) {\n  this._context = context;\n}\n\nReflectContext.prototype = {\n  moveTo: function(x, y) { this._context.moveTo(y, x); },\n  closePath: function() { this._context.closePath(); },\n  lineTo: function(x, y) { this._context.lineTo(y, x); },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) { this._context.bezierCurveTo(y1, x1, y2, x2, y, x); }\n};\n\nexport function monotoneX(context) {\n  return new MonotoneX(context);\n}\n\nexport function monotoneY(context) {\n  return new MonotoneY(context);\n}\n","function Natural(context) {\n  this._context = context;\n}\n\nNatural.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        n = x.length;\n\n    if (n) {\n      this._line ? this._context.lineTo(x[0], y[0]) : this._context.moveTo(x[0], y[0]);\n      if (n === 2) {\n        this._context.lineTo(x[1], y[1]);\n      } else {\n        var px = controlPoints(x),\n            py = controlPoints(y);\n        for (var i0 = 0, i1 = 1; i1 < n; ++i0, ++i1) {\n          this._context.bezierCurveTo(px[0][i0], py[0][i0], px[1][i0], py[1][i0], x[i1], y[i1]);\n        }\n      }\n    }\n\n    if (this._line || (this._line !== 0 && n === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n    this._x = this._y = null;\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\n// See https://www.particleincell.com/2012/bezier-splines/ for derivation.\nfunction controlPoints(x) {\n  var i,\n      n = x.length - 1,\n      m,\n      a = new Array(n),\n      b = new Array(n),\n      r = new Array(n);\n  a[0] = 0, b[0] = 2, r[0] = x[0] + 2 * x[1];\n  for (i = 1; i < n - 1; ++i) a[i] = 1, b[i] = 4, r[i] = 4 * x[i] + 2 * x[i + 1];\n  a[n - 1] = 2, b[n - 1] = 7, r[n - 1] = 8 * x[n - 1] + x[n];\n  for (i = 1; i < n; ++i) m = a[i] / b[i - 1], b[i] -= m, r[i] -= m * r[i - 1];\n  a[n - 1] = r[n - 1] / b[n - 1];\n  for (i = n - 2; i >= 0; --i) a[i] = (r[i] - a[i + 1]) / b[i];\n  b[n - 1] = (x[n] + a[n - 1]) / 2;\n  for (i = 0; i < n - 1; ++i) b[i] = 2 * x[i + 1] - a[i + 1];\n  return [a, b];\n}\n\nexport default function(context) {\n  return new Natural(context);\n}\n","function Step(context, t) {\n  this._context = context;\n  this._t = t;\n}\n\nStep.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = this._y = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: {\n        if (this._t <= 0) {\n          this._context.lineTo(this._x, y);\n          this._context.lineTo(x, y);\n        } else {\n          var x1 = this._x * (1 - this._t) + x * this._t;\n          this._context.lineTo(x1, this._y);\n          this._context.lineTo(x1, y);\n        }\n        break;\n      }\n    }\n    this._x = x, this._y = y;\n  }\n};\n\nexport default function(context) {\n  return new Step(context, 0.5);\n}\n\nexport function stepBefore(context) {\n  return new Step(context, 0);\n}\n\nexport function stepAfter(context) {\n  return new Step(context, 1);\n}\n","export default function(series, order) {\n  if (!((n = series.length) > 1)) return;\n  for (var i = 1, j, s0, s1 = series[order[0]], n, m = s1.length; i < n; ++i) {\n    s0 = s1, s1 = series[order[i]];\n    for (j = 0; j < m; ++j) {\n      s1[j][1] += s1[j][0] = isNaN(s0[j][1]) ? s0[j][0] : s0[j][1];\n    }\n  }\n}\n","export default function(series) {\n  var n = series.length, o = new Array(n);\n  while (--n >= 0) o[n] = n;\n  return o;\n}\n","import {slice} from \"./array\";\nimport constant from \"./constant\";\nimport offsetNone from \"./offset/none\";\nimport orderNone from \"./order/none\";\n\nfunction stackValue(d, key) {\n  return d[key];\n}\n\nexport default function() {\n  var keys = constant([]),\n      order = orderNone,\n      offset = offsetNone,\n      value = stackValue;\n\n  function stack(data) {\n    var kz = keys.apply(this, arguments),\n        i,\n        m = data.length,\n        n = kz.length,\n        sz = new Array(n),\n        oz;\n\n    for (i = 0; i < n; ++i) {\n      for (var ki = kz[i], si = sz[i] = new Array(m), j = 0, sij; j < m; ++j) {\n        si[j] = sij = [0, +value(data[j], ki, j, data)];\n        sij.data = data[j];\n      }\n      si.key = ki;\n    }\n\n    for (i = 0, oz = order(sz); i < n; ++i) {\n      sz[oz[i]].index = i;\n    }\n\n    offset(sz, oz);\n    return sz;\n  }\n\n  stack.keys = function(_) {\n    return arguments.length ? (keys = typeof _ === \"function\" ? _ : constant(slice.call(_)), stack) : keys;\n  };\n\n  stack.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(+_), stack) : value;\n  };\n\n  stack.order = function(_) {\n    return arguments.length ? (order = _ == null ? orderNone : typeof _ === \"function\" ? _ : constant(slice.call(_)), stack) : order;\n  };\n\n  stack.offset = function(_) {\n    return arguments.length ? (offset = _ == null ? offsetNone : _, stack) : offset;\n  };\n\n  return stack;\n}\n","import none from \"./none\";\n\nexport default function(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var i, n, j = 0, m = series[0].length, y; j < m; ++j) {\n    for (y = i = 0; i < n; ++i) y += series[i][j][1] || 0;\n    if (y) for (i = 0; i < n; ++i) series[i][j][1] /= y;\n  }\n  none(series, order);\n}\n","export default function(series, order) {\n  if (!((n = series.length) > 1)) return;\n  for (var i, j = 0, d, dy, yp, yn, n, m = series[order[0]].length; j < m; ++j) {\n    for (yp = yn = 0, i = 0; i < n; ++i) {\n      if ((dy = (d = series[order[i]][j])[1] - d[0]) >= 0) {\n        d[0] = yp, d[1] = yp += dy;\n      } else if (dy < 0) {\n        d[1] = yn, d[0] = yn += dy;\n      } else {\n        d[0] = yp;\n      }\n    }\n  }\n}\n","import none from \"./none\";\n\nexport default function(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var j = 0, s0 = series[order[0]], n, m = s0.length; j < m; ++j) {\n    for (var i = 0, y = 0; i < n; ++i) y += series[i][j][1] || 0;\n    s0[j][1] += s0[j][0] = -y / 2;\n  }\n  none(series, order);\n}\n","import none from \"./none\";\n\nexport default function(series, order) {\n  if (!((n = series.length) > 0) || !((m = (s0 = series[order[0]]).length) > 0)) return;\n  for (var y = 0, j = 1, s0, m, n; j < m; ++j) {\n    for (var i = 0, s1 = 0, s2 = 0; i < n; ++i) {\n      var si = series[order[i]],\n          sij0 = si[j][1] || 0,\n          sij1 = si[j - 1][1] || 0,\n          s3 = (sij0 - sij1) / 2;\n      for (var k = 0; k < i; ++k) {\n        var sk = series[order[k]],\n            skj0 = sk[j][1] || 0,\n            skj1 = sk[j - 1][1] || 0;\n        s3 += skj0 - skj1;\n      }\n      s1 += sij0, s2 += s3 * sij0;\n    }\n    s0[j - 1][1] += s0[j - 1][0] = y;\n    if (s1) y -= s2 / s1;\n  }\n  s0[j - 1][1] += s0[j - 1][0] = y;\n  none(series, order);\n}\n","import none from \"./none\";\n\nexport default function(series) {\n  var sums = series.map(sum);\n  return none(series).sort(function(a, b) { return sums[a] - sums[b]; });\n}\n\nexport function sum(series) {\n  var s = 0, i = -1, n = series.length, v;\n  while (++i < n) if (v = +series[i][1]) s += v;\n  return s;\n}\n","import ascending from \"./ascending\";\n\nexport default function(series) {\n  return ascending(series).reverse();\n}\n","import none from \"./none\";\nimport {sum} from \"./ascending\";\n\nexport default function(series) {\n  var n = series.length,\n      i,\n      j,\n      sums = series.map(sum),\n      order = none(series).sort(function(a, b) { return sums[b] - sums[a]; }),\n      top = 0,\n      bottom = 0,\n      tops = [],\n      bottoms = [];\n\n  for (i = 0; i < n; ++i) {\n    j = order[i];\n    if (top < bottom) {\n      top += sums[j];\n      tops.push(j);\n    } else {\n      bottom += sums[j];\n      bottoms.push(j);\n    }\n  }\n\n  return bottoms.reverse().concat(tops);\n}\n","import none from \"./none\";\n\nexport default function(series) {\n  return none(series).reverse();\n}\n","// Adds floating point numbers with twice the normal precision.\n// Reference: J. R. Shewchuk, Adaptive Precision Floating-Point Arithmetic and\n// Fast Robust Geometric Predicates, Discrete & Computational Geometry 18(3)\n// 305–363 (1997).\n// Code adapted from GeographicLib by Charles F. F. Karney,\n// http://geographiclib.sourceforge.net/\n\nexport default function() {\n  return new Adder;\n}\n\nfunction Adder() {\n  this.reset();\n}\n\nAdder.prototype = {\n  constructor: Adder,\n  reset: function() {\n    this.s = // rounded value\n    this.t = 0; // exact error\n  },\n  add: function(y) {\n    add(temp, y, this.t);\n    add(this, temp.s, this.s);\n    if (this.s) this.t += temp.t;\n    else this.s = temp.t;\n  },\n  valueOf: function() {\n    return this.s;\n  }\n};\n\nvar temp = new Adder;\n\nfunction add(adder, a, b) {\n  var x = adder.s = a + b,\n      bv = x - a,\n      av = x - bv;\n  adder.t = (a - av) + (b - bv);\n}\n","export var epsilon = 1e-6;\nexport var epsilon2 = 1e-12;\nexport var pi = Math.PI;\nexport var halfPi = pi / 2;\nexport var quarterPi = pi / 4;\nexport var tau = pi * 2;\n\nexport var degrees = 180 / pi;\nexport var radians = pi / 180;\n\nexport var abs = Math.abs;\nexport var atan = Math.atan;\nexport var atan2 = Math.atan2;\nexport var cos = Math.cos;\nexport var ceil = Math.ceil;\nexport var exp = Math.exp;\nexport var floor = Math.floor;\nexport var log = Math.log;\nexport var pow = Math.pow;\nexport var sin = Math.sin;\nexport var sign = Math.sign || function(x) { return x > 0 ? 1 : x < 0 ? -1 : 0; };\nexport var sqrt = Math.sqrt;\nexport var tan = Math.tan;\n\nexport function acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\n}\n\nexport function asin(x) {\n  return x > 1 ? halfPi : x < -1 ? -halfPi : Math.asin(x);\n}\n\nexport function haversin(x) {\n  return (x = sin(x / 2)) * x;\n}\n","export default function noop() {}\n","function streamGeometry(geometry, stream) {\n  if (geometry && streamGeometryType.hasOwnProperty(geometry.type)) {\n    streamGeometryType[geometry.type](geometry, stream);\n  }\n}\n\nvar streamObjectType = {\n  Feature: function(object, stream) {\n    streamGeometry(object.geometry, stream);\n  },\n  FeatureCollection: function(object, stream) {\n    var features = object.features, i = -1, n = features.length;\n    while (++i < n) streamGeometry(features[i].geometry, stream);\n  }\n};\n\nvar streamGeometryType = {\n  Sphere: function(object, stream) {\n    stream.sphere();\n  },\n  Point: function(object, stream) {\n    object = object.coordinates;\n    stream.point(object[0], object[1], object[2]);\n  },\n  MultiPoint: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) object = coordinates[i], stream.point(object[0], object[1], object[2]);\n  },\n  LineString: function(object, stream) {\n    streamLine(object.coordinates, stream, 0);\n  },\n  MultiLineString: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamLine(coordinates[i], stream, 0);\n  },\n  Polygon: function(object, stream) {\n    streamPolygon(object.coordinates, stream);\n  },\n  MultiPolygon: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamPolygon(coordinates[i], stream);\n  },\n  GeometryCollection: function(object, stream) {\n    var geometries = object.geometries, i = -1, n = geometries.length;\n    while (++i < n) streamGeometry(geometries[i], stream);\n  }\n};\n\nfunction streamLine(coordinates, stream, closed) {\n  var i = -1, n = coordinates.length - closed, coordinate;\n  stream.lineStart();\n  while (++i < n) coordinate = coordinates[i], stream.point(coordinate[0], coordinate[1], coordinate[2]);\n  stream.lineEnd();\n}\n\nfunction streamPolygon(coordinates, stream) {\n  var i = -1, n = coordinates.length;\n  stream.polygonStart();\n  while (++i < n) streamLine(coordinates[i], stream, 1);\n  stream.polygonEnd();\n}\n\nexport default function(object, stream) {\n  if (object && streamObjectType.hasOwnProperty(object.type)) {\n    streamObjectType[object.type](object, stream);\n  } else {\n    streamGeometry(object, stream);\n  }\n}\n","import adder from \"./adder\";\nimport {atan2, cos, quarterPi, radians, sin, tau} from \"./math\";\nimport noop from \"./noop\";\nimport stream from \"./stream\";\n\nexport var areaRingSum = adder();\n\nvar areaSum = adder(),\n    lambda00,\n    phi00,\n    lambda0,\n    cosPhi0,\n    sinPhi0;\n\nexport var areaStream = {\n  point: noop,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: function() {\n    areaRingSum.reset();\n    areaStream.lineStart = areaRingStart;\n    areaStream.lineEnd = areaRingEnd;\n  },\n  polygonEnd: function() {\n    var areaRing = +areaRingSum;\n    areaSum.add(areaRing < 0 ? tau + areaRing : areaRing);\n    this.lineStart = this.lineEnd = this.point = noop;\n  },\n  sphere: function() {\n    areaSum.add(tau);\n  }\n};\n\nfunction areaRingStart() {\n  areaStream.point = areaPointFirst;\n}\n\nfunction areaRingEnd() {\n  areaPoint(lambda00, phi00);\n}\n\nfunction areaPointFirst(lambda, phi) {\n  areaStream.point = areaPoint;\n  lambda00 = lambda, phi00 = phi;\n  lambda *= radians, phi *= radians;\n  lambda0 = lambda, cosPhi0 = cos(phi = phi / 2 + quarterPi), sinPhi0 = sin(phi);\n}\n\nfunction areaPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  phi = phi / 2 + quarterPi; // half the angular distance from south pole\n\n  // Spherical excess E for a spherical triangle with vertices: south pole,\n  // previous point, current point.  Uses a formula derived from Cagnoli’s\n  // theorem.  See Todhunter, Spherical Trig. (1871), Sec. 103, Eq. (2).\n  var dLambda = lambda - lambda0,\n      sdLambda = dLambda >= 0 ? 1 : -1,\n      adLambda = sdLambda * dLambda,\n      cosPhi = cos(phi),\n      sinPhi = sin(phi),\n      k = sinPhi0 * sinPhi,\n      u = cosPhi0 * cosPhi + k * cos(adLambda),\n      v = k * sdLambda * sin(adLambda);\n  areaRingSum.add(atan2(v, u));\n\n  // Advance the previous points.\n  lambda0 = lambda, cosPhi0 = cosPhi, sinPhi0 = sinPhi;\n}\n\nexport default function(object) {\n  areaSum.reset();\n  stream(object, areaStream);\n  return areaSum * 2;\n}\n","import {asin, atan2, cos, sin, sqrt} from \"./math\";\n\nexport function spherical(cartesian) {\n  return [atan2(cartesian[1], cartesian[0]), asin(cartesian[2])];\n}\n\nexport function cartesian(spherical) {\n  var lambda = spherical[0], phi = spherical[1], cosPhi = cos(phi);\n  return [cosPhi * cos(lambda), cosPhi * sin(lambda), sin(phi)];\n}\n\nexport function cartesianDot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n\nexport function cartesianCross(a, b) {\n  return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];\n}\n\n// TODO return a\nexport function cartesianAddInPlace(a, b) {\n  a[0] += b[0], a[1] += b[1], a[2] += b[2];\n}\n\nexport function cartesianScale(vector, k) {\n  return [vector[0] * k, vector[1] * k, vector[2] * k];\n}\n\n// TODO return d\nexport function cartesianNormalizeInPlace(d) {\n  var l = sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n  d[0] /= l, d[1] /= l, d[2] /= l;\n}\n","import adder from \"./adder\";\nimport {areaStream, areaRingSum} from \"./area\";\nimport {cartesian, cartesianCross, cartesianNormalizeInPlace, spherical} from \"./cartesian\";\nimport {abs, degrees, epsilon, radians} from \"./math\";\nimport stream from \"./stream\";\n\nvar lambda0, phi0, lambda1, phi1, // bounds\n    lambda2, // previous lambda-coordinate\n    lambda00, phi00, // first point\n    p0, // previous 3D point\n    deltaSum = adder(),\n    ranges,\n    range;\n\nvar boundsStream = {\n  point: boundsPoint,\n  lineStart: boundsLineStart,\n  lineEnd: boundsLineEnd,\n  polygonStart: function() {\n    boundsStream.point = boundsRingPoint;\n    boundsStream.lineStart = boundsRingStart;\n    boundsStream.lineEnd = boundsRingEnd;\n    deltaSum.reset();\n    areaStream.polygonStart();\n  },\n  polygonEnd: function() {\n    areaStream.polygonEnd();\n    boundsStream.point = boundsPoint;\n    boundsStream.lineStart = boundsLineStart;\n    boundsStream.lineEnd = boundsLineEnd;\n    if (areaRingSum < 0) lambda0 = -(lambda1 = 180), phi0 = -(phi1 = 90);\n    else if (deltaSum > epsilon) phi1 = 90;\n    else if (deltaSum < -epsilon) phi0 = -90;\n    range[0] = lambda0, range[1] = lambda1;\n  }\n};\n\nfunction boundsPoint(lambda, phi) {\n  ranges.push(range = [lambda0 = lambda, lambda1 = lambda]);\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n}\n\nfunction linePoint(lambda, phi) {\n  var p = cartesian([lambda * radians, phi * radians]);\n  if (p0) {\n    var normal = cartesianCross(p0, p),\n        equatorial = [normal[1], -normal[0], 0],\n        inflection = cartesianCross(equatorial, normal);\n    cartesianNormalizeInPlace(inflection);\n    inflection = spherical(inflection);\n    var delta = lambda - lambda2,\n        sign = delta > 0 ? 1 : -1,\n        lambdai = inflection[0] * degrees * sign,\n        phii,\n        antimeridian = abs(delta) > 180;\n    if (antimeridian ^ (sign * lambda2 < lambdai && lambdai < sign * lambda)) {\n      phii = inflection[1] * degrees;\n      if (phii > phi1) phi1 = phii;\n    } else if (lambdai = (lambdai + 360) % 360 - 180, antimeridian ^ (sign * lambda2 < lambdai && lambdai < sign * lambda)) {\n      phii = -inflection[1] * degrees;\n      if (phii < phi0) phi0 = phii;\n    } else {\n      if (phi < phi0) phi0 = phi;\n      if (phi > phi1) phi1 = phi;\n    }\n    if (antimeridian) {\n      if (lambda < lambda2) {\n        if (angle(lambda0, lambda) > angle(lambda0, lambda1)) lambda1 = lambda;\n      } else {\n        if (angle(lambda, lambda1) > angle(lambda0, lambda1)) lambda0 = lambda;\n      }\n    } else {\n      if (lambda1 >= lambda0) {\n        if (lambda < lambda0) lambda0 = lambda;\n        if (lambda > lambda1) lambda1 = lambda;\n      } else {\n        if (lambda > lambda2) {\n          if (angle(lambda0, lambda) > angle(lambda0, lambda1)) lambda1 = lambda;\n        } else {\n          if (angle(lambda, lambda1) > angle(lambda0, lambda1)) lambda0 = lambda;\n        }\n      }\n    }\n  } else {\n    ranges.push(range = [lambda0 = lambda, lambda1 = lambda]);\n  }\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n  p0 = p, lambda2 = lambda;\n}\n\nfunction boundsLineStart() {\n  boundsStream.point = linePoint;\n}\n\nfunction boundsLineEnd() {\n  range[0] = lambda0, range[1] = lambda1;\n  boundsStream.point = boundsPoint;\n  p0 = null;\n}\n\nfunction boundsRingPoint(lambda, phi) {\n  if (p0) {\n    var delta = lambda - lambda2;\n    deltaSum.add(abs(delta) > 180 ? delta + (delta > 0 ? 360 : -360) : delta);\n  } else {\n    lambda00 = lambda, phi00 = phi;\n  }\n  areaStream.point(lambda, phi);\n  linePoint(lambda, phi);\n}\n\nfunction boundsRingStart() {\n  areaStream.lineStart();\n}\n\nfunction boundsRingEnd() {\n  boundsRingPoint(lambda00, phi00);\n  areaStream.lineEnd();\n  if (abs(deltaSum) > epsilon) lambda0 = -(lambda1 = 180);\n  range[0] = lambda0, range[1] = lambda1;\n  p0 = null;\n}\n\n// Finds the left-right distance between two longitudes.\n// This is almost the same as (lambda1 - lambda0 + 360°) % 360°, except that we want\n// the distance between ±180° to be 360°.\nfunction angle(lambda0, lambda1) {\n  return (lambda1 -= lambda0) < 0 ? lambda1 + 360 : lambda1;\n}\n\nfunction rangeCompare(a, b) {\n  return a[0] - b[0];\n}\n\nfunction rangeContains(range, x) {\n  return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n}\n\nexport default function(feature) {\n  var i, n, a, b, merged, deltaMax, delta;\n\n  phi1 = lambda1 = -(lambda0 = phi0 = Infinity);\n  ranges = [];\n  stream(feature, boundsStream);\n\n  // First, sort ranges by their minimum longitudes.\n  if (n = ranges.length) {\n    ranges.sort(rangeCompare);\n\n    // Then, merge any ranges that overlap.\n    for (i = 1, a = ranges[0], merged = [a]; i < n; ++i) {\n      b = ranges[i];\n      if (rangeContains(a, b[0]) || rangeContains(a, b[1])) {\n        if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n        if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n      } else {\n        merged.push(a = b);\n      }\n    }\n\n    // Finally, find the largest gap between the merged ranges.\n    // The final bounding box will be the inverse of this gap.\n    for (deltaMax = -Infinity, n = merged.length - 1, i = 0, a = merged[n]; i <= n; a = b, ++i) {\n      b = merged[i];\n      if ((delta = angle(a[1], b[0])) > deltaMax) deltaMax = delta, lambda0 = b[0], lambda1 = a[1];\n    }\n  }\n\n  ranges = range = null;\n\n  return lambda0 === Infinity || phi0 === Infinity\n      ? [[NaN, NaN], [NaN, NaN]]\n      : [[lambda0, phi0], [lambda1, phi1]];\n}\n","import {asin, atan2, cos, degrees, epsilon, epsilon2, radians, sin, sqrt} from \"./math\";\nimport noop from \"./noop\";\nimport stream from \"./stream\";\n\nvar W0, W1,\n    X0, Y0, Z0,\n    X1, Y1, Z1,\n    X2, Y2, Z2,\n    lambda00, phi00, // first point\n    x0, y0, z0; // previous point\n\nvar centroidStream = {\n  sphere: noop,\n  point: centroidPoint,\n  lineStart: centroidLineStart,\n  lineEnd: centroidLineEnd,\n  polygonStart: function() {\n    centroidStream.lineStart = centroidRingStart;\n    centroidStream.lineEnd = centroidRingEnd;\n  },\n  polygonEnd: function() {\n    centroidStream.lineStart = centroidLineStart;\n    centroidStream.lineEnd = centroidLineEnd;\n  }\n};\n\n// Arithmetic mean of Cartesian vectors.\nfunction centroidPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi);\n  centroidPointCartesian(cosPhi * cos(lambda), cosPhi * sin(lambda), sin(phi));\n}\n\nfunction centroidPointCartesian(x, y, z) {\n  ++W0;\n  X0 += (x - X0) / W0;\n  Y0 += (y - Y0) / W0;\n  Z0 += (z - Z0) / W0;\n}\n\nfunction centroidLineStart() {\n  centroidStream.point = centroidLinePointFirst;\n}\n\nfunction centroidLinePointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi);\n  x0 = cosPhi * cos(lambda);\n  y0 = cosPhi * sin(lambda);\n  z0 = sin(phi);\n  centroidStream.point = centroidLinePoint;\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLinePoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi),\n      x = cosPhi * cos(lambda),\n      y = cosPhi * sin(lambda),\n      z = sin(phi),\n      w = atan2(sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLineEnd() {\n  centroidStream.point = centroidPoint;\n}\n\n// See J. E. Brock, The Inertia Tensor for a Spherical Triangle,\n// J. Applied Mechanics 42, 239 (1975).\nfunction centroidRingStart() {\n  centroidStream.point = centroidRingPointFirst;\n}\n\nfunction centroidRingEnd() {\n  centroidRingPoint(lambda00, phi00);\n  centroidStream.point = centroidPoint;\n}\n\nfunction centroidRingPointFirst(lambda, phi) {\n  lambda00 = lambda, phi00 = phi;\n  lambda *= radians, phi *= radians;\n  centroidStream.point = centroidRingPoint;\n  var cosPhi = cos(phi);\n  x0 = cosPhi * cos(lambda);\n  y0 = cosPhi * sin(lambda);\n  z0 = sin(phi);\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidRingPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi),\n      x = cosPhi * cos(lambda),\n      y = cosPhi * sin(lambda),\n      z = sin(phi),\n      cx = y0 * z - z0 * y,\n      cy = z0 * x - x0 * z,\n      cz = x0 * y - y0 * x,\n      m = sqrt(cx * cx + cy * cy + cz * cz),\n      w = asin(m), // line weight = angle\n      v = m && -w / m; // area weight multiplier\n  X2 += v * cx;\n  Y2 += v * cy;\n  Z2 += v * cz;\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nexport default function(object) {\n  W0 = W1 =\n  X0 = Y0 = Z0 =\n  X1 = Y1 = Z1 =\n  X2 = Y2 = Z2 = 0;\n  stream(object, centroidStream);\n\n  var x = X2,\n      y = Y2,\n      z = Z2,\n      m = x * x + y * y + z * z;\n\n  // If the area-weighted ccentroid is undefined, fall back to length-weighted ccentroid.\n  if (m < epsilon2) {\n    x = X1, y = Y1, z = Z1;\n    // If the feature has zero length, fall back to arithmetic mean of point vectors.\n    if (W1 < epsilon) x = X0, y = Y0, z = Z0;\n    m = x * x + y * y + z * z;\n    // If the feature still has an undefined ccentroid, then return.\n    if (m < epsilon2) return [NaN, NaN];\n  }\n\n  return [atan2(y, x) * degrees, asin(z / sqrt(m)) * degrees];\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function(a, b) {\n\n  function compose(x, y) {\n    return x = a(x, y), b(x[0], x[1]);\n  }\n\n  if (a.invert && b.invert) compose.invert = function(x, y) {\n    return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n  };\n\n  return compose;\n}\n","import compose from \"./compose\";\nimport {asin, atan2, cos, degrees, pi, radians, sin, tau} from \"./math\";\n\nfunction rotationIdentity(lambda, phi) {\n  return [lambda > pi ? lambda - tau : lambda < -pi ? lambda + tau : lambda, phi];\n}\n\nrotationIdentity.invert = rotationIdentity;\n\nexport function rotateRadians(deltaLambda, deltaPhi, deltaGamma) {\n  return (deltaLambda %= tau) ? (deltaPhi || deltaGamma ? compose(rotationLambda(deltaLambda), rotationPhiGamma(deltaPhi, deltaGamma))\n    : rotationLambda(deltaLambda))\n    : (deltaPhi || deltaGamma ? rotationPhiGamma(deltaPhi, deltaGamma)\n    : rotationIdentity);\n}\n\nfunction forwardRotationLambda(deltaLambda) {\n  return function(lambda, phi) {\n    return lambda += deltaLambda, [lambda > pi ? lambda - tau : lambda < -pi ? lambda + tau : lambda, phi];\n  };\n}\n\nfunction rotationLambda(deltaLambda) {\n  var rotation = forwardRotationLambda(deltaLambda);\n  rotation.invert = forwardRotationLambda(-deltaLambda);\n  return rotation;\n}\n\nfunction rotationPhiGamma(deltaPhi, deltaGamma) {\n  var cosDeltaPhi = cos(deltaPhi),\n      sinDeltaPhi = sin(deltaPhi),\n      cosDeltaGamma = cos(deltaGamma),\n      sinDeltaGamma = sin(deltaGamma);\n\n  function rotation(lambda, phi) {\n    var cosPhi = cos(phi),\n        x = cos(lambda) * cosPhi,\n        y = sin(lambda) * cosPhi,\n        z = sin(phi),\n        k = z * cosDeltaPhi + x * sinDeltaPhi;\n    return [\n      atan2(y * cosDeltaGamma - k * sinDeltaGamma, x * cosDeltaPhi - z * sinDeltaPhi),\n      asin(k * cosDeltaGamma + y * sinDeltaGamma)\n    ];\n  }\n\n  rotation.invert = function(lambda, phi) {\n    var cosPhi = cos(phi),\n        x = cos(lambda) * cosPhi,\n        y = sin(lambda) * cosPhi,\n        z = sin(phi),\n        k = z * cosDeltaGamma - y * sinDeltaGamma;\n    return [\n      atan2(y * cosDeltaGamma + z * sinDeltaGamma, x * cosDeltaPhi + k * sinDeltaPhi),\n      asin(k * cosDeltaPhi - x * sinDeltaPhi)\n    ];\n  };\n\n  return rotation;\n}\n\nexport default function(rotate) {\n  rotate = rotateRadians(rotate[0] * radians, rotate[1] * radians, rotate.length > 2 ? rotate[2] * radians : 0);\n\n  function forward(coordinates) {\n    coordinates = rotate(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees, coordinates[1] *= degrees, coordinates;\n  }\n\n  forward.invert = function(coordinates) {\n    coordinates = rotate.invert(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees, coordinates[1] *= degrees, coordinates;\n  };\n\n  return forward;\n}\n","import {cartesian, cartesianNormalizeInPlace, spherical} from \"./cartesian\";\nimport constant from \"./constant\";\nimport {acos, cos, degrees, epsilon, radians, sin, tau} from \"./math\";\nimport {rotateRadians} from \"./rotation\";\n\n// Generates a circle centered at [0°, 0°], with a given radius and precision.\nexport function circleStream(stream, radius, delta, direction, t0, t1) {\n  if (!delta) return;\n  var cosRadius = cos(radius),\n      sinRadius = sin(radius),\n      step = direction * delta;\n  if (t0 == null) {\n    t0 = radius + direction * tau;\n    t1 = radius - step / 2;\n  } else {\n    t0 = circleRadius(cosRadius, t0);\n    t1 = circleRadius(cosRadius, t1);\n    if (direction > 0 ? t0 < t1 : t0 > t1) t0 += direction * tau;\n  }\n  for (var point, t = t0; direction > 0 ? t > t1 : t < t1; t -= step) {\n    point = spherical([cosRadius, -sinRadius * cos(t), -sinRadius * sin(t)]);\n    stream.point(point[0], point[1]);\n  }\n}\n\n// Returns the signed angle of a cartesian point relative to [cosRadius, 0, 0].\nfunction circleRadius(cosRadius, point) {\n  point = cartesian(point), point[0] -= cosRadius;\n  cartesianNormalizeInPlace(point);\n  var radius = acos(-point[1]);\n  return ((-point[2] < 0 ? -radius : radius) + tau - epsilon) % tau;\n}\n\nexport default function() {\n  var center = constant([0, 0]),\n      radius = constant(90),\n      precision = constant(6),\n      ring,\n      rotate,\n      stream = {point: point};\n\n  function point(x, y) {\n    ring.push(x = rotate(x, y));\n    x[0] *= degrees, x[1] *= degrees;\n  }\n\n  function circle() {\n    var c = center.apply(this, arguments),\n        r = radius.apply(this, arguments) * radians,\n        p = precision.apply(this, arguments) * radians;\n    ring = [];\n    rotate = rotateRadians(-c[0] * radians, -c[1] * radians, 0).invert;\n    circleStream(stream, r, p, 1);\n    c = {type: \"Polygon\", coordinates: [ring]};\n    ring = rotate = null;\n    return c;\n  }\n\n  circle.center = function(_) {\n    return arguments.length ? (center = typeof _ === \"function\" ? _ : constant([+_[0], +_[1]]), circle) : center;\n  };\n\n  circle.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), circle) : radius;\n  };\n\n  circle.precision = function(_) {\n    return arguments.length ? (precision = typeof _ === \"function\" ? _ : constant(+_), circle) : precision;\n  };\n\n  return circle;\n}\n","import noop from \"../noop\";\n\nexport default function() {\n  var lines = [],\n      line;\n  return {\n    point: function(x, y) {\n      line.push([x, y]);\n    },\n    lineStart: function() {\n      lines.push(line = []);\n    },\n    lineEnd: noop,\n    rejoin: function() {\n      if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n    },\n    result: function() {\n      var result = lines;\n      lines = [];\n      line = null;\n      return result;\n    }\n  };\n}\n","import {abs, epsilon} from \"./math\";\n\nexport default function(a, b) {\n  return abs(a[0] - b[0]) < epsilon && abs(a[1] - b[1]) < epsilon;\n}\n","import pointEqual from \"../pointEqual\";\n\nfunction Intersection(point, points, other, entry) {\n  this.x = point;\n  this.z = points;\n  this.o = other; // another intersection\n  this.e = entry; // is an entry?\n  this.v = false; // visited\n  this.n = this.p = null; // next & previous\n}\n\n// A generalized polygon clipping algorithm: given a polygon that has been cut\n// into its visible line segments, and rejoins the segments by interpolating\n// along the clip edge.\nexport default function(segments, compareIntersection, startInside, interpolate, stream) {\n  var subject = [],\n      clip = [],\n      i,\n      n;\n\n  segments.forEach(function(segment) {\n    if ((n = segment.length - 1) <= 0) return;\n    var n, p0 = segment[0], p1 = segment[n], x;\n\n    // If the first and last points of a segment are coincident, then treat as a\n    // closed ring. TODO if all rings are closed, then the winding order of the\n    // exterior ring should be checked.\n    if (pointEqual(p0, p1)) {\n      stream.lineStart();\n      for (i = 0; i < n; ++i) stream.point((p0 = segment[i])[0], p0[1]);\n      stream.lineEnd();\n      return;\n    }\n\n    subject.push(x = new Intersection(p0, segment, null, true));\n    clip.push(x.o = new Intersection(p0, null, x, false));\n    subject.push(x = new Intersection(p1, segment, null, false));\n    clip.push(x.o = new Intersection(p1, null, x, true));\n  });\n\n  if (!subject.length) return;\n\n  clip.sort(compareIntersection);\n  link(subject);\n  link(clip);\n\n  for (i = 0, n = clip.length; i < n; ++i) {\n    clip[i].e = startInside = !startInside;\n  }\n\n  var start = subject[0],\n      points,\n      point;\n\n  while (1) {\n    // Find first unvisited intersection.\n    var current = start,\n        isSubject = true;\n    while (current.v) if ((current = current.n) === start) return;\n    points = current.z;\n    stream.lineStart();\n    do {\n      current.v = current.o.v = true;\n      if (current.e) {\n        if (isSubject) {\n          for (i = 0, n = points.length; i < n; ++i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.n.x, 1, stream);\n        }\n        current = current.n;\n      } else {\n        if (isSubject) {\n          points = current.p.z;\n          for (i = points.length - 1; i >= 0; --i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.p.x, -1, stream);\n        }\n        current = current.p;\n      }\n      current = current.o;\n      points = current.z;\n      isSubject = !isSubject;\n    } while (!current.v);\n    stream.lineEnd();\n  }\n}\n\nfunction link(array) {\n  if (!(n = array.length)) return;\n  var n,\n      i = 0,\n      a = array[0],\n      b;\n  while (++i < n) {\n    a.n = b = array[i];\n    b.p = a;\n    a = b;\n  }\n  a.n = b = array[0];\n  b.p = a;\n}\n","import adder from \"./adder\";\nimport {cartesian, cartesianCross, cartesianNormalizeInPlace} from \"./cartesian\";\nimport {asin, atan2, cos, epsilon, halfPi, pi, quarterPi, sin, tau} from \"./math\";\n\nvar sum = adder();\n\nexport default function(polygon, point) {\n  var lambda = point[0],\n      phi = point[1],\n      sinPhi = sin(phi),\n      normal = [sin(lambda), -cos(lambda), 0],\n      angle = 0,\n      winding = 0;\n\n  sum.reset();\n\n  if (sinPhi === 1) phi = halfPi + epsilon;\n  else if (sinPhi === -1) phi = -halfPi - epsilon;\n\n  for (var i = 0, n = polygon.length; i < n; ++i) {\n    if (!(m = (ring = polygon[i]).length)) continue;\n    var ring,\n        m,\n        point0 = ring[m - 1],\n        lambda0 = point0[0],\n        phi0 = point0[1] / 2 + quarterPi,\n        sinPhi0 = sin(phi0),\n        cosPhi0 = cos(phi0);\n\n    for (var j = 0; j < m; ++j, lambda0 = lambda1, sinPhi0 = sinPhi1, cosPhi0 = cosPhi1, point0 = point1) {\n      var point1 = ring[j],\n          lambda1 = point1[0],\n          phi1 = point1[1] / 2 + quarterPi,\n          sinPhi1 = sin(phi1),\n          cosPhi1 = cos(phi1),\n          delta = lambda1 - lambda0,\n          sign = delta >= 0 ? 1 : -1,\n          absDelta = sign * delta,\n          antimeridian = absDelta > pi,\n          k = sinPhi0 * sinPhi1;\n\n      sum.add(atan2(k * sign * sin(absDelta), cosPhi0 * cosPhi1 + k * cos(absDelta)));\n      angle += antimeridian ? delta + sign * tau : delta;\n\n      // Are the longitudes either side of the point’s meridian (lambda),\n      // and are the latitudes smaller than the parallel (phi)?\n      if (antimeridian ^ lambda0 >= lambda ^ lambda1 >= lambda) {\n        var arc = cartesianCross(cartesian(point0), cartesian(point1));\n        cartesianNormalizeInPlace(arc);\n        var intersection = cartesianCross(normal, arc);\n        cartesianNormalizeInPlace(intersection);\n        var phiArc = (antimeridian ^ delta >= 0 ? -1 : 1) * asin(intersection[2]);\n        if (phi > phiArc || phi === phiArc && (arc[0] || arc[1])) {\n          winding += antimeridian ^ delta >= 0 ? 1 : -1;\n        }\n      }\n    }\n  }\n\n  // First, determine whether the South pole is inside or outside:\n  //\n  // It is inside if:\n  // * the polygon winds around it in a clockwise direction.\n  // * the polygon does not (cumulatively) wind around it, but has a negative\n  //   (counter-clockwise) area.\n  //\n  // Second, count the (signed) number of times a segment crosses a lambda\n  // from the point to the South pole.  If it is zero, then the point is the\n  // same side as the South pole.\n\n  return (angle < -epsilon || angle < epsilon && sum < -epsilon) ^ (winding & 1);\n}\n","import clipBuffer from \"./buffer\";\nimport clipRejoin from \"./rejoin\";\nimport {epsilon, halfPi} from \"../math\";\nimport polygonContains from \"../polygonContains\";\nimport {merge} from \"d3-array\";\n\nexport default function(pointVisible, clipLine, interpolate, start) {\n  return function(sink) {\n    var line = clipLine(sink),\n        ringBuffer = clipBuffer(),\n        ringSink = clipLine(ringBuffer),\n        polygonStarted = false,\n        polygon,\n        segments,\n        ring;\n\n    var clip = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        clip.point = pointRing;\n        clip.lineStart = ringStart;\n        clip.lineEnd = ringEnd;\n        segments = [];\n        polygon = [];\n      },\n      polygonEnd: function() {\n        clip.point = point;\n        clip.lineStart = lineStart;\n        clip.lineEnd = lineEnd;\n        segments = merge(segments);\n        var startInside = polygonContains(polygon, start);\n        if (segments.length) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          clipRejoin(segments, compareIntersection, startInside, interpolate, sink);\n        } else if (startInside) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          interpolate(null, null, 1, sink);\n          sink.lineEnd();\n        }\n        if (polygonStarted) sink.polygonEnd(), polygonStarted = false;\n        segments = polygon = null;\n      },\n      sphere: function() {\n        sink.polygonStart();\n        sink.lineStart();\n        interpolate(null, null, 1, sink);\n        sink.lineEnd();\n        sink.polygonEnd();\n      }\n    };\n\n    function point(lambda, phi) {\n      if (pointVisible(lambda, phi)) sink.point(lambda, phi);\n    }\n\n    function pointLine(lambda, phi) {\n      line.point(lambda, phi);\n    }\n\n    function lineStart() {\n      clip.point = pointLine;\n      line.lineStart();\n    }\n\n    function lineEnd() {\n      clip.point = point;\n      line.lineEnd();\n    }\n\n    function pointRing(lambda, phi) {\n      ring.push([lambda, phi]);\n      ringSink.point(lambda, phi);\n    }\n\n    function ringStart() {\n      ringSink.lineStart();\n      ring = [];\n    }\n\n    function ringEnd() {\n      pointRing(ring[0][0], ring[0][1]);\n      ringSink.lineEnd();\n\n      var clean = ringSink.clean(),\n          ringSegments = ringBuffer.result(),\n          i, n = ringSegments.length, m,\n          segment,\n          point;\n\n      ring.pop();\n      polygon.push(ring);\n      ring = null;\n\n      if (!n) return;\n\n      // No intersections.\n      if (clean & 1) {\n        segment = ringSegments[0];\n        if ((m = segment.length - 1) > 0) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          for (i = 0; i < m; ++i) sink.point((point = segment[i])[0], point[1]);\n          sink.lineEnd();\n        }\n        return;\n      }\n\n      // Rejoin connected segments.\n      // TODO reuse ringBuffer.rejoin()?\n      if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n\n      segments.push(ringSegments.filter(validSegment));\n    }\n\n    return clip;\n  };\n}\n\nfunction validSegment(segment) {\n  return segment.length > 1;\n}\n\n// Intersections are sorted along the clip edge. For both antimeridian cutting\n// and circle clipping, the same comparison is used.\nfunction compareIntersection(a, b) {\n  return ((a = a.x)[0] < 0 ? a[1] - halfPi - epsilon : halfPi - a[1])\n       - ((b = b.x)[0] < 0 ? b[1] - halfPi - epsilon : halfPi - b[1]);\n}\n","import clip from \"./index\";\nimport {abs, atan, cos, epsilon, halfPi, pi, sin} from \"../math\";\n\nexport default clip(\n  function() { return true; },\n  clipAntimeridianLine,\n  clipAntimeridianInterpolate,\n  [-pi, -halfPi]\n);\n\n// Takes a line and cuts into visible segments. Return values: 0 - there were\n// intersections or the line was empty; 1 - no intersections; 2 - there were\n// intersections, and the first and last segments should be rejoined.\nfunction clipAntimeridianLine(stream) {\n  var lambda0 = NaN,\n      phi0 = NaN,\n      sign0 = NaN,\n      clean; // no intersections\n\n  return {\n    lineStart: function() {\n      stream.lineStart();\n      clean = 1;\n    },\n    point: function(lambda1, phi1) {\n      var sign1 = lambda1 > 0 ? pi : -pi,\n          delta = abs(lambda1 - lambda0);\n      if (abs(delta - pi) < epsilon) { // line crosses a pole\n        stream.point(lambda0, phi0 = (phi0 + phi1) / 2 > 0 ? halfPi : -halfPi);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        stream.point(lambda1, phi0);\n        clean = 0;\n      } else if (sign0 !== sign1 && delta >= pi) { // line crosses antimeridian\n        if (abs(lambda0 - sign0) < epsilon) lambda0 -= sign0 * epsilon; // handle degeneracies\n        if (abs(lambda1 - sign1) < epsilon) lambda1 -= sign1 * epsilon;\n        phi0 = clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        clean = 0;\n      }\n      stream.point(lambda0 = lambda1, phi0 = phi1);\n      sign0 = sign1;\n    },\n    lineEnd: function() {\n      stream.lineEnd();\n      lambda0 = phi0 = NaN;\n    },\n    clean: function() {\n      return 2 - clean; // if intersections, rejoin first and last segments\n    }\n  };\n}\n\nfunction clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1) {\n  var cosPhi0,\n      cosPhi1,\n      sinLambda0Lambda1 = sin(lambda0 - lambda1);\n  return abs(sinLambda0Lambda1) > epsilon\n      ? atan((sin(phi0) * (cosPhi1 = cos(phi1)) * sin(lambda1)\n          - sin(phi1) * (cosPhi0 = cos(phi0)) * sin(lambda0))\n          / (cosPhi0 * cosPhi1 * sinLambda0Lambda1))\n      : (phi0 + phi1) / 2;\n}\n\nfunction clipAntimeridianInterpolate(from, to, direction, stream) {\n  var phi;\n  if (from == null) {\n    phi = direction * halfPi;\n    stream.point(-pi, phi);\n    stream.point(0, phi);\n    stream.point(pi, phi);\n    stream.point(pi, 0);\n    stream.point(pi, -phi);\n    stream.point(0, -phi);\n    stream.point(-pi, -phi);\n    stream.point(-pi, 0);\n    stream.point(-pi, phi);\n  } else if (abs(from[0] - to[0]) > epsilon) {\n    var lambda = from[0] < to[0] ? pi : -pi;\n    phi = direction * lambda / 2;\n    stream.point(-lambda, phi);\n    stream.point(0, phi);\n    stream.point(lambda, phi);\n  } else {\n    stream.point(to[0], to[1]);\n  }\n}\n","import {cartesian, cartesianAddInPlace, cartesianCross, cartesianDot, cartesianScale, spherical} from \"../cartesian\";\nimport {circleStream} from \"../circle\";\nimport {abs, cos, epsilon, pi, radians, sqrt} from \"../math\";\nimport pointEqual from \"../pointEqual\";\nimport clip from \"./index\";\n\nexport default function(radius) {\n  var cr = cos(radius),\n      delta = 6 * radians,\n      smallRadius = cr > 0,\n      notHemisphere = abs(cr) > epsilon; // TODO optimise for this common case\n\n  function interpolate(from, to, direction, stream) {\n    circleStream(stream, radius, delta, direction, from, to);\n  }\n\n  function visible(lambda, phi) {\n    return cos(lambda) * cos(phi) > cr;\n  }\n\n  // Takes a line and cuts into visible segments. Return values used for polygon\n  // clipping: 0 - there were intersections or the line was empty; 1 - no\n  // intersections 2 - there were intersections, and the first and last segments\n  // should be rejoined.\n  function clipLine(stream) {\n    var point0, // previous point\n        c0, // code for previous point\n        v0, // visibility of previous point\n        v00, // visibility of first point\n        clean; // no intersections\n    return {\n      lineStart: function() {\n        v00 = v0 = false;\n        clean = 1;\n      },\n      point: function(lambda, phi) {\n        var point1 = [lambda, phi],\n            point2,\n            v = visible(lambda, phi),\n            c = smallRadius\n              ? v ? 0 : code(lambda, phi)\n              : v ? code(lambda + (lambda < 0 ? pi : -pi), phi) : 0;\n        if (!point0 && (v00 = v0 = v)) stream.lineStart();\n        // Handle degeneracies.\n        // TODO ignore if not clipping polygons.\n        if (v !== v0) {\n          point2 = intersect(point0, point1);\n          if (!point2 || pointEqual(point0, point2) || pointEqual(point1, point2)) {\n            point1[0] += epsilon;\n            point1[1] += epsilon;\n            v = visible(point1[0], point1[1]);\n          }\n        }\n        if (v !== v0) {\n          clean = 0;\n          if (v) {\n            // outside going in\n            stream.lineStart();\n            point2 = intersect(point1, point0);\n            stream.point(point2[0], point2[1]);\n          } else {\n            // inside going out\n            point2 = intersect(point0, point1);\n            stream.point(point2[0], point2[1]);\n            stream.lineEnd();\n          }\n          point0 = point2;\n        } else if (notHemisphere && point0 && smallRadius ^ v) {\n          var t;\n          // If the codes for two points are different, or are both zero,\n          // and there this segment intersects with the small circle.\n          if (!(c & c0) && (t = intersect(point1, point0, true))) {\n            clean = 0;\n            if (smallRadius) {\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n            } else {\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n            }\n          }\n        }\n        if (v && (!point0 || !pointEqual(point0, point1))) {\n          stream.point(point1[0], point1[1]);\n        }\n        point0 = point1, v0 = v, c0 = c;\n      },\n      lineEnd: function() {\n        if (v0) stream.lineEnd();\n        point0 = null;\n      },\n      // Rejoin first and last segments if there were intersections and the first\n      // and last points were visible.\n      clean: function() {\n        return clean | ((v00 && v0) << 1);\n      }\n    };\n  }\n\n  // Intersects the great circle between a and b with the clip circle.\n  function intersect(a, b, two) {\n    var pa = cartesian(a),\n        pb = cartesian(b);\n\n    // We have two planes, n1.p = d1 and n2.p = d2.\n    // Find intersection line p(t) = c1 n1 + c2 n2 + t (n1 ⨯ n2).\n    var n1 = [1, 0, 0], // normal\n        n2 = cartesianCross(pa, pb),\n        n2n2 = cartesianDot(n2, n2),\n        n1n2 = n2[0], // cartesianDot(n1, n2),\n        determinant = n2n2 - n1n2 * n1n2;\n\n    // Two polar points.\n    if (!determinant) return !two && a;\n\n    var c1 =  cr * n2n2 / determinant,\n        c2 = -cr * n1n2 / determinant,\n        n1xn2 = cartesianCross(n1, n2),\n        A = cartesianScale(n1, c1),\n        B = cartesianScale(n2, c2);\n    cartesianAddInPlace(A, B);\n\n    // Solve |p(t)|^2 = 1.\n    var u = n1xn2,\n        w = cartesianDot(A, u),\n        uu = cartesianDot(u, u),\n        t2 = w * w - uu * (cartesianDot(A, A) - 1);\n\n    if (t2 < 0) return;\n\n    var t = sqrt(t2),\n        q = cartesianScale(u, (-w - t) / uu);\n    cartesianAddInPlace(q, A);\n    q = spherical(q);\n\n    if (!two) return q;\n\n    // Two intersection points.\n    var lambda0 = a[0],\n        lambda1 = b[0],\n        phi0 = a[1],\n        phi1 = b[1],\n        z;\n\n    if (lambda1 < lambda0) z = lambda0, lambda0 = lambda1, lambda1 = z;\n\n    var delta = lambda1 - lambda0,\n        polar = abs(delta - pi) < epsilon,\n        meridian = polar || delta < epsilon;\n\n    if (!polar && phi1 < phi0) z = phi0, phi0 = phi1, phi1 = z;\n\n    // Check that the first point is between a and b.\n    if (meridian\n        ? polar\n          ? phi0 + phi1 > 0 ^ q[1] < (abs(q[0] - lambda0) < epsilon ? phi0 : phi1)\n          : phi0 <= q[1] && q[1] <= phi1\n        : delta > pi ^ (lambda0 <= q[0] && q[0] <= lambda1)) {\n      var q1 = cartesianScale(u, (-w + t) / uu);\n      cartesianAddInPlace(q1, A);\n      return [q, spherical(q1)];\n    }\n  }\n\n  // Generates a 4-bit vector representing the location of a point relative to\n  // the small circle's bounding box.\n  function code(lambda, phi) {\n    var r = smallRadius ? radius : pi - radius,\n        code = 0;\n    if (lambda < -r) code |= 1; // left\n    else if (lambda > r) code |= 2; // right\n    if (phi < -r) code |= 4; // below\n    else if (phi > r) code |= 8; // above\n    return code;\n  }\n\n  return clip(visible, clipLine, interpolate, smallRadius ? [0, -radius] : [-pi, radius - pi]);\n}\n","export default function(a, b, x0, y0, x1, y1) {\n  var ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (t0 > 0) a[0] = ax + t0 * dx, a[1] = ay + t0 * dy;\n  if (t1 < 1) b[0] = ax + t1 * dx, b[1] = ay + t1 * dy;\n  return true;\n}\n","import {abs, epsilon} from \"../math\";\nimport clipBuffer from \"./buffer\";\nimport clipLine from \"./line\";\nimport clipRejoin from \"./rejoin\";\nimport {merge} from \"d3-array\";\n\nvar clipMax = 1e9, clipMin = -clipMax;\n\n// TODO Use d3-polygon’s polygonContains here for the ring check?\n// TODO Eliminate duplicate buffering in clipBuffer and polygon.push?\n\nexport default function clipRectangle(x0, y0, x1, y1) {\n\n  function visible(x, y) {\n    return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n  }\n\n  function interpolate(from, to, direction, stream) {\n    var a = 0, a1 = 0;\n    if (from == null\n        || (a = corner(from, direction)) !== (a1 = corner(to, direction))\n        || comparePoint(from, to) < 0 ^ direction > 0) {\n      do stream.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n      while ((a = (a + direction + 4) % 4) !== a1);\n    } else {\n      stream.point(to[0], to[1]);\n    }\n  }\n\n  function corner(p, direction) {\n    return abs(p[0] - x0) < epsilon ? direction > 0 ? 0 : 3\n        : abs(p[0] - x1) < epsilon ? direction > 0 ? 2 : 1\n        : abs(p[1] - y0) < epsilon ? direction > 0 ? 1 : 0\n        : direction > 0 ? 3 : 2; // abs(p[1] - y1) < epsilon\n  }\n\n  function compareIntersection(a, b) {\n    return comparePoint(a.x, b.x);\n  }\n\n  function comparePoint(a, b) {\n    var ca = corner(a, 1),\n        cb = corner(b, 1);\n    return ca !== cb ? ca - cb\n        : ca === 0 ? b[1] - a[1]\n        : ca === 1 ? a[0] - b[0]\n        : ca === 2 ? a[1] - b[1]\n        : b[0] - a[0];\n  }\n\n  return function(stream) {\n    var activeStream = stream,\n        bufferStream = clipBuffer(),\n        segments,\n        polygon,\n        ring,\n        x__, y__, v__, // first point\n        x_, y_, v_, // previous point\n        first,\n        clean;\n\n    var clipStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: polygonStart,\n      polygonEnd: polygonEnd\n    };\n\n    function point(x, y) {\n      if (visible(x, y)) activeStream.point(x, y);\n    }\n\n    function polygonInside() {\n      var winding = 0;\n\n      for (var i = 0, n = polygon.length; i < n; ++i) {\n        for (var ring = polygon[i], j = 1, m = ring.length, point = ring[0], a0, a1, b0 = point[0], b1 = point[1]; j < m; ++j) {\n          a0 = b0, a1 = b1, point = ring[j], b0 = point[0], b1 = point[1];\n          if (a1 <= y1) { if (b1 > y1 && (b0 - a0) * (y1 - a1) > (b1 - a1) * (x0 - a0)) ++winding; }\n          else { if (b1 <= y1 && (b0 - a0) * (y1 - a1) < (b1 - a1) * (x0 - a0)) --winding; }\n        }\n      }\n\n      return winding;\n    }\n\n    // Buffer geometry within a polygon and then clip it en masse.\n    function polygonStart() {\n      activeStream = bufferStream, segments = [], polygon = [], clean = true;\n    }\n\n    function polygonEnd() {\n      var startInside = polygonInside(),\n          cleanInside = clean && startInside,\n          visible = (segments = merge(segments)).length;\n      if (cleanInside || visible) {\n        stream.polygonStart();\n        if (cleanInside) {\n          stream.lineStart();\n          interpolate(null, null, 1, stream);\n          stream.lineEnd();\n        }\n        if (visible) {\n          clipRejoin(segments, compareIntersection, startInside, interpolate, stream);\n        }\n        stream.polygonEnd();\n      }\n      activeStream = stream, segments = polygon = ring = null;\n    }\n\n    function lineStart() {\n      clipStream.point = linePoint;\n      if (polygon) polygon.push(ring = []);\n      first = true;\n      v_ = false;\n      x_ = y_ = NaN;\n    }\n\n    // TODO rather than special-case polygons, simply handle them separately.\n    // Ideally, coincident intersection points should be jittered to avoid\n    // clipping issues.\n    function lineEnd() {\n      if (segments) {\n        linePoint(x__, y__);\n        if (v__ && v_) bufferStream.rejoin();\n        segments.push(bufferStream.result());\n      }\n      clipStream.point = point;\n      if (v_) activeStream.lineEnd();\n    }\n\n    function linePoint(x, y) {\n      var v = visible(x, y);\n      if (polygon) ring.push([x, y]);\n      if (first) {\n        x__ = x, y__ = y, v__ = v;\n        first = false;\n        if (v) {\n          activeStream.lineStart();\n          activeStream.point(x, y);\n        }\n      } else {\n        if (v && v_) activeStream.point(x, y);\n        else {\n          var a = [x_ = Math.max(clipMin, Math.min(clipMax, x_)), y_ = Math.max(clipMin, Math.min(clipMax, y_))],\n              b = [x = Math.max(clipMin, Math.min(clipMax, x)), y = Math.max(clipMin, Math.min(clipMax, y))];\n          if (clipLine(a, b, x0, y0, x1, y1)) {\n            if (!v_) {\n              activeStream.lineStart();\n              activeStream.point(a[0], a[1]);\n            }\n            activeStream.point(b[0], b[1]);\n            if (!v) activeStream.lineEnd();\n            clean = false;\n          } else if (v) {\n            activeStream.lineStart();\n            activeStream.point(x, y);\n            clean = false;\n          }\n        }\n      }\n      x_ = x, y_ = y, v_ = v;\n    }\n\n    return clipStream;\n  };\n}\n","import clipRectangle from \"./rectangle\";\n\nexport default function() {\n  var x0 = 0,\n      y0 = 0,\n      x1 = 960,\n      y1 = 500,\n      cache,\n      cacheStream,\n      clip;\n\n  return clip = {\n    stream: function(stream) {\n      return cache && cacheStream === stream ? cache : cache = clipRectangle(x0, y0, x1, y1)(cacheStream = stream);\n    },\n    extent: function(_) {\n      return arguments.length ? (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1], cache = cacheStream = null, clip) : [[x0, y0], [x1, y1]];\n    }\n  };\n}\n","import adder from \"./adder\";\nimport {abs, atan2, cos, radians, sin, sqrt} from \"./math\";\nimport noop from \"./noop\";\nimport stream from \"./stream\";\n\nvar lengthSum = adder(),\n    lambda0,\n    sinPhi0,\n    cosPhi0;\n\nvar lengthStream = {\n  sphere: noop,\n  point: noop,\n  lineStart: lengthLineStart,\n  lineEnd: noop,\n  polygonStart: noop,\n  polygonEnd: noop\n};\n\nfunction lengthLineStart() {\n  lengthStream.point = lengthPointFirst;\n  lengthStream.lineEnd = lengthLineEnd;\n}\n\nfunction lengthLineEnd() {\n  lengthStream.point = lengthStream.lineEnd = noop;\n}\n\nfunction lengthPointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  lambda0 = lambda, sinPhi0 = sin(phi), cosPhi0 = cos(phi);\n  lengthStream.point = lengthPoint;\n}\n\nfunction lengthPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var sinPhi = sin(phi),\n      cosPhi = cos(phi),\n      delta = abs(lambda - lambda0),\n      cosDelta = cos(delta),\n      sinDelta = sin(delta),\n      x = cosPhi * sinDelta,\n      y = cosPhi0 * sinPhi - sinPhi0 * cosPhi * cosDelta,\n      z = sinPhi0 * sinPhi + cosPhi0 * cosPhi * cosDelta;\n  lengthSum.add(atan2(sqrt(x * x + y * y), z));\n  lambda0 = lambda, sinPhi0 = sinPhi, cosPhi0 = cosPhi;\n}\n\nexport default function(object) {\n  lengthSum.reset();\n  stream(object, lengthStream);\n  return +lengthSum;\n}\n","import length from \"./length\";\n\nvar coordinates = [null, null],\n    object = {type: \"LineString\", coordinates: coordinates};\n\nexport default function(a, b) {\n  coordinates[0] = a;\n  coordinates[1] = b;\n  return length(object);\n}\n","import {default as polygonContains} from \"./polygonContains\";\nimport {default as distance} from \"./distance\";\nimport {epsilon, radians} from \"./math\";\n\nvar containsObjectType = {\n  Feature: function(object, point) {\n    return containsGeometry(object.geometry, point);\n  },\n  FeatureCollection: function(object, point) {\n    var features = object.features, i = -1, n = features.length;\n    while (++i < n) if (containsGeometry(features[i].geometry, point)) return true;\n    return false;\n  }\n};\n\nvar containsGeometryType = {\n  Sphere: function() {\n    return true;\n  },\n  Point: function(object, point) {\n    return containsPoint(object.coordinates, point);\n  },\n  MultiPoint: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsPoint(coordinates[i], point)) return true;\n    return false;\n  },\n  LineString: function(object, point) {\n    return containsLine(object.coordinates, point);\n  },\n  MultiLineString: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsLine(coordinates[i], point)) return true;\n    return false;\n  },\n  Polygon: function(object, point) {\n    return containsPolygon(object.coordinates, point);\n  },\n  MultiPolygon: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsPolygon(coordinates[i], point)) return true;\n    return false;\n  },\n  GeometryCollection: function(object, point) {\n    var geometries = object.geometries, i = -1, n = geometries.length;\n    while (++i < n) if (containsGeometry(geometries[i], point)) return true;\n    return false;\n  }\n};\n\nfunction containsGeometry(geometry, point) {\n  return geometry && containsGeometryType.hasOwnProperty(geometry.type)\n      ? containsGeometryType[geometry.type](geometry, point)\n      : false;\n}\n\nfunction containsPoint(coordinates, point) {\n  return distance(coordinates, point) === 0;\n}\n\nfunction containsLine(coordinates, point) {\n  var ab = distance(coordinates[0], coordinates[1]),\n      ao = distance(coordinates[0], point),\n      ob = distance(point, coordinates[1]);\n  return ao + ob <= ab + epsilon;\n}\n\nfunction containsPolygon(coordinates, point) {\n  return !!polygonContains(coordinates.map(ringRadians), pointRadians(point));\n}\n\nfunction ringRadians(ring) {\n  return ring = ring.map(pointRadians), ring.pop(), ring;\n}\n\nfunction pointRadians(point) {\n  return [point[0] * radians, point[1] * radians];\n}\n\nexport default function(object, point) {\n  return (object && containsObjectType.hasOwnProperty(object.type)\n      ? containsObjectType[object.type]\n      : containsGeometry)(object, point);\n}\n","import {range} from \"d3-array\";\nimport {abs, ceil, epsilon} from \"./math\";\n\nfunction graticuleX(y0, y1, dy) {\n  var y = range(y0, y1 - epsilon, dy).concat(y1);\n  return function(x) { return y.map(function(y) { return [x, y]; }); };\n}\n\nfunction graticuleY(x0, x1, dx) {\n  var x = range(x0, x1 - epsilon, dx).concat(x1);\n  return function(y) { return x.map(function(x) { return [x, y]; }); };\n}\n\nexport default function graticule() {\n  var x1, x0, X1, X0,\n      y1, y0, Y1, Y0,\n      dx = 10, dy = dx, DX = 90, DY = 360,\n      x, y, X, Y,\n      precision = 2.5;\n\n  function graticule() {\n    return {type: \"MultiLineString\", coordinates: lines()};\n  }\n\n  function lines() {\n    return range(ceil(X0 / DX) * DX, X1, DX).map(X)\n        .concat(range(ceil(Y0 / DY) * DY, Y1, DY).map(Y))\n        .concat(range(ceil(x0 / dx) * dx, x1, dx).filter(function(x) { return abs(x % DX) > epsilon; }).map(x))\n        .concat(range(ceil(y0 / dy) * dy, y1, dy).filter(function(y) { return abs(y % DY) > epsilon; }).map(y));\n  }\n\n  graticule.lines = function() {\n    return lines().map(function(coordinates) { return {type: \"LineString\", coordinates: coordinates}; });\n  };\n\n  graticule.outline = function() {\n    return {\n      type: \"Polygon\",\n      coordinates: [\n        X(X0).concat(\n        Y(Y1).slice(1),\n        X(X1).reverse().slice(1),\n        Y(Y0).reverse().slice(1))\n      ]\n    };\n  };\n\n  graticule.extent = function(_) {\n    if (!arguments.length) return graticule.extentMinor();\n    return graticule.extentMajor(_).extentMinor(_);\n  };\n\n  graticule.extentMajor = function(_) {\n    if (!arguments.length) return [[X0, Y0], [X1, Y1]];\n    X0 = +_[0][0], X1 = +_[1][0];\n    Y0 = +_[0][1], Y1 = +_[1][1];\n    if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n    if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.extentMinor = function(_) {\n    if (!arguments.length) return [[x0, y0], [x1, y1]];\n    x0 = +_[0][0], x1 = +_[1][0];\n    y0 = +_[0][1], y1 = +_[1][1];\n    if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n    if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.step = function(_) {\n    if (!arguments.length) return graticule.stepMinor();\n    return graticule.stepMajor(_).stepMinor(_);\n  };\n\n  graticule.stepMajor = function(_) {\n    if (!arguments.length) return [DX, DY];\n    DX = +_[0], DY = +_[1];\n    return graticule;\n  };\n\n  graticule.stepMinor = function(_) {\n    if (!arguments.length) return [dx, dy];\n    dx = +_[0], dy = +_[1];\n    return graticule;\n  };\n\n  graticule.precision = function(_) {\n    if (!arguments.length) return precision;\n    precision = +_;\n    x = graticuleX(y0, y1, 90);\n    y = graticuleY(x0, x1, precision);\n    X = graticuleX(Y0, Y1, 90);\n    Y = graticuleY(X0, X1, precision);\n    return graticule;\n  };\n\n  return graticule\n      .extentMajor([[-180, -90 + epsilon], [180, 90 - epsilon]])\n      .extentMinor([[-180, -80 - epsilon], [180, 80 + epsilon]]);\n}\n\nexport function graticule10() {\n  return graticule()();\n}\n","import {asin, atan2, cos, degrees, haversin, radians, sin, sqrt} from \"./math\";\n\nexport default function(a, b) {\n  var x0 = a[0] * radians,\n      y0 = a[1] * radians,\n      x1 = b[0] * radians,\n      y1 = b[1] * radians,\n      cy0 = cos(y0),\n      sy0 = sin(y0),\n      cy1 = cos(y1),\n      sy1 = sin(y1),\n      kx0 = cy0 * cos(x0),\n      ky0 = cy0 * sin(x0),\n      kx1 = cy1 * cos(x1),\n      ky1 = cy1 * sin(x1),\n      d = 2 * asin(sqrt(haversin(y1 - y0) + cy0 * cy1 * haversin(x1 - x0))),\n      k = sin(d);\n\n  var interpolate = d ? function(t) {\n    var B = sin(t *= d) / k,\n        A = sin(d - t) / k,\n        x = A * kx0 + B * kx1,\n        y = A * ky0 + B * ky1,\n        z = A * sy0 + B * sy1;\n    return [\n      atan2(y, x) * degrees,\n      atan2(z, sqrt(x * x + y * y)) * degrees\n    ];\n  } : function() {\n    return [x0 * degrees, y0 * degrees];\n  };\n\n  interpolate.distance = d;\n\n  return interpolate;\n}\n","import adder from \"../adder\";\nimport {abs} from \"../math\";\nimport noop from \"../noop\";\n\nvar areaSum = adder(),\n    areaRingSum = adder(),\n    x00,\n    y00,\n    x0,\n    y0;\n\nvar areaStream = {\n  point: noop,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: function() {\n    areaStream.lineStart = areaRingStart;\n    areaStream.lineEnd = areaRingEnd;\n  },\n  polygonEnd: function() {\n    areaStream.lineStart = areaStream.lineEnd = areaStream.point = noop;\n    areaSum.add(abs(areaRingSum));\n    areaRingSum.reset();\n  },\n  result: function() {\n    var area = areaSum / 2;\n    areaSum.reset();\n    return area;\n  }\n};\n\nfunction areaRingStart() {\n  areaStream.point = areaPointFirst;\n}\n\nfunction areaPointFirst(x, y) {\n  areaStream.point = areaPoint;\n  x00 = x0 = x, y00 = y0 = y;\n}\n\nfunction areaPoint(x, y) {\n  areaRingSum.add(y0 * x - x0 * y);\n  x0 = x, y0 = y;\n}\n\nfunction areaRingEnd() {\n  areaPoint(x00, y00);\n}\n\nexport default areaStream;\n","export default function(x) {\n  return x;\n}\n","import noop from \"../noop\";\n\nvar x0 = Infinity,\n    y0 = x0,\n    x1 = -x0,\n    y1 = x1;\n\nvar boundsStream = {\n  point: boundsPoint,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: noop,\n  polygonEnd: noop,\n  result: function() {\n    var bounds = [[x0, y0], [x1, y1]];\n    x1 = y1 = -(y0 = x0 = Infinity);\n    return bounds;\n  }\n};\n\nfunction boundsPoint(x, y) {\n  if (x < x0) x0 = x;\n  if (x > x1) x1 = x;\n  if (y < y0) y0 = y;\n  if (y > y1) y1 = y;\n}\n\nexport default boundsStream;\n","import {sqrt} from \"../math\";\n\n// TODO Enforce positive area for exterior, negative area for interior?\n\nvar X0 = 0,\n    Y0 = 0,\n    Z0 = 0,\n    X1 = 0,\n    Y1 = 0,\n    Z1 = 0,\n    X2 = 0,\n    Y2 = 0,\n    Z2 = 0,\n    x00,\n    y00,\n    x0,\n    y0;\n\nvar centroidStream = {\n  point: centroidPoint,\n  lineStart: centroidLineStart,\n  lineEnd: centroidLineEnd,\n  polygonStart: function() {\n    centroidStream.lineStart = centroidRingStart;\n    centroidStream.lineEnd = centroidRingEnd;\n  },\n  polygonEnd: function() {\n    centroidStream.point = centroidPoint;\n    centroidStream.lineStart = centroidLineStart;\n    centroidStream.lineEnd = centroidLineEnd;\n  },\n  result: function() {\n    var centroid = Z2 ? [X2 / Z2, Y2 / Z2]\n        : Z1 ? [X1 / Z1, Y1 / Z1]\n        : Z0 ? [X0 / Z0, Y0 / Z0]\n        : [NaN, NaN];\n    X0 = Y0 = Z0 =\n    X1 = Y1 = Z1 =\n    X2 = Y2 = Z2 = 0;\n    return centroid;\n  }\n};\n\nfunction centroidPoint(x, y) {\n  X0 += x;\n  Y0 += y;\n  ++Z0;\n}\n\nfunction centroidLineStart() {\n  centroidStream.point = centroidPointFirstLine;\n}\n\nfunction centroidPointFirstLine(x, y) {\n  centroidStream.point = centroidPointLine;\n  centroidPoint(x0 = x, y0 = y);\n}\n\nfunction centroidPointLine(x, y) {\n  var dx = x - x0, dy = y - y0, z = sqrt(dx * dx + dy * dy);\n  X1 += z * (x0 + x) / 2;\n  Y1 += z * (y0 + y) / 2;\n  Z1 += z;\n  centroidPoint(x0 = x, y0 = y);\n}\n\nfunction centroidLineEnd() {\n  centroidStream.point = centroidPoint;\n}\n\nfunction centroidRingStart() {\n  centroidStream.point = centroidPointFirstRing;\n}\n\nfunction centroidRingEnd() {\n  centroidPointRing(x00, y00);\n}\n\nfunction centroidPointFirstRing(x, y) {\n  centroidStream.point = centroidPointRing;\n  centroidPoint(x00 = x0 = x, y00 = y0 = y);\n}\n\nfunction centroidPointRing(x, y) {\n  var dx = x - x0,\n      dy = y - y0,\n      z = sqrt(dx * dx + dy * dy);\n\n  X1 += z * (x0 + x) / 2;\n  Y1 += z * (y0 + y) / 2;\n  Z1 += z;\n\n  z = y0 * x - x0 * y;\n  X2 += z * (x0 + x);\n  Y2 += z * (y0 + y);\n  Z2 += z * 3;\n  centroidPoint(x0 = x, y0 = y);\n}\n\nexport default centroidStream;\n","import {tau} from \"../math\";\nimport noop from \"../noop\";\n\nexport default function PathContext(context) {\n  this._context = context;\n}\n\nPathContext.prototype = {\n  _radius: 4.5,\n  pointRadius: function(_) {\n    return this._radius = _, this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._context.closePath();\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._context.moveTo(x, y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._context.lineTo(x, y);\n        break;\n      }\n      default: {\n        this._context.moveTo(x + this._radius, y);\n        this._context.arc(x, y, this._radius, 0, tau);\n        break;\n      }\n    }\n  },\n  result: noop\n};\n","import adder from \"../adder\";\nimport {sqrt} from \"../math\";\nimport noop from \"../noop\";\n\nvar lengthSum = adder(),\n    lengthRing,\n    x00,\n    y00,\n    x0,\n    y0;\n\nvar lengthStream = {\n  point: noop,\n  lineStart: function() {\n    lengthStream.point = lengthPointFirst;\n  },\n  lineEnd: function() {\n    if (lengthRing) lengthPoint(x00, y00);\n    lengthStream.point = noop;\n  },\n  polygonStart: function() {\n    lengthRing = true;\n  },\n  polygonEnd: function() {\n    lengthRing = null;\n  },\n  result: function() {\n    var length = +lengthSum;\n    lengthSum.reset();\n    return length;\n  }\n};\n\nfunction lengthPointFirst(x, y) {\n  lengthStream.point = lengthPoint;\n  x00 = x0 = x, y00 = y0 = y;\n}\n\nfunction lengthPoint(x, y) {\n  x0 -= x, y0 -= y;\n  lengthSum.add(sqrt(x0 * x0 + y0 * y0));\n  x0 = x, y0 = y;\n}\n\nexport default lengthStream;\n","export default function PathString() {\n  this._string = [];\n}\n\nPathString.prototype = {\n  _radius: 4.5,\n  _circle: circle(4.5),\n  pointRadius: function(_) {\n    if ((_ = +_) !== this._radius) this._radius = _, this._circle = null;\n    return this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._string.push(\"Z\");\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._string.push(\"M\", x, \",\", y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._string.push(\"L\", x, \",\", y);\n        break;\n      }\n      default: {\n        if (this._circle == null) this._circle = circle(this._radius);\n        this._string.push(\"M\", x, \",\", y, this._circle);\n        break;\n      }\n    }\n  },\n  result: function() {\n    if (this._string.length) {\n      var result = this._string.join(\"\");\n      this._string = [];\n      return result;\n    } else {\n      return null;\n    }\n  }\n};\n\nfunction circle(radius) {\n  return \"m0,\" + radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius\n      + \"z\";\n}\n","import identity from \"../identity\";\nimport stream from \"../stream\";\nimport pathArea from \"./area\";\nimport pathBounds from \"./bounds\";\nimport pathCentroid from \"./centroid\";\nimport PathContext from \"./context\";\nimport pathMeasure from \"./measure\";\nimport PathString from \"./string\";\n\nexport default function(projection, context) {\n  var pointRadius = 4.5,\n      projectionStream,\n      contextStream;\n\n  function path(object) {\n    if (object) {\n      if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n      stream(object, projectionStream(contextStream));\n    }\n    return contextStream.result();\n  }\n\n  path.area = function(object) {\n    stream(object, projectionStream(pathArea));\n    return pathArea.result();\n  };\n\n  path.measure = function(object) {\n    stream(object, projectionStream(pathMeasure));\n    return pathMeasure.result();\n  };\n\n  path.bounds = function(object) {\n    stream(object, projectionStream(pathBounds));\n    return pathBounds.result();\n  };\n\n  path.centroid = function(object) {\n    stream(object, projectionStream(pathCentroid));\n    return pathCentroid.result();\n  };\n\n  path.projection = function(_) {\n    return arguments.length ? (projectionStream = _ == null ? (projection = null, identity) : (projection = _).stream, path) : projection;\n  };\n\n  path.context = function(_) {\n    if (!arguments.length) return context;\n    contextStream = _ == null ? (context = null, new PathString) : new PathContext(context = _);\n    if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n    return path;\n  };\n\n  path.pointRadius = function(_) {\n    if (!arguments.length) return pointRadius;\n    pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n    return path;\n  };\n\n  return path.projection(projection).context(context);\n}\n","export default function(methods) {\n  return {\n    stream: transformer(methods)\n  };\n}\n\nexport function transformer(methods) {\n  return function(stream) {\n    var s = new TransformStream;\n    for (var key in methods) s[key] = methods[key];\n    s.stream = stream;\n    return s;\n  };\n}\n\nfunction TransformStream() {}\n\nTransformStream.prototype = {\n  constructor: TransformStream,\n  point: function(x, y) { this.stream.point(x, y); },\n  sphere: function() { this.stream.sphere(); },\n  lineStart: function() { this.stream.lineStart(); },\n  lineEnd: function() { this.stream.lineEnd(); },\n  polygonStart: function() { this.stream.polygonStart(); },\n  polygonEnd: function() { this.stream.polygonEnd(); }\n};\n","import {default as geoStream} from \"../stream\";\nimport boundsStream from \"../path/bounds\";\n\nfunction fit(projection, fitBounds, object) {\n  var clip = projection.clipExtent && projection.clipExtent();\n  projection.scale(150).translate([0, 0]);\n  if (clip != null) projection.clipExtent(null);\n  geoStream(object, projection.stream(boundsStream));\n  fitBounds(boundsStream.result());\n  if (clip != null) projection.clipExtent(clip);\n  return projection;\n}\n\nexport function fitExtent(projection, extent, object) {\n  return fit(projection, function(b) {\n    var w = extent[1][0] - extent[0][0],\n        h = extent[1][1] - extent[0][1],\n        k = Math.min(w / (b[1][0] - b[0][0]), h / (b[1][1] - b[0][1])),\n        x = +extent[0][0] + (w - k * (b[1][0] + b[0][0])) / 2,\n        y = +extent[0][1] + (h - k * (b[1][1] + b[0][1])) / 2;\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}\n\nexport function fitSize(projection, size, object) {\n  return fitExtent(projection, [[0, 0], size], object);\n}\n\nexport function fitWidth(projection, width, object) {\n  return fit(projection, function(b) {\n    var w = +width,\n        k = w / (b[1][0] - b[0][0]),\n        x = (w - k * (b[1][0] + b[0][0])) / 2,\n        y = -k * b[0][1];\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}\n\nexport function fitHeight(projection, height, object) {\n  return fit(projection, function(b) {\n    var h = +height,\n        k = h / (b[1][1] - b[0][1]),\n        x = -k * b[0][0],\n        y = (h - k * (b[1][1] + b[0][1])) / 2;\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}\n","import {cartesian} from \"../cartesian\";\nimport {abs, asin, atan2, cos, epsilon, radians, sqrt} from \"../math\";\nimport {transformer} from \"../transform\";\n\nvar maxDepth = 16, // maximum depth of subdivision\n    cosMinDistance = cos(30 * radians); // cos(minimum angular distance)\n\nexport default function(project, delta2) {\n  return +delta2 ? resample(project, delta2) : resampleNone(project);\n}\n\nfunction resampleNone(project) {\n  return transformer({\n    point: function(x, y) {\n      x = project(x, y);\n      this.stream.point(x[0], x[1]);\n    }\n  });\n}\n\nfunction resample(project, delta2) {\n\n  function resampleLineTo(x0, y0, lambda0, a0, b0, c0, x1, y1, lambda1, a1, b1, c1, depth, stream) {\n    var dx = x1 - x0,\n        dy = y1 - y0,\n        d2 = dx * dx + dy * dy;\n    if (d2 > 4 * delta2 && depth--) {\n      var a = a0 + a1,\n          b = b0 + b1,\n          c = c0 + c1,\n          m = sqrt(a * a + b * b + c * c),\n          phi2 = asin(c /= m),\n          lambda2 = abs(abs(c) - 1) < epsilon || abs(lambda0 - lambda1) < epsilon ? (lambda0 + lambda1) / 2 : atan2(b, a),\n          p = project(lambda2, phi2),\n          x2 = p[0],\n          y2 = p[1],\n          dx2 = x2 - x0,\n          dy2 = y2 - y0,\n          dz = dy * dx2 - dx * dy2;\n      if (dz * dz / d2 > delta2 // perpendicular projected distance\n          || abs((dx * dx2 + dy * dy2) / d2 - 0.5) > 0.3 // midpoint close to an end\n          || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) { // angular distance\n        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x2, y2, lambda2, a /= m, b /= m, c, depth, stream);\n        stream.point(x2, y2);\n        resampleLineTo(x2, y2, lambda2, a, b, c, x1, y1, lambda1, a1, b1, c1, depth, stream);\n      }\n    }\n  }\n  return function(stream) {\n    var lambda00, x00, y00, a00, b00, c00, // first point\n        lambda0, x0, y0, a0, b0, c0; // previous point\n\n    var resampleStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() { stream.polygonStart(); resampleStream.lineStart = ringStart; },\n      polygonEnd: function() { stream.polygonEnd(); resampleStream.lineStart = lineStart; }\n    };\n\n    function point(x, y) {\n      x = project(x, y);\n      stream.point(x[0], x[1]);\n    }\n\n    function lineStart() {\n      x0 = NaN;\n      resampleStream.point = linePoint;\n      stream.lineStart();\n    }\n\n    function linePoint(lambda, phi) {\n      var c = cartesian([lambda, phi]), p = project(lambda, phi);\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x0 = p[0], y0 = p[1], lambda0 = lambda, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n      stream.point(x0, y0);\n    }\n\n    function lineEnd() {\n      resampleStream.point = point;\n      stream.lineEnd();\n    }\n\n    function ringStart() {\n      lineStart();\n      resampleStream.point = ringPoint;\n      resampleStream.lineEnd = ringEnd;\n    }\n\n    function ringPoint(lambda, phi) {\n      linePoint(lambda00 = lambda, phi), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n      resampleStream.point = linePoint;\n    }\n\n    function ringEnd() {\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x00, y00, lambda00, a00, b00, c00, maxDepth, stream);\n      resampleStream.lineEnd = lineEnd;\n      lineEnd();\n    }\n\n    return resampleStream;\n  };\n}\n","import clipAntimeridian from \"../clip/antimeridian\";\nimport clipCircle from \"../clip/circle\";\nimport clipRectangle from \"../clip/rectangle\";\nimport compose from \"../compose\";\nimport identity from \"../identity\";\nimport {cos, degrees, radians, sin, sqrt} from \"../math\";\nimport {rotateRadians} from \"../rotation\";\nimport {transformer} from \"../transform\";\nimport {fitExtent, fitSize, fitWidth, fitHeight} from \"./fit\";\nimport resample from \"./resample\";\n\nvar transformRadians = transformer({\n  point: function(x, y) {\n    this.stream.point(x * radians, y * radians);\n  }\n});\n\nfunction transformRotate(rotate) {\n  return transformer({\n    point: function(x, y) {\n      var r = rotate(x, y);\n      return this.stream.point(r[0], r[1]);\n    }\n  });\n}\n\nfunction scaleTranslate(k, dx, dy) {\n  function transform(x, y) {\n    return [dx + k * x, dy - k * y];\n  }\n  transform.invert = function(x, y) {\n    return [(x - dx) / k, (dy - y) / k];\n  };\n  return transform;\n}\n\nfunction scaleTranslateRotate(k, dx, dy, alpha) {\n  var cosAlpha = cos(alpha),\n      sinAlpha = sin(alpha),\n      a = cosAlpha * k,\n      b = sinAlpha * k,\n      ai = cosAlpha / k,\n      bi = sinAlpha / k,\n      ci = (sinAlpha * dy - cosAlpha * dx) / k,\n      fi = (sinAlpha * dx + cosAlpha * dy) / k;\n  function transform(x, y) {\n    return [a * x - b * y + dx, dy - b * x - a * y];\n  }\n  transform.invert = function(x, y) {\n    return [ai * x - bi * y + ci, fi - bi * x - ai * y];\n  };\n  return transform;\n}\n\nexport default function projection(project) {\n  return projectionMutator(function() { return project; })();\n}\n\nexport function projectionMutator(projectAt) {\n  var project,\n      k = 150, // scale\n      x = 480, y = 250, // translate\n      lambda = 0, phi = 0, // center\n      deltaLambda = 0, deltaPhi = 0, deltaGamma = 0, rotate, // pre-rotate\n      alpha = 0, // post-rotate\n      theta = null, preclip = clipAntimeridian, // pre-clip angle\n      x0 = null, y0, x1, y1, postclip = identity, // post-clip extent\n      delta2 = 0.5, // precision\n      projectResample,\n      projectTransform,\n      projectRotateTransform,\n      cache,\n      cacheStream;\n\n  function projection(point) {\n    return projectRotateTransform(point[0] * radians, point[1] * radians);\n  }\n\n  function invert(point) {\n    point = projectRotateTransform.invert(point[0], point[1]);\n    return point && [point[0] * degrees, point[1] * degrees];\n  }\n\n  projection.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = transformRadians(transformRotate(rotate)(preclip(projectResample(postclip(cacheStream = stream)))));\n  };\n\n  projection.preclip = function(_) {\n    return arguments.length ? (preclip = _, theta = undefined, reset()) : preclip;\n  };\n\n  projection.postclip = function(_) {\n    return arguments.length ? (postclip = _, x0 = y0 = x1 = y1 = null, reset()) : postclip;\n  };\n\n  projection.clipAngle = function(_) {\n    return arguments.length ? (preclip = +_ ? clipCircle(theta = _ * radians) : (theta = null, clipAntimeridian), reset()) : theta * degrees;\n  };\n\n  projection.clipExtent = function(_) {\n    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity) : clipRectangle(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  projection.scale = function(_) {\n    return arguments.length ? (k = +_, recenter()) : k;\n  };\n\n  projection.translate = function(_) {\n    return arguments.length ? (x = +_[0], y = +_[1], recenter()) : [x, y];\n  };\n\n  projection.center = function(_) {\n    return arguments.length ? (lambda = _[0] % 360 * radians, phi = _[1] % 360 * radians, recenter()) : [lambda * degrees, phi * degrees];\n  };\n\n  projection.rotate = function(_) {\n    return arguments.length ? (deltaLambda = _[0] % 360 * radians, deltaPhi = _[1] % 360 * radians, deltaGamma = _.length > 2 ? _[2] % 360 * radians : 0, recenter()) : [deltaLambda * degrees, deltaPhi * degrees, deltaGamma * degrees];\n  };\n\n  projection.angle = function(_) {\n    return arguments.length ? (alpha = _ % 360 * radians, recenter()) : alpha * degrees;\n  };\n\n  projection.precision = function(_) {\n    return arguments.length ? (projectResample = resample(projectTransform, delta2 = _ * _), reset()) : sqrt(delta2);\n  };\n\n  projection.fitExtent = function(extent, object) {\n    return fitExtent(projection, extent, object);\n  };\n\n  projection.fitSize = function(size, object) {\n    return fitSize(projection, size, object);\n  };\n\n  projection.fitWidth = function(width, object) {\n    return fitWidth(projection, width, object);\n  };\n\n  projection.fitHeight = function(height, object) {\n    return fitHeight(projection, height, object);\n  };\n\n  function recenter() {\n    var center = scaleTranslateRotate(k, 0, 0, alpha).apply(null, project(lambda, phi)),\n        transform = (alpha ? scaleTranslateRotate : scaleTranslate)(k, x - center[0], y - center[1], alpha);\n    rotate = rotateRadians(deltaLambda, deltaPhi, deltaGamma);\n    projectTransform = compose(project, transform);\n    projectRotateTransform = compose(rotate, projectTransform);\n    projectResample = resample(projectTransform, delta2);\n    return reset();\n  }\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return function() {\n    project = projectAt.apply(this, arguments);\n    projection.invert = project.invert && invert;\n    return recenter();\n  };\n}\n","import {degrees, pi, radians} from \"../math\";\nimport {projectionMutator} from \"./index\";\n\nexport function conicProjection(projectAt) {\n  var phi0 = 0,\n      phi1 = pi / 3,\n      m = projectionMutator(projectAt),\n      p = m(phi0, phi1);\n\n  p.parallels = function(_) {\n    return arguments.length ? m(phi0 = _[0] * radians, phi1 = _[1] * radians) : [phi0 * degrees, phi1 * degrees];\n  };\n\n  return p;\n}\n","import {abs, asin, atan2, cos, epsilon, sign, sin, sqrt} from \"../math\";\nimport {conicProjection} from \"./conic\";\nimport {cylindricalEqualAreaRaw} from \"./cylindricalEqualArea\";\n\nexport function conicEqualAreaRaw(y0, y1) {\n  var sy0 = sin(y0), n = (sy0 + sin(y1)) / 2;\n\n  // Are the parallels symmetrical around the Equator?\n  if (abs(n) < epsilon) return cylindricalEqualAreaRaw(y0);\n\n  var c = 1 + sy0 * (2 * n - sy0), r0 = sqrt(c) / n;\n\n  function project(x, y) {\n    var r = sqrt(c - 2 * n * sin(y)) / n;\n    return [r * sin(x *= n), r0 - r * cos(x)];\n  }\n\n  project.invert = function(x, y) {\n    var r0y = r0 - y;\n    return [atan2(x, abs(r0y)) / n * sign(r0y), asin((c - (x * x + r0y * r0y) * n * n) / (2 * n))];\n  };\n\n  return project;\n}\n\nexport default function() {\n  return conicProjection(conicEqualAreaRaw)\n      .scale(155.424)\n      .center([0, 33.6442]);\n}\n","import {asin, cos, sin} from \"../math\";\n\nexport function cylindricalEqualAreaRaw(phi0) {\n  var cosPhi0 = cos(phi0);\n\n  function forward(lambda, phi) {\n    return [lambda * cosPhi0, sin(phi) / cosPhi0];\n  }\n\n  forward.invert = function(x, y) {\n    return [x / cosPhi0, asin(y * cosPhi0)];\n  };\n\n  return forward;\n}\n","import conicEqualArea from \"./conicEqualArea\";\n\nexport default function() {\n  return conicEqualArea()\n      .parallels([29.5, 45.5])\n      .scale(1070)\n      .translate([480, 250])\n      .rotate([96, 0])\n      .center([-0.6, 38.7]);\n}\n","import {epsilon} from \"../math\";\nimport albers from \"./albers\";\nimport conicEqualArea from \"./conicEqualArea\";\nimport {fitExtent, fitSize, fitWidth, fitHeight} from \"./fit\";\n\n// The projections must have mutually exclusive clip regions on the sphere,\n// as this will avoid emitting interleaving lines and polygons.\nfunction multiplex(streams) {\n  var n = streams.length;\n  return {\n    point: function(x, y) { var i = -1; while (++i < n) streams[i].point(x, y); },\n    sphere: function() { var i = -1; while (++i < n) streams[i].sphere(); },\n    lineStart: function() { var i = -1; while (++i < n) streams[i].lineStart(); },\n    lineEnd: function() { var i = -1; while (++i < n) streams[i].lineEnd(); },\n    polygonStart: function() { var i = -1; while (++i < n) streams[i].polygonStart(); },\n    polygonEnd: function() { var i = -1; while (++i < n) streams[i].polygonEnd(); }\n  };\n}\n\n// A composite projection for the United States, configured by default for\n// 960×500. The projection also works quite well at 960×600 if you change the\n// scale to 1285 and adjust the translate accordingly. The set of standard\n// parallels for each region comes from USGS, which is published here:\n// http://egsc.usgs.gov/isb/pubs/MapProjections/projections.html#albers\nexport default function() {\n  var cache,\n      cacheStream,\n      lower48 = albers(), lower48Point,\n      alaska = conicEqualArea().rotate([154, 0]).center([-2, 58.5]).parallels([55, 65]), alaskaPoint, // EPSG:3338\n      hawaii = conicEqualArea().rotate([157, 0]).center([-3, 19.9]).parallels([8, 18]), hawaiiPoint, // ESRI:102007\n      point, pointStream = {point: function(x, y) { point = [x, y]; }};\n\n  function albersUsa(coordinates) {\n    var x = coordinates[0], y = coordinates[1];\n    return point = null,\n        (lower48Point.point(x, y), point)\n        || (alaskaPoint.point(x, y), point)\n        || (hawaiiPoint.point(x, y), point);\n  }\n\n  albersUsa.invert = function(coordinates) {\n    var k = lower48.scale(),\n        t = lower48.translate(),\n        x = (coordinates[0] - t[0]) / k,\n        y = (coordinates[1] - t[1]) / k;\n    return (y >= 0.120 && y < 0.234 && x >= -0.425 && x < -0.214 ? alaska\n        : y >= 0.166 && y < 0.234 && x >= -0.214 && x < -0.115 ? hawaii\n        : lower48).invert(coordinates);\n  };\n\n  albersUsa.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = multiplex([lower48.stream(cacheStream = stream), alaska.stream(stream), hawaii.stream(stream)]);\n  };\n\n  albersUsa.precision = function(_) {\n    if (!arguments.length) return lower48.precision();\n    lower48.precision(_), alaska.precision(_), hawaii.precision(_);\n    return reset();\n  };\n\n  albersUsa.scale = function(_) {\n    if (!arguments.length) return lower48.scale();\n    lower48.scale(_), alaska.scale(_ * 0.35), hawaii.scale(_);\n    return albersUsa.translate(lower48.translate());\n  };\n\n  albersUsa.translate = function(_) {\n    if (!arguments.length) return lower48.translate();\n    var k = lower48.scale(), x = +_[0], y = +_[1];\n\n    lower48Point = lower48\n        .translate(_)\n        .clipExtent([[x - 0.455 * k, y - 0.238 * k], [x + 0.455 * k, y + 0.238 * k]])\n        .stream(pointStream);\n\n    alaskaPoint = alaska\n        .translate([x - 0.307 * k, y + 0.201 * k])\n        .clipExtent([[x - 0.425 * k + epsilon, y + 0.120 * k + epsilon], [x - 0.214 * k - epsilon, y + 0.234 * k - epsilon]])\n        .stream(pointStream);\n\n    hawaiiPoint = hawaii\n        .translate([x - 0.205 * k, y + 0.212 * k])\n        .clipExtent([[x - 0.214 * k + epsilon, y + 0.166 * k + epsilon], [x - 0.115 * k - epsilon, y + 0.234 * k - epsilon]])\n        .stream(pointStream);\n\n    return reset();\n  };\n\n  albersUsa.fitExtent = function(extent, object) {\n    return fitExtent(albersUsa, extent, object);\n  };\n\n  albersUsa.fitSize = function(size, object) {\n    return fitSize(albersUsa, size, object);\n  };\n\n  albersUsa.fitWidth = function(width, object) {\n    return fitWidth(albersUsa, width, object);\n  };\n\n  albersUsa.fitHeight = function(height, object) {\n    return fitHeight(albersUsa, height, object);\n  };\n\n  function reset() {\n    cache = cacheStream = null;\n    return albersUsa;\n  }\n\n  return albersUsa.scale(1070);\n}\n","import {asin, atan2, cos, sin, sqrt} from \"../math\";\n\nexport function azimuthalRaw(scale) {\n  return function(x, y) {\n    var cx = cos(x),\n        cy = cos(y),\n        k = scale(cx * cy);\n    return [\n      k * cy * sin(x),\n      k * sin(y)\n    ];\n  }\n}\n\nexport function azimuthalInvert(angle) {\n  return function(x, y) {\n    var z = sqrt(x * x + y * y),\n        c = angle(z),\n        sc = sin(c),\n        cc = cos(c);\n    return [\n      atan2(x * sc, z * cc),\n      asin(z && y * sc / z)\n    ];\n  }\n}\n","import {asin, sqrt} from \"../math\";\nimport {azimuthalRaw, azimuthalInvert} from \"./azimuthal\";\nimport projection from \"./index\";\n\nexport var azimuthalEqualAreaRaw = azimuthalRaw(function(cxcy) {\n  return sqrt(2 / (1 + cxcy));\n});\n\nazimuthalEqualAreaRaw.invert = azimuthalInvert(function(z) {\n  return 2 * asin(z / 2);\n});\n\nexport default function() {\n  return projection(azimuthalEqualAreaRaw)\n      .scale(124.75)\n      .clipAngle(180 - 1e-3);\n}\n","import {acos, sin} from \"../math\";\nimport {azimuthalRaw, azimuthalInvert} from \"./azimuthal\";\nimport projection from \"./index\";\n\nexport var azimuthalEquidistantRaw = azimuthalRaw(function(c) {\n  return (c = acos(c)) && c / sin(c);\n});\n\nazimuthalEquidistantRaw.invert = azimuthalInvert(function(z) {\n  return z;\n});\n\nexport default function() {\n  return projection(azimuthalEquidistantRaw)\n      .scale(79.4188)\n      .clipAngle(180 - 1e-3);\n}\n","import {atan, exp, halfPi, log, pi, tan, tau} from \"../math\";\nimport rotation from \"../rotation\";\nimport projection from \"./index\";\n\nexport function mercatorRaw(lambda, phi) {\n  return [lambda, log(tan((halfPi + phi) / 2))];\n}\n\nmercatorRaw.invert = function(x, y) {\n  return [x, 2 * atan(exp(y)) - halfPi];\n};\n\nexport default function() {\n  return mercatorProjection(mercatorRaw)\n      .scale(961 / tau);\n}\n\nexport function mercatorProjection(project) {\n  var m = projection(project),\n      center = m.center,\n      scale = m.scale,\n      translate = m.translate,\n      clipExtent = m.clipExtent,\n      x0 = null, y0, x1, y1; // clip extent\n\n  m.scale = function(_) {\n    return arguments.length ? (scale(_), reclip()) : scale();\n  };\n\n  m.translate = function(_) {\n    return arguments.length ? (translate(_), reclip()) : translate();\n  };\n\n  m.center = function(_) {\n    return arguments.length ? (center(_), reclip()) : center();\n  };\n\n  m.clipExtent = function(_) {\n    return arguments.length ? ((_ == null ? x0 = y0 = x1 = y1 = null : (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1])), reclip()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  function reclip() {\n    var k = pi * scale(),\n        t = m(rotation(m.rotate()).invert([0, 0]));\n    return clipExtent(x0 == null\n        ? [[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]] : project === mercatorRaw\n        ? [[Math.max(t[0] - k, x0), y0], [Math.min(t[0] + k, x1), y1]]\n        : [[x0, Math.max(t[1] - k, y0)], [x1, Math.min(t[1] + k, y1)]]);\n  }\n\n  return reclip();\n}\n","import {abs, atan, atan2, cos, epsilon, halfPi, log, pow, sign, sin, sqrt, tan} from \"../math\";\nimport {conicProjection} from \"./conic\";\nimport {mercatorRaw} from \"./mercator\";\n\nfunction tany(y) {\n  return tan((halfPi + y) / 2);\n}\n\nexport function conicConformalRaw(y0, y1) {\n  var cy0 = cos(y0),\n      n = y0 === y1 ? sin(y0) : log(cy0 / cos(y1)) / log(tany(y1) / tany(y0)),\n      f = cy0 * pow(tany(y0), n) / n;\n\n  if (!n) return mercatorRaw;\n\n  function project(x, y) {\n    if (f > 0) { if (y < -halfPi + epsilon) y = -halfPi + epsilon; }\n    else { if (y > halfPi - epsilon) y = halfPi - epsilon; }\n    var r = f / pow(tany(y), n);\n    return [r * sin(n * x), f - r * cos(n * x)];\n  }\n\n  project.invert = function(x, y) {\n    var fy = f - y, r = sign(n) * sqrt(x * x + fy * fy);\n    return [atan2(x, abs(fy)) / n * sign(fy), 2 * atan(pow(f / r, 1 / n)) - halfPi];\n  };\n\n  return project;\n}\n\nexport default function() {\n  return conicProjection(conicConformalRaw)\n      .scale(109.5)\n      .parallels([30, 30]);\n}\n","import projection from \"./index\";\n\nexport function equirectangularRaw(lambda, phi) {\n  return [lambda, phi];\n}\n\nequirectangularRaw.invert = equirectangularRaw;\n\nexport default function() {\n  return projection(equirectangularRaw)\n      .scale(152.63);\n}\n","import {abs, atan2, cos, epsilon, sign, sin, sqrt} from \"../math\";\nimport {conicProjection} from \"./conic\";\nimport {equirectangularRaw} from \"./equirectangular\";\n\nexport function conicEquidistantRaw(y0, y1) {\n  var cy0 = cos(y0),\n      n = y0 === y1 ? sin(y0) : (cy0 - cos(y1)) / (y1 - y0),\n      g = cy0 / n + y0;\n\n  if (abs(n) < epsilon) return equirectangularRaw;\n\n  function project(x, y) {\n    var gy = g - y, nx = n * x;\n    return [gy * sin(nx), g - gy * cos(nx)];\n  }\n\n  project.invert = function(x, y) {\n    var gy = g - y;\n    return [atan2(x, abs(gy)) / n * sign(gy), g - sign(n) * sqrt(x * x + gy * gy)];\n  };\n\n  return project;\n}\n\nexport default function() {\n  return conicProjection(conicEquidistantRaw)\n      .scale(131.154)\n      .center([0, 13.9389]);\n}\n","import {atan, cos, sin} from \"../math\";\nimport {azimuthalInvert} from \"./azimuthal\";\nimport projection from \"./index\";\n\nexport function gnomonicRaw(x, y) {\n  var cy = cos(y), k = cos(x) * cy;\n  return [cy * sin(x) / k, sin(y) / k];\n}\n\ngnomonicRaw.invert = azimuthalInvert(atan);\n\nexport default function() {\n  return projection(gnomonicRaw)\n      .scale(144.049)\n      .clipAngle(60);\n}\n","import clipRectangle from \"../clip/rectangle\";\nimport identity from \"../identity\";\nimport {transformer} from \"../transform\";\nimport {fitExtent, fitSize, fitWidth, fitHeight} from \"./fit\";\n\nfunction scaleTranslate(kx, ky, tx, ty) {\n  return kx === 1 && ky === 1 && tx === 0 && ty === 0 ? identity : transformer({\n    point: function(x, y) {\n      this.stream.point(x * kx + tx, y * ky + ty);\n    }\n  });\n}\n\nexport default function() {\n  var k = 1, tx = 0, ty = 0, sx = 1, sy = 1, transform = identity, // scale, translate and reflect\n      x0 = null, y0, x1, y1, // clip extent\n      postclip = identity,\n      cache,\n      cacheStream,\n      projection;\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return projection = {\n    stream: function(stream) {\n      return cache && cacheStream === stream ? cache : cache = transform(postclip(cacheStream = stream));\n    },\n    postclip: function(_) {\n      return arguments.length ? (postclip = _, x0 = y0 = x1 = y1 = null, reset()) : postclip;\n    },\n    clipExtent: function(_) {\n      return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity) : clipRectangle(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n    },\n    scale: function(_) {\n      return arguments.length ? (transform = scaleTranslate((k = +_) * sx, k * sy, tx, ty), reset()) : k;\n    },\n    translate: function(_) {\n      return arguments.length ? (transform = scaleTranslate(k * sx, k * sy, tx = +_[0], ty = +_[1]), reset()) : [tx, ty];\n    },\n    reflectX: function(_) {\n      return arguments.length ? (transform = scaleTranslate(k * (sx = _ ? -1 : 1), k * sy, tx, ty), reset()) : sx < 0;\n    },\n    reflectY: function(_) {\n      return arguments.length ? (transform = scaleTranslate(k * sx, k * (sy = _ ? -1 : 1), tx, ty), reset()) : sy < 0;\n    },\n    fitExtent: function(extent, object) {\n      return fitExtent(projection, extent, object);\n    },\n    fitSize: function(size, object) {\n      return fitSize(projection, size, object);\n    },\n    fitWidth: function(width, object) {\n      return fitWidth(projection, width, object);\n    },\n    fitHeight: function(height, object) {\n      return fitHeight(projection, height, object);\n    }\n  };\n}\n","import projection from \"./index\";\nimport {abs, epsilon} from \"../math\";\n\nexport function naturalEarth1Raw(lambda, phi) {\n  var phi2 = phi * phi, phi4 = phi2 * phi2;\n  return [\n    lambda * (0.8707 - 0.131979 * phi2 + phi4 * (-0.013791 + phi4 * (0.003971 * phi2 - 0.001529 * phi4))),\n    phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4)))\n  ];\n}\n\nnaturalEarth1Raw.invert = function(x, y) {\n  var phi = y, i = 25, delta;\n  do {\n    var phi2 = phi * phi, phi4 = phi2 * phi2;\n    phi -= delta = (phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4))) - y) /\n        (1.007226 + phi2 * (0.015085 * 3 + phi4 * (-0.044475 * 7 + 0.028874 * 9 * phi2 - 0.005916 * 11 * phi4)));\n  } while (abs(delta) > epsilon && --i > 0);\n  return [\n    x / (0.8707 + (phi2 = phi * phi) * (-0.131979 + phi2 * (-0.013791 + phi2 * phi2 * phi2 * (0.003971 - 0.001529 * phi2)))),\n    phi\n  ];\n};\n\nexport default function() {\n  return projection(naturalEarth1Raw)\n      .scale(175.295);\n}\n","import {asin, cos, epsilon, sin} from \"../math\";\nimport {azimuthalInvert} from \"./azimuthal\";\nimport projection from \"./index\";\n\nexport function orthographicRaw(x, y) {\n  return [cos(y) * sin(x), sin(y)];\n}\n\northographicRaw.invert = azimuthalInvert(asin);\n\nexport default function() {\n  return projection(orthographicRaw)\n      .scale(249.5)\n      .clipAngle(90 + epsilon);\n}\n","import {atan, cos, sin} from \"../math\";\nimport {azimuthalInvert} from \"./azimuthal\";\nimport projection from \"./index\";\n\nexport function stereographicRaw(x, y) {\n  var cy = cos(y), k = 1 + cos(x) * cy;\n  return [cy * sin(x) / k, sin(y) / k];\n}\n\nstereographicRaw.invert = azimuthalInvert(function(z) {\n  return 2 * atan(z);\n});\n\nexport default function() {\n  return projection(stereographicRaw)\n      .scale(250)\n      .clipAngle(142);\n}\n","import {atan, exp, halfPi, log, tan} from \"../math\";\nimport {mercatorProjection} from \"./mercator\";\n\nexport function transverseMercatorRaw(lambda, phi) {\n  return [log(tan((halfPi + phi) / 2)), -lambda];\n}\n\ntransverseMercatorRaw.invert = function(x, y) {\n  return [-y, 2 * atan(exp(x)) - halfPi];\n};\n\nexport default function() {\n  var m = mercatorProjection(transverseMercatorRaw),\n      center = m.center,\n      rotate = m.rotate;\n\n  m.center = function(_) {\n    return arguments.length ? center([-_[1], _[0]]) : (_ = center(), [_[1], -_[0]]);\n  };\n\n  m.rotate = function(_) {\n    return arguments.length ? rotate([_[0], _[1], _.length > 2 ? _[2] + 90 : 90]) : (_ = rotate(), [_[0], _[1], _[2] - 90]);\n  };\n\n  return rotate([0, 0, 90])\n      .scale(159.155);\n}\n","const matchHtmlRegExp = /[\"'&<>]/;\n\n/**\n * Escape special characters in the given string of html.\n *\n * @param  {string} string The string to escape for inserting into HTML\n * @return {string}\n * @public\n */\n\nexport function escapeHtml(string) {\n  var str = '' + string;\n  var match = matchHtmlRegExp.exec(str);\n\n  if (!match) {\n    return str;\n  }\n\n  var escape;\n  var html = '';\n  var index = 0;\n  var lastIndex = 0;\n\n  for (index = match.index; index < str.length; index++) {\n    switch (str.charCodeAt(index)) {\n      case 34: // \"\n        escape = '&quot;';\n        break;\n      case 38: // &\n        escape = '&amp;';\n        break;\n      case 39: // '\n        escape = '&#39;';\n        break;\n      case 60: // <\n        escape = '&lt;';\n        break;\n      case 62: // >\n        escape = '&gt;';\n        break;\n      default:\n        continue;\n    }\n\n    if (lastIndex !== index) {\n      html += str.substring(lastIndex, index);\n    }\n\n    lastIndex = index + 1;\n    html += escape;\n  }\n\n  return lastIndex !== index\n    ? html + str.substring(lastIndex, index)\n    : html;\n}\n","export function extend(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    for (var prop in arguments[i]){\n      target[prop] = arguments[i][prop];\n    }\n  }\n  return target;\n}\n","export function testObject(input) {\n  if (input !== null && typeof input.getTime === 'function' && !isNaN(input.getTime())) {\n    return true;\n  }\n  return false;\n}\n\nexport function testString(input) {\n  const ISO_8601 = /^\\d{4}-\\d\\d-\\d\\dT\\d\\d:\\d\\d:\\d\\d(\\.\\d+)?(([+-]\\d\\d:\\d\\d)|Z)?$/i;\n  return ISO_8601.test(input);\n}\n\nexport default function (input) {\n  if (typeof input === 'object') {\n    return testObject(input);\n  } else if (typeof input === 'string') {\n    return testString(input);\n  }\n  return false;\n}\n","export default function (len) {\n  const list = [];\n  for (let i = 0; i < len; i++) {\n    list.push(null);\n  }\n  return list;\n}\n","import createNullList from '../utils/create-null-list';\nimport { each } from '../../utils/each';\n\nexport function appendColumn(str, input) {\n  const self = this;\n  const args = Array.prototype.slice.call(arguments, 2);\n  const label = (str !== undefined) ? str : null;\n\n  if (typeof input === 'function') {\n    self.matrix[0].push(label);\n    each(self.matrix, function(row, i) {\n      let cell;\n      if (i > 0) {\n        cell = input.call(self, row, i);\n        if (typeof cell === 'undefined') {\n          cell = null;\n        }\n        self.matrix[i].push(cell);\n      }\n    });\n  }\n\n  else if (!input || input instanceof Array) {\n    input = input || [];\n\n    if (input.length <= self.matrix.length - 1) {\n      input = input.concat(createNullList(self.matrix.length - 1 - input.length));\n    }\n    else {\n      // If this new column is longer than existing columns,\n      // we need to update the rest to match ...\n      each(input, function(value, i){\n        if (self.matrix.length -1 < input.length) {\n          appendRow.call(self, String(self.matrix.length));\n        }\n      });\n    }\n\n    self.matrix[0].push(label);\n    each(input, function(value, i){\n      self.matrix[i+1][self.matrix[0].length-1] = value;\n    });\n\n  }\n\n  return self;\n}\n\nexport function appendRow(str, input) {\n  const self = this;\n  const args = Array.prototype.slice.call(arguments, 2);\n  const label = (str !== undefined) ? str : null;\n  const newRow = [];\n\n  newRow.push(label);\n\n  if (typeof input === 'function') {\n    each(self.matrix[0], function(label, i){\n      let col;\n      let cell;\n      if (i > 0) {\n        col = self.selectColumn(i);\n        cell = input.call(self, col, i);\n        if (typeof cell === 'undefined') {\n          cell = null;\n        }\n        newRow.push(cell);\n      }\n    });\n    self.matrix.push(newRow);\n  }\n\n  else if (!input || input instanceof Array) {\n    input = input || [];\n\n    if (input.length <= self.matrix[0].length - 1) {\n      input = input.concat( createNullList( self.matrix[0].length - 1 - input.length ) );\n    }\n    else {\n      each(input, function(value, i){\n        if (self.matrix[0].length -1 < input.length) {\n          appendColumn.call(self, String( self.matrix[0].length));\n        }\n      });\n    }\n\n    self.matrix.push(newRow.concat(input));\n  }\n\n  return self;\n}\n","export var name = \"d3\";\nexport var version = \"5.4.0\";\nexport var description = \"Data-Driven Documents\";\nexport var keywords = [\"dom\",\"visualization\",\"svg\",\"animation\",\"canvas\"];\nexport var homepage = \"https://d3js.org\";\nexport var license = \"BSD-3-Clause\";\nexport var author = {\"name\":\"Mike Bostock\",\"url\":\"https://bost.ocks.org/mike\"};\nexport var main = \"dist/d3.node.js\";\nexport var unpkg = \"dist/d3.min.js\";\nexport var jsdelivr = \"dist/d3.min.js\";\nexport var module = \"index\";\nexport var repository = {\"type\":\"git\",\"url\":\"https://github.com/d3/d3.git\"};\nexport var scripts = {\"pretest\":\"rimraf dist && mkdir dist && json2module package.json > dist/package.js && node rollup.node\",\"test\":\"tape 'test/**/*-test.js'\",\"prepublishOnly\":\"npm run test && rollup -c --banner \\\"$(preamble)\\\" && uglifyjs -b beautify=false,preamble=\\\"'$(preamble)'\\\" dist/d3.js -c negate_iife=false -m -o dist/d3.min.js\",\"postpublish\":\"git push && git push --tags && cd ../d3.github.com && git pull && cp ../d3/dist/d3.js d3.v5.js && cp ../d3/dist/d3.min.js d3.v5.min.js && git add d3.v5.js d3.v5.min.js && git commit -m \\\"d3 ${npm_package_version}\\\" && git push && cd - && cd ../d3-bower && git pull && cp ../d3/LICENSE ../d3/README.md ../d3/dist/d3.js ../d3/dist/d3.min.js . && git add -- LICENSE README.md d3.js d3.min.js && git commit -m \\\"${npm_package_version}\\\" && git tag -am \\\"${npm_package_version}\\\" v${npm_package_version} && git push && git push --tags && cd - && zip -j dist/d3.zip -- LICENSE README.md API.md CHANGES.md dist/d3.js dist/d3.min.js\"};\nexport var devDependencies = {\"json2module\":\"0.0\",\"package-preamble\":\"0.1\",\"rimraf\":\"2\",\"rollup\":\"0.57\",\"rollup-plugin-ascii\":\"0.0\",\"rollup-plugin-node-resolve\":\"3\",\"tape\":\"4\",\"uglify-js\":\"3.2\"};\nexport var dependencies = {\"d3-array\":\"1\",\"d3-axis\":\"1\",\"d3-brush\":\"1\",\"d3-chord\":\"1\",\"d3-collection\":\"1\",\"d3-color\":\"1\",\"d3-contour\":\"1\",\"d3-dispatch\":\"1\",\"d3-drag\":\"1\",\"d3-dsv\":\"1\",\"d3-ease\":\"1\",\"d3-fetch\":\"1\",\"d3-force\":\"1\",\"d3-format\":\"1\",\"d3-geo\":\"1\",\"d3-hierarchy\":\"1\",\"d3-interpolate\":\"1\",\"d3-path\":\"1\",\"d3-polygon\":\"1\",\"d3-quadtree\":\"1\",\"d3-random\":\"1\",\"d3-scale\":\"2\",\"d3-scale-chromatic\":\"1\",\"d3-selection\":\"1\",\"d3-shape\":\"1\",\"d3-time\":\"1\",\"d3-time-format\":\"2\",\"d3-timer\":\"1\",\"d3-transition\":\"1\",\"d3-voronoi\":\"1\",\"d3-zoom\":\"1\"};\n","/**\n * Strip html tags from string\n *\n * @param  {string} string The string to strip\n * @return {string}\n * @public\n */\n\nexport function stripHtmlTags(inputString) {\n  return inputString.replace(/(<([^>]+)>)/ig, '');\n}\n","import { each } from '../../utils/each';\nimport { extend } from '../../utils/extend';\n\nfunction average(arr, start, end){\n  var set = arr.slice(start||0, (end ? end+1 : arr.length)),\n      sum = 0,\n      avg = null;\n\n  // Add numeric values\n  each(set, function(val, i){\n    if (typeof val === 'number' && !isNaN(parseFloat(val))) {\n      sum += parseFloat(val);\n    }\n  });\n  return sum / set.length;\n}\n\nfunction maximum(arr, start, end){\n  var set = arr.slice(start||0, (end ? end+1 : arr.length)),\n      nums = [];\n\n  // Pull numeric values\n  each(set, function(val, i){\n    if (typeof val === 'number' && !isNaN(parseFloat(val))) {\n      nums.push(parseFloat(val));\n    }\n  });\n  return Math.max.apply(Math, nums);\n}\n\nfunction minimum(arr, start, end){\n  var set = arr.slice(start||0, (end ? end+1 : arr.length)),\n      nums = [];\n\n  // Pull numeric values\n  each(set, function(val, i){\n    if (typeof val === 'number' && !isNaN(parseFloat(val))) {\n      nums.push(parseFloat(val));\n    }\n  });\n  return Math.min.apply(Math, nums);\n}\n\nfunction sum(arr, start, end){\n  // Copy set with given range\n  var set = arr.slice(start||0, (end ? end+1 : arr.length)),\n      sum = 0;\n\n  // Add numeric values\n  each(set, function(val, i){\n    if (typeof val === 'number' && !isNaN(parseFloat(val))) {\n      sum += parseFloat(val);\n    }\n  });\n  return sum;\n}\n\nconst getColumnAverage = function (arr) {\n  return average(arr, 1);\n};\nconst getRowAverage = getColumnAverage;\n\nconst getColumnSum = function (arr) {\n  return sum(arr, 1);\n};\nconst getRowSum = getColumnSum;\n\nconst getColumnMaximum = function (arr) {\n  return maximum(arr, 1);\n};\nconst getRowMaximum = getColumnMaximum;\n\nconst getColumnMinimum = function (arr) {\n  return minimum(arr, 1);\n};\nconst getRowMinimum = getColumnMinimum;\n\nconst getColumnLabel = function (arr) {\n  return arr[0];\n};\nconst getRowIndex = getColumnLabel;\n\nexport default {\n  average,\n  maximum,\n  minimum,\n  sum,\n  getColumnAverage,\n  getRowAverage,\n  getColumnSum,\n  getRowSum,\n  getColumnMaximum,\n  getRowMaximum,\n  getColumnMinimum,\n  getRowMinimum,\n  getColumnLabel,\n  getRowIndex,\n};\n","// Modifiers\nimport * as append from './modifiers/append';\nimport * as del from './modifiers/delete';\nimport * as filter from './modifiers/filter';\nimport * as insert from './modifiers/insert';\nimport * as select from './modifiers/select';\nimport * as sort from './modifiers/sort';\nimport * as update from './modifiers/update';\n\n// Utils\nimport analyses from './utils/analyses';\nimport { extend } from '../utils/extend';\nimport parsers from './utils/parsers';\n\nexport const Dataset = function () {\n  if (this instanceof Dataset === false) {\n    return new Dataset();\n  }\n\n  this.matrix = [\n    ['Index']\n  ];\n  this.meta = {\n    type: undefined\n  };\n}\n\nDataset.prototype.data = function (arr) {\n  if (!arguments.length) return this.matrix;\n  this.matrix = (arr instanceof Array ? arr : null);\n  return this;\n};\n\nDataset.prototype.set = function (coords, value) {\n  if (arguments.length < 2 || coords.length < 2) {\n    throw Error('Incorrect arguments provided for #set method');\n  }\n\n  var colIndex = 'number' === typeof coords[0] ? coords[0] : this.matrix[0].indexOf(coords[0]),\n      rowIndex = 'number' === typeof coords[1] ? coords[1] : select.selectColumn.call(this, 0).indexOf(coords[1]);\n\n  var colResult = select.selectColumn.call(this, coords[0]),\n      rowResult = select.selectRow.call(this, coords[1]);\n\n  // Column doesn't exist, create and reset colIndex\n  if (colResult.length < 1) {\n    append.appendColumn.call(this, String(coords[0]));\n    colIndex = this.matrix[0].length - 1;\n  }\n\n  // Row doesn't exist, create and reset rowIndex\n  if (rowResult.length < 1) {\n    append.appendRow.call(this, String(coords[1]));\n    rowIndex = this.matrix.length - 1;\n  }\n\n  // Set provided value\n  this.matrix[ rowIndex ][ colIndex ] = value;\n  return this;\n};\n\nDataset.prototype.type = function(str){\n  if (!arguments.length) return this.meta['type'];\n  this.meta['type'] = (str ? String(str) : undefined);\n  return this;\n};\n\nextend(Dataset.prototype, append);\nextend(Dataset.prototype, del);\nextend(Dataset.prototype, filter);\nextend(Dataset.prototype, insert);\nextend(Dataset.prototype, select);\nextend(Dataset.prototype, sort);\nextend(Dataset.prototype, update);\nextend(Dataset.prototype, analyses);\nDataset.parser = parsers(Dataset);\n\nexport default Dataset;\n","export var name = \"d3\";\nexport var version = \"5.4.0\";\nexport var description = \"Data-Driven Documents\";\nexport var keywords = [\"dom\",\"visualization\",\"svg\",\"animation\",\"canvas\"];\nexport var homepage = \"https://d3js.org\";\nexport var license = \"BSD-3-Clause\";\nexport var author = {\"name\":\"Mike Bostock\",\"url\":\"https://bost.ocks.org/mike\"};\nexport var main = \"dist/d3.node.js\";\nexport var unpkg = \"dist/d3.min.js\";\nexport var jsdelivr = \"dist/d3.min.js\";\nexport var module = \"index\";\nexport var repository = {\"type\":\"git\",\"url\":\"https://github.com/d3/d3.git\"};\nexport var scripts = {\"pretest\":\"rimraf dist && mkdir dist && json2module package.json > dist/package.js && node rollup.node\",\"test\":\"tape 'test/**/*-test.js'\",\"prepublishOnly\":\"npm run test && rollup -c --banner \\\"$(preamble)\\\" && uglifyjs -b beautify=false,preamble=\\\"'$(preamble)'\\\" dist/d3.js -c negate_iife=false -m -o dist/d3.min.js\",\"postpublish\":\"git push && git push --tags && cd ../d3.github.com && git pull && cp ../d3/dist/d3.js d3.v5.js && cp ../d3/dist/d3.min.js d3.v5.min.js && git add d3.v5.js d3.v5.min.js && git commit -m \\\"d3 ${npm_package_version}\\\" && git push && cd - && cd ../d3-bower && git pull && cp ../d3/LICENSE ../d3/README.md ../d3/dist/d3.js ../d3/dist/d3.min.js . && git add -- LICENSE README.md d3.js d3.min.js && git commit -m \\\"${npm_package_version}\\\" && git tag -am \\\"${npm_package_version}\\\" v${npm_package_version} && git push && git push --tags && cd - && zip -j dist/d3.zip -- LICENSE README.md API.md CHANGES.md dist/d3.js dist/d3.min.js\"};\nexport var devDependencies = {\"json2module\":\"0.0\",\"package-preamble\":\"0.1\",\"rimraf\":\"2\",\"rollup\":\"0.57\",\"rollup-plugin-ascii\":\"0.0\",\"rollup-plugin-node-resolve\":\"3\",\"tape\":\"4\",\"uglify-js\":\"3.2\"};\nexport var dependencies = {\"d3-array\":\"1\",\"d3-axis\":\"1\",\"d3-brush\":\"1\",\"d3-chord\":\"1\",\"d3-collection\":\"1\",\"d3-color\":\"1\",\"d3-contour\":\"1\",\"d3-dispatch\":\"1\",\"d3-drag\":\"1\",\"d3-dsv\":\"1\",\"d3-ease\":\"1\",\"d3-fetch\":\"1\",\"d3-force\":\"1\",\"d3-format\":\"1\",\"d3-geo\":\"1\",\"d3-hierarchy\":\"1\",\"d3-interpolate\":\"1\",\"d3-path\":\"1\",\"d3-polygon\":\"1\",\"d3-quadtree\":\"1\",\"d3-random\":\"1\",\"d3-scale\":\"2\",\"d3-scale-chromatic\":\"1\",\"d3-selection\":\"1\",\"d3-shape\":\"1\",\"d3-time\":\"1\",\"d3-time-format\":\"2\",\"d3-timer\":\"1\",\"d3-transition\":\"1\",\"d3-voronoi\":\"1\",\"d3-zoom\":\"1\"};\n","export default {\n  render: function(){\n    var html = '',\n        artifacts = this.view._artifacts.spinner = {},\n        height = this.height() || 35,\n        offsetPadding = (height - 35) / 2,\n        prefixes = ['webkit', 'Moz', 'ms', 'O'],\n        radius = this.view._artifacts.radius = 0,\n        spinner;\n\n    // Build DOM element\n    html += '<div class=\"' + this.theme() + '\">';\n    html +=   '<div class=\"keen-spinner-container\" style=\"height: ' + height + 'px; padding-top: ' + offsetPadding + 'px;\">';\n    html +=     '<div class=\"keen-spinner-indicator\"></div>';\n    html +=   '</div>';\n    html += '</div>';\n    this.el().innerHTML = html;\n\n    spinner = this.el().querySelector('.keen-spinner-indicator');\n    if (spinner.style.animationName === undefined) {\n      radius = 0;\n      artifacts.interval = setInterval(function(){\n        radius = (radius === 350) ? 0 : radius + 10;\n        for (var i = 0; i < prefixes.length; i++) {\n          spinner.style[prefixes[i]] = 'rotate(' + artifacts.radius + 'deg)';\n        }\n      }, 15);\n    }\n  },\n  update: function(){\n    // no special update handling\n    this.render();\n  },\n  destroy: function(){\n    if (this.view._artifacts.spinner) {\n      if (this.view._artifacts.spinner.interval) {\n        clearInterval(this.view._artifacts.spinner.interval);\n      }\n      this.view._artifacts.spinner.radius = 0;\n      try {\n        delete this.view._artifacts.spinner;\n      }\n      catch (e) {\n        this.view._artifacts.spinner = undefined;\n      }\n    }\n    this.el().innerHTML = '';\n  }\n};\n","import { each } from '../../utils/each';\n\nconst defaults = {\n  height: undefined,\n  width: undefined,\n  stickyHeader: true,\n  stickyFooter: false\n};\n\nfunction _generateTableRows(dataset, colWidths, colAligns) {\n  var html = '';\n  for (var i = 0; i < dataset.length; i++) {\n    if (i > 0) {\n      html +=   '<tr>';\n      for (var j = 0; j < dataset[i].length; j++) {\n        html +=   '<td style=\"min-width: '+ (10 * colWidths[j]) +'px; text-align: ' + colAligns[j] + ';\">' + dataset[i][j] + '</td>';\n      }\n      html +=   '</tr>';\n    }\n  }\n  return html;\n}\n\nexport default {\n  render: function(){\n    var dataset = this.data(),\n        el = this.el(),\n        height = (this.height() || defaults.height) - this.el().offsetHeight,\n        theme = this.theme(),\n        width = this.width() || defaults.width;\n\n    var html = '',\n        colAligns = new Array(dataset[0].length),\n        colWidths = new Array(dataset[0].length),\n        fixedHeader;\n\n    var isEmpty = dataset.length === 1 && dataset[0].length === 0;\n    if (isEmpty) {\n      this.message('No data to display');\n      return;\n    }\n\n    // Calculate max column widths\n    each(dataset, function(row){\n      each(row, function(cell, i){\n        if (!colWidths[i]) {\n          colWidths[i] = 0;\n        }\n        colAligns[i] = (typeof cell === 'number') ? 'right' : 'left';\n        colWidths[i] = (String(cell).length > colWidths[i]) ? String(cell).length : colWidths[i];\n      });\n    });\n\n    // Open wrapper\n    html += '<div class=\"' + theme + '-table\" style=\"height: '+(height ? height+'px' : 'auto')+'; width: '+(width ? width+'px' : 'auto')+';\">';\n\n    // Static, scrollable table\n    html +=   '<table class=\"' + theme + '-table-dataset\">';\n    html +=     '<thead>';\n    html +=       '<tr>';\n    for (var i = 0; i < dataset[0].length; i++) {\n      html +=       '<th style=\"width: '+ (10 * colWidths[i]) +'px; text-align: ' + colAligns[i] + ';\">' + dataset[0][i] + '</th>';\n    }\n    html +=       '</tr>';\n    html +=     '</thead>';\n    // Table data\n    html +=     '<tbody>';\n    html +=     _generateTableRows.bind(this, dataset, colWidths, colAligns)();\n    html +=     '</tbody>';\n    html +=   '</table>';\n\n    // Fixed table (header)\n    html +=   '<table class=\"' + theme + '-table-fixed-header\">';\n    html +=     '<thead>';\n    html +=       '<tr>';\n    for (var i = 0; i < dataset[0].length; i++) {\n      html +=       '<th style=\"min-width: '+ (10 * colWidths[i]) +'px; text-align: ' + colAligns[i] + ';\">' + dataset[0][i] + '</th>';\n    }\n    html +=       '</tr>';\n    html +=     '</thead>';\n    html +=   '</table>';\n\n    // Close wrapper\n    html += '</div>';\n\n    // Inject HTML string\n    el.querySelector('.' + theme + '-rendering').innerHTML = html;\n\n    fixedHeader = el.querySelector('.' + theme + '-table-fixed-header');\n    el.querySelector('.' + theme + '-table').onscroll = function(e){\n      fixedHeader.style.top = e.target.scrollTop + 'px';\n    };\n  },\n  update: function(){\n    // no special update handling\n    this.render();\n  },\n  destroy: function(){\n    var el = this.el().querySelector('.' + this.theme() + '-table')\n    if (el && el.onscroll) {\n      el.onscroll = undefined;\n    }\n  }\n};\n","export function prettyNumber(input) {\n  // If it has 3 or fewer sig figs already, just return the number.\n  var input = Number(input),\n      sciNo = input.toPrecision(3),\n      prefix = '',\n      suffixes = ['', 'k', 'M', 'B', 'T'];\n\n  if (Number(sciNo) == input && String(input).length <= 4) {\n    return String(input);\n  }\n\n  if (Math.abs(input) >= 1000000000000000) {\n    return sciNo;\n  }\n\n  if (input >= 1 || input <= -1) {\n    if (input < 0){\n      //Pull off the negative side and stash that.\n      input = -input;\n      prefix = '-';\n    }\n    return prefix + recurse(input, 0);\n  }\n  else {\n    return input.toPrecision(3);\n  }\n\n  function recurse(input, iteration) {\n    var input = String(input);\n    var split = input.split('.');\n    // If there's a dot\n    if (split.length > 1) {\n      // Keep the left hand side only\n      input = split[0];\n      var rhs = split[1];\n      // If the left-hand side is too short, pad until it has 3 digits\n      if (input.length == 2 && rhs.length > 0) {\n        // Pad with right-hand side if possible\n        if (rhs.length > 0) {\n          input = input + '.' + rhs.charAt(0);\n        }\n        // Pad with zeroes if you must\n        else {\n          input += '0';\n        }\n      }\n      else if (input.length == 1 && rhs.length > 0) {\n        input = input + '.' + rhs.charAt(0);\n        // Pad with right-hand side if possible\n        if (rhs.length > 1) {\n          input += rhs.charAt(1);\n        }\n        // Pad with zeroes if you must\n        else {\n          input += '0';\n        }\n      }\n    }\n    var numNumerals = input.length;\n    // if it has a period, then numNumerals is 1 smaller than the string length:\n    if (input.split('.').length > 1) {\n      numNumerals--;\n    }\n    if (numNumerals <= 3) {\n      return String(input) + suffixes[iteration];\n    }\n    else {\n      return recurse(Number(input) / 1000, iteration + 1);\n    }\n  }\n}\n","import { prettyNumber } from '../../utils/pretty-number';\nimport { escapeHtml } from '../../utils/escape-html';\n\nexport default {\n  render: function(){\n    var color = this.colors()[0],\n        theme = this.theme(),\n        title = this.title(),\n        value = '-',\n        height = this.height() || 140,\n        width = this.width(),\n        opts = this.chartOptions(),\n        html = '',\n        prefix = '',\n        suffix = '',\n        formattedNum,\n        valueEl;\n\n    if (typeof this.data()[1][1] === 'number') {\n      value = this.data()[1][1];\n    }\n\n    formattedNum = value;\n    if ( (typeof opts['prettyNumber'] === 'undefined' || opts['prettyNumber'] === true)\n      && !isNaN(parseInt(value)) ) {\n        formattedNum = prettyNumber(value);\n    }\n\n    if (opts['prefix']) {\n      prefix = '<span class=\"' + theme + '-metric-prefix\">' + opts['prefix'] + '</span>';\n    }\n    if (opts['suffix']) {\n      suffix = '<span class=\"' + theme + '-metric-suffix\">' + opts['suffix'] + '</span>';\n    }\n\n    html += '<div class=\"' + theme + '\">';\n    html +=   '<div class=\"' + theme + '-metric\" style=\"background-color: ' + color + '; width: ' + (width ? width + 'px' : 'auto') + ';\" title=\"' + escapeHtml(value) + '\">';\n    html +=     '<span class=\"' + theme + '-metric-value\">' + prefix + escapeHtml(formattedNum) + suffix + '</span>';\n    if (title) {\n      html +=   '<span class=\"' + theme + '-metric-title\">' + escapeHtml(title) + '</span>';\n    }\n    html +=   '</div>';\n    html += '</div>';\n\n    this.el().innerHTML = html;\n    valueEl = this.el().querySelector('.' + theme + '-metric-value');\n    valueEl.style.paddingTop = ((height - this.el().offsetHeight) / 2) + 'px';\n    this.el().querySelector('.' + theme + '-metric').style.height = height + 'px';\n  },\n  update: function(){\n    // no special update handling\n    this.render();\n  },\n  destroy: function(){\n    // no special clean-up\n  }\n};\n","import { escapeHtml } from '../../utils/escape-html';\n\nexport default {\n  render: function(text){\n    var outer = document.createElement('div');\n    var inner = document.createElement('div');\n    var msg = document.createElement('span');\n    var height = this.height() || 140;\n\n    var titleContainer = document.createElement('div');\n    var notesContainer = document.createElement('div');\n\n    outer.className = this.theme();\n    inner.className = this.theme() + '-message';\n    inner.style.width = this.width() + 'px';\n\n    // Create title and notes for message\n    titleContainer.className = this.theme() + '-title';\n    titleContainer.innerHTML = escapeHtml(this.title() || '');\n    notesContainer.className = this.theme() + '-notes';\n    notesContainer.innerHTML = escapeHtml(this.notes() || '');\n\n    msg.innerHTML = escapeHtml(text) || '';\n    inner.appendChild(msg);\n    outer.appendChild(titleContainer);\n    outer.appendChild(inner);\n    outer.appendChild(notesContainer);\n\n    this.el().innerHTML = '';\n    this.el().appendChild(outer);\n\n    var actualInnerHeight = height - titleContainer.offsetHeight - notesContainer.offsetHeight;\n    inner.style.height = actualInnerHeight + 'px';\n    inner.style.paddingTop = (actualInnerHeight / 2 - 12) + 'px';\n  },\n  update: function(){\n    // no special update handling\n    this.render();\n  },\n  destroy: function(){\n    // no special clean-up\n  }\n};\n","import { escapeHtml } from '../../../utils/escape-html';\n\nexport default function (d, defaultTitleFormat, defaultValueFormat, color) {\n  var bgcolor,\n      name,\n      nameFormat,\n      text,\n      title,\n      titleFormat,\n      value,\n      valueFormat;\n\n  // Set config options or defaults\n  nameFormat = this.config.tooltip_format_name || function (name) { return name; };\n  titleFormat = this.config.tooltip_format_title || defaultTitleFormat;\n  valueFormat = this.config.tooltip_format_value || defaultValueFormat;\n\n  // Reverse list to match legend\n  for (var i = 0; i < d.length; i++) {\n    if (! (d[i] && (d[i].value || d[i].value === 0))) { continue; }\n    if (! text) {\n      title = titleFormat ? titleFormat(d[i].x) : d[i].x;\n      text = \"<table class='\" + this.CLASS.tooltip + \"'>\" + (title || title === 0 ? \"<tr><th colspan='2'>\" + escapeHtml(title) + \"</th></tr>\" : \"\");\n    }\n    name = nameFormat(d[i].name);\n    value = valueFormat(d[i].value, d[i].ratio, d[i].id, d[i].index);\n    bgcolor = this.levelColor ? this.levelColor(d[i].value) : color(d[i].id);\n    if (value) {\n      text += \"<tr class='\" + this.CLASS.tooltipName + \"-\" + d[i].id + \"'>\";\n      text +=   \"<td class='name'><span style='background-color:\" + bgcolor + \"'></span>\" + escapeHtml(name) + \"</td>\";\n      text +=   \"<td class='value'>\" + escapeHtml(value) + \"</td>\";\n      text += \"</tr>\";\n    }\n  }\n  return text + \"</table>\";\n}\n","import d3 from 'd3';\n\nimport isDateString from '../../../utils/assert-date-string';\n\nexport default function (cols) {\n  var self = this,\n      chart = this.view._artifacts.c3,\n      columns = [],\n      domNode = this.el().querySelector('.' + this.theme() + '-rendering'),\n      legendWidth = 120;\n\n  var pagination = this.view._artifacts.pagination = {\n    hidden: [],\n    labels: [],\n    position: 0,\n    range: Math.round((domNode.offsetHeight - 78) / 20),\n    total: 0\n  };\n\n  // Reduce threshold for donut/pie charts\n  if (this.type() === 'donut' || this.type() === 'pie') {\n    pagination.range = pagination.range >= 5 ? 5 : pagination.range;\n  }\n\n  for (var i = 0; i < cols.length; i++) {\n    if (cols[i][0] !== 'x' && !isDateString(cols[i][1])) {\n      columns.push(cols[i][0]);\n    }\n  }\n\n  var legendEl = d3.select(domNode)\n    .append('svg')\n    .attr({\n      'class': 'keen-c3-legend',\n      'height': domNode.offsetHeight - 10,\n      'width': legendWidth\n    })\n    .style({\n      'right': -legendWidth + 'px',\n      'top': '10px'\n    });\n\n  var legendItems = legendEl\n    .append('g')\n    .attr('class', 'keen-c3-legend-items');\n\n  var paginateElOffset = 20 * pagination.range;\n  var paginateEl = legendEl\n    .append('g')\n    .attr({\n      'class': 'keen-c3-legend-pagination',\n      'transform': function(){\n        return 'translate(2, ' + paginateElOffset + ')'\n      }\n    });\n\n  paginateData();\n\n  function paginateData(){\n    pagination.labels = columns.slice(pagination.position, pagination.position + pagination.range);\n    pagination.total = columns.length;\n    renderLegendComponent.call(self, pagination.labels);\n    if (pagination.total > pagination.range) {\n      renderPaginationComponent.call(self);\n    }\n    chart.resize();\n  }\n\n  function renderLegendComponent(){\n    legendItems\n      .selectAll('g')\n      .remove();\n\n    var legendItemList = legendItems\n      .selectAll('g')\n      .data(pagination.labels);\n\n    legendItemList.enter()\n        .append('g')\n        .attr('transform', function(id, i){\n          return 'translate(0, ' + (20 * i) + ')'\n        })\n      .attr('data-id', function (id) { return id; })\n      .style('opacity', function(id){\n        var isHidden = pagination.hidden.indexOf(id);\n        return isHidden < 0 ? 1 : .35;\n      })\n      .each(function (id) {\n        d3.select(this)\n          .append('text')\n          .attr({\n            'font-size': 12,\n            'pointer-events': 'none',\n            'x': 15,\n            'y': 9\n          })\n          .text(id)\n          .text(function(id){\n            if (d3.select(this).node().getBBox().width > 105) {\n              return id.length <= 15 ? id : id.substring(0, 12) + '...';\n            }\n            else {\n              return id;\n            }\n          });\n        d3.select(this)\n          .append('rect')\n          .attr({\n            'height': 14,\n            'width': 110,\n            'x': 0,\n            'y': 0\n          })\n          .style({\n            'cursor': 'pointer',\n            'fill-opacity': 0\n          });\n        d3.select(this)\n          .append('rect')\n          .attr({\n            'fill': chart.color(id),\n            'height': 10,\n            'pointer-events': 'none',\n            'rx': 5,\n            'ry': 5,\n            'width': 10,\n            'x': 0,\n            'y': 0\n          });\n      })\n      .on('mouseover', function (id, i) {\n          chart.focus(id);\n          // show a tooltip overlay w/ full value\n          if (id.length > 15) {\n            d3.select(domNode)\n              .append('div')\n              .attr('class', 'keen-c3-legend-label-overlay')\n              .style({\n                'max-width': '75%',\n                'right': -legendWidth + 'px',\n                'top': (5 + (i+1) * 20) + 'px'\n              })\n              .html(id)\n              .append('div')\n                .attr('class', 'keen-c3-legend-label-overlay-pointer');\n          }\n      })\n      .on('mouseout', function (id) {\n        chart.revert();\n        // clear out the tooltip overlay\n        d3.select(self.el().querySelector('.' + self.theme() + '-rendering .keen-c3-legend-label-overlay'))\n          .remove();\n      })\n      .on('click', function (id) {\n        d3.select(this).style('opacity', function(){\n          var isHidden = pagination.hidden.indexOf(id);\n          if (isHidden < 0) {\n            pagination.hidden.push(id);\n            return .35;\n          }\n          else {\n            pagination.hidden.splice(isHidden, 1);\n            return 1;\n          }\n        });\n        chart.toggle(id);\n      });\n\n    legendItemList.exit().remove();\n  }\n\n  function renderPaginationComponent(){\n    paginateEl\n      .selectAll('g')\n      .remove();\n\n    paginateEl\n        .selectAll('g')\n        .data([\n          { direction: 'reverse', path_d: 'M0 10 L10 0 L20 10 Z' },\n          { direction: 'forward', path_d: 'M0 0 L10 10 L20 0 Z' }\n        ])\n        .enter()\n        .append('g')\n        .attr('transform', function(id, i){\n          return 'translate(' + (i * 20) + ', 0)'\n        })\n        .each(function(id){\n          d3.select(this)\n            .append('path')\n            .attr('d', function(d){\n              return d.path_d;\n            })\n            .style({\n              'cursor': 'pointer',\n              'fill': '#D7D7D7',\n              'stroke': 'none'\n            })\n            .on('mouseover', function (id) {\n              d3.select(this).style('fill', '#4D4D4D');\n            })\n            .on('mouseout', function (id) {\n              d3.select(this).style('fill', '#D7D7D7');\n            })\n            .on('click', function (d) {\n              if (d.direction === 'forward') {\n                if (pagination.position + pagination.range < pagination.total) {\n                  pagination.position = pagination.position + pagination.range;\n                }\n              }\n              else {\n                if (pagination.position - pagination.range >= 0) {\n                  pagination.position = pagination.position - pagination.range;\n                }\n              }\n              paginateData();\n              clearSelectedText();\n            });\n        });\n  }\n\n  function clearSelectedText() {\n    var selection;\n    if (document.selection && document.selection.empty) {\n      selection = document.selection;\n      selection.empty();\n    }\n    else if (window.getSelection) {\n      selection = window.getSelection();\n      selection.removeAllRanges();\n    }\n  }\n}\n","export default function (startDate, endDate) {\n  var timeDiff = Math.abs(new Date(startDate).getTime() - new Date(endDate).getTime());\n  var months = [\n    'Jan',\n    'Feb',\n    'Mar',\n    'Apr',\n    'May',\n    'June',\n    'July',\n    'Aug',\n    'Sept',\n    'Oct',\n    'Nov',\n    'Dec'\n  ];\n\n  // Yearly (31536000000) + Monthly\n  if (timeDiff >= 2419200000) {\n    return function(ms){\n      var date = new Date(ms);\n      return months[date.getMonth()] + ' ' + date.getFullYear();\n    };\n  }\n  // Daily\n  else if (timeDiff >= 86400000) {\n    return function(ms){\n      var date = new Date(ms);\n      return months[date.getMonth()] + ' ' + date.getDate();\n    };\n  }\n  // Hourly\n  else if (timeDiff >= 3600000) {\n    return '%I:%M %p';\n  }\n  // Minutely\n  else {\n    return '%I:%M:%S %p';\n  }\n}\n","import { each } from './each';\n\nexport function extendDeep(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    each(arguments[i], function(prop, key){\n      if (( typeof target[key] !== 'undefined' && typeof prop !== 'undefined' ) &&\n          ( typeof target[key] === 'object'    && typeof prop === 'object' ) &&\n          ( target[key] !== null               && prop !== null )) {\n            extendDeep(target[key], prop);\n      }\n      else {\n        target[key] = prop;\n      }\n    });\n  }\n  return target;\n}\n","/* @license C3.js v0.6.1 | (c) C3 Team and other contributors | http://c3js.org/ */\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n    typeof define === 'function' && define.amd ? define(factory) :\n    (global.c3 = factory());\n}(this, (function () { 'use strict';\n\n    var CLASS = {\n        target: 'c3-target',\n        chart: 'c3-chart',\n        chartLine: 'c3-chart-line',\n        chartLines: 'c3-chart-lines',\n        chartBar: 'c3-chart-bar',\n        chartBars: 'c3-chart-bars',\n        chartText: 'c3-chart-text',\n        chartTexts: 'c3-chart-texts',\n        chartArc: 'c3-chart-arc',\n        chartArcs: 'c3-chart-arcs',\n        chartArcsTitle: 'c3-chart-arcs-title',\n        chartArcsBackground: 'c3-chart-arcs-background',\n        chartArcsGaugeUnit: 'c3-chart-arcs-gauge-unit',\n        chartArcsGaugeMax: 'c3-chart-arcs-gauge-max',\n        chartArcsGaugeMin: 'c3-chart-arcs-gauge-min',\n        selectedCircle: 'c3-selected-circle',\n        selectedCircles: 'c3-selected-circles',\n        eventRect: 'c3-event-rect',\n        eventRects: 'c3-event-rects',\n        eventRectsSingle: 'c3-event-rects-single',\n        eventRectsMultiple: 'c3-event-rects-multiple',\n        zoomRect: 'c3-zoom-rect',\n        brush: 'c3-brush',\n        focused: 'c3-focused',\n        defocused: 'c3-defocused',\n        region: 'c3-region',\n        regions: 'c3-regions',\n        title: 'c3-title',\n        tooltipContainer: 'c3-tooltip-container',\n        tooltip: 'c3-tooltip',\n        tooltipName: 'c3-tooltip-name',\n        shape: 'c3-shape',\n        shapes: 'c3-shapes',\n        line: 'c3-line',\n        lines: 'c3-lines',\n        bar: 'c3-bar',\n        bars: 'c3-bars',\n        circle: 'c3-circle',\n        circles: 'c3-circles',\n        arc: 'c3-arc',\n        arcLabelLine: 'c3-arc-label-line',\n        arcs: 'c3-arcs',\n        area: 'c3-area',\n        areas: 'c3-areas',\n        empty: 'c3-empty',\n        text: 'c3-text',\n        texts: 'c3-texts',\n        gaugeValue: 'c3-gauge-value',\n        grid: 'c3-grid',\n        gridLines: 'c3-grid-lines',\n        xgrid: 'c3-xgrid',\n        xgrids: 'c3-xgrids',\n        xgridLine: 'c3-xgrid-line',\n        xgridLines: 'c3-xgrid-lines',\n        xgridFocus: 'c3-xgrid-focus',\n        ygrid: 'c3-ygrid',\n        ygrids: 'c3-ygrids',\n        ygridLine: 'c3-ygrid-line',\n        ygridLines: 'c3-ygrid-lines',\n        axis: 'c3-axis',\n        axisX: 'c3-axis-x',\n        axisXLabel: 'c3-axis-x-label',\n        axisY: 'c3-axis-y',\n        axisYLabel: 'c3-axis-y-label',\n        axisY2: 'c3-axis-y2',\n        axisY2Label: 'c3-axis-y2-label',\n        legendBackground: 'c3-legend-background',\n        legendItem: 'c3-legend-item',\n        legendItemEvent: 'c3-legend-item-event',\n        legendItemTile: 'c3-legend-item-tile',\n        legendItemHidden: 'c3-legend-item-hidden',\n        legendItemFocused: 'c3-legend-item-focused',\n        dragarea: 'c3-dragarea',\n        EXPANDED: '_expanded_',\n        SELECTED: '_selected_',\n        INCLUDED: '_included_'\n    };\n\n    var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n      return typeof obj;\n    } : function (obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n\n    var classCallCheck = function (instance, Constructor) {\n      if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n      }\n    };\n\n    var defineProperty = function (obj, key, value) {\n      if (key in obj) {\n        Object.defineProperty(obj, key, {\n          value: value,\n          enumerable: true,\n          configurable: true,\n          writable: true\n        });\n      } else {\n        obj[key] = value;\n      }\n\n      return obj;\n    };\n\n    var inherits = function (subClass, superClass) {\n      if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n      }\n\n      subClass.prototype = Object.create(superClass && superClass.prototype, {\n        constructor: {\n          value: subClass,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      });\n      if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n    };\n\n    var possibleConstructorReturn = function (self, call) {\n      if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n      }\n\n      return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n    };\n\n    var isValue = function isValue(v) {\n        return v || v === 0;\n    };\n    var isFunction = function isFunction(o) {\n        return typeof o === 'function';\n    };\n    var isArray = function isArray(o) {\n        return Array.isArray(o);\n    };\n    var isString = function isString(o) {\n        return typeof o === 'string';\n    };\n    var isUndefined = function isUndefined(v) {\n        return typeof v === 'undefined';\n    };\n    var isDefined = function isDefined(v) {\n        return typeof v !== 'undefined';\n    };\n    var ceil10 = function ceil10(v) {\n        return Math.ceil(v / 10) * 10;\n    };\n    var asHalfPixel = function asHalfPixel(n) {\n        return Math.ceil(n) + 0.5;\n    };\n    var diffDomain = function diffDomain(d) {\n        return d[1] - d[0];\n    };\n    var isEmpty = function isEmpty(o) {\n        return typeof o === 'undefined' || o === null || isString(o) && o.length === 0 || (typeof o === 'undefined' ? 'undefined' : _typeof(o)) === 'object' && Object.keys(o).length === 0;\n    };\n    var notEmpty = function notEmpty(o) {\n        return !c3_chart_internal_fn.isEmpty(o);\n    };\n    var getOption = function getOption(options, key, defaultValue) {\n        return isDefined(options[key]) ? options[key] : defaultValue;\n    };\n    var hasValue = function hasValue(dict, value) {\n        var found = false;\n        Object.keys(dict).forEach(function (key) {\n            if (dict[key] === value) {\n                found = true;\n            }\n        });\n        return found;\n    };\n    var sanitise = function sanitise(str) {\n        return typeof str === 'string' ? str.replace(/</g, '&lt;').replace(/>/g, '&gt;') : str;\n    };\n    var getPathBox = function getPathBox(path) {\n        var box = path.getBoundingClientRect(),\n            items = [path.pathSegList.getItem(0), path.pathSegList.getItem(1)],\n            minX = items[0].x,\n            minY = Math.min(items[0].y, items[1].y);\n        return { x: minX, y: minY, width: box.width, height: box.height };\n    };\n\n    var c3_axis_fn;\n    var c3_axis_internal_fn;\n\n    function AxisInternal(component, params) {\n        var internal = this;\n        internal.component = component;\n        internal.params = params || {};\n\n        internal.d3 = component.d3;\n        internal.scale = internal.d3.scaleLinear();\n        internal.range;\n        internal.orient = \"bottom\";\n        internal.innerTickSize = 6;\n        internal.outerTickSize = this.params.withOuterTick ? 6 : 0;\n        internal.tickPadding = 3;\n        internal.tickValues = null;\n        internal.tickFormat;\n        internal.tickArguments;\n\n        internal.tickOffset = 0;\n        internal.tickCulling = true;\n        internal.tickCentered;\n        internal.tickTextCharSize;\n        internal.tickTextRotate = internal.params.tickTextRotate;\n        internal.tickLength;\n\n        internal.axis = internal.generateAxis();\n    }\n    c3_axis_internal_fn = AxisInternal.prototype;\n\n    c3_axis_internal_fn.axisX = function (selection, x, tickOffset) {\n        selection.attr(\"transform\", function (d) {\n            return \"translate(\" + Math.ceil(x(d) + tickOffset) + \", 0)\";\n        });\n    };\n    c3_axis_internal_fn.axisY = function (selection, y) {\n        selection.attr(\"transform\", function (d) {\n            return \"translate(0,\" + Math.ceil(y(d)) + \")\";\n        });\n    };\n    c3_axis_internal_fn.scaleExtent = function (domain) {\n        var start = domain[0],\n            stop = domain[domain.length - 1];\n        return start < stop ? [start, stop] : [stop, start];\n    };\n    c3_axis_internal_fn.generateTicks = function (scale) {\n        var internal = this;\n        var i,\n            domain,\n            ticks = [];\n        if (scale.ticks) {\n            return scale.ticks.apply(scale, internal.tickArguments);\n        }\n        domain = scale.domain();\n        for (i = Math.ceil(domain[0]); i < domain[1]; i++) {\n            ticks.push(i);\n        }\n        if (ticks.length > 0 && ticks[0] > 0) {\n            ticks.unshift(ticks[0] - (ticks[1] - ticks[0]));\n        }\n        return ticks;\n    };\n    c3_axis_internal_fn.copyScale = function () {\n        var internal = this;\n        var newScale = internal.scale.copy(),\n            domain;\n        if (internal.params.isCategory) {\n            domain = internal.scale.domain();\n            newScale.domain([domain[0], domain[1] - 1]);\n        }\n        return newScale;\n    };\n    c3_axis_internal_fn.textFormatted = function (v) {\n        var internal = this,\n            formatted = internal.tickFormat ? internal.tickFormat(v) : v;\n        return typeof formatted !== 'undefined' ? formatted : '';\n    };\n    c3_axis_internal_fn.updateRange = function () {\n        var internal = this;\n        internal.range = internal.scale.rangeExtent ? internal.scale.rangeExtent() : internal.scaleExtent(internal.scale.range());\n        return internal.range;\n    };\n    c3_axis_internal_fn.updateTickTextCharSize = function (tick) {\n        var internal = this;\n        if (internal.tickTextCharSize) {\n            return internal.tickTextCharSize;\n        }\n        var size = {\n            h: 11.5,\n            w: 5.5\n        };\n        tick.select('text').text(function (d) {\n            return internal.textFormatted(d);\n        }).each(function (d) {\n            var box = this.getBoundingClientRect(),\n                text = internal.textFormatted(d),\n                h = box.height,\n                w = text ? box.width / text.length : undefined;\n            if (h && w) {\n                size.h = h;\n                size.w = w;\n            }\n        }).text('');\n        internal.tickTextCharSize = size;\n        return size;\n    };\n    c3_axis_internal_fn.isVertical = function () {\n        return this.orient === 'left' || this.orient === 'right';\n    };\n    c3_axis_internal_fn.tspanData = function (d, i, scale) {\n        var internal = this;\n        var splitted = internal.params.tickMultiline ? internal.splitTickText(d, scale) : [].concat(internal.textFormatted(d));\n\n        if (internal.params.tickMultiline && internal.params.tickMultilineMax > 0) {\n            splitted = internal.ellipsify(splitted, internal.params.tickMultilineMax);\n        }\n\n        return splitted.map(function (s) {\n            return { index: i, splitted: s, length: splitted.length };\n        });\n    };\n    c3_axis_internal_fn.splitTickText = function (d, scale) {\n        var internal = this,\n            tickText = internal.textFormatted(d),\n            maxWidth = internal.params.tickWidth,\n            subtext,\n            spaceIndex,\n            textWidth,\n            splitted = [];\n\n        if (Object.prototype.toString.call(tickText) === \"[object Array]\") {\n            return tickText;\n        }\n\n        if (!maxWidth || maxWidth <= 0) {\n            maxWidth = internal.isVertical() ? 95 : internal.params.isCategory ? Math.ceil(scale(1) - scale(0)) - 12 : 110;\n        }\n\n        function split(splitted, text) {\n            spaceIndex = undefined;\n            for (var i = 1; i < text.length; i++) {\n                if (text.charAt(i) === ' ') {\n                    spaceIndex = i;\n                }\n                subtext = text.substr(0, i + 1);\n                textWidth = internal.tickTextCharSize.w * subtext.length;\n                // if text width gets over tick width, split by space index or crrent index\n                if (maxWidth < textWidth) {\n                    return split(splitted.concat(text.substr(0, spaceIndex ? spaceIndex : i)), text.slice(spaceIndex ? spaceIndex + 1 : i));\n                }\n            }\n            return splitted.concat(text);\n        }\n\n        return split(splitted, tickText + \"\");\n    };\n    c3_axis_internal_fn.ellipsify = function (splitted, max) {\n        if (splitted.length <= max) {\n            return splitted;\n        }\n\n        var ellipsified = splitted.slice(0, max);\n        var remaining = 3;\n        for (var i = max - 1; i >= 0; i--) {\n            var available = ellipsified[i].length;\n\n            ellipsified[i] = ellipsified[i].substr(0, available - remaining).padEnd(available, '.');\n\n            remaining -= available;\n\n            if (remaining <= 0) {\n                break;\n            }\n        }\n\n        return ellipsified;\n    };\n    c3_axis_internal_fn.updateTickLength = function () {\n        var internal = this;\n        internal.tickLength = Math.max(internal.innerTickSize, 0) + internal.tickPadding;\n    };\n    c3_axis_internal_fn.lineY2 = function (d) {\n        var internal = this,\n            tickPosition = internal.scale(d) + (internal.tickCentered ? 0 : internal.tickOffset);\n        return internal.range[0] < tickPosition && tickPosition < internal.range[1] ? internal.innerTickSize : 0;\n    };\n    c3_axis_internal_fn.textY = function () {\n        var internal = this,\n            rotate = internal.tickTextRotate;\n        return rotate ? 11.5 - 2.5 * (rotate / 15) * (rotate > 0 ? 1 : -1) : internal.tickLength;\n    };\n    c3_axis_internal_fn.textTransform = function () {\n        var internal = this,\n            rotate = internal.tickTextRotate;\n        return rotate ? \"rotate(\" + rotate + \")\" : \"\";\n    };\n    c3_axis_internal_fn.textTextAnchor = function () {\n        var internal = this,\n            rotate = internal.tickTextRotate;\n        return rotate ? rotate > 0 ? \"start\" : \"end\" : \"middle\";\n    };\n    c3_axis_internal_fn.tspanDx = function () {\n        var internal = this,\n            rotate = internal.tickTextRotate;\n        return rotate ? 8 * Math.sin(Math.PI * (rotate / 180)) : 0;\n    };\n    c3_axis_internal_fn.tspanDy = function (d, i) {\n        var internal = this,\n            dy = internal.tickTextCharSize.h;\n        if (i === 0) {\n            if (internal.isVertical()) {\n                dy = -((d.length - 1) * (internal.tickTextCharSize.h / 2) - 3);\n            } else {\n                dy = \".71em\";\n            }\n        }\n        return dy;\n    };\n\n    c3_axis_internal_fn.generateAxis = function () {\n        var internal = this,\n            d3 = internal.d3,\n            params = internal.params;\n        function axis(g, transition) {\n            var self;\n            g.each(function () {\n                var g = axis.g = d3.select(this);\n\n                var scale0 = this.__chart__ || internal.scale,\n                    scale1 = this.__chart__ = internal.copyScale();\n\n                var ticksValues = internal.tickValues ? internal.tickValues : internal.generateTicks(scale1),\n                    ticks = g.selectAll(\".tick\").data(ticksValues, scale1),\n                    tickEnter = ticks.enter().insert(\"g\", \".domain\").attr(\"class\", \"tick\").style(\"opacity\", 1e-6),\n\n                // MEMO: No exit transition. The reason is this transition affects max tick width calculation because old tick will be included in the ticks.\n                tickExit = ticks.exit().remove(),\n                    tickUpdate = ticks.merge(tickEnter),\n                    tickTransform,\n                    tickX,\n                    tickY;\n\n                if (params.isCategory) {\n                    internal.tickOffset = Math.ceil((scale1(1) - scale1(0)) / 2);\n                    tickX = internal.tickCentered ? 0 : internal.tickOffset;\n                    tickY = internal.tickCentered ? internal.tickOffset : 0;\n                } else {\n                    internal.tickOffset = tickX = 0;\n                }\n\n                internal.updateRange();\n                internal.updateTickLength();\n                internal.updateTickTextCharSize(g.select('.tick'));\n\n                var lineUpdate = tickUpdate.select(\"line\").merge(tickEnter.append(\"line\")),\n                    textUpdate = tickUpdate.select(\"text\").merge(tickEnter.append(\"text\"));\n\n                var tspans = tickUpdate.selectAll('text').selectAll('tspan').data(function (d, i) {\n                    return internal.tspanData(d, i, scale1);\n                }),\n                    tspanEnter = tspans.enter().append('tspan'),\n                    tspanUpdate = tspanEnter.merge(tspans).text(function (d) {\n                    return d.splitted;\n                });\n                tspans.exit().remove();\n\n                var path = g.selectAll(\".domain\").data([0]),\n                    pathUpdate = path.enter().append(\"path\").merge(path).attr(\"class\", \"domain\");\n\n                // TODO: each attr should be one function and change its behavior by internal.orient, probably\n                switch (internal.orient) {\n                    case \"bottom\":\n                        {\n                            tickTransform = internal.axisX;\n                            lineUpdate.attr(\"x1\", tickX).attr(\"x2\", tickX).attr(\"y2\", function (d, i) {\n                                return internal.lineY2(d, i);\n                            });\n                            textUpdate.attr(\"x\", 0).attr(\"y\", function (d, i) {\n                                return internal.textY(d, i);\n                            }).attr(\"transform\", function (d, i) {\n                                return internal.textTransform(d, i);\n                            }).style(\"text-anchor\", function (d, i) {\n                                return internal.textTextAnchor(d, i);\n                            });\n                            tspanUpdate.attr('x', 0).attr(\"dy\", function (d, i) {\n                                return internal.tspanDy(d, i);\n                            }).attr('dx', function (d, i) {\n                                return internal.tspanDx(d, i);\n                            });\n                            pathUpdate.attr(\"d\", \"M\" + internal.range[0] + \",\" + internal.outerTickSize + \"V0H\" + internal.range[1] + \"V\" + internal.outerTickSize);\n                            break;\n                        }\n                    case \"top\":\n                        {\n                            // TODO: rotated tick text\n                            tickTransform = internal.axisX;\n                            lineUpdate.attr(\"x1\", tickX).attr(\"x2\", tickX).attr(\"y2\", function (d, i) {\n                                return -1 * internal.lineY2(d, i);\n                            });\n                            textUpdate.attr(\"x\", 0).attr(\"y\", function (d, i) {\n                                return -1 * internal.textY(d, i) - (params.isCategory ? 2 : internal.tickLength - 2);\n                            }).attr(\"transform\", function (d, i) {\n                                return internal.textTransform(d, i);\n                            }).style(\"text-anchor\", function (d, i) {\n                                return internal.textTextAnchor(d, i);\n                            });\n                            tspanUpdate.attr('x', 0).attr(\"dy\", function (d, i) {\n                                return internal.tspanDy(d, i);\n                            }).attr('dx', function (d, i) {\n                                return internal.tspanDx(d, i);\n                            });\n                            pathUpdate.attr(\"d\", \"M\" + internal.range[0] + \",\" + -internal.outerTickSize + \"V0H\" + internal.range[1] + \"V\" + -internal.outerTickSize);\n                            break;\n                        }\n                    case \"left\":\n                        {\n                            tickTransform = internal.axisY;\n                            lineUpdate.attr(\"x2\", -internal.innerTickSize).attr(\"y1\", tickY).attr(\"y2\", tickY);\n                            textUpdate.attr(\"x\", -internal.tickLength).attr(\"y\", internal.tickOffset).style(\"text-anchor\", \"end\");\n                            tspanUpdate.attr('x', -internal.tickLength).attr(\"dy\", function (d, i) {\n                                return internal.tspanDy(d, i);\n                            });\n                            pathUpdate.attr(\"d\", \"M\" + -internal.outerTickSize + \",\" + internal.range[0] + \"H0V\" + internal.range[1] + \"H\" + -internal.outerTickSize);\n                            break;\n                        }\n                    case \"right\":\n                        {\n                            tickTransform = internal.axisY;\n                            lineUpdate.attr(\"x2\", internal.innerTickSize).attr(\"y1\", tickY).attr(\"y2\", tickY);\n                            textUpdate.attr(\"x\", internal.tickLength).attr(\"y\", internal.tickOffset).style(\"text-anchor\", \"start\");\n                            tspanUpdate.attr('x', internal.tickLength).attr(\"dy\", function (d, i) {\n                                return internal.tspanDy(d, i);\n                            });\n                            pathUpdate.attr(\"d\", \"M\" + internal.outerTickSize + \",\" + internal.range[0] + \"H0V\" + internal.range[1] + \"H\" + internal.outerTickSize);\n                            break;\n                        }\n                }\n                if (scale1.rangeBand) {\n                    var x = scale1,\n                        dx = x.rangeBand() / 2;\n                    scale0 = scale1 = function scale1(d) {\n                        return x(d) + dx;\n                    };\n                } else if (scale0.rangeBand) {\n                    scale0 = scale1;\n                } else {\n                    tickExit.call(tickTransform, scale1, internal.tickOffset);\n                }\n                tickEnter.call(tickTransform, scale0, internal.tickOffset);\n                self = (transition ? tickUpdate.transition(transition) : tickUpdate).style('opacity', 1).call(tickTransform, scale1, internal.tickOffset);\n            });\n            return self;\n        }\n        axis.scale = function (x) {\n            if (!arguments.length) {\n                return internal.scale;\n            }\n            internal.scale = x;\n            return axis;\n        };\n        axis.orient = function (x) {\n            if (!arguments.length) {\n                return internal.orient;\n            }\n            internal.orient = x in { top: 1, right: 1, bottom: 1, left: 1 } ? x + \"\" : \"bottom\";\n            return axis;\n        };\n        axis.tickFormat = function (format) {\n            if (!arguments.length) {\n                return internal.tickFormat;\n            }\n            internal.tickFormat = format;\n            return axis;\n        };\n        axis.tickCentered = function (isCentered) {\n            if (!arguments.length) {\n                return internal.tickCentered;\n            }\n            internal.tickCentered = isCentered;\n            return axis;\n        };\n        axis.tickOffset = function () {\n            return internal.tickOffset;\n        };\n        axis.tickInterval = function () {\n            var interval, length;\n            if (params.isCategory) {\n                interval = internal.tickOffset * 2;\n            } else {\n                length = axis.g.select('path.domain').node().getTotalLength() - internal.outerTickSize * 2;\n                interval = length / axis.g.selectAll('line').size();\n            }\n            return interval === Infinity ? 0 : interval;\n        };\n        axis.ticks = function () {\n            if (!arguments.length) {\n                return internal.tickArguments;\n            }\n            internal.tickArguments = arguments;\n            return axis;\n        };\n        axis.tickCulling = function (culling) {\n            if (!arguments.length) {\n                return internal.tickCulling;\n            }\n            internal.tickCulling = culling;\n            return axis;\n        };\n        axis.tickValues = function (x) {\n            if (typeof x === 'function') {\n                internal.tickValues = function () {\n                    return x(internal.scale.domain());\n                };\n            } else {\n                if (!arguments.length) {\n                    return internal.tickValues;\n                }\n                internal.tickValues = x;\n            }\n            return axis;\n        };\n        return axis;\n    };\n\n    var Axis = function (_Component) {\n        inherits(Axis, _Component);\n\n        function Axis(owner) {\n            classCallCheck(this, Axis);\n\n            var fn = {\n                fn: c3_axis_fn,\n                internal: {\n                    fn: c3_axis_internal_fn\n                }\n            };\n\n            var _this = possibleConstructorReturn(this, (Axis.__proto__ || Object.getPrototypeOf(Axis)).call(this, owner, 'axis', fn));\n\n            _this.d3 = owner.d3;\n            _this.internal = AxisInternal;\n            return _this;\n        }\n\n        return Axis;\n    }(Component);\n\n    c3_axis_fn = Axis.prototype;\n\n    c3_axis_fn.init = function init() {\n        var $$ = this.owner,\n            config = $$.config,\n            main = $$.main;\n        $$.axes.x = main.append(\"g\").attr(\"class\", CLASS.axis + ' ' + CLASS.axisX).attr(\"clip-path\", config.axis_x_inner ? \"\" : $$.clipPathForXAxis).attr(\"transform\", $$.getTranslate('x')).style(\"visibility\", config.axis_x_show ? 'visible' : 'hidden');\n        $$.axes.x.append(\"text\").attr(\"class\", CLASS.axisXLabel).attr(\"transform\", config.axis_rotated ? \"rotate(-90)\" : \"\").style(\"text-anchor\", this.textAnchorForXAxisLabel.bind(this));\n        $$.axes.y = main.append(\"g\").attr(\"class\", CLASS.axis + ' ' + CLASS.axisY).attr(\"clip-path\", config.axis_y_inner ? \"\" : $$.clipPathForYAxis).attr(\"transform\", $$.getTranslate('y')).style(\"visibility\", config.axis_y_show ? 'visible' : 'hidden');\n        $$.axes.y.append(\"text\").attr(\"class\", CLASS.axisYLabel).attr(\"transform\", config.axis_rotated ? \"\" : \"rotate(-90)\").style(\"text-anchor\", this.textAnchorForYAxisLabel.bind(this));\n\n        $$.axes.y2 = main.append(\"g\").attr(\"class\", CLASS.axis + ' ' + CLASS.axisY2)\n        // clip-path?\n        .attr(\"transform\", $$.getTranslate('y2')).style(\"visibility\", config.axis_y2_show ? 'visible' : 'hidden');\n        $$.axes.y2.append(\"text\").attr(\"class\", CLASS.axisY2Label).attr(\"transform\", config.axis_rotated ? \"\" : \"rotate(-90)\").style(\"text-anchor\", this.textAnchorForY2AxisLabel.bind(this));\n    };\n    c3_axis_fn.getXAxis = function getXAxis(scale, orient, tickFormat, tickValues, withOuterTick, withoutTransition, withoutRotateTickText) {\n        var $$ = this.owner,\n            config = $$.config,\n            axisParams = {\n            isCategory: $$.isCategorized(),\n            withOuterTick: withOuterTick,\n            tickMultiline: config.axis_x_tick_multiline,\n            tickMultilineMax: config.axis_x_tick_multiline ? Number(config.axis_x_tick_multilineMax) : 0,\n            tickWidth: config.axis_x_tick_width,\n            tickTextRotate: withoutRotateTickText ? 0 : config.axis_x_tick_rotate,\n            withoutTransition: withoutTransition\n        },\n            axis = new this.internal(this, axisParams).axis.scale(scale).orient(orient);\n\n        if ($$.isTimeSeries() && tickValues && typeof tickValues !== \"function\") {\n            tickValues = tickValues.map(function (v) {\n                return $$.parseDate(v);\n            });\n        }\n\n        // Set tick\n        axis.tickFormat(tickFormat).tickValues(tickValues);\n        if ($$.isCategorized()) {\n            axis.tickCentered(config.axis_x_tick_centered);\n            if (isEmpty(config.axis_x_tick_culling)) {\n                config.axis_x_tick_culling = false;\n            }\n        }\n\n        return axis;\n    };\n    c3_axis_fn.updateXAxisTickValues = function updateXAxisTickValues(targets, axis) {\n        var $$ = this.owner,\n            config = $$.config,\n            tickValues;\n        if (config.axis_x_tick_fit || config.axis_x_tick_count) {\n            tickValues = this.generateTickValues($$.mapTargetsToUniqueXs(targets), config.axis_x_tick_count, $$.isTimeSeries());\n        }\n        if (axis) {\n            axis.tickValues(tickValues);\n        } else {\n            $$.xAxis.tickValues(tickValues);\n            $$.subXAxis.tickValues(tickValues);\n        }\n        return tickValues;\n    };\n    c3_axis_fn.getYAxis = function getYAxis(scale, orient, tickFormat, tickValues, withOuterTick, withoutTransition, withoutRotateTickText) {\n        var $$ = this.owner,\n            config = $$.config,\n            axisParams = {\n            withOuterTick: withOuterTick,\n            withoutTransition: withoutTransition,\n            tickTextRotate: withoutRotateTickText ? 0 : config.axis_y_tick_rotate\n        },\n            axis = new this.internal(this, axisParams).axis.scale(scale).orient(orient).tickFormat(tickFormat);\n        if ($$.isTimeSeriesY()) {\n            axis.ticks(config.axis_y_tick_time_type, config.axis_y_tick_time_interval);\n        } else {\n            axis.tickValues(tickValues);\n        }\n        return axis;\n    };\n    c3_axis_fn.getId = function getId(id) {\n        var config = this.owner.config;\n        return id in config.data_axes ? config.data_axes[id] : 'y';\n    };\n    c3_axis_fn.getXAxisTickFormat = function getXAxisTickFormat() {\n        // #2251 previously set any negative values to a whole number,\n        // however both should be truncated according to the users format specification\n        var $$ = this.owner,\n            config = $$.config;\n        var format = $$.isTimeSeries() ? $$.defaultAxisTimeFormat : $$.isCategorized() ? $$.categoryName : function (v) {\n            return v;\n        };\n\n        if (config.axis_x_tick_format) {\n            if (isFunction(config.axis_x_tick_format)) {\n                format = config.axis_x_tick_format;\n            } else if ($$.isTimeSeries()) {\n                format = function format(date) {\n                    return date ? $$.axisTimeFormat(config.axis_x_tick_format)(date) : \"\";\n                };\n            }\n        }\n        return isFunction(format) ? function (v) {\n            return format.call($$, v);\n        } : format;\n    };\n    c3_axis_fn.getTickValues = function getTickValues(tickValues, axis) {\n        return tickValues ? tickValues : axis ? axis.tickValues() : undefined;\n    };\n    c3_axis_fn.getXAxisTickValues = function getXAxisTickValues() {\n        return this.getTickValues(this.owner.config.axis_x_tick_values, this.owner.xAxis);\n    };\n    c3_axis_fn.getYAxisTickValues = function getYAxisTickValues() {\n        return this.getTickValues(this.owner.config.axis_y_tick_values, this.owner.yAxis);\n    };\n    c3_axis_fn.getY2AxisTickValues = function getY2AxisTickValues() {\n        return this.getTickValues(this.owner.config.axis_y2_tick_values, this.owner.y2Axis);\n    };\n    c3_axis_fn.getLabelOptionByAxisId = function getLabelOptionByAxisId(axisId) {\n        var $$ = this.owner,\n            config = $$.config,\n            option;\n        if (axisId === 'y') {\n            option = config.axis_y_label;\n        } else if (axisId === 'y2') {\n            option = config.axis_y2_label;\n        } else if (axisId === 'x') {\n            option = config.axis_x_label;\n        }\n        return option;\n    };\n    c3_axis_fn.getLabelText = function getLabelText(axisId) {\n        var option = this.getLabelOptionByAxisId(axisId);\n        return isString(option) ? option : option ? option.text : null;\n    };\n    c3_axis_fn.setLabelText = function setLabelText(axisId, text) {\n        var $$ = this.owner,\n            config = $$.config,\n            option = this.getLabelOptionByAxisId(axisId);\n        if (isString(option)) {\n            if (axisId === 'y') {\n                config.axis_y_label = text;\n            } else if (axisId === 'y2') {\n                config.axis_y2_label = text;\n            } else if (axisId === 'x') {\n                config.axis_x_label = text;\n            }\n        } else if (option) {\n            option.text = text;\n        }\n    };\n    c3_axis_fn.getLabelPosition = function getLabelPosition(axisId, defaultPosition) {\n        var option = this.getLabelOptionByAxisId(axisId),\n            position = option && (typeof option === 'undefined' ? 'undefined' : _typeof(option)) === 'object' && option.position ? option.position : defaultPosition;\n        return {\n            isInner: position.indexOf('inner') >= 0,\n            isOuter: position.indexOf('outer') >= 0,\n            isLeft: position.indexOf('left') >= 0,\n            isCenter: position.indexOf('center') >= 0,\n            isRight: position.indexOf('right') >= 0,\n            isTop: position.indexOf('top') >= 0,\n            isMiddle: position.indexOf('middle') >= 0,\n            isBottom: position.indexOf('bottom') >= 0\n        };\n    };\n    c3_axis_fn.getXAxisLabelPosition = function getXAxisLabelPosition() {\n        return this.getLabelPosition('x', this.owner.config.axis_rotated ? 'inner-top' : 'inner-right');\n    };\n    c3_axis_fn.getYAxisLabelPosition = function getYAxisLabelPosition() {\n        return this.getLabelPosition('y', this.owner.config.axis_rotated ? 'inner-right' : 'inner-top');\n    };\n    c3_axis_fn.getY2AxisLabelPosition = function getY2AxisLabelPosition() {\n        return this.getLabelPosition('y2', this.owner.config.axis_rotated ? 'inner-right' : 'inner-top');\n    };\n    c3_axis_fn.getLabelPositionById = function getLabelPositionById(id) {\n        return id === 'y2' ? this.getY2AxisLabelPosition() : id === 'y' ? this.getYAxisLabelPosition() : this.getXAxisLabelPosition();\n    };\n    c3_axis_fn.textForXAxisLabel = function textForXAxisLabel() {\n        return this.getLabelText('x');\n    };\n    c3_axis_fn.textForYAxisLabel = function textForYAxisLabel() {\n        return this.getLabelText('y');\n    };\n    c3_axis_fn.textForY2AxisLabel = function textForY2AxisLabel() {\n        return this.getLabelText('y2');\n    };\n    c3_axis_fn.xForAxisLabel = function xForAxisLabel(forHorizontal, position) {\n        var $$ = this.owner;\n        if (forHorizontal) {\n            return position.isLeft ? 0 : position.isCenter ? $$.width / 2 : $$.width;\n        } else {\n            return position.isBottom ? -$$.height : position.isMiddle ? -$$.height / 2 : 0;\n        }\n    };\n    c3_axis_fn.dxForAxisLabel = function dxForAxisLabel(forHorizontal, position) {\n        if (forHorizontal) {\n            return position.isLeft ? \"0.5em\" : position.isRight ? \"-0.5em\" : \"0\";\n        } else {\n            return position.isTop ? \"-0.5em\" : position.isBottom ? \"0.5em\" : \"0\";\n        }\n    };\n    c3_axis_fn.textAnchorForAxisLabel = function textAnchorForAxisLabel(forHorizontal, position) {\n        if (forHorizontal) {\n            return position.isLeft ? 'start' : position.isCenter ? 'middle' : 'end';\n        } else {\n            return position.isBottom ? 'start' : position.isMiddle ? 'middle' : 'end';\n        }\n    };\n    c3_axis_fn.xForXAxisLabel = function xForXAxisLabel() {\n        return this.xForAxisLabel(!this.owner.config.axis_rotated, this.getXAxisLabelPosition());\n    };\n    c3_axis_fn.xForYAxisLabel = function xForYAxisLabel() {\n        return this.xForAxisLabel(this.owner.config.axis_rotated, this.getYAxisLabelPosition());\n    };\n    c3_axis_fn.xForY2AxisLabel = function xForY2AxisLabel() {\n        return this.xForAxisLabel(this.owner.config.axis_rotated, this.getY2AxisLabelPosition());\n    };\n    c3_axis_fn.dxForXAxisLabel = function dxForXAxisLabel() {\n        return this.dxForAxisLabel(!this.owner.config.axis_rotated, this.getXAxisLabelPosition());\n    };\n    c3_axis_fn.dxForYAxisLabel = function dxForYAxisLabel() {\n        return this.dxForAxisLabel(this.owner.config.axis_rotated, this.getYAxisLabelPosition());\n    };\n    c3_axis_fn.dxForY2AxisLabel = function dxForY2AxisLabel() {\n        return this.dxForAxisLabel(this.owner.config.axis_rotated, this.getY2AxisLabelPosition());\n    };\n    c3_axis_fn.dyForXAxisLabel = function dyForXAxisLabel() {\n        var $$ = this.owner,\n            config = $$.config,\n            position = this.getXAxisLabelPosition();\n        if (config.axis_rotated) {\n            return position.isInner ? \"1.2em\" : -25 - ($$.config.axis_x_inner ? 0 : this.getMaxTickWidth('x'));\n        } else {\n            return position.isInner ? \"-0.5em\" : config.axis_x_height ? config.axis_x_height - 10 : \"3em\";\n        }\n    };\n    c3_axis_fn.dyForYAxisLabel = function dyForYAxisLabel() {\n        var $$ = this.owner,\n            position = this.getYAxisLabelPosition();\n        if ($$.config.axis_rotated) {\n            return position.isInner ? \"-0.5em\" : \"3em\";\n        } else {\n            return position.isInner ? \"1.2em\" : -10 - ($$.config.axis_y_inner ? 0 : this.getMaxTickWidth('y') + 10);\n        }\n    };\n    c3_axis_fn.dyForY2AxisLabel = function dyForY2AxisLabel() {\n        var $$ = this.owner,\n            position = this.getY2AxisLabelPosition();\n        if ($$.config.axis_rotated) {\n            return position.isInner ? \"1.2em\" : \"-2.2em\";\n        } else {\n            return position.isInner ? \"-0.5em\" : 15 + ($$.config.axis_y2_inner ? 0 : this.getMaxTickWidth('y2') + 15);\n        }\n    };\n    c3_axis_fn.textAnchorForXAxisLabel = function textAnchorForXAxisLabel() {\n        var $$ = this.owner;\n        return this.textAnchorForAxisLabel(!$$.config.axis_rotated, this.getXAxisLabelPosition());\n    };\n    c3_axis_fn.textAnchorForYAxisLabel = function textAnchorForYAxisLabel() {\n        var $$ = this.owner;\n        return this.textAnchorForAxisLabel($$.config.axis_rotated, this.getYAxisLabelPosition());\n    };\n    c3_axis_fn.textAnchorForY2AxisLabel = function textAnchorForY2AxisLabel() {\n        var $$ = this.owner;\n        return this.textAnchorForAxisLabel($$.config.axis_rotated, this.getY2AxisLabelPosition());\n    };\n    c3_axis_fn.getMaxTickWidth = function getMaxTickWidth(id, withoutRecompute) {\n        var $$ = this.owner,\n            config = $$.config,\n            maxWidth = 0,\n            targetsToShow,\n            scale,\n            axis,\n            dummy,\n            svg;\n        if (withoutRecompute && $$.currentMaxTickWidths[id]) {\n            return $$.currentMaxTickWidths[id];\n        }\n        if ($$.svg) {\n            targetsToShow = $$.filterTargetsToShow($$.data.targets);\n            if (id === 'y') {\n                scale = $$.y.copy().domain($$.getYDomain(targetsToShow, 'y'));\n                axis = this.getYAxis(scale, $$.yOrient, config.axis_y_tick_format, $$.yAxisTickValues, false, true, true);\n            } else if (id === 'y2') {\n                scale = $$.y2.copy().domain($$.getYDomain(targetsToShow, 'y2'));\n                axis = this.getYAxis(scale, $$.y2Orient, config.axis_y2_tick_format, $$.y2AxisTickValues, false, true, true);\n            } else {\n                scale = $$.x.copy().domain($$.getXDomain(targetsToShow));\n                axis = this.getXAxis(scale, $$.xOrient, $$.xAxisTickFormat, $$.xAxisTickValues, false, true, true);\n                this.updateXAxisTickValues(targetsToShow, axis);\n            }\n            dummy = $$.d3.select('body').append('div').classed('c3', true);\n            svg = dummy.append(\"svg\").style('visibility', 'hidden').style('position', 'fixed').style('top', 0).style('left', 0), svg.append('g').call(axis).each(function () {\n                $$.d3.select(this).selectAll('text').each(function () {\n                    var box = this.getBoundingClientRect();\n                    if (maxWidth < box.width) {\n                        maxWidth = box.width;\n                    }\n                });\n                dummy.remove();\n            });\n        }\n        $$.currentMaxTickWidths[id] = maxWidth <= 0 ? $$.currentMaxTickWidths[id] : maxWidth;\n        return $$.currentMaxTickWidths[id];\n    };\n\n    c3_axis_fn.updateLabels = function updateLabels(withTransition) {\n        var $$ = this.owner;\n        var axisXLabel = $$.main.select('.' + CLASS.axisX + ' .' + CLASS.axisXLabel),\n            axisYLabel = $$.main.select('.' + CLASS.axisY + ' .' + CLASS.axisYLabel),\n            axisY2Label = $$.main.select('.' + CLASS.axisY2 + ' .' + CLASS.axisY2Label);\n        (withTransition ? axisXLabel.transition() : axisXLabel).attr(\"x\", this.xForXAxisLabel.bind(this)).attr(\"dx\", this.dxForXAxisLabel.bind(this)).attr(\"dy\", this.dyForXAxisLabel.bind(this)).text(this.textForXAxisLabel.bind(this));\n        (withTransition ? axisYLabel.transition() : axisYLabel).attr(\"x\", this.xForYAxisLabel.bind(this)).attr(\"dx\", this.dxForYAxisLabel.bind(this)).attr(\"dy\", this.dyForYAxisLabel.bind(this)).text(this.textForYAxisLabel.bind(this));\n        (withTransition ? axisY2Label.transition() : axisY2Label).attr(\"x\", this.xForY2AxisLabel.bind(this)).attr(\"dx\", this.dxForY2AxisLabel.bind(this)).attr(\"dy\", this.dyForY2AxisLabel.bind(this)).text(this.textForY2AxisLabel.bind(this));\n    };\n    c3_axis_fn.getPadding = function getPadding(padding, key, defaultValue, domainLength) {\n        var p = typeof padding === 'number' ? padding : padding[key];\n        if (!isValue(p)) {\n            return defaultValue;\n        }\n        if (padding.unit === 'ratio') {\n            return padding[key] * domainLength;\n        }\n        // assume padding is pixels if unit is not specified\n        return this.convertPixelsToAxisPadding(p, domainLength);\n    };\n    c3_axis_fn.convertPixelsToAxisPadding = function convertPixelsToAxisPadding(pixels, domainLength) {\n        var $$ = this.owner,\n            length = $$.config.axis_rotated ? $$.width : $$.height;\n        return domainLength * (pixels / length);\n    };\n    c3_axis_fn.generateTickValues = function generateTickValues(values, tickCount, forTimeSeries) {\n        var tickValues = values,\n            targetCount,\n            start,\n            end,\n            count,\n            interval,\n            i,\n            tickValue;\n        if (tickCount) {\n            targetCount = isFunction(tickCount) ? tickCount() : tickCount;\n            // compute ticks according to tickCount\n            if (targetCount === 1) {\n                tickValues = [values[0]];\n            } else if (targetCount === 2) {\n                tickValues = [values[0], values[values.length - 1]];\n            } else if (targetCount > 2) {\n                count = targetCount - 2;\n                start = values[0];\n                end = values[values.length - 1];\n                interval = (end - start) / (count + 1);\n                // re-construct unique values\n                tickValues = [start];\n                for (i = 0; i < count; i++) {\n                    tickValue = +start + interval * (i + 1);\n                    tickValues.push(forTimeSeries ? new Date(tickValue) : tickValue);\n                }\n                tickValues.push(end);\n            }\n        }\n        if (!forTimeSeries) {\n            tickValues = tickValues.sort(function (a, b) {\n                return a - b;\n            });\n        }\n        return tickValues;\n    };\n    c3_axis_fn.generateTransitions = function generateTransitions(duration) {\n        var $$ = this.owner,\n            axes = $$.axes;\n        return {\n            axisX: duration ? axes.x.transition().duration(duration) : axes.x,\n            axisY: duration ? axes.y.transition().duration(duration) : axes.y,\n            axisY2: duration ? axes.y2.transition().duration(duration) : axes.y2,\n            axisSubX: duration ? axes.subx.transition().duration(duration) : axes.subx\n        };\n    };\n    c3_axis_fn.redraw = function redraw(duration, isHidden) {\n        var $$ = this.owner,\n            transition = duration ? $$.d3.transition().duration(duration) : null;\n        $$.axes.x.style(\"opacity\", isHidden ? 0 : 1).call($$.xAxis, transition);\n        $$.axes.y.style(\"opacity\", isHidden ? 0 : 1).call($$.yAxis, transition);\n        $$.axes.y2.style(\"opacity\", isHidden ? 0 : 1).call($$.y2Axis, transition);\n        $$.axes.subx.style(\"opacity\", isHidden ? 0 : 1).call($$.subXAxis, transition);\n    };\n\n    var c3 = { version: \"0.6.1\" };\n\n    var c3_chart_fn;\n    var c3_chart_internal_fn;\n\n    function Component(owner, componentKey, fn) {\n        this.owner = owner;\n        c3.chart.internal[componentKey] = fn;\n    }\n\n    function Chart(config) {\n        var $$ = this.internal = new ChartInternal(this);\n        $$.loadConfig(config);\n\n        $$.beforeInit(config);\n        $$.init();\n        $$.afterInit(config);\n\n        // bind \"this\" to nested API\n        (function bindThis(fn, target, argThis) {\n            Object.keys(fn).forEach(function (key) {\n                target[key] = fn[key].bind(argThis);\n                if (Object.keys(fn[key]).length > 0) {\n                    bindThis(fn[key], target[key], argThis);\n                }\n            });\n        })(c3_chart_fn, this, this);\n    }\n\n    function ChartInternal(api) {\n        var $$ = this;\n        $$.d3 = window.d3 ? window.d3 : typeof require !== 'undefined' ? require(\"d3\") : undefined;\n        $$.api = api;\n        $$.config = $$.getDefaultConfig();\n        $$.data = {};\n        $$.cache = {};\n        $$.axes = {};\n    }\n\n    c3.generate = function (config) {\n        return new Chart(config);\n    };\n\n    c3.chart = {\n        fn: Chart.prototype,\n        internal: {\n            fn: ChartInternal.prototype\n        }\n    };\n    c3_chart_fn = c3.chart.fn;\n    c3_chart_internal_fn = c3.chart.internal.fn;\n\n    c3_chart_internal_fn.beforeInit = function () {\n        // can do something\n    };\n    c3_chart_internal_fn.afterInit = function () {\n        // can do something\n    };\n    c3_chart_internal_fn.init = function () {\n        var $$ = this,\n            config = $$.config;\n\n        $$.initParams();\n\n        if (config.data_url) {\n            $$.convertUrlToData(config.data_url, config.data_mimeType, config.data_headers, config.data_keys, $$.initWithData);\n        } else if (config.data_json) {\n            $$.initWithData($$.convertJsonToData(config.data_json, config.data_keys));\n        } else if (config.data_rows) {\n            $$.initWithData($$.convertRowsToData(config.data_rows));\n        } else if (config.data_columns) {\n            $$.initWithData($$.convertColumnsToData(config.data_columns));\n        } else {\n            throw Error('url or json or rows or columns is required.');\n        }\n    };\n\n    c3_chart_internal_fn.initParams = function () {\n        var $$ = this,\n            d3 = $$.d3,\n            config = $$.config;\n\n        // MEMO: clipId needs to be unique because it conflicts when multiple charts exist\n        $$.clipId = \"c3-\" + +new Date() + '-clip', $$.clipIdForXAxis = $$.clipId + '-xaxis', $$.clipIdForYAxis = $$.clipId + '-yaxis', $$.clipIdForGrid = $$.clipId + '-grid', $$.clipIdForSubchart = $$.clipId + '-subchart', $$.clipPath = $$.getClipPath($$.clipId), $$.clipPathForXAxis = $$.getClipPath($$.clipIdForXAxis), $$.clipPathForYAxis = $$.getClipPath($$.clipIdForYAxis);\n        $$.clipPathForGrid = $$.getClipPath($$.clipIdForGrid), $$.clipPathForSubchart = $$.getClipPath($$.clipIdForSubchart), $$.dragStart = null;\n        $$.dragging = false;\n        $$.flowing = false;\n        $$.cancelClick = false;\n        $$.mouseover = false;\n        $$.transiting = false;\n\n        $$.color = $$.generateColor();\n        $$.levelColor = $$.generateLevelColor();\n\n        $$.dataTimeParse = (config.data_xLocaltime ? d3.timeParse : d3.utcParse)($$.config.data_xFormat);\n        $$.axisTimeFormat = config.axis_x_localtime ? d3.timeFormat : d3.utcFormat;\n        $$.defaultAxisTimeFormat = function (date) {\n            if (date.getMilliseconds()) {\n                return d3.timeFormat(\".%L\")(date);\n            }\n            if (date.getSeconds()) {\n                return d3.timeFormat(\":%S\")(date);\n            }\n            if (date.getMinutes()) {\n                return d3.timeFormat(\"%I:%M\")(date);\n            }\n            if (date.getHours()) {\n                return d3.timeFormat(\"%I %p\")(date);\n            }\n            if (date.getDay() && date.getDate() !== 1) {\n                return d3.timeFormat(\"%-m/%-d\")(date);\n            }\n            if (date.getDate() !== 1) {\n                return d3.timeFormat(\"%-m/%-d\")(date);\n            }\n            if (date.getMonth()) {\n                return d3.timeFormat(\"%-m/%-d\")(date);\n            }\n            return d3.timeFormat(\"%Y/%-m/%-d\")(date);\n        };\n        $$.hiddenTargetIds = [];\n        $$.hiddenLegendIds = [];\n        $$.focusedTargetIds = [];\n        $$.defocusedTargetIds = [];\n\n        $$.xOrient = config.axis_rotated ? config.axis_x_inner ? \"right\" : \"left\" : config.axis_x_inner ? \"top\" : \"bottom\";\n        $$.yOrient = config.axis_rotated ? config.axis_y_inner ? \"top\" : \"bottom\" : config.axis_y_inner ? \"right\" : \"left\";\n        $$.y2Orient = config.axis_rotated ? config.axis_y2_inner ? \"bottom\" : \"top\" : config.axis_y2_inner ? \"left\" : \"right\";\n        $$.subXOrient = config.axis_rotated ? \"left\" : \"bottom\";\n\n        $$.isLegendRight = config.legend_position === 'right';\n        $$.isLegendInset = config.legend_position === 'inset';\n        $$.isLegendTop = config.legend_inset_anchor === 'top-left' || config.legend_inset_anchor === 'top-right';\n        $$.isLegendLeft = config.legend_inset_anchor === 'top-left' || config.legend_inset_anchor === 'bottom-left';\n        $$.legendStep = 0;\n        $$.legendItemWidth = 0;\n        $$.legendItemHeight = 0;\n\n        $$.currentMaxTickWidths = {\n            x: 0,\n            y: 0,\n            y2: 0\n        };\n\n        $$.rotated_padding_left = 30;\n        $$.rotated_padding_right = config.axis_rotated && !config.axis_x_show ? 0 : 30;\n        $$.rotated_padding_top = 5;\n\n        $$.withoutFadeIn = {};\n\n        $$.intervalForObserveInserted = undefined;\n\n        $$.axes.subx = d3.selectAll([]); // needs when excluding subchart.js\n    };\n\n    c3_chart_internal_fn.initChartElements = function () {\n        if (this.initBar) {\n            this.initBar();\n        }\n        if (this.initLine) {\n            this.initLine();\n        }\n        if (this.initArc) {\n            this.initArc();\n        }\n        if (this.initGauge) {\n            this.initGauge();\n        }\n        if (this.initText) {\n            this.initText();\n        }\n    };\n\n    c3_chart_internal_fn.initWithData = function (data) {\n        var $$ = this,\n            d3 = $$.d3,\n            config = $$.config;\n        var defs,\n            main,\n            binding = true;\n\n        $$.axis = new Axis($$);\n\n        if (!config.bindto) {\n            $$.selectChart = d3.selectAll([]);\n        } else if (typeof config.bindto.node === 'function') {\n            $$.selectChart = config.bindto;\n        } else {\n            $$.selectChart = d3.select(config.bindto);\n        }\n        if ($$.selectChart.empty()) {\n            $$.selectChart = d3.select(document.createElement('div')).style('opacity', 0);\n            $$.observeInserted($$.selectChart);\n            binding = false;\n        }\n        $$.selectChart.html(\"\").classed(\"c3\", true);\n\n        // Init data as targets\n        $$.data.xs = {};\n        $$.data.targets = $$.convertDataToTargets(data);\n\n        if (config.data_filter) {\n            $$.data.targets = $$.data.targets.filter(config.data_filter);\n        }\n\n        // Set targets to hide if needed\n        if (config.data_hide) {\n            $$.addHiddenTargetIds(config.data_hide === true ? $$.mapToIds($$.data.targets) : config.data_hide);\n        }\n        if (config.legend_hide) {\n            $$.addHiddenLegendIds(config.legend_hide === true ? $$.mapToIds($$.data.targets) : config.legend_hide);\n        }\n\n        // Init sizes and scales\n        $$.updateSizes();\n        $$.updateScales();\n\n        // Set domains for each scale\n        $$.x.domain(d3.extent($$.getXDomain($$.data.targets)));\n        $$.y.domain($$.getYDomain($$.data.targets, 'y'));\n        $$.y2.domain($$.getYDomain($$.data.targets, 'y2'));\n        $$.subX.domain($$.x.domain());\n        $$.subY.domain($$.y.domain());\n        $$.subY2.domain($$.y2.domain());\n\n        // Save original x domain for zoom update\n        $$.orgXDomain = $$.x.domain();\n\n        /*-- Basic Elements --*/\n\n        // Define svgs\n        $$.svg = $$.selectChart.append(\"svg\").style(\"overflow\", \"hidden\").on('mouseenter', function () {\n            return config.onmouseover.call($$);\n        }).on('mouseleave', function () {\n            return config.onmouseout.call($$);\n        });\n\n        if ($$.config.svg_classname) {\n            $$.svg.attr('class', $$.config.svg_classname);\n        }\n\n        // Define defs\n        defs = $$.svg.append(\"defs\");\n        $$.clipChart = $$.appendClip(defs, $$.clipId);\n        $$.clipXAxis = $$.appendClip(defs, $$.clipIdForXAxis);\n        $$.clipYAxis = $$.appendClip(defs, $$.clipIdForYAxis);\n        $$.clipGrid = $$.appendClip(defs, $$.clipIdForGrid);\n        $$.clipSubchart = $$.appendClip(defs, $$.clipIdForSubchart);\n        $$.updateSvgSize();\n\n        // Define regions\n        main = $$.main = $$.svg.append(\"g\").attr(\"transform\", $$.getTranslate('main'));\n\n        if ($$.initPie) {\n            $$.initPie();\n        }\n        if ($$.initSubchart) {\n            $$.initSubchart();\n        }\n        if ($$.initTooltip) {\n            $$.initTooltip();\n        }\n        if ($$.initLegend) {\n            $$.initLegend();\n        }\n        if ($$.initTitle) {\n            $$.initTitle();\n        }\n        if ($$.initZoom) {\n            $$.initZoom();\n        }\n\n        // Update selection based on size and scale\n        // TODO: currently this must be called after initLegend because of update of sizes, but it should be done in initSubchart.\n        if ($$.initSubchartBrush) {\n            $$.initSubchartBrush();\n        }\n\n        /*-- Main Region --*/\n\n        // text when empty\n        main.append(\"text\").attr(\"class\", CLASS.text + ' ' + CLASS.empty).attr(\"text-anchor\", \"middle\") // horizontal centering of text at x position in all browsers.\n        .attr(\"dominant-baseline\", \"middle\"); // vertical centering of text at y position in all browsers, except IE.\n\n        // Regions\n        $$.initRegion();\n\n        // Grids\n        $$.initGrid();\n\n        // Define g for chart area\n        main.append('g').attr(\"clip-path\", $$.clipPath).attr('class', CLASS.chart);\n\n        // Grid lines\n        if (config.grid_lines_front) {\n            $$.initGridLines();\n        }\n\n        // Define g for chart\n        $$.initChartElements();\n\n        // Add Axis\n        $$.axis.init();\n\n        // Set targets\n        $$.updateTargets($$.data.targets);\n\n        // Cover whole with rects for events\n        $$.initEventRect();\n\n        // Set default extent if defined\n        if (config.axis_x_selection) {\n            $$.brush.selectionAsValue($$.getDefaultSelection());\n        }\n\n        // Draw with targets\n        if (binding) {\n            $$.updateDimension();\n            $$.config.oninit.call($$);\n            $$.redraw({\n                withTransition: false,\n                withTransform: true,\n                withUpdateXDomain: true,\n                withUpdateOrgXDomain: true,\n                withTransitionForAxis: false\n            });\n        }\n\n        // Bind resize event\n        $$.bindResize();\n\n        // export element of the chart\n        $$.api.element = $$.selectChart.node();\n    };\n\n    c3_chart_internal_fn.smoothLines = function (el, type) {\n        var $$ = this;\n        if (type === 'grid') {\n            el.each(function () {\n                var g = $$.d3.select(this),\n                    x1 = g.attr('x1'),\n                    x2 = g.attr('x2'),\n                    y1 = g.attr('y1'),\n                    y2 = g.attr('y2');\n                g.attr({\n                    'x1': Math.ceil(x1),\n                    'x2': Math.ceil(x2),\n                    'y1': Math.ceil(y1),\n                    'y2': Math.ceil(y2)\n                });\n            });\n        }\n    };\n\n    c3_chart_internal_fn.updateSizes = function () {\n        var $$ = this,\n            config = $$.config;\n        var legendHeight = $$.legend ? $$.getLegendHeight() : 0,\n            legendWidth = $$.legend ? $$.getLegendWidth() : 0,\n            legendHeightForBottom = $$.isLegendRight || $$.isLegendInset ? 0 : legendHeight,\n            hasArc = $$.hasArcType(),\n            xAxisHeight = config.axis_rotated || hasArc ? 0 : $$.getHorizontalAxisHeight('x'),\n            subchartHeight = config.subchart_show && !hasArc ? config.subchart_size_height + xAxisHeight : 0;\n\n        $$.currentWidth = $$.getCurrentWidth();\n        $$.currentHeight = $$.getCurrentHeight();\n\n        // for main\n        $$.margin = config.axis_rotated ? {\n            top: $$.getHorizontalAxisHeight('y2') + $$.getCurrentPaddingTop(),\n            right: hasArc ? 0 : $$.getCurrentPaddingRight(),\n            bottom: $$.getHorizontalAxisHeight('y') + legendHeightForBottom + $$.getCurrentPaddingBottom(),\n            left: subchartHeight + (hasArc ? 0 : $$.getCurrentPaddingLeft())\n        } : {\n            top: 4 + $$.getCurrentPaddingTop(), // for top tick text\n            right: hasArc ? 0 : $$.getCurrentPaddingRight(),\n            bottom: xAxisHeight + subchartHeight + legendHeightForBottom + $$.getCurrentPaddingBottom(),\n            left: hasArc ? 0 : $$.getCurrentPaddingLeft()\n        };\n\n        // for subchart\n        $$.margin2 = config.axis_rotated ? {\n            top: $$.margin.top,\n            right: NaN,\n            bottom: 20 + legendHeightForBottom,\n            left: $$.rotated_padding_left\n        } : {\n            top: $$.currentHeight - subchartHeight - legendHeightForBottom,\n            right: NaN,\n            bottom: xAxisHeight + legendHeightForBottom,\n            left: $$.margin.left\n        };\n\n        // for legend\n        $$.margin3 = {\n            top: 0,\n            right: NaN,\n            bottom: 0,\n            left: 0\n        };\n        if ($$.updateSizeForLegend) {\n            $$.updateSizeForLegend(legendHeight, legendWidth);\n        }\n\n        $$.width = $$.currentWidth - $$.margin.left - $$.margin.right;\n        $$.height = $$.currentHeight - $$.margin.top - $$.margin.bottom;\n        if ($$.width < 0) {\n            $$.width = 0;\n        }\n        if ($$.height < 0) {\n            $$.height = 0;\n        }\n\n        $$.width2 = config.axis_rotated ? $$.margin.left - $$.rotated_padding_left - $$.rotated_padding_right : $$.width;\n        $$.height2 = config.axis_rotated ? $$.height : $$.currentHeight - $$.margin2.top - $$.margin2.bottom;\n        if ($$.width2 < 0) {\n            $$.width2 = 0;\n        }\n        if ($$.height2 < 0) {\n            $$.height2 = 0;\n        }\n\n        // for arc\n        $$.arcWidth = $$.width - ($$.isLegendRight ? legendWidth + 10 : 0);\n        $$.arcHeight = $$.height - ($$.isLegendRight ? 0 : 10);\n        if ($$.hasType('gauge') && !config.gauge_fullCircle) {\n            $$.arcHeight += $$.height - $$.getGaugeLabelHeight();\n        }\n        if ($$.updateRadius) {\n            $$.updateRadius();\n        }\n\n        if ($$.isLegendRight && hasArc) {\n            $$.margin3.left = $$.arcWidth / 2 + $$.radiusExpanded * 1.1;\n        }\n    };\n\n    c3_chart_internal_fn.updateTargets = function (targets) {\n        var $$ = this;\n\n        /*-- Main --*/\n\n        //-- Text --//\n        $$.updateTargetsForText(targets);\n\n        //-- Bar --//\n        $$.updateTargetsForBar(targets);\n\n        //-- Line --//\n        $$.updateTargetsForLine(targets);\n\n        //-- Arc --//\n        if ($$.hasArcType() && $$.updateTargetsForArc) {\n            $$.updateTargetsForArc(targets);\n        }\n\n        /*-- Sub --*/\n\n        if ($$.updateTargetsForSubchart) {\n            $$.updateTargetsForSubchart(targets);\n        }\n\n        // Fade-in each chart\n        $$.showTargets();\n    };\n    c3_chart_internal_fn.showTargets = function () {\n        var $$ = this;\n        $$.svg.selectAll('.' + CLASS.target).filter(function (d) {\n            return $$.isTargetToShow(d.id);\n        }).transition().duration($$.config.transition_duration).style(\"opacity\", 1);\n    };\n\n    c3_chart_internal_fn.redraw = function (options, transitions) {\n        var $$ = this,\n            main = $$.main,\n            d3 = $$.d3,\n            config = $$.config;\n        var areaIndices = $$.getShapeIndices($$.isAreaType),\n            barIndices = $$.getShapeIndices($$.isBarType),\n            lineIndices = $$.getShapeIndices($$.isLineType);\n        var withY, withSubchart, withTransition, withTransitionForExit, withTransitionForAxis, withTransform, withUpdateXDomain, withUpdateOrgXDomain, withTrimXDomain, withLegend, withEventRect, withDimension, withUpdateXAxis;\n        var hideAxis = $$.hasArcType();\n        var drawArea, drawBar, drawLine, xForText, yForText;\n        var duration, durationForExit, durationForAxis;\n        var transitionsToWait, waitForDraw, flow, transition;\n        var targetsToShow = $$.filterTargetsToShow($$.data.targets),\n            tickValues,\n            i,\n            intervalForCulling,\n            xDomainForZoom;\n        var xv = $$.xv.bind($$),\n            cx,\n            cy;\n\n        options = options || {};\n        withY = getOption(options, \"withY\", true);\n        withSubchart = getOption(options, \"withSubchart\", true);\n        withTransition = getOption(options, \"withTransition\", true);\n        withTransform = getOption(options, \"withTransform\", false);\n        withUpdateXDomain = getOption(options, \"withUpdateXDomain\", false);\n        withUpdateOrgXDomain = getOption(options, \"withUpdateOrgXDomain\", false);\n        withTrimXDomain = getOption(options, \"withTrimXDomain\", true);\n        withUpdateXAxis = getOption(options, \"withUpdateXAxis\", withUpdateXDomain);\n        withLegend = getOption(options, \"withLegend\", false);\n        withEventRect = getOption(options, \"withEventRect\", true);\n        withDimension = getOption(options, \"withDimension\", true);\n        withTransitionForExit = getOption(options, \"withTransitionForExit\", withTransition);\n        withTransitionForAxis = getOption(options, \"withTransitionForAxis\", withTransition);\n\n        duration = withTransition ? config.transition_duration : 0;\n        durationForExit = withTransitionForExit ? duration : 0;\n        durationForAxis = withTransitionForAxis ? duration : 0;\n\n        transitions = transitions || $$.axis.generateTransitions(durationForAxis);\n\n        // update legend and transform each g\n        if (withLegend && config.legend_show) {\n            $$.updateLegend($$.mapToIds($$.data.targets), options, transitions);\n        } else if (withDimension) {\n            // need to update dimension (e.g. axis.y.tick.values) because y tick values should change\n            // no need to update axis in it because they will be updated in redraw()\n            $$.updateDimension(true);\n        }\n\n        // MEMO: needed for grids calculation\n        if ($$.isCategorized() && targetsToShow.length === 0) {\n            $$.x.domain([0, $$.axes.x.selectAll('.tick').size()]);\n        }\n\n        if (targetsToShow.length) {\n            $$.updateXDomain(targetsToShow, withUpdateXDomain, withUpdateOrgXDomain, withTrimXDomain);\n            if (!config.axis_x_tick_values) {\n                tickValues = $$.axis.updateXAxisTickValues(targetsToShow);\n            }\n        } else {\n            $$.xAxis.tickValues([]);\n            $$.subXAxis.tickValues([]);\n        }\n\n        if (config.zoom_rescale && !options.flow) {\n            xDomainForZoom = $$.x.orgDomain();\n        }\n\n        $$.y.domain($$.getYDomain(targetsToShow, 'y', xDomainForZoom));\n        $$.y2.domain($$.getYDomain(targetsToShow, 'y2', xDomainForZoom));\n\n        if (!config.axis_y_tick_values && config.axis_y_tick_count) {\n            $$.yAxis.tickValues($$.axis.generateTickValues($$.y.domain(), config.axis_y_tick_count));\n        }\n        if (!config.axis_y2_tick_values && config.axis_y2_tick_count) {\n            $$.y2Axis.tickValues($$.axis.generateTickValues($$.y2.domain(), config.axis_y2_tick_count));\n        }\n\n        // axes\n        $$.axis.redraw(durationForAxis, hideAxis);\n\n        // Update axis label\n        $$.axis.updateLabels(withTransition);\n\n        // show/hide if manual culling needed\n        if ((withUpdateXDomain || withUpdateXAxis) && targetsToShow.length) {\n            if (config.axis_x_tick_culling && tickValues) {\n                for (i = 1; i < tickValues.length; i++) {\n                    if (tickValues.length / i < config.axis_x_tick_culling_max) {\n                        intervalForCulling = i;\n                        break;\n                    }\n                }\n                $$.svg.selectAll('.' + CLASS.axisX + ' .tick text').each(function (e) {\n                    var index = tickValues.indexOf(e);\n                    if (index >= 0) {\n                        d3.select(this).style('display', index % intervalForCulling ? 'none' : 'block');\n                    }\n                });\n            } else {\n                $$.svg.selectAll('.' + CLASS.axisX + ' .tick text').style('display', 'block');\n            }\n        }\n\n        // setup drawer - MEMO: these must be called after axis updated\n        drawArea = $$.generateDrawArea ? $$.generateDrawArea(areaIndices, false) : undefined;\n        drawBar = $$.generateDrawBar ? $$.generateDrawBar(barIndices) : undefined;\n        drawLine = $$.generateDrawLine ? $$.generateDrawLine(lineIndices, false) : undefined;\n        xForText = $$.generateXYForText(areaIndices, barIndices, lineIndices, true);\n        yForText = $$.generateXYForText(areaIndices, barIndices, lineIndices, false);\n\n        // update circleY based on updated parameters\n        $$.updateCircleY();\n        // generate circle x/y functions depending on updated params\n        cx = ($$.config.axis_rotated ? $$.circleY : $$.circleX).bind($$);\n        cy = ($$.config.axis_rotated ? $$.circleX : $$.circleY).bind($$);\n\n        // Update sub domain\n        if (withY) {\n            $$.subY.domain($$.getYDomain(targetsToShow, 'y'));\n            $$.subY2.domain($$.getYDomain(targetsToShow, 'y2'));\n        }\n\n        // xgrid focus\n        $$.updateXgridFocus();\n\n        // Data empty label positioning and text.\n        main.select(\"text.\" + CLASS.text + '.' + CLASS.empty).attr(\"x\", $$.width / 2).attr(\"y\", $$.height / 2).text(config.data_empty_label_text).transition().style('opacity', targetsToShow.length ? 0 : 1);\n\n        // event rect\n        if (withEventRect) {\n            $$.redrawEventRect();\n        }\n\n        // grid\n        $$.updateGrid(duration);\n\n        // rect for regions\n        $$.updateRegion(duration);\n\n        // bars\n        $$.updateBar(durationForExit);\n\n        // lines, areas and cricles\n        $$.updateLine(durationForExit);\n        $$.updateArea(durationForExit);\n        $$.updateCircle(cx, cy);\n\n        // text\n        if ($$.hasDataLabel()) {\n            $$.updateText(xForText, yForText, durationForExit);\n        }\n\n        // title\n        if ($$.redrawTitle) {\n            $$.redrawTitle();\n        }\n\n        // arc\n        if ($$.redrawArc) {\n            $$.redrawArc(duration, durationForExit, withTransform);\n        }\n\n        // subchart\n        if ($$.redrawSubchart) {\n            $$.redrawSubchart(withSubchart, transitions, duration, durationForExit, areaIndices, barIndices, lineIndices);\n        }\n\n        // circles for select\n        main.selectAll('.' + CLASS.selectedCircles).filter($$.isBarType.bind($$)).selectAll('circle').remove();\n\n        if (options.flow) {\n            flow = $$.generateFlow({\n                targets: targetsToShow,\n                flow: options.flow,\n                duration: options.flow.duration,\n                drawBar: drawBar,\n                drawLine: drawLine,\n                drawArea: drawArea,\n                cx: cx,\n                cy: cy,\n                xv: xv,\n                xForText: xForText,\n                yForText: yForText\n            });\n        }\n\n        if ($$.isTabVisible()) {\n            // Only use transition if tab visible. See #938.\n            if (duration) {\n                // transition should be derived from one transition\n                transition = d3.transition().duration(duration);\n                transitionsToWait = [];\n                [$$.redrawBar(drawBar, true, transition), $$.redrawLine(drawLine, true, transition), $$.redrawArea(drawArea, true, transition), $$.redrawCircle(cx, cy, true, transition), $$.redrawText(xForText, yForText, options.flow, true, transition), $$.redrawRegion(true, transition), $$.redrawGrid(true, transition)].forEach(function (transitions) {\n                    transitions.forEach(function (transition) {\n                        transitionsToWait.push(transition);\n                    });\n                });\n                // Wait for end of transitions to call flow and onrendered callback\n                waitForDraw = $$.generateWait();\n                transitionsToWait.forEach(function (t) {\n                    waitForDraw.add(t);\n                });\n                waitForDraw(function () {\n                    if (flow) {\n                        flow();\n                    }\n                    if (config.onrendered) {\n                        config.onrendered.call($$);\n                    }\n                });\n            } else {\n                $$.redrawBar(drawBar);\n                $$.redrawLine(drawLine);\n                $$.redrawArea(drawArea);\n                $$.redrawCircle(cx, cy);\n                $$.redrawText(xForText, yForText, options.flow);\n                $$.redrawRegion();\n                $$.redrawGrid();\n                if (flow) {\n                    flow();\n                }\n                if (config.onrendered) {\n                    config.onrendered.call($$);\n                }\n            }\n        }\n\n        // update fadein condition\n        $$.mapToIds($$.data.targets).forEach(function (id) {\n            $$.withoutFadeIn[id] = true;\n        });\n    };\n\n    c3_chart_internal_fn.updateAndRedraw = function (options) {\n        var $$ = this,\n            config = $$.config,\n            transitions;\n        options = options || {};\n        // same with redraw\n        options.withTransition = getOption(options, \"withTransition\", true);\n        options.withTransform = getOption(options, \"withTransform\", false);\n        options.withLegend = getOption(options, \"withLegend\", false);\n        // NOT same with redraw\n        options.withUpdateXDomain = getOption(options, \"withUpdateXDomain\", true);\n        options.withUpdateOrgXDomain = getOption(options, \"withUpdateOrgXDomain\", true);\n        options.withTransitionForExit = false;\n        options.withTransitionForTransform = getOption(options, \"withTransitionForTransform\", options.withTransition);\n        // MEMO: this needs to be called before updateLegend and it means this ALWAYS needs to be called)\n        $$.updateSizes();\n        // MEMO: called in updateLegend in redraw if withLegend\n        if (!(options.withLegend && config.legend_show)) {\n            transitions = $$.axis.generateTransitions(options.withTransitionForAxis ? config.transition_duration : 0);\n            // Update scales\n            $$.updateScales();\n            $$.updateSvgSize();\n            // Update g positions\n            $$.transformAll(options.withTransitionForTransform, transitions);\n        }\n        // Draw with new sizes & scales\n        $$.redraw(options, transitions);\n    };\n    c3_chart_internal_fn.redrawWithoutRescale = function () {\n        this.redraw({\n            withY: false,\n            withSubchart: false,\n            withEventRect: false,\n            withTransitionForAxis: false\n        });\n    };\n\n    c3_chart_internal_fn.isTimeSeries = function () {\n        return this.config.axis_x_type === 'timeseries';\n    };\n    c3_chart_internal_fn.isCategorized = function () {\n        return this.config.axis_x_type.indexOf('categor') >= 0;\n    };\n    c3_chart_internal_fn.isCustomX = function () {\n        var $$ = this,\n            config = $$.config;\n        return !$$.isTimeSeries() && (config.data_x || notEmpty(config.data_xs));\n    };\n\n    c3_chart_internal_fn.isTimeSeriesY = function () {\n        return this.config.axis_y_type === 'timeseries';\n    };\n\n    c3_chart_internal_fn.getTranslate = function (target) {\n        var $$ = this,\n            config = $$.config,\n            x,\n            y;\n        if (target === 'main') {\n            x = asHalfPixel($$.margin.left);\n            y = asHalfPixel($$.margin.top);\n        } else if (target === 'context') {\n            x = asHalfPixel($$.margin2.left);\n            y = asHalfPixel($$.margin2.top);\n        } else if (target === 'legend') {\n            x = $$.margin3.left;\n            y = $$.margin3.top;\n        } else if (target === 'x') {\n            x = 0;\n            y = config.axis_rotated ? 0 : $$.height;\n        } else if (target === 'y') {\n            x = 0;\n            y = config.axis_rotated ? $$.height : 0;\n        } else if (target === 'y2') {\n            x = config.axis_rotated ? 0 : $$.width;\n            y = config.axis_rotated ? 1 : 0;\n        } else if (target === 'subx') {\n            x = 0;\n            y = config.axis_rotated ? 0 : $$.height2;\n        } else if (target === 'arc') {\n            x = $$.arcWidth / 2;\n            y = $$.arcHeight / 2 - ($$.hasType('gauge') ? 6 : 0); // to prevent wrong display of min and max label\n        }\n        return \"translate(\" + x + \",\" + y + \")\";\n    };\n    c3_chart_internal_fn.initialOpacity = function (d) {\n        return d.value !== null && this.withoutFadeIn[d.id] ? 1 : 0;\n    };\n    c3_chart_internal_fn.initialOpacityForCircle = function (d) {\n        return d.value !== null && this.withoutFadeIn[d.id] ? this.opacityForCircle(d) : 0;\n    };\n    c3_chart_internal_fn.opacityForCircle = function (d) {\n        var isPointShouldBeShown = isFunction(this.config.point_show) ? this.config.point_show(d) : this.config.point_show;\n        var opacity = isPointShouldBeShown ? 1 : 0;\n        return isValue(d.value) ? this.isScatterType(d) ? 0.5 : opacity : 0;\n    };\n    c3_chart_internal_fn.opacityForText = function () {\n        return this.hasDataLabel() ? 1 : 0;\n    };\n    c3_chart_internal_fn.xx = function (d) {\n        return d ? this.x(d.x) : null;\n    };\n    c3_chart_internal_fn.xv = function (d) {\n        var $$ = this,\n            value = d.value;\n        if ($$.isTimeSeries()) {\n            value = $$.parseDate(d.value);\n        } else if ($$.isCategorized() && typeof d.value === 'string') {\n            value = $$.config.axis_x_categories.indexOf(d.value);\n        }\n        return Math.ceil($$.x(value));\n    };\n    c3_chart_internal_fn.yv = function (d) {\n        var $$ = this,\n            yScale = d.axis && d.axis === 'y2' ? $$.y2 : $$.y;\n        return Math.ceil(yScale(d.value));\n    };\n    c3_chart_internal_fn.subxx = function (d) {\n        return d ? this.subX(d.x) : null;\n    };\n\n    c3_chart_internal_fn.transformMain = function (withTransition, transitions) {\n        var $$ = this,\n            xAxis,\n            yAxis,\n            y2Axis;\n        if (transitions && transitions.axisX) {\n            xAxis = transitions.axisX;\n        } else {\n            xAxis = $$.main.select('.' + CLASS.axisX);\n            if (withTransition) {\n                xAxis = xAxis.transition();\n            }\n        }\n        if (transitions && transitions.axisY) {\n            yAxis = transitions.axisY;\n        } else {\n            yAxis = $$.main.select('.' + CLASS.axisY);\n            if (withTransition) {\n                yAxis = yAxis.transition();\n            }\n        }\n        if (transitions && transitions.axisY2) {\n            y2Axis = transitions.axisY2;\n        } else {\n            y2Axis = $$.main.select('.' + CLASS.axisY2);\n            if (withTransition) {\n                y2Axis = y2Axis.transition();\n            }\n        }\n        (withTransition ? $$.main.transition() : $$.main).attr(\"transform\", $$.getTranslate('main'));\n        xAxis.attr(\"transform\", $$.getTranslate('x'));\n        yAxis.attr(\"transform\", $$.getTranslate('y'));\n        y2Axis.attr(\"transform\", $$.getTranslate('y2'));\n        $$.main.select('.' + CLASS.chartArcs).attr(\"transform\", $$.getTranslate('arc'));\n    };\n    c3_chart_internal_fn.transformAll = function (withTransition, transitions) {\n        var $$ = this;\n        $$.transformMain(withTransition, transitions);\n        if ($$.config.subchart_show) {\n            $$.transformContext(withTransition, transitions);\n        }\n        if ($$.legend) {\n            $$.transformLegend(withTransition);\n        }\n    };\n\n    c3_chart_internal_fn.updateSvgSize = function () {\n        var $$ = this,\n            brush = $$.svg.select(\".c3-brush .overlay\");\n        $$.svg.attr('width', $$.currentWidth).attr('height', $$.currentHeight);\n        $$.svg.selectAll(['#' + $$.clipId, '#' + $$.clipIdForGrid]).select('rect').attr('width', $$.width).attr('height', $$.height);\n        $$.svg.select('#' + $$.clipIdForXAxis).select('rect').attr('x', $$.getXAxisClipX.bind($$)).attr('y', $$.getXAxisClipY.bind($$)).attr('width', $$.getXAxisClipWidth.bind($$)).attr('height', $$.getXAxisClipHeight.bind($$));\n        $$.svg.select('#' + $$.clipIdForYAxis).select('rect').attr('x', $$.getYAxisClipX.bind($$)).attr('y', $$.getYAxisClipY.bind($$)).attr('width', $$.getYAxisClipWidth.bind($$)).attr('height', $$.getYAxisClipHeight.bind($$));\n        $$.svg.select('#' + $$.clipIdForSubchart).select('rect').attr('width', $$.width).attr('height', brush.size() ? brush.attr('height') : 0);\n        // MEMO: parent div's height will be bigger than svg when <!DOCTYPE html>\n        $$.selectChart.style('max-height', $$.currentHeight + \"px\");\n    };\n\n    c3_chart_internal_fn.updateDimension = function (withoutAxis) {\n        var $$ = this;\n        if (!withoutAxis) {\n            if ($$.config.axis_rotated) {\n                $$.axes.x.call($$.xAxis);\n                $$.axes.subx.call($$.subXAxis);\n            } else {\n                $$.axes.y.call($$.yAxis);\n                $$.axes.y2.call($$.y2Axis);\n            }\n        }\n        $$.updateSizes();\n        $$.updateScales();\n        $$.updateSvgSize();\n        $$.transformAll(false);\n    };\n\n    c3_chart_internal_fn.observeInserted = function (selection) {\n        var $$ = this,\n            observer;\n        if (typeof MutationObserver === 'undefined') {\n            window.console.error(\"MutationObserver not defined.\");\n            return;\n        }\n        observer = new MutationObserver(function (mutations) {\n            mutations.forEach(function (mutation) {\n                if (mutation.type === 'childList' && mutation.previousSibling) {\n                    observer.disconnect();\n                    // need to wait for completion of load because size calculation requires the actual sizes determined after that completion\n                    $$.intervalForObserveInserted = window.setInterval(function () {\n                        // parentNode will NOT be null when completed\n                        if (selection.node().parentNode) {\n                            window.clearInterval($$.intervalForObserveInserted);\n                            $$.updateDimension();\n                            if ($$.brush) {\n                                $$.brush.update();\n                            }\n                            $$.config.oninit.call($$);\n                            $$.redraw({\n                                withTransform: true,\n                                withUpdateXDomain: true,\n                                withUpdateOrgXDomain: true,\n                                withTransition: false,\n                                withTransitionForTransform: false,\n                                withLegend: true\n                            });\n                            selection.transition().style('opacity', 1);\n                        }\n                    }, 10);\n                }\n            });\n        });\n        observer.observe(selection.node(), { attributes: true, childList: true, characterData: true });\n    };\n\n    c3_chart_internal_fn.bindResize = function () {\n        var $$ = this,\n            config = $$.config;\n\n        $$.resizeFunction = $$.generateResize(); // need to call .remove\n\n        $$.resizeFunction.add(function () {\n            config.onresize.call($$);\n        });\n        if (config.resize_auto) {\n            $$.resizeFunction.add(function () {\n                if ($$.resizeTimeout !== undefined) {\n                    window.clearTimeout($$.resizeTimeout);\n                }\n                $$.resizeTimeout = window.setTimeout(function () {\n                    delete $$.resizeTimeout;\n                    $$.updateAndRedraw({\n                        withUpdateXDomain: false,\n                        withUpdateOrgXDomain: false,\n                        withTransition: false,\n                        withTransitionForTransform: false,\n                        withLegend: true\n                    });\n                    if ($$.brush) {\n                        $$.brush.update();\n                    }\n                }, 100);\n            });\n        }\n        $$.resizeFunction.add(function () {\n            config.onresized.call($$);\n        });\n\n        $$.resizeIfElementDisplayed = function () {\n            // if element not displayed skip it\n            if ($$.api == null || !$$.api.element.offsetParent) {\n                return;\n            }\n\n            $$.resizeFunction();\n        };\n\n        if (window.attachEvent) {\n            window.attachEvent('onresize', $$.resizeIfElementDisplayed);\n        } else if (window.addEventListener) {\n            window.addEventListener('resize', $$.resizeIfElementDisplayed, false);\n        } else {\n            // fallback to this, if this is a very old browser\n            var wrapper = window.onresize;\n            if (!wrapper) {\n                // create a wrapper that will call all charts\n                wrapper = $$.generateResize();\n            } else if (!wrapper.add || !wrapper.remove) {\n                // there is already a handler registered, make sure we call it too\n                wrapper = $$.generateResize();\n                wrapper.add(window.onresize);\n            }\n            // add this graph to the wrapper, we will be removed if the user calls destroy\n            wrapper.add($$.resizeFunction);\n            window.onresize = function () {\n                // if element not displayed skip it\n                if (!$$.api.element.offsetParent) {\n                    return;\n                }\n\n                wrapper();\n            };\n        }\n    };\n\n    c3_chart_internal_fn.generateResize = function () {\n        var resizeFunctions = [];\n        function callResizeFunctions() {\n            resizeFunctions.forEach(function (f) {\n                f();\n            });\n        }\n        callResizeFunctions.add = function (f) {\n            resizeFunctions.push(f);\n        };\n        callResizeFunctions.remove = function (f) {\n            for (var i = 0; i < resizeFunctions.length; i++) {\n                if (resizeFunctions[i] === f) {\n                    resizeFunctions.splice(i, 1);\n                    break;\n                }\n            }\n        };\n        return callResizeFunctions;\n    };\n\n    c3_chart_internal_fn.endall = function (transition, callback) {\n        var n = 0;\n        transition.each(function () {\n            ++n;\n        }).on(\"end\", function () {\n            if (! --n) {\n                callback.apply(this, arguments);\n            }\n        });\n    };\n    c3_chart_internal_fn.generateWait = function () {\n        var transitionsToWait = [],\n            f = function f(callback) {\n            var timer = setInterval(function () {\n                var done = 0;\n                transitionsToWait.forEach(function (t) {\n                    if (t.empty()) {\n                        done += 1;\n                        return;\n                    }\n                    try {\n                        t.transition();\n                    } catch (e) {\n                        done += 1;\n                    }\n                });\n                if (done === transitionsToWait.length) {\n                    clearInterval(timer);\n                    if (callback) {\n                        callback();\n                    }\n                }\n            }, 50);\n        };\n        f.add = function (transition) {\n            transitionsToWait.push(transition);\n        };\n        return f;\n    };\n\n    c3_chart_internal_fn.parseDate = function (date) {\n        var $$ = this,\n            parsedDate;\n        if (date instanceof Date) {\n            parsedDate = date;\n        } else if (typeof date === 'string') {\n            parsedDate = $$.dataTimeParse(date);\n        } else if ((typeof date === 'undefined' ? 'undefined' : _typeof(date)) === 'object') {\n            parsedDate = new Date(+date);\n        } else if (typeof date === 'number' && !isNaN(date)) {\n            parsedDate = new Date(+date);\n        }\n        if (!parsedDate || isNaN(+parsedDate)) {\n            window.console.error(\"Failed to parse x '\" + date + \"' to Date object\");\n        }\n        return parsedDate;\n    };\n\n    c3_chart_internal_fn.isTabVisible = function () {\n        var hidden;\n        if (typeof document.hidden !== \"undefined\") {\n            // Opera 12.10 and Firefox 18 and later support\n            hidden = \"hidden\";\n        } else if (typeof document.mozHidden !== \"undefined\") {\n            hidden = \"mozHidden\";\n        } else if (typeof document.msHidden !== \"undefined\") {\n            hidden = \"msHidden\";\n        } else if (typeof document.webkitHidden !== \"undefined\") {\n            hidden = \"webkitHidden\";\n        }\n\n        return document[hidden] ? false : true;\n    };\n\n    c3_chart_internal_fn.isValue = isValue;\n    c3_chart_internal_fn.isFunction = isFunction;\n    c3_chart_internal_fn.isString = isString;\n    c3_chart_internal_fn.isUndefined = isUndefined;\n    c3_chart_internal_fn.isDefined = isDefined;\n    c3_chart_internal_fn.ceil10 = ceil10;\n    c3_chart_internal_fn.asHalfPixel = asHalfPixel;\n    c3_chart_internal_fn.diffDomain = diffDomain;\n    c3_chart_internal_fn.isEmpty = isEmpty;\n    c3_chart_internal_fn.notEmpty = notEmpty;\n    c3_chart_internal_fn.notEmpty = notEmpty;\n    c3_chart_internal_fn.getOption = getOption;\n    c3_chart_internal_fn.hasValue = hasValue;\n    c3_chart_internal_fn.sanitise = sanitise;\n    c3_chart_internal_fn.getPathBox = getPathBox;\n    c3_chart_internal_fn.CLASS = CLASS;\n\n    /* jshint ignore:start */\n\n    // PhantomJS doesn't have support for Function.prototype.bind, which has caused confusion. Use\n    // this polyfill to avoid the confusion.\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/bind#Polyfill\n\n    if (!Function.prototype.bind) {\n        Function.prototype.bind = function (oThis) {\n            if (typeof this !== 'function') {\n                // closest thing possible to the ECMAScript 5\n                // internal IsCallable function\n                throw new TypeError('Function.prototype.bind - what is trying to be bound is not callable');\n            }\n\n            var aArgs = Array.prototype.slice.call(arguments, 1),\n                fToBind = this,\n                fNOP = function fNOP() {},\n                fBound = function fBound() {\n                return fToBind.apply(this instanceof fNOP ? this : oThis, aArgs.concat(Array.prototype.slice.call(arguments)));\n            };\n\n            fNOP.prototype = this.prototype;\n            fBound.prototype = new fNOP();\n\n            return fBound;\n        };\n    }\n\n    // SVGPathSeg API polyfill\n    // https://github.com/progers/pathseg\n    //\n    // This is a drop-in replacement for the SVGPathSeg and SVGPathSegList APIs that were removed from\n    // SVG2 (https://lists.w3.org/Archives/Public/www-svg/2015Jun/0044.html), including the latest spec\n    // changes which were implemented in Firefox 43 and Chrome 46.\n\n    (function () {\n\n        if (!(\"SVGPathSeg\" in window)) {\n            // Spec: http://www.w3.org/TR/SVG11/single-page.html#paths-InterfaceSVGPathSeg\n            window.SVGPathSeg = function (type, typeAsLetter, owningPathSegList) {\n                this.pathSegType = type;\n                this.pathSegTypeAsLetter = typeAsLetter;\n                this._owningPathSegList = owningPathSegList;\n            };\n\n            window.SVGPathSeg.prototype.classname = \"SVGPathSeg\";\n\n            window.SVGPathSeg.PATHSEG_UNKNOWN = 0;\n            window.SVGPathSeg.PATHSEG_CLOSEPATH = 1;\n            window.SVGPathSeg.PATHSEG_MOVETO_ABS = 2;\n            window.SVGPathSeg.PATHSEG_MOVETO_REL = 3;\n            window.SVGPathSeg.PATHSEG_LINETO_ABS = 4;\n            window.SVGPathSeg.PATHSEG_LINETO_REL = 5;\n            window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_ABS = 6;\n            window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_REL = 7;\n            window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_ABS = 8;\n            window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_REL = 9;\n            window.SVGPathSeg.PATHSEG_ARC_ABS = 10;\n            window.SVGPathSeg.PATHSEG_ARC_REL = 11;\n            window.SVGPathSeg.PATHSEG_LINETO_HORIZONTAL_ABS = 12;\n            window.SVGPathSeg.PATHSEG_LINETO_HORIZONTAL_REL = 13;\n            window.SVGPathSeg.PATHSEG_LINETO_VERTICAL_ABS = 14;\n            window.SVGPathSeg.PATHSEG_LINETO_VERTICAL_REL = 15;\n            window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_SMOOTH_ABS = 16;\n            window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_SMOOTH_REL = 17;\n            window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS = 18;\n            window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL = 19;\n\n            // Notify owning PathSegList on any changes so they can be synchronized back to the path element.\n            window.SVGPathSeg.prototype._segmentChanged = function () {\n                if (this._owningPathSegList) this._owningPathSegList.segmentChanged(this);\n            };\n\n            window.SVGPathSegClosePath = function (owningPathSegList) {\n                window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_CLOSEPATH, \"z\", owningPathSegList);\n            };\n            window.SVGPathSegClosePath.prototype = Object.create(window.SVGPathSeg.prototype);\n            window.SVGPathSegClosePath.prototype.toString = function () {\n                return \"[object SVGPathSegClosePath]\";\n            };\n            window.SVGPathSegClosePath.prototype._asPathString = function () {\n                return this.pathSegTypeAsLetter;\n            };\n            window.SVGPathSegClosePath.prototype.clone = function () {\n                return new window.SVGPathSegClosePath(undefined);\n            };\n\n            window.SVGPathSegMovetoAbs = function (owningPathSegList, x, y) {\n                window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_MOVETO_ABS, \"M\", owningPathSegList);\n                this._x = x;\n                this._y = y;\n            };\n            window.SVGPathSegMovetoAbs.prototype = Object.create(window.SVGPathSeg.prototype);\n            window.SVGPathSegMovetoAbs.prototype.toString = function () {\n                return \"[object SVGPathSegMovetoAbs]\";\n            };\n            window.SVGPathSegMovetoAbs.prototype._asPathString = function () {\n                return this.pathSegTypeAsLetter + \" \" + this._x + \" \" + this._y;\n            };\n            window.SVGPathSegMovetoAbs.prototype.clone = function () {\n                return new window.SVGPathSegMovetoAbs(undefined, this._x, this._y);\n            };\n            Object.defineProperty(window.SVGPathSegMovetoAbs.prototype, \"x\", { get: function get() {\n                    return this._x;\n                }, set: function set(x) {\n                    this._x = x;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegMovetoAbs.prototype, \"y\", { get: function get() {\n                    return this._y;\n                }, set: function set(y) {\n                    this._y = y;this._segmentChanged();\n                }, enumerable: true });\n\n            window.SVGPathSegMovetoRel = function (owningPathSegList, x, y) {\n                window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_MOVETO_REL, \"m\", owningPathSegList);\n                this._x = x;\n                this._y = y;\n            };\n            window.SVGPathSegMovetoRel.prototype = Object.create(window.SVGPathSeg.prototype);\n            window.SVGPathSegMovetoRel.prototype.toString = function () {\n                return \"[object SVGPathSegMovetoRel]\";\n            };\n            window.SVGPathSegMovetoRel.prototype._asPathString = function () {\n                return this.pathSegTypeAsLetter + \" \" + this._x + \" \" + this._y;\n            };\n            window.SVGPathSegMovetoRel.prototype.clone = function () {\n                return new window.SVGPathSegMovetoRel(undefined, this._x, this._y);\n            };\n            Object.defineProperty(window.SVGPathSegMovetoRel.prototype, \"x\", { get: function get() {\n                    return this._x;\n                }, set: function set(x) {\n                    this._x = x;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegMovetoRel.prototype, \"y\", { get: function get() {\n                    return this._y;\n                }, set: function set(y) {\n                    this._y = y;this._segmentChanged();\n                }, enumerable: true });\n\n            window.SVGPathSegLinetoAbs = function (owningPathSegList, x, y) {\n                window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_LINETO_ABS, \"L\", owningPathSegList);\n                this._x = x;\n                this._y = y;\n            };\n            window.SVGPathSegLinetoAbs.prototype = Object.create(window.SVGPathSeg.prototype);\n            window.SVGPathSegLinetoAbs.prototype.toString = function () {\n                return \"[object SVGPathSegLinetoAbs]\";\n            };\n            window.SVGPathSegLinetoAbs.prototype._asPathString = function () {\n                return this.pathSegTypeAsLetter + \" \" + this._x + \" \" + this._y;\n            };\n            window.SVGPathSegLinetoAbs.prototype.clone = function () {\n                return new window.SVGPathSegLinetoAbs(undefined, this._x, this._y);\n            };\n            Object.defineProperty(window.SVGPathSegLinetoAbs.prototype, \"x\", { get: function get() {\n                    return this._x;\n                }, set: function set(x) {\n                    this._x = x;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegLinetoAbs.prototype, \"y\", { get: function get() {\n                    return this._y;\n                }, set: function set(y) {\n                    this._y = y;this._segmentChanged();\n                }, enumerable: true });\n\n            window.SVGPathSegLinetoRel = function (owningPathSegList, x, y) {\n                window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_LINETO_REL, \"l\", owningPathSegList);\n                this._x = x;\n                this._y = y;\n            };\n            window.SVGPathSegLinetoRel.prototype = Object.create(window.SVGPathSeg.prototype);\n            window.SVGPathSegLinetoRel.prototype.toString = function () {\n                return \"[object SVGPathSegLinetoRel]\";\n            };\n            window.SVGPathSegLinetoRel.prototype._asPathString = function () {\n                return this.pathSegTypeAsLetter + \" \" + this._x + \" \" + this._y;\n            };\n            window.SVGPathSegLinetoRel.prototype.clone = function () {\n                return new window.SVGPathSegLinetoRel(undefined, this._x, this._y);\n            };\n            Object.defineProperty(window.SVGPathSegLinetoRel.prototype, \"x\", { get: function get() {\n                    return this._x;\n                }, set: function set(x) {\n                    this._x = x;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegLinetoRel.prototype, \"y\", { get: function get() {\n                    return this._y;\n                }, set: function set(y) {\n                    this._y = y;this._segmentChanged();\n                }, enumerable: true });\n\n            window.SVGPathSegCurvetoCubicAbs = function (owningPathSegList, x, y, x1, y1, x2, y2) {\n                window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_ABS, \"C\", owningPathSegList);\n                this._x = x;\n                this._y = y;\n                this._x1 = x1;\n                this._y1 = y1;\n                this._x2 = x2;\n                this._y2 = y2;\n            };\n            window.SVGPathSegCurvetoCubicAbs.prototype = Object.create(window.SVGPathSeg.prototype);\n            window.SVGPathSegCurvetoCubicAbs.prototype.toString = function () {\n                return \"[object SVGPathSegCurvetoCubicAbs]\";\n            };\n            window.SVGPathSegCurvetoCubicAbs.prototype._asPathString = function () {\n                return this.pathSegTypeAsLetter + \" \" + this._x1 + \" \" + this._y1 + \" \" + this._x2 + \" \" + this._y2 + \" \" + this._x + \" \" + this._y;\n            };\n            window.SVGPathSegCurvetoCubicAbs.prototype.clone = function () {\n                return new window.SVGPathSegCurvetoCubicAbs(undefined, this._x, this._y, this._x1, this._y1, this._x2, this._y2);\n            };\n            Object.defineProperty(window.SVGPathSegCurvetoCubicAbs.prototype, \"x\", { get: function get() {\n                    return this._x;\n                }, set: function set(x) {\n                    this._x = x;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegCurvetoCubicAbs.prototype, \"y\", { get: function get() {\n                    return this._y;\n                }, set: function set(y) {\n                    this._y = y;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegCurvetoCubicAbs.prototype, \"x1\", { get: function get() {\n                    return this._x1;\n                }, set: function set(x1) {\n                    this._x1 = x1;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegCurvetoCubicAbs.prototype, \"y1\", { get: function get() {\n                    return this._y1;\n                }, set: function set(y1) {\n                    this._y1 = y1;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegCurvetoCubicAbs.prototype, \"x2\", { get: function get() {\n                    return this._x2;\n                }, set: function set(x2) {\n                    this._x2 = x2;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegCurvetoCubicAbs.prototype, \"y2\", { get: function get() {\n                    return this._y2;\n                }, set: function set(y2) {\n                    this._y2 = y2;this._segmentChanged();\n                }, enumerable: true });\n\n            window.SVGPathSegCurvetoCubicRel = function (owningPathSegList, x, y, x1, y1, x2, y2) {\n                window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_REL, \"c\", owningPathSegList);\n                this._x = x;\n                this._y = y;\n                this._x1 = x1;\n                this._y1 = y1;\n                this._x2 = x2;\n                this._y2 = y2;\n            };\n            window.SVGPathSegCurvetoCubicRel.prototype = Object.create(window.SVGPathSeg.prototype);\n            window.SVGPathSegCurvetoCubicRel.prototype.toString = function () {\n                return \"[object SVGPathSegCurvetoCubicRel]\";\n            };\n            window.SVGPathSegCurvetoCubicRel.prototype._asPathString = function () {\n                return this.pathSegTypeAsLetter + \" \" + this._x1 + \" \" + this._y1 + \" \" + this._x2 + \" \" + this._y2 + \" \" + this._x + \" \" + this._y;\n            };\n            window.SVGPathSegCurvetoCubicRel.prototype.clone = function () {\n                return new window.SVGPathSegCurvetoCubicRel(undefined, this._x, this._y, this._x1, this._y1, this._x2, this._y2);\n            };\n            Object.defineProperty(window.SVGPathSegCurvetoCubicRel.prototype, \"x\", { get: function get() {\n                    return this._x;\n                }, set: function set(x) {\n                    this._x = x;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegCurvetoCubicRel.prototype, \"y\", { get: function get() {\n                    return this._y;\n                }, set: function set(y) {\n                    this._y = y;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegCurvetoCubicRel.prototype, \"x1\", { get: function get() {\n                    return this._x1;\n                }, set: function set(x1) {\n                    this._x1 = x1;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegCurvetoCubicRel.prototype, \"y1\", { get: function get() {\n                    return this._y1;\n                }, set: function set(y1) {\n                    this._y1 = y1;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegCurvetoCubicRel.prototype, \"x2\", { get: function get() {\n                    return this._x2;\n                }, set: function set(x2) {\n                    this._x2 = x2;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegCurvetoCubicRel.prototype, \"y2\", { get: function get() {\n                    return this._y2;\n                }, set: function set(y2) {\n                    this._y2 = y2;this._segmentChanged();\n                }, enumerable: true });\n\n            window.SVGPathSegCurvetoQuadraticAbs = function (owningPathSegList, x, y, x1, y1) {\n                window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_ABS, \"Q\", owningPathSegList);\n                this._x = x;\n                this._y = y;\n                this._x1 = x1;\n                this._y1 = y1;\n            };\n            window.SVGPathSegCurvetoQuadraticAbs.prototype = Object.create(window.SVGPathSeg.prototype);\n            window.SVGPathSegCurvetoQuadraticAbs.prototype.toString = function () {\n                return \"[object SVGPathSegCurvetoQuadraticAbs]\";\n            };\n            window.SVGPathSegCurvetoQuadraticAbs.prototype._asPathString = function () {\n                return this.pathSegTypeAsLetter + \" \" + this._x1 + \" \" + this._y1 + \" \" + this._x + \" \" + this._y;\n            };\n            window.SVGPathSegCurvetoQuadraticAbs.prototype.clone = function () {\n                return new window.SVGPathSegCurvetoQuadraticAbs(undefined, this._x, this._y, this._x1, this._y1);\n            };\n            Object.defineProperty(window.SVGPathSegCurvetoQuadraticAbs.prototype, \"x\", { get: function get() {\n                    return this._x;\n                }, set: function set(x) {\n                    this._x = x;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegCurvetoQuadraticAbs.prototype, \"y\", { get: function get() {\n                    return this._y;\n                }, set: function set(y) {\n                    this._y = y;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegCurvetoQuadraticAbs.prototype, \"x1\", { get: function get() {\n                    return this._x1;\n                }, set: function set(x1) {\n                    this._x1 = x1;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegCurvetoQuadraticAbs.prototype, \"y1\", { get: function get() {\n                    return this._y1;\n                }, set: function set(y1) {\n                    this._y1 = y1;this._segmentChanged();\n                }, enumerable: true });\n\n            window.SVGPathSegCurvetoQuadraticRel = function (owningPathSegList, x, y, x1, y1) {\n                window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_REL, \"q\", owningPathSegList);\n                this._x = x;\n                this._y = y;\n                this._x1 = x1;\n                this._y1 = y1;\n            };\n            window.SVGPathSegCurvetoQuadraticRel.prototype = Object.create(window.SVGPathSeg.prototype);\n            window.SVGPathSegCurvetoQuadraticRel.prototype.toString = function () {\n                return \"[object SVGPathSegCurvetoQuadraticRel]\";\n            };\n            window.SVGPathSegCurvetoQuadraticRel.prototype._asPathString = function () {\n                return this.pathSegTypeAsLetter + \" \" + this._x1 + \" \" + this._y1 + \" \" + this._x + \" \" + this._y;\n            };\n            window.SVGPathSegCurvetoQuadraticRel.prototype.clone = function () {\n                return new window.SVGPathSegCurvetoQuadraticRel(undefined, this._x, this._y, this._x1, this._y1);\n            };\n            Object.defineProperty(window.SVGPathSegCurvetoQuadraticRel.prototype, \"x\", { get: function get() {\n                    return this._x;\n                }, set: function set(x) {\n                    this._x = x;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegCurvetoQuadraticRel.prototype, \"y\", { get: function get() {\n                    return this._y;\n                }, set: function set(y) {\n                    this._y = y;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegCurvetoQuadraticRel.prototype, \"x1\", { get: function get() {\n                    return this._x1;\n                }, set: function set(x1) {\n                    this._x1 = x1;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegCurvetoQuadraticRel.prototype, \"y1\", { get: function get() {\n                    return this._y1;\n                }, set: function set(y1) {\n                    this._y1 = y1;this._segmentChanged();\n                }, enumerable: true });\n\n            window.SVGPathSegArcAbs = function (owningPathSegList, x, y, r1, r2, angle, largeArcFlag, sweepFlag) {\n                window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_ARC_ABS, \"A\", owningPathSegList);\n                this._x = x;\n                this._y = y;\n                this._r1 = r1;\n                this._r2 = r2;\n                this._angle = angle;\n                this._largeArcFlag = largeArcFlag;\n                this._sweepFlag = sweepFlag;\n            };\n            window.SVGPathSegArcAbs.prototype = Object.create(window.SVGPathSeg.prototype);\n            window.SVGPathSegArcAbs.prototype.toString = function () {\n                return \"[object SVGPathSegArcAbs]\";\n            };\n            window.SVGPathSegArcAbs.prototype._asPathString = function () {\n                return this.pathSegTypeAsLetter + \" \" + this._r1 + \" \" + this._r2 + \" \" + this._angle + \" \" + (this._largeArcFlag ? \"1\" : \"0\") + \" \" + (this._sweepFlag ? \"1\" : \"0\") + \" \" + this._x + \" \" + this._y;\n            };\n            window.SVGPathSegArcAbs.prototype.clone = function () {\n                return new window.SVGPathSegArcAbs(undefined, this._x, this._y, this._r1, this._r2, this._angle, this._largeArcFlag, this._sweepFlag);\n            };\n            Object.defineProperty(window.SVGPathSegArcAbs.prototype, \"x\", { get: function get() {\n                    return this._x;\n                }, set: function set(x) {\n                    this._x = x;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegArcAbs.prototype, \"y\", { get: function get() {\n                    return this._y;\n                }, set: function set(y) {\n                    this._y = y;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegArcAbs.prototype, \"r1\", { get: function get() {\n                    return this._r1;\n                }, set: function set(r1) {\n                    this._r1 = r1;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegArcAbs.prototype, \"r2\", { get: function get() {\n                    return this._r2;\n                }, set: function set(r2) {\n                    this._r2 = r2;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegArcAbs.prototype, \"angle\", { get: function get() {\n                    return this._angle;\n                }, set: function set(angle) {\n                    this._angle = angle;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegArcAbs.prototype, \"largeArcFlag\", { get: function get() {\n                    return this._largeArcFlag;\n                }, set: function set(largeArcFlag) {\n                    this._largeArcFlag = largeArcFlag;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegArcAbs.prototype, \"sweepFlag\", { get: function get() {\n                    return this._sweepFlag;\n                }, set: function set(sweepFlag) {\n                    this._sweepFlag = sweepFlag;this._segmentChanged();\n                }, enumerable: true });\n\n            window.SVGPathSegArcRel = function (owningPathSegList, x, y, r1, r2, angle, largeArcFlag, sweepFlag) {\n                window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_ARC_REL, \"a\", owningPathSegList);\n                this._x = x;\n                this._y = y;\n                this._r1 = r1;\n                this._r2 = r2;\n                this._angle = angle;\n                this._largeArcFlag = largeArcFlag;\n                this._sweepFlag = sweepFlag;\n            };\n            window.SVGPathSegArcRel.prototype = Object.create(window.SVGPathSeg.prototype);\n            window.SVGPathSegArcRel.prototype.toString = function () {\n                return \"[object SVGPathSegArcRel]\";\n            };\n            window.SVGPathSegArcRel.prototype._asPathString = function () {\n                return this.pathSegTypeAsLetter + \" \" + this._r1 + \" \" + this._r2 + \" \" + this._angle + \" \" + (this._largeArcFlag ? \"1\" : \"0\") + \" \" + (this._sweepFlag ? \"1\" : \"0\") + \" \" + this._x + \" \" + this._y;\n            };\n            window.SVGPathSegArcRel.prototype.clone = function () {\n                return new window.SVGPathSegArcRel(undefined, this._x, this._y, this._r1, this._r2, this._angle, this._largeArcFlag, this._sweepFlag);\n            };\n            Object.defineProperty(window.SVGPathSegArcRel.prototype, \"x\", { get: function get() {\n                    return this._x;\n                }, set: function set(x) {\n                    this._x = x;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegArcRel.prototype, \"y\", { get: function get() {\n                    return this._y;\n                }, set: function set(y) {\n                    this._y = y;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegArcRel.prototype, \"r1\", { get: function get() {\n                    return this._r1;\n                }, set: function set(r1) {\n                    this._r1 = r1;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegArcRel.prototype, \"r2\", { get: function get() {\n                    return this._r2;\n                }, set: function set(r2) {\n                    this._r2 = r2;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegArcRel.prototype, \"angle\", { get: function get() {\n                    return this._angle;\n                }, set: function set(angle) {\n                    this._angle = angle;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegArcRel.prototype, \"largeArcFlag\", { get: function get() {\n                    return this._largeArcFlag;\n                }, set: function set(largeArcFlag) {\n                    this._largeArcFlag = largeArcFlag;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegArcRel.prototype, \"sweepFlag\", { get: function get() {\n                    return this._sweepFlag;\n                }, set: function set(sweepFlag) {\n                    this._sweepFlag = sweepFlag;this._segmentChanged();\n                }, enumerable: true });\n\n            window.SVGPathSegLinetoHorizontalAbs = function (owningPathSegList, x) {\n                window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_LINETO_HORIZONTAL_ABS, \"H\", owningPathSegList);\n                this._x = x;\n            };\n            window.SVGPathSegLinetoHorizontalAbs.prototype = Object.create(window.SVGPathSeg.prototype);\n            window.SVGPathSegLinetoHorizontalAbs.prototype.toString = function () {\n                return \"[object SVGPathSegLinetoHorizontalAbs]\";\n            };\n            window.SVGPathSegLinetoHorizontalAbs.prototype._asPathString = function () {\n                return this.pathSegTypeAsLetter + \" \" + this._x;\n            };\n            window.SVGPathSegLinetoHorizontalAbs.prototype.clone = function () {\n                return new window.SVGPathSegLinetoHorizontalAbs(undefined, this._x);\n            };\n            Object.defineProperty(window.SVGPathSegLinetoHorizontalAbs.prototype, \"x\", { get: function get() {\n                    return this._x;\n                }, set: function set(x) {\n                    this._x = x;this._segmentChanged();\n                }, enumerable: true });\n\n            window.SVGPathSegLinetoHorizontalRel = function (owningPathSegList, x) {\n                window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_LINETO_HORIZONTAL_REL, \"h\", owningPathSegList);\n                this._x = x;\n            };\n            window.SVGPathSegLinetoHorizontalRel.prototype = Object.create(window.SVGPathSeg.prototype);\n            window.SVGPathSegLinetoHorizontalRel.prototype.toString = function () {\n                return \"[object SVGPathSegLinetoHorizontalRel]\";\n            };\n            window.SVGPathSegLinetoHorizontalRel.prototype._asPathString = function () {\n                return this.pathSegTypeAsLetter + \" \" + this._x;\n            };\n            window.SVGPathSegLinetoHorizontalRel.prototype.clone = function () {\n                return new window.SVGPathSegLinetoHorizontalRel(undefined, this._x);\n            };\n            Object.defineProperty(window.SVGPathSegLinetoHorizontalRel.prototype, \"x\", { get: function get() {\n                    return this._x;\n                }, set: function set(x) {\n                    this._x = x;this._segmentChanged();\n                }, enumerable: true });\n\n            window.SVGPathSegLinetoVerticalAbs = function (owningPathSegList, y) {\n                window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_LINETO_VERTICAL_ABS, \"V\", owningPathSegList);\n                this._y = y;\n            };\n            window.SVGPathSegLinetoVerticalAbs.prototype = Object.create(window.SVGPathSeg.prototype);\n            window.SVGPathSegLinetoVerticalAbs.prototype.toString = function () {\n                return \"[object SVGPathSegLinetoVerticalAbs]\";\n            };\n            window.SVGPathSegLinetoVerticalAbs.prototype._asPathString = function () {\n                return this.pathSegTypeAsLetter + \" \" + this._y;\n            };\n            window.SVGPathSegLinetoVerticalAbs.prototype.clone = function () {\n                return new window.SVGPathSegLinetoVerticalAbs(undefined, this._y);\n            };\n            Object.defineProperty(window.SVGPathSegLinetoVerticalAbs.prototype, \"y\", { get: function get() {\n                    return this._y;\n                }, set: function set(y) {\n                    this._y = y;this._segmentChanged();\n                }, enumerable: true });\n\n            window.SVGPathSegLinetoVerticalRel = function (owningPathSegList, y) {\n                window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_LINETO_VERTICAL_REL, \"v\", owningPathSegList);\n                this._y = y;\n            };\n            window.SVGPathSegLinetoVerticalRel.prototype = Object.create(window.SVGPathSeg.prototype);\n            window.SVGPathSegLinetoVerticalRel.prototype.toString = function () {\n                return \"[object SVGPathSegLinetoVerticalRel]\";\n            };\n            window.SVGPathSegLinetoVerticalRel.prototype._asPathString = function () {\n                return this.pathSegTypeAsLetter + \" \" + this._y;\n            };\n            window.SVGPathSegLinetoVerticalRel.prototype.clone = function () {\n                return new window.SVGPathSegLinetoVerticalRel(undefined, this._y);\n            };\n            Object.defineProperty(window.SVGPathSegLinetoVerticalRel.prototype, \"y\", { get: function get() {\n                    return this._y;\n                }, set: function set(y) {\n                    this._y = y;this._segmentChanged();\n                }, enumerable: true });\n\n            window.SVGPathSegCurvetoCubicSmoothAbs = function (owningPathSegList, x, y, x2, y2) {\n                window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_SMOOTH_ABS, \"S\", owningPathSegList);\n                this._x = x;\n                this._y = y;\n                this._x2 = x2;\n                this._y2 = y2;\n            };\n            window.SVGPathSegCurvetoCubicSmoothAbs.prototype = Object.create(window.SVGPathSeg.prototype);\n            window.SVGPathSegCurvetoCubicSmoothAbs.prototype.toString = function () {\n                return \"[object SVGPathSegCurvetoCubicSmoothAbs]\";\n            };\n            window.SVGPathSegCurvetoCubicSmoothAbs.prototype._asPathString = function () {\n                return this.pathSegTypeAsLetter + \" \" + this._x2 + \" \" + this._y2 + \" \" + this._x + \" \" + this._y;\n            };\n            window.SVGPathSegCurvetoCubicSmoothAbs.prototype.clone = function () {\n                return new window.SVGPathSegCurvetoCubicSmoothAbs(undefined, this._x, this._y, this._x2, this._y2);\n            };\n            Object.defineProperty(window.SVGPathSegCurvetoCubicSmoothAbs.prototype, \"x\", { get: function get() {\n                    return this._x;\n                }, set: function set(x) {\n                    this._x = x;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegCurvetoCubicSmoothAbs.prototype, \"y\", { get: function get() {\n                    return this._y;\n                }, set: function set(y) {\n                    this._y = y;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegCurvetoCubicSmoothAbs.prototype, \"x2\", { get: function get() {\n                    return this._x2;\n                }, set: function set(x2) {\n                    this._x2 = x2;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegCurvetoCubicSmoothAbs.prototype, \"y2\", { get: function get() {\n                    return this._y2;\n                }, set: function set(y2) {\n                    this._y2 = y2;this._segmentChanged();\n                }, enumerable: true });\n\n            window.SVGPathSegCurvetoCubicSmoothRel = function (owningPathSegList, x, y, x2, y2) {\n                window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_SMOOTH_REL, \"s\", owningPathSegList);\n                this._x = x;\n                this._y = y;\n                this._x2 = x2;\n                this._y2 = y2;\n            };\n            window.SVGPathSegCurvetoCubicSmoothRel.prototype = Object.create(window.SVGPathSeg.prototype);\n            window.SVGPathSegCurvetoCubicSmoothRel.prototype.toString = function () {\n                return \"[object SVGPathSegCurvetoCubicSmoothRel]\";\n            };\n            window.SVGPathSegCurvetoCubicSmoothRel.prototype._asPathString = function () {\n                return this.pathSegTypeAsLetter + \" \" + this._x2 + \" \" + this._y2 + \" \" + this._x + \" \" + this._y;\n            };\n            window.SVGPathSegCurvetoCubicSmoothRel.prototype.clone = function () {\n                return new window.SVGPathSegCurvetoCubicSmoothRel(undefined, this._x, this._y, this._x2, this._y2);\n            };\n            Object.defineProperty(window.SVGPathSegCurvetoCubicSmoothRel.prototype, \"x\", { get: function get() {\n                    return this._x;\n                }, set: function set(x) {\n                    this._x = x;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegCurvetoCubicSmoothRel.prototype, \"y\", { get: function get() {\n                    return this._y;\n                }, set: function set(y) {\n                    this._y = y;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegCurvetoCubicSmoothRel.prototype, \"x2\", { get: function get() {\n                    return this._x2;\n                }, set: function set(x2) {\n                    this._x2 = x2;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegCurvetoCubicSmoothRel.prototype, \"y2\", { get: function get() {\n                    return this._y2;\n                }, set: function set(y2) {\n                    this._y2 = y2;this._segmentChanged();\n                }, enumerable: true });\n\n            window.SVGPathSegCurvetoQuadraticSmoothAbs = function (owningPathSegList, x, y) {\n                window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS, \"T\", owningPathSegList);\n                this._x = x;\n                this._y = y;\n            };\n            window.SVGPathSegCurvetoQuadraticSmoothAbs.prototype = Object.create(window.SVGPathSeg.prototype);\n            window.SVGPathSegCurvetoQuadraticSmoothAbs.prototype.toString = function () {\n                return \"[object SVGPathSegCurvetoQuadraticSmoothAbs]\";\n            };\n            window.SVGPathSegCurvetoQuadraticSmoothAbs.prototype._asPathString = function () {\n                return this.pathSegTypeAsLetter + \" \" + this._x + \" \" + this._y;\n            };\n            window.SVGPathSegCurvetoQuadraticSmoothAbs.prototype.clone = function () {\n                return new window.SVGPathSegCurvetoQuadraticSmoothAbs(undefined, this._x, this._y);\n            };\n            Object.defineProperty(window.SVGPathSegCurvetoQuadraticSmoothAbs.prototype, \"x\", { get: function get() {\n                    return this._x;\n                }, set: function set(x) {\n                    this._x = x;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegCurvetoQuadraticSmoothAbs.prototype, \"y\", { get: function get() {\n                    return this._y;\n                }, set: function set(y) {\n                    this._y = y;this._segmentChanged();\n                }, enumerable: true });\n\n            window.SVGPathSegCurvetoQuadraticSmoothRel = function (owningPathSegList, x, y) {\n                window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL, \"t\", owningPathSegList);\n                this._x = x;\n                this._y = y;\n            };\n            window.SVGPathSegCurvetoQuadraticSmoothRel.prototype = Object.create(window.SVGPathSeg.prototype);\n            window.SVGPathSegCurvetoQuadraticSmoothRel.prototype.toString = function () {\n                return \"[object SVGPathSegCurvetoQuadraticSmoothRel]\";\n            };\n            window.SVGPathSegCurvetoQuadraticSmoothRel.prototype._asPathString = function () {\n                return this.pathSegTypeAsLetter + \" \" + this._x + \" \" + this._y;\n            };\n            window.SVGPathSegCurvetoQuadraticSmoothRel.prototype.clone = function () {\n                return new window.SVGPathSegCurvetoQuadraticSmoothRel(undefined, this._x, this._y);\n            };\n            Object.defineProperty(window.SVGPathSegCurvetoQuadraticSmoothRel.prototype, \"x\", { get: function get() {\n                    return this._x;\n                }, set: function set(x) {\n                    this._x = x;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegCurvetoQuadraticSmoothRel.prototype, \"y\", { get: function get() {\n                    return this._y;\n                }, set: function set(y) {\n                    this._y = y;this._segmentChanged();\n                }, enumerable: true });\n\n            // Add createSVGPathSeg* functions to window.SVGPathElement.\n            // Spec: http://www.w3.org/TR/SVG11/single-page.html#paths-Interfacewindow.SVGPathElement.\n            window.SVGPathElement.prototype.createSVGPathSegClosePath = function () {\n                return new window.SVGPathSegClosePath(undefined);\n            };\n            window.SVGPathElement.prototype.createSVGPathSegMovetoAbs = function (x, y) {\n                return new window.SVGPathSegMovetoAbs(undefined, x, y);\n            };\n            window.SVGPathElement.prototype.createSVGPathSegMovetoRel = function (x, y) {\n                return new window.SVGPathSegMovetoRel(undefined, x, y);\n            };\n            window.SVGPathElement.prototype.createSVGPathSegLinetoAbs = function (x, y) {\n                return new window.SVGPathSegLinetoAbs(undefined, x, y);\n            };\n            window.SVGPathElement.prototype.createSVGPathSegLinetoRel = function (x, y) {\n                return new window.SVGPathSegLinetoRel(undefined, x, y);\n            };\n            window.SVGPathElement.prototype.createSVGPathSegCurvetoCubicAbs = function (x, y, x1, y1, x2, y2) {\n                return new window.SVGPathSegCurvetoCubicAbs(undefined, x, y, x1, y1, x2, y2);\n            };\n            window.SVGPathElement.prototype.createSVGPathSegCurvetoCubicRel = function (x, y, x1, y1, x2, y2) {\n                return new window.SVGPathSegCurvetoCubicRel(undefined, x, y, x1, y1, x2, y2);\n            };\n            window.SVGPathElement.prototype.createSVGPathSegCurvetoQuadraticAbs = function (x, y, x1, y1) {\n                return new window.SVGPathSegCurvetoQuadraticAbs(undefined, x, y, x1, y1);\n            };\n            window.SVGPathElement.prototype.createSVGPathSegCurvetoQuadraticRel = function (x, y, x1, y1) {\n                return new window.SVGPathSegCurvetoQuadraticRel(undefined, x, y, x1, y1);\n            };\n            window.SVGPathElement.prototype.createSVGPathSegArcAbs = function (x, y, r1, r2, angle, largeArcFlag, sweepFlag) {\n                return new window.SVGPathSegArcAbs(undefined, x, y, r1, r2, angle, largeArcFlag, sweepFlag);\n            };\n            window.SVGPathElement.prototype.createSVGPathSegArcRel = function (x, y, r1, r2, angle, largeArcFlag, sweepFlag) {\n                return new window.SVGPathSegArcRel(undefined, x, y, r1, r2, angle, largeArcFlag, sweepFlag);\n            };\n            window.SVGPathElement.prototype.createSVGPathSegLinetoHorizontalAbs = function (x) {\n                return new window.SVGPathSegLinetoHorizontalAbs(undefined, x);\n            };\n            window.SVGPathElement.prototype.createSVGPathSegLinetoHorizontalRel = function (x) {\n                return new window.SVGPathSegLinetoHorizontalRel(undefined, x);\n            };\n            window.SVGPathElement.prototype.createSVGPathSegLinetoVerticalAbs = function (y) {\n                return new window.SVGPathSegLinetoVerticalAbs(undefined, y);\n            };\n            window.SVGPathElement.prototype.createSVGPathSegLinetoVerticalRel = function (y) {\n                return new window.SVGPathSegLinetoVerticalRel(undefined, y);\n            };\n            window.SVGPathElement.prototype.createSVGPathSegCurvetoCubicSmoothAbs = function (x, y, x2, y2) {\n                return new window.SVGPathSegCurvetoCubicSmoothAbs(undefined, x, y, x2, y2);\n            };\n            window.SVGPathElement.prototype.createSVGPathSegCurvetoCubicSmoothRel = function (x, y, x2, y2) {\n                return new window.SVGPathSegCurvetoCubicSmoothRel(undefined, x, y, x2, y2);\n            };\n            window.SVGPathElement.prototype.createSVGPathSegCurvetoQuadraticSmoothAbs = function (x, y) {\n                return new window.SVGPathSegCurvetoQuadraticSmoothAbs(undefined, x, y);\n            };\n            window.SVGPathElement.prototype.createSVGPathSegCurvetoQuadraticSmoothRel = function (x, y) {\n                return new window.SVGPathSegCurvetoQuadraticSmoothRel(undefined, x, y);\n            };\n\n            if (!(\"getPathSegAtLength\" in window.SVGPathElement.prototype)) {\n                // Add getPathSegAtLength to SVGPathElement.\n                // Spec: https://www.w3.org/TR/SVG11/single-page.html#paths-__svg__SVGPathElement__getPathSegAtLength\n                // This polyfill requires SVGPathElement.getTotalLength to implement the distance-along-a-path algorithm.\n                window.SVGPathElement.prototype.getPathSegAtLength = function (distance) {\n                    if (distance === undefined || !isFinite(distance)) throw \"Invalid arguments.\";\n\n                    var measurementElement = document.createElementNS(\"http://www.w3.org/2000/svg\", \"path\");\n                    measurementElement.setAttribute(\"d\", this.getAttribute(\"d\"));\n                    var lastPathSegment = measurementElement.pathSegList.numberOfItems - 1;\n\n                    // If the path is empty, return 0.\n                    if (lastPathSegment <= 0) return 0;\n\n                    do {\n                        measurementElement.pathSegList.removeItem(lastPathSegment);\n                        if (distance > measurementElement.getTotalLength()) break;\n                        lastPathSegment--;\n                    } while (lastPathSegment > 0);\n                    return lastPathSegment;\n                };\n            }\n        }\n\n        if (!(\"SVGPathSegList\" in window)) {\n            // Spec: http://www.w3.org/TR/SVG11/single-page.html#paths-InterfaceSVGPathSegList\n            window.SVGPathSegList = function (pathElement) {\n                this._pathElement = pathElement;\n                this._list = this._parsePath(this._pathElement.getAttribute(\"d\"));\n\n                // Use a MutationObserver to catch changes to the path's \"d\" attribute.\n                this._mutationObserverConfig = { \"attributes\": true, \"attributeFilter\": [\"d\"] };\n                this._pathElementMutationObserver = new MutationObserver(this._updateListFromPathMutations.bind(this));\n                this._pathElementMutationObserver.observe(this._pathElement, this._mutationObserverConfig);\n            };\n\n            window.SVGPathSegList.prototype.classname = \"SVGPathSegList\";\n\n            Object.defineProperty(window.SVGPathSegList.prototype, \"numberOfItems\", {\n                get: function get() {\n                    this._checkPathSynchronizedToList();\n                    return this._list.length;\n                },\n                enumerable: true\n            });\n\n            // Add the pathSegList accessors to window.SVGPathElement.\n            // Spec: http://www.w3.org/TR/SVG11/single-page.html#paths-InterfaceSVGAnimatedPathData\n            Object.defineProperty(window.SVGPathElement.prototype, \"pathSegList\", {\n                get: function get() {\n                    if (!this._pathSegList) this._pathSegList = new window.SVGPathSegList(this);\n                    return this._pathSegList;\n                },\n                enumerable: true\n            });\n            // FIXME: The following are not implemented and simply return window.SVGPathElement.pathSegList.\n            Object.defineProperty(window.SVGPathElement.prototype, \"normalizedPathSegList\", { get: function get() {\n                    return this.pathSegList;\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathElement.prototype, \"animatedPathSegList\", { get: function get() {\n                    return this.pathSegList;\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathElement.prototype, \"animatedNormalizedPathSegList\", { get: function get() {\n                    return this.pathSegList;\n                }, enumerable: true });\n\n            // Process any pending mutations to the path element and update the list as needed.\n            // This should be the first call of all public functions and is needed because\n            // MutationObservers are not synchronous so we can have pending asynchronous mutations.\n            window.SVGPathSegList.prototype._checkPathSynchronizedToList = function () {\n                this._updateListFromPathMutations(this._pathElementMutationObserver.takeRecords());\n            };\n\n            window.SVGPathSegList.prototype._updateListFromPathMutations = function (mutationRecords) {\n                if (!this._pathElement) return;\n                var hasPathMutations = false;\n                mutationRecords.forEach(function (record) {\n                    if (record.attributeName == \"d\") hasPathMutations = true;\n                });\n                if (hasPathMutations) this._list = this._parsePath(this._pathElement.getAttribute(\"d\"));\n            };\n\n            // Serialize the list and update the path's 'd' attribute.\n            window.SVGPathSegList.prototype._writeListToPath = function () {\n                this._pathElementMutationObserver.disconnect();\n                this._pathElement.setAttribute(\"d\", window.SVGPathSegList._pathSegArrayAsString(this._list));\n                this._pathElementMutationObserver.observe(this._pathElement, this._mutationObserverConfig);\n            };\n\n            // When a path segment changes the list needs to be synchronized back to the path element.\n            window.SVGPathSegList.prototype.segmentChanged = function (pathSeg) {\n                this._writeListToPath();\n            };\n\n            window.SVGPathSegList.prototype.clear = function () {\n                this._checkPathSynchronizedToList();\n\n                this._list.forEach(function (pathSeg) {\n                    pathSeg._owningPathSegList = null;\n                });\n                this._list = [];\n                this._writeListToPath();\n            };\n\n            window.SVGPathSegList.prototype.initialize = function (newItem) {\n                this._checkPathSynchronizedToList();\n\n                this._list = [newItem];\n                newItem._owningPathSegList = this;\n                this._writeListToPath();\n                return newItem;\n            };\n\n            window.SVGPathSegList.prototype._checkValidIndex = function (index) {\n                if (isNaN(index) || index < 0 || index >= this.numberOfItems) throw \"INDEX_SIZE_ERR\";\n            };\n\n            window.SVGPathSegList.prototype.getItem = function (index) {\n                this._checkPathSynchronizedToList();\n\n                this._checkValidIndex(index);\n                return this._list[index];\n            };\n\n            window.SVGPathSegList.prototype.insertItemBefore = function (newItem, index) {\n                this._checkPathSynchronizedToList();\n\n                // Spec: If the index is greater than or equal to numberOfItems, then the new item is appended to the end of the list.\n                if (index > this.numberOfItems) index = this.numberOfItems;\n                if (newItem._owningPathSegList) {\n                    // SVG2 spec says to make a copy.\n                    newItem = newItem.clone();\n                }\n                this._list.splice(index, 0, newItem);\n                newItem._owningPathSegList = this;\n                this._writeListToPath();\n                return newItem;\n            };\n\n            window.SVGPathSegList.prototype.replaceItem = function (newItem, index) {\n                this._checkPathSynchronizedToList();\n\n                if (newItem._owningPathSegList) {\n                    // SVG2 spec says to make a copy.\n                    newItem = newItem.clone();\n                }\n                this._checkValidIndex(index);\n                this._list[index] = newItem;\n                newItem._owningPathSegList = this;\n                this._writeListToPath();\n                return newItem;\n            };\n\n            window.SVGPathSegList.prototype.removeItem = function (index) {\n                this._checkPathSynchronizedToList();\n\n                this._checkValidIndex(index);\n                var item = this._list[index];\n                this._list.splice(index, 1);\n                this._writeListToPath();\n                return item;\n            };\n\n            window.SVGPathSegList.prototype.appendItem = function (newItem) {\n                this._checkPathSynchronizedToList();\n\n                if (newItem._owningPathSegList) {\n                    // SVG2 spec says to make a copy.\n                    newItem = newItem.clone();\n                }\n                this._list.push(newItem);\n                newItem._owningPathSegList = this;\n                // TODO: Optimize this to just append to the existing attribute.\n                this._writeListToPath();\n                return newItem;\n            };\n\n            window.SVGPathSegList._pathSegArrayAsString = function (pathSegArray) {\n                var string = \"\";\n                var first = true;\n                pathSegArray.forEach(function (pathSeg) {\n                    if (first) {\n                        first = false;\n                        string += pathSeg._asPathString();\n                    } else {\n                        string += \" \" + pathSeg._asPathString();\n                    }\n                });\n                return string;\n            };\n\n            // This closely follows SVGPathParser::parsePath from Source/core/svg/SVGPathParser.cpp.\n            window.SVGPathSegList.prototype._parsePath = function (string) {\n                if (!string || string.length == 0) return [];\n\n                var owningPathSegList = this;\n\n                var Builder = function Builder() {\n                    this.pathSegList = [];\n                };\n\n                Builder.prototype.appendSegment = function (pathSeg) {\n                    this.pathSegList.push(pathSeg);\n                };\n\n                var Source = function Source(string) {\n                    this._string = string;\n                    this._currentIndex = 0;\n                    this._endIndex = this._string.length;\n                    this._previousCommand = window.SVGPathSeg.PATHSEG_UNKNOWN;\n\n                    this._skipOptionalSpaces();\n                };\n\n                Source.prototype._isCurrentSpace = function () {\n                    var character = this._string[this._currentIndex];\n                    return character <= \" \" && (character == \" \" || character == \"\\n\" || character == \"\\t\" || character == \"\\r\" || character == \"\\f\");\n                };\n\n                Source.prototype._skipOptionalSpaces = function () {\n                    while (this._currentIndex < this._endIndex && this._isCurrentSpace()) {\n                        this._currentIndex++;\n                    }return this._currentIndex < this._endIndex;\n                };\n\n                Source.prototype._skipOptionalSpacesOrDelimiter = function () {\n                    if (this._currentIndex < this._endIndex && !this._isCurrentSpace() && this._string.charAt(this._currentIndex) != \",\") return false;\n                    if (this._skipOptionalSpaces()) {\n                        if (this._currentIndex < this._endIndex && this._string.charAt(this._currentIndex) == \",\") {\n                            this._currentIndex++;\n                            this._skipOptionalSpaces();\n                        }\n                    }\n                    return this._currentIndex < this._endIndex;\n                };\n\n                Source.prototype.hasMoreData = function () {\n                    return this._currentIndex < this._endIndex;\n                };\n\n                Source.prototype.peekSegmentType = function () {\n                    var lookahead = this._string[this._currentIndex];\n                    return this._pathSegTypeFromChar(lookahead);\n                };\n\n                Source.prototype._pathSegTypeFromChar = function (lookahead) {\n                    switch (lookahead) {\n                        case \"Z\":\n                        case \"z\":\n                            return window.SVGPathSeg.PATHSEG_CLOSEPATH;\n                        case \"M\":\n                            return window.SVGPathSeg.PATHSEG_MOVETO_ABS;\n                        case \"m\":\n                            return window.SVGPathSeg.PATHSEG_MOVETO_REL;\n                        case \"L\":\n                            return window.SVGPathSeg.PATHSEG_LINETO_ABS;\n                        case \"l\":\n                            return window.SVGPathSeg.PATHSEG_LINETO_REL;\n                        case \"C\":\n                            return window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_ABS;\n                        case \"c\":\n                            return window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_REL;\n                        case \"Q\":\n                            return window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_ABS;\n                        case \"q\":\n                            return window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_REL;\n                        case \"A\":\n                            return window.SVGPathSeg.PATHSEG_ARC_ABS;\n                        case \"a\":\n                            return window.SVGPathSeg.PATHSEG_ARC_REL;\n                        case \"H\":\n                            return window.SVGPathSeg.PATHSEG_LINETO_HORIZONTAL_ABS;\n                        case \"h\":\n                            return window.SVGPathSeg.PATHSEG_LINETO_HORIZONTAL_REL;\n                        case \"V\":\n                            return window.SVGPathSeg.PATHSEG_LINETO_VERTICAL_ABS;\n                        case \"v\":\n                            return window.SVGPathSeg.PATHSEG_LINETO_VERTICAL_REL;\n                        case \"S\":\n                            return window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_SMOOTH_ABS;\n                        case \"s\":\n                            return window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_SMOOTH_REL;\n                        case \"T\":\n                            return window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS;\n                        case \"t\":\n                            return window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL;\n                        default:\n                            return window.SVGPathSeg.PATHSEG_UNKNOWN;\n                    }\n                };\n\n                Source.prototype._nextCommandHelper = function (lookahead, previousCommand) {\n                    // Check for remaining coordinates in the current command.\n                    if ((lookahead == \"+\" || lookahead == \"-\" || lookahead == \".\" || lookahead >= \"0\" && lookahead <= \"9\") && previousCommand != window.SVGPathSeg.PATHSEG_CLOSEPATH) {\n                        if (previousCommand == window.SVGPathSeg.PATHSEG_MOVETO_ABS) return window.SVGPathSeg.PATHSEG_LINETO_ABS;\n                        if (previousCommand == window.SVGPathSeg.PATHSEG_MOVETO_REL) return window.SVGPathSeg.PATHSEG_LINETO_REL;\n                        return previousCommand;\n                    }\n                    return window.SVGPathSeg.PATHSEG_UNKNOWN;\n                };\n\n                Source.prototype.initialCommandIsMoveTo = function () {\n                    // If the path is empty it is still valid, so return true.\n                    if (!this.hasMoreData()) return true;\n                    var command = this.peekSegmentType();\n                    // Path must start with moveTo.\n                    return command == window.SVGPathSeg.PATHSEG_MOVETO_ABS || command == window.SVGPathSeg.PATHSEG_MOVETO_REL;\n                };\n\n                // Parse a number from an SVG path. This very closely follows genericParseNumber(...) from Source/core/svg/SVGParserUtilities.cpp.\n                // Spec: http://www.w3.org/TR/SVG11/single-page.html#paths-PathDataBNF\n                Source.prototype._parseNumber = function () {\n                    var exponent = 0;\n                    var integer = 0;\n                    var frac = 1;\n                    var decimal = 0;\n                    var sign = 1;\n                    var expsign = 1;\n\n                    var startIndex = this._currentIndex;\n\n                    this._skipOptionalSpaces();\n\n                    // Read the sign.\n                    if (this._currentIndex < this._endIndex && this._string.charAt(this._currentIndex) == \"+\") this._currentIndex++;else if (this._currentIndex < this._endIndex && this._string.charAt(this._currentIndex) == \"-\") {\n                        this._currentIndex++;\n                        sign = -1;\n                    }\n\n                    if (this._currentIndex == this._endIndex || (this._string.charAt(this._currentIndex) < \"0\" || this._string.charAt(this._currentIndex) > \"9\") && this._string.charAt(this._currentIndex) != \".\")\n                        // The first character of a number must be one of [0-9+-.].\n                        return undefined;\n\n                    // Read the integer part, build right-to-left.\n                    var startIntPartIndex = this._currentIndex;\n                    while (this._currentIndex < this._endIndex && this._string.charAt(this._currentIndex) >= \"0\" && this._string.charAt(this._currentIndex) <= \"9\") {\n                        this._currentIndex++;\n                    } // Advance to first non-digit.\n\n                    if (this._currentIndex != startIntPartIndex) {\n                        var scanIntPartIndex = this._currentIndex - 1;\n                        var multiplier = 1;\n                        while (scanIntPartIndex >= startIntPartIndex) {\n                            integer += multiplier * (this._string.charAt(scanIntPartIndex--) - \"0\");\n                            multiplier *= 10;\n                        }\n                    }\n\n                    // Read the decimals.\n                    if (this._currentIndex < this._endIndex && this._string.charAt(this._currentIndex) == \".\") {\n                        this._currentIndex++;\n\n                        // There must be a least one digit following the .\n                        if (this._currentIndex >= this._endIndex || this._string.charAt(this._currentIndex) < \"0\" || this._string.charAt(this._currentIndex) > \"9\") return undefined;\n                        while (this._currentIndex < this._endIndex && this._string.charAt(this._currentIndex) >= \"0\" && this._string.charAt(this._currentIndex) <= \"9\") {\n                            frac *= 10;\n                            decimal += (this._string.charAt(this._currentIndex) - \"0\") / frac;\n                            this._currentIndex += 1;\n                        }\n                    }\n\n                    // Read the exponent part.\n                    if (this._currentIndex != startIndex && this._currentIndex + 1 < this._endIndex && (this._string.charAt(this._currentIndex) == \"e\" || this._string.charAt(this._currentIndex) == \"E\") && this._string.charAt(this._currentIndex + 1) != \"x\" && this._string.charAt(this._currentIndex + 1) != \"m\") {\n                        this._currentIndex++;\n\n                        // Read the sign of the exponent.\n                        if (this._string.charAt(this._currentIndex) == \"+\") {\n                            this._currentIndex++;\n                        } else if (this._string.charAt(this._currentIndex) == \"-\") {\n                            this._currentIndex++;\n                            expsign = -1;\n                        }\n\n                        // There must be an exponent.\n                        if (this._currentIndex >= this._endIndex || this._string.charAt(this._currentIndex) < \"0\" || this._string.charAt(this._currentIndex) > \"9\") return undefined;\n\n                        while (this._currentIndex < this._endIndex && this._string.charAt(this._currentIndex) >= \"0\" && this._string.charAt(this._currentIndex) <= \"9\") {\n                            exponent *= 10;\n                            exponent += this._string.charAt(this._currentIndex) - \"0\";\n                            this._currentIndex++;\n                        }\n                    }\n\n                    var number = integer + decimal;\n                    number *= sign;\n\n                    if (exponent) number *= Math.pow(10, expsign * exponent);\n\n                    if (startIndex == this._currentIndex) return undefined;\n\n                    this._skipOptionalSpacesOrDelimiter();\n\n                    return number;\n                };\n\n                Source.prototype._parseArcFlag = function () {\n                    if (this._currentIndex >= this._endIndex) return undefined;\n                    var flag = false;\n                    var flagChar = this._string.charAt(this._currentIndex++);\n                    if (flagChar == \"0\") flag = false;else if (flagChar == \"1\") flag = true;else return undefined;\n\n                    this._skipOptionalSpacesOrDelimiter();\n                    return flag;\n                };\n\n                Source.prototype.parseSegment = function () {\n                    var lookahead = this._string[this._currentIndex];\n                    var command = this._pathSegTypeFromChar(lookahead);\n                    if (command == window.SVGPathSeg.PATHSEG_UNKNOWN) {\n                        // Possibly an implicit command. Not allowed if this is the first command.\n                        if (this._previousCommand == window.SVGPathSeg.PATHSEG_UNKNOWN) return null;\n                        command = this._nextCommandHelper(lookahead, this._previousCommand);\n                        if (command == window.SVGPathSeg.PATHSEG_UNKNOWN) return null;\n                    } else {\n                        this._currentIndex++;\n                    }\n\n                    this._previousCommand = command;\n\n                    switch (command) {\n                        case window.SVGPathSeg.PATHSEG_MOVETO_REL:\n                            return new window.SVGPathSegMovetoRel(owningPathSegList, this._parseNumber(), this._parseNumber());\n                        case window.SVGPathSeg.PATHSEG_MOVETO_ABS:\n                            return new window.SVGPathSegMovetoAbs(owningPathSegList, this._parseNumber(), this._parseNumber());\n                        case window.SVGPathSeg.PATHSEG_LINETO_REL:\n                            return new window.SVGPathSegLinetoRel(owningPathSegList, this._parseNumber(), this._parseNumber());\n                        case window.SVGPathSeg.PATHSEG_LINETO_ABS:\n                            return new window.SVGPathSegLinetoAbs(owningPathSegList, this._parseNumber(), this._parseNumber());\n                        case window.SVGPathSeg.PATHSEG_LINETO_HORIZONTAL_REL:\n                            return new window.SVGPathSegLinetoHorizontalRel(owningPathSegList, this._parseNumber());\n                        case window.SVGPathSeg.PATHSEG_LINETO_HORIZONTAL_ABS:\n                            return new window.SVGPathSegLinetoHorizontalAbs(owningPathSegList, this._parseNumber());\n                        case window.SVGPathSeg.PATHSEG_LINETO_VERTICAL_REL:\n                            return new window.SVGPathSegLinetoVerticalRel(owningPathSegList, this._parseNumber());\n                        case window.SVGPathSeg.PATHSEG_LINETO_VERTICAL_ABS:\n                            return new window.SVGPathSegLinetoVerticalAbs(owningPathSegList, this._parseNumber());\n                        case window.SVGPathSeg.PATHSEG_CLOSEPATH:\n                            this._skipOptionalSpaces();\n                            return new window.SVGPathSegClosePath(owningPathSegList);\n                        case window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_REL:\n                            var points = { x1: this._parseNumber(), y1: this._parseNumber(), x2: this._parseNumber(), y2: this._parseNumber(), x: this._parseNumber(), y: this._parseNumber() };\n                            return new window.SVGPathSegCurvetoCubicRel(owningPathSegList, points.x, points.y, points.x1, points.y1, points.x2, points.y2);\n                        case window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_ABS:\n                            var points = { x1: this._parseNumber(), y1: this._parseNumber(), x2: this._parseNumber(), y2: this._parseNumber(), x: this._parseNumber(), y: this._parseNumber() };\n                            return new window.SVGPathSegCurvetoCubicAbs(owningPathSegList, points.x, points.y, points.x1, points.y1, points.x2, points.y2);\n                        case window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_SMOOTH_REL:\n                            var points = { x2: this._parseNumber(), y2: this._parseNumber(), x: this._parseNumber(), y: this._parseNumber() };\n                            return new window.SVGPathSegCurvetoCubicSmoothRel(owningPathSegList, points.x, points.y, points.x2, points.y2);\n                        case window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_SMOOTH_ABS:\n                            var points = { x2: this._parseNumber(), y2: this._parseNumber(), x: this._parseNumber(), y: this._parseNumber() };\n                            return new window.SVGPathSegCurvetoCubicSmoothAbs(owningPathSegList, points.x, points.y, points.x2, points.y2);\n                        case window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_REL:\n                            var points = { x1: this._parseNumber(), y1: this._parseNumber(), x: this._parseNumber(), y: this._parseNumber() };\n                            return new window.SVGPathSegCurvetoQuadraticRel(owningPathSegList, points.x, points.y, points.x1, points.y1);\n                        case window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_ABS:\n                            var points = { x1: this._parseNumber(), y1: this._parseNumber(), x: this._parseNumber(), y: this._parseNumber() };\n                            return new window.SVGPathSegCurvetoQuadraticAbs(owningPathSegList, points.x, points.y, points.x1, points.y1);\n                        case window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL:\n                            return new window.SVGPathSegCurvetoQuadraticSmoothRel(owningPathSegList, this._parseNumber(), this._parseNumber());\n                        case window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS:\n                            return new window.SVGPathSegCurvetoQuadraticSmoothAbs(owningPathSegList, this._parseNumber(), this._parseNumber());\n                        case window.SVGPathSeg.PATHSEG_ARC_REL:\n                            var points = { x1: this._parseNumber(), y1: this._parseNumber(), arcAngle: this._parseNumber(), arcLarge: this._parseArcFlag(), arcSweep: this._parseArcFlag(), x: this._parseNumber(), y: this._parseNumber() };\n                            return new window.SVGPathSegArcRel(owningPathSegList, points.x, points.y, points.x1, points.y1, points.arcAngle, points.arcLarge, points.arcSweep);\n                        case window.SVGPathSeg.PATHSEG_ARC_ABS:\n                            var points = { x1: this._parseNumber(), y1: this._parseNumber(), arcAngle: this._parseNumber(), arcLarge: this._parseArcFlag(), arcSweep: this._parseArcFlag(), x: this._parseNumber(), y: this._parseNumber() };\n                            return new window.SVGPathSegArcAbs(owningPathSegList, points.x, points.y, points.x1, points.y1, points.arcAngle, points.arcLarge, points.arcSweep);\n                        default:\n                            throw \"Unknown path seg type.\";\n                    }\n                };\n\n                var builder = new Builder();\n                var source = new Source(string);\n\n                if (!source.initialCommandIsMoveTo()) return [];\n                while (source.hasMoreData()) {\n                    var pathSeg = source.parseSegment();\n                    if (!pathSeg) return [];\n                    builder.appendSegment(pathSeg);\n                }\n\n                return builder.pathSegList;\n            };\n        }\n    })();\n\n    // String.padEnd polyfill for IE11\n    //\n    // https://github.com/uxitten/polyfill/blob/master/string.polyfill.js\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/padEnd\n    if (!String.prototype.padEnd) {\n        String.prototype.padEnd = function padEnd(targetLength, padString) {\n            targetLength = targetLength >> 0; //floor if number or convert non-number to 0;\n            padString = String(typeof padString !== 'undefined' ? padString : ' ');\n            if (this.length > targetLength) {\n                return String(this);\n            } else {\n                targetLength = targetLength - this.length;\n                if (targetLength > padString.length) {\n                    padString += padString.repeat(targetLength / padString.length); //append to original to ensure we are longer than needed\n                }\n                return String(this) + padString.slice(0, targetLength);\n            }\n        };\n    }\n\n    /* jshint ignore:end */\n\n    c3_chart_fn.axis = function () {};\n    c3_chart_fn.axis.labels = function (labels) {\n        var $$ = this.internal;\n        if (arguments.length) {\n            Object.keys(labels).forEach(function (axisId) {\n                $$.axis.setLabelText(axisId, labels[axisId]);\n            });\n            $$.axis.updateLabels();\n        }\n        // TODO: return some values?\n    };\n    c3_chart_fn.axis.max = function (max) {\n        var $$ = this.internal,\n            config = $$.config;\n        if (arguments.length) {\n            if ((typeof max === 'undefined' ? 'undefined' : _typeof(max)) === 'object') {\n                if (isValue(max.x)) {\n                    config.axis_x_max = max.x;\n                }\n                if (isValue(max.y)) {\n                    config.axis_y_max = max.y;\n                }\n                if (isValue(max.y2)) {\n                    config.axis_y2_max = max.y2;\n                }\n            } else {\n                config.axis_y_max = config.axis_y2_max = max;\n            }\n            $$.redraw({ withUpdateOrgXDomain: true, withUpdateXDomain: true });\n        } else {\n            return {\n                x: config.axis_x_max,\n                y: config.axis_y_max,\n                y2: config.axis_y2_max\n            };\n        }\n    };\n    c3_chart_fn.axis.min = function (min) {\n        var $$ = this.internal,\n            config = $$.config;\n        if (arguments.length) {\n            if ((typeof min === 'undefined' ? 'undefined' : _typeof(min)) === 'object') {\n                if (isValue(min.x)) {\n                    config.axis_x_min = min.x;\n                }\n                if (isValue(min.y)) {\n                    config.axis_y_min = min.y;\n                }\n                if (isValue(min.y2)) {\n                    config.axis_y2_min = min.y2;\n                }\n            } else {\n                config.axis_y_min = config.axis_y2_min = min;\n            }\n            $$.redraw({ withUpdateOrgXDomain: true, withUpdateXDomain: true });\n        } else {\n            return {\n                x: config.axis_x_min,\n                y: config.axis_y_min,\n                y2: config.axis_y2_min\n            };\n        }\n    };\n    c3_chart_fn.axis.range = function (range) {\n        if (arguments.length) {\n            if (isDefined(range.max)) {\n                this.axis.max(range.max);\n            }\n            if (isDefined(range.min)) {\n                this.axis.min(range.min);\n            }\n        } else {\n            return {\n                max: this.axis.max(),\n                min: this.axis.min()\n            };\n        }\n    };\n\n    c3_chart_fn.category = function (i, category) {\n        var $$ = this.internal,\n            config = $$.config;\n        if (arguments.length > 1) {\n            config.axis_x_categories[i] = category;\n            $$.redraw();\n        }\n        return config.axis_x_categories[i];\n    };\n    c3_chart_fn.categories = function (categories) {\n        var $$ = this.internal,\n            config = $$.config;\n        if (!arguments.length) {\n            return config.axis_x_categories;\n        }\n        config.axis_x_categories = categories;\n        $$.redraw();\n        return config.axis_x_categories;\n    };\n\n    c3_chart_fn.resize = function (size) {\n        var $$ = this.internal,\n            config = $$.config;\n        config.size_width = size ? size.width : null;\n        config.size_height = size ? size.height : null;\n        this.flush();\n    };\n\n    c3_chart_fn.flush = function () {\n        var $$ = this.internal;\n        $$.updateAndRedraw({ withLegend: true, withTransition: false, withTransitionForTransform: false });\n    };\n\n    c3_chart_fn.destroy = function () {\n        var $$ = this.internal;\n\n        window.clearInterval($$.intervalForObserveInserted);\n\n        if ($$.resizeTimeout !== undefined) {\n            window.clearTimeout($$.resizeTimeout);\n        }\n\n        if (window.detachEvent) {\n            window.detachEvent('onresize', $$.resizeIfElementDisplayed);\n        } else if (window.removeEventListener) {\n            window.removeEventListener('resize', $$.resizeIfElementDisplayed);\n        } else {\n            var wrapper = window.onresize;\n            // check if no one else removed our wrapper and remove our resizeFunction from it\n            if (wrapper && wrapper.add && wrapper.remove) {\n                wrapper.remove($$.resizeFunction);\n            }\n        }\n\n        // remove the inner resize functions\n        $$.resizeFunction.remove();\n\n        $$.selectChart.classed('c3', false).html(\"\");\n\n        // MEMO: this is needed because the reference of some elements will not be released, then memory leak will happen.\n        Object.keys($$).forEach(function (key) {\n            $$[key] = null;\n        });\n\n        return null;\n    };\n\n    // TODO: fix\n    c3_chart_fn.color = function (id) {\n        var $$ = this.internal;\n        return $$.color(id); // more patterns\n    };\n\n    c3_chart_fn.data = function (targetIds) {\n        var targets = this.internal.data.targets;\n        return typeof targetIds === 'undefined' ? targets : targets.filter(function (t) {\n            return [].concat(targetIds).indexOf(t.id) >= 0;\n        });\n    };\n    c3_chart_fn.data.shown = function (targetIds) {\n        return this.internal.filterTargetsToShow(this.data(targetIds));\n    };\n    c3_chart_fn.data.values = function (targetId) {\n        var targets,\n            values = null;\n        if (targetId) {\n            targets = this.data(targetId);\n            values = targets[0] ? targets[0].values.map(function (d) {\n                return d.value;\n            }) : null;\n        }\n        return values;\n    };\n    c3_chart_fn.data.names = function (names) {\n        this.internal.clearLegendItemTextBoxCache();\n        return this.internal.updateDataAttributes('names', names);\n    };\n    c3_chart_fn.data.colors = function (colors) {\n        return this.internal.updateDataAttributes('colors', colors);\n    };\n    c3_chart_fn.data.axes = function (axes) {\n        return this.internal.updateDataAttributes('axes', axes);\n    };\n\n    c3_chart_fn.flow = function (args) {\n        var $$ = this.internal,\n            targets,\n            data,\n            notfoundIds = [],\n            orgDataCount = $$.getMaxDataCount(),\n            dataCount,\n            domain,\n            baseTarget,\n            baseValue,\n            length = 0,\n            tail = 0,\n            diff,\n            to;\n\n        if (args.json) {\n            data = $$.convertJsonToData(args.json, args.keys);\n        } else if (args.rows) {\n            data = $$.convertRowsToData(args.rows);\n        } else if (args.columns) {\n            data = $$.convertColumnsToData(args.columns);\n        } else {\n            return;\n        }\n        targets = $$.convertDataToTargets(data, true);\n\n        // Update/Add data\n        $$.data.targets.forEach(function (t) {\n            var found = false,\n                i,\n                j;\n            for (i = 0; i < targets.length; i++) {\n                if (t.id === targets[i].id) {\n                    found = true;\n\n                    if (t.values[t.values.length - 1]) {\n                        tail = t.values[t.values.length - 1].index + 1;\n                    }\n                    length = targets[i].values.length;\n\n                    for (j = 0; j < length; j++) {\n                        targets[i].values[j].index = tail + j;\n                        if (!$$.isTimeSeries()) {\n                            targets[i].values[j].x = tail + j;\n                        }\n                    }\n                    t.values = t.values.concat(targets[i].values);\n\n                    targets.splice(i, 1);\n                    break;\n                }\n            }\n            if (!found) {\n                notfoundIds.push(t.id);\n            }\n        });\n\n        // Append null for not found targets\n        $$.data.targets.forEach(function (t) {\n            var i, j;\n            for (i = 0; i < notfoundIds.length; i++) {\n                if (t.id === notfoundIds[i]) {\n                    tail = t.values[t.values.length - 1].index + 1;\n                    for (j = 0; j < length; j++) {\n                        t.values.push({\n                            id: t.id,\n                            index: tail + j,\n                            x: $$.isTimeSeries() ? $$.getOtherTargetX(tail + j) : tail + j,\n                            value: null\n                        });\n                    }\n                }\n            }\n        });\n\n        // Generate null values for new target\n        if ($$.data.targets.length) {\n            targets.forEach(function (t) {\n                var i,\n                    missing = [];\n                for (i = $$.data.targets[0].values[0].index; i < tail; i++) {\n                    missing.push({\n                        id: t.id,\n                        index: i,\n                        x: $$.isTimeSeries() ? $$.getOtherTargetX(i) : i,\n                        value: null\n                    });\n                }\n                t.values.forEach(function (v) {\n                    v.index += tail;\n                    if (!$$.isTimeSeries()) {\n                        v.x += tail;\n                    }\n                });\n                t.values = missing.concat(t.values);\n            });\n        }\n        $$.data.targets = $$.data.targets.concat(targets); // add remained\n\n        // check data count because behavior needs to change when it's only one\n        dataCount = $$.getMaxDataCount();\n        baseTarget = $$.data.targets[0];\n        baseValue = baseTarget.values[0];\n\n        // Update length to flow if needed\n        if (isDefined(args.to)) {\n            length = 0;\n            to = $$.isTimeSeries() ? $$.parseDate(args.to) : args.to;\n            baseTarget.values.forEach(function (v) {\n                if (v.x < to) {\n                    length++;\n                }\n            });\n        } else if (isDefined(args.length)) {\n            length = args.length;\n        }\n\n        // If only one data, update the domain to flow from left edge of the chart\n        if (!orgDataCount) {\n            if ($$.isTimeSeries()) {\n                if (baseTarget.values.length > 1) {\n                    diff = baseTarget.values[baseTarget.values.length - 1].x - baseValue.x;\n                } else {\n                    diff = baseValue.x - $$.getXDomain($$.data.targets)[0];\n                }\n            } else {\n                diff = 1;\n            }\n            domain = [baseValue.x - diff, baseValue.x];\n            $$.updateXDomain(null, true, true, false, domain);\n        } else if (orgDataCount === 1) {\n            if ($$.isTimeSeries()) {\n                diff = (baseTarget.values[baseTarget.values.length - 1].x - baseValue.x) / 2;\n                domain = [new Date(+baseValue.x - diff), new Date(+baseValue.x + diff)];\n                $$.updateXDomain(null, true, true, false, domain);\n            }\n        }\n\n        // Set targets\n        $$.updateTargets($$.data.targets);\n\n        // Redraw with new targets\n        $$.redraw({\n            flow: {\n                index: baseValue.index,\n                length: length,\n                duration: isValue(args.duration) ? args.duration : $$.config.transition_duration,\n                done: args.done,\n                orgDataCount: orgDataCount\n            },\n            withLegend: true,\n            withTransition: orgDataCount > 1,\n            withTrimXDomain: false,\n            withUpdateXAxis: true\n        });\n    };\n\n    c3_chart_internal_fn.generateFlow = function (args) {\n        var $$ = this,\n            config = $$.config,\n            d3 = $$.d3;\n\n        return function () {\n            var targets = args.targets,\n                flow = args.flow,\n                drawBar = args.drawBar,\n                drawLine = args.drawLine,\n                drawArea = args.drawArea,\n                cx = args.cx,\n                cy = args.cy,\n                xv = args.xv,\n                xForText = args.xForText,\n                yForText = args.yForText,\n                duration = args.duration;\n\n            var translateX,\n                scaleX = 1,\n                transform,\n                flowIndex = flow.index,\n                flowLength = flow.length,\n                flowStart = $$.getValueOnIndex($$.data.targets[0].values, flowIndex),\n                flowEnd = $$.getValueOnIndex($$.data.targets[0].values, flowIndex + flowLength),\n                orgDomain = $$.x.domain(),\n                domain,\n                durationForFlow = flow.duration || duration,\n                done = flow.done || function () {},\n                wait = $$.generateWait();\n\n            var xgrid, xgridLines, mainRegion, mainText, mainBar, mainLine, mainArea, mainCircle;\n\n            // set flag\n            $$.flowing = true;\n\n            // remove head data after rendered\n            $$.data.targets.forEach(function (d) {\n                d.values.splice(0, flowLength);\n            });\n\n            // update x domain to generate axis elements for flow\n            domain = $$.updateXDomain(targets, true, true);\n            // update elements related to x scale\n            if ($$.updateXGrid) {\n                $$.updateXGrid(true);\n            }\n\n            xgrid = $$.xgrid || d3.selectAll([]); // xgrid needs to be obtained after updateXGrid\n            xgridLines = $$.xgridLines || d3.selectAll([]);\n            mainRegion = $$.mainRegion || d3.selectAll([]);\n            mainText = $$.mainText || d3.selectAll([]);\n            mainBar = $$.mainBar || d3.selectAll([]);\n            mainLine = $$.mainLine || d3.selectAll([]);\n            mainArea = $$.mainArea || d3.selectAll([]);\n            mainCircle = $$.mainCircle || d3.selectAll([]);\n\n            // generate transform to flow\n            if (!flow.orgDataCount) {\n                // if empty\n                if ($$.data.targets[0].values.length !== 1) {\n                    translateX = $$.x(orgDomain[0]) - $$.x(domain[0]);\n                } else {\n                    if ($$.isTimeSeries()) {\n                        flowStart = $$.getValueOnIndex($$.data.targets[0].values, 0);\n                        flowEnd = $$.getValueOnIndex($$.data.targets[0].values, $$.data.targets[0].values.length - 1);\n                        translateX = $$.x(flowStart.x) - $$.x(flowEnd.x);\n                    } else {\n                        translateX = diffDomain(domain) / 2;\n                    }\n                }\n            } else if (flow.orgDataCount === 1 || (flowStart && flowStart.x) === (flowEnd && flowEnd.x)) {\n                translateX = $$.x(orgDomain[0]) - $$.x(domain[0]);\n            } else {\n                if ($$.isTimeSeries()) {\n                    translateX = $$.x(orgDomain[0]) - $$.x(domain[0]);\n                } else {\n                    translateX = $$.x(flowStart.x) - $$.x(flowEnd.x);\n                }\n            }\n            scaleX = diffDomain(orgDomain) / diffDomain(domain);\n            transform = 'translate(' + translateX + ',0) scale(' + scaleX + ',1)';\n\n            $$.hideXGridFocus();\n\n            var flowTransition = d3.transition().ease(d3.easeLinear).duration(durationForFlow);\n            wait.add($$.xAxis($$.axes.x, flowTransition));\n            wait.add(mainBar.transition(flowTransition).attr('transform', transform));\n            wait.add(mainLine.transition(flowTransition).attr('transform', transform));\n            wait.add(mainArea.transition(flowTransition).attr('transform', transform));\n            wait.add(mainCircle.transition(flowTransition).attr('transform', transform));\n            wait.add(mainText.transition(flowTransition).attr('transform', transform));\n            wait.add(mainRegion.filter($$.isRegionOnX).transition(flowTransition).attr('transform', transform));\n            wait.add(xgrid.transition(flowTransition).attr('transform', transform));\n            wait.add(xgridLines.transition(flowTransition).attr('transform', transform));\n            wait(function () {\n                var i,\n                    shapes = [],\n                    texts = [];\n\n                // remove flowed elements\n                if (flowLength) {\n                    for (i = 0; i < flowLength; i++) {\n                        shapes.push('.' + CLASS.shape + '-' + (flowIndex + i));\n                        texts.push('.' + CLASS.text + '-' + (flowIndex + i));\n                    }\n                    $$.svg.selectAll('.' + CLASS.shapes).selectAll(shapes).remove();\n                    $$.svg.selectAll('.' + CLASS.texts).selectAll(texts).remove();\n                    $$.svg.select('.' + CLASS.xgrid).remove();\n                }\n\n                // draw again for removing flowed elements and reverting attr\n                xgrid.attr('transform', null).attr('x1', $$.xgridAttr.x1).attr('x2', $$.xgridAttr.x2).attr('y1', $$.xgridAttr.y1).attr('y2', $$.xgridAttr.y2).style(\"opacity\", $$.xgridAttr.opacity);\n                xgridLines.attr('transform', null);\n                xgridLines.select('line').attr(\"x1\", config.axis_rotated ? 0 : xv).attr(\"x2\", config.axis_rotated ? $$.width : xv);\n                xgridLines.select('text').attr(\"x\", config.axis_rotated ? $$.width : 0).attr(\"y\", xv);\n                mainBar.attr('transform', null).attr(\"d\", drawBar);\n                mainLine.attr('transform', null).attr(\"d\", drawLine);\n                mainArea.attr('transform', null).attr(\"d\", drawArea);\n                mainCircle.attr('transform', null).attr(\"cx\", cx).attr(\"cy\", cy);\n                mainText.attr('transform', null).attr('x', xForText).attr('y', yForText).style('fill-opacity', $$.opacityForText.bind($$));\n                mainRegion.attr('transform', null);\n                mainRegion.filter($$.isRegionOnX).attr(\"x\", $$.regionX.bind($$)).attr(\"width\", $$.regionWidth.bind($$));\n\n                // callback for end of flow\n                done();\n\n                $$.flowing = false;\n            });\n        };\n    };\n\n    c3_chart_fn.focus = function (targetIds) {\n        var $$ = this.internal,\n            candidates;\n\n        targetIds = $$.mapToTargetIds(targetIds);\n        candidates = $$.svg.selectAll($$.selectorTargets(targetIds.filter($$.isTargetToShow, $$))), this.revert();\n        this.defocus();\n        candidates.classed(CLASS.focused, true).classed(CLASS.defocused, false);\n        if ($$.hasArcType()) {\n            $$.expandArc(targetIds);\n        }\n        $$.toggleFocusLegend(targetIds, true);\n\n        $$.focusedTargetIds = targetIds;\n        $$.defocusedTargetIds = $$.defocusedTargetIds.filter(function (id) {\n            return targetIds.indexOf(id) < 0;\n        });\n    };\n\n    c3_chart_fn.defocus = function (targetIds) {\n        var $$ = this.internal,\n            candidates;\n\n        targetIds = $$.mapToTargetIds(targetIds);\n        candidates = $$.svg.selectAll($$.selectorTargets(targetIds.filter($$.isTargetToShow, $$))), candidates.classed(CLASS.focused, false).classed(CLASS.defocused, true);\n        if ($$.hasArcType()) {\n            $$.unexpandArc(targetIds);\n        }\n        $$.toggleFocusLegend(targetIds, false);\n\n        $$.focusedTargetIds = $$.focusedTargetIds.filter(function (id) {\n            return targetIds.indexOf(id) < 0;\n        });\n        $$.defocusedTargetIds = targetIds;\n    };\n\n    c3_chart_fn.revert = function (targetIds) {\n        var $$ = this.internal,\n            candidates;\n\n        targetIds = $$.mapToTargetIds(targetIds);\n        candidates = $$.svg.selectAll($$.selectorTargets(targetIds)); // should be for all targets\n\n        candidates.classed(CLASS.focused, false).classed(CLASS.defocused, false);\n        if ($$.hasArcType()) {\n            $$.unexpandArc(targetIds);\n        }\n        if ($$.config.legend_show) {\n            $$.showLegend(targetIds.filter($$.isLegendToShow.bind($$)));\n            $$.legend.selectAll($$.selectorLegends(targetIds)).filter(function () {\n                return $$.d3.select(this).classed(CLASS.legendItemFocused);\n            }).classed(CLASS.legendItemFocused, false);\n        }\n\n        $$.focusedTargetIds = [];\n        $$.defocusedTargetIds = [];\n    };\n\n    c3_chart_fn.xgrids = function (grids) {\n        var $$ = this.internal,\n            config = $$.config;\n        if (!grids) {\n            return config.grid_x_lines;\n        }\n        config.grid_x_lines = grids;\n        $$.redrawWithoutRescale();\n        return config.grid_x_lines;\n    };\n    c3_chart_fn.xgrids.add = function (grids) {\n        var $$ = this.internal;\n        return this.xgrids($$.config.grid_x_lines.concat(grids ? grids : []));\n    };\n    c3_chart_fn.xgrids.remove = function (params) {\n        // TODO: multiple\n        var $$ = this.internal;\n        $$.removeGridLines(params, true);\n    };\n\n    c3_chart_fn.ygrids = function (grids) {\n        var $$ = this.internal,\n            config = $$.config;\n        if (!grids) {\n            return config.grid_y_lines;\n        }\n        config.grid_y_lines = grids;\n        $$.redrawWithoutRescale();\n        return config.grid_y_lines;\n    };\n    c3_chart_fn.ygrids.add = function (grids) {\n        var $$ = this.internal;\n        return this.ygrids($$.config.grid_y_lines.concat(grids ? grids : []));\n    };\n    c3_chart_fn.ygrids.remove = function (params) {\n        // TODO: multiple\n        var $$ = this.internal;\n        $$.removeGridLines(params, false);\n    };\n\n    c3_chart_fn.groups = function (groups) {\n        var $$ = this.internal,\n            config = $$.config;\n        if (isUndefined(groups)) {\n            return config.data_groups;\n        }\n        config.data_groups = groups;\n        $$.redraw();\n        return config.data_groups;\n    };\n\n    c3_chart_fn.legend = function () {};\n    c3_chart_fn.legend.show = function (targetIds) {\n        var $$ = this.internal;\n        $$.showLegend($$.mapToTargetIds(targetIds));\n        $$.updateAndRedraw({ withLegend: true });\n    };\n    c3_chart_fn.legend.hide = function (targetIds) {\n        var $$ = this.internal;\n        $$.hideLegend($$.mapToTargetIds(targetIds));\n        $$.updateAndRedraw({ withLegend: true });\n    };\n\n    c3_chart_fn.load = function (args) {\n        var $$ = this.internal,\n            config = $$.config;\n        // update xs if specified\n        if (args.xs) {\n            $$.addXs(args.xs);\n        }\n        // update names if exists\n        if ('names' in args) {\n            c3_chart_fn.data.names.bind(this)(args.names);\n        }\n        // update classes if exists\n        if ('classes' in args) {\n            Object.keys(args.classes).forEach(function (id) {\n                config.data_classes[id] = args.classes[id];\n            });\n        }\n        // update categories if exists\n        if ('categories' in args && $$.isCategorized()) {\n            config.axis_x_categories = args.categories;\n        }\n        // update axes if exists\n        if ('axes' in args) {\n            Object.keys(args.axes).forEach(function (id) {\n                config.data_axes[id] = args.axes[id];\n            });\n        }\n        // update colors if exists\n        if ('colors' in args) {\n            Object.keys(args.colors).forEach(function (id) {\n                config.data_colors[id] = args.colors[id];\n            });\n        }\n        // use cache if exists\n        if ('cacheIds' in args && $$.hasCaches(args.cacheIds)) {\n            $$.load($$.getCaches(args.cacheIds), args.done);\n            return;\n        }\n        // unload if needed\n        if ('unload' in args) {\n            // TODO: do not unload if target will load (included in url/rows/columns)\n            $$.unload($$.mapToTargetIds(typeof args.unload === 'boolean' && args.unload ? null : args.unload), function () {\n                $$.loadFromArgs(args);\n            });\n        } else {\n            $$.loadFromArgs(args);\n        }\n    };\n\n    c3_chart_fn.unload = function (args) {\n        var $$ = this.internal;\n        args = args || {};\n        if (args instanceof Array) {\n            args = { ids: args };\n        } else if (typeof args === 'string') {\n            args = { ids: [args] };\n        }\n        $$.unload($$.mapToTargetIds(args.ids), function () {\n            $$.redraw({ withUpdateOrgXDomain: true, withUpdateXDomain: true, withLegend: true });\n            if (args.done) {\n                args.done();\n            }\n        });\n    };\n\n    c3_chart_fn.regions = function (regions) {\n        var $$ = this.internal,\n            config = $$.config;\n        if (!regions) {\n            return config.regions;\n        }\n        config.regions = regions;\n        $$.redrawWithoutRescale();\n        return config.regions;\n    };\n    c3_chart_fn.regions.add = function (regions) {\n        var $$ = this.internal,\n            config = $$.config;\n        if (!regions) {\n            return config.regions;\n        }\n        config.regions = config.regions.concat(regions);\n        $$.redrawWithoutRescale();\n        return config.regions;\n    };\n    c3_chart_fn.regions.remove = function (options) {\n        var $$ = this.internal,\n            config = $$.config,\n            duration,\n            classes,\n            regions;\n\n        options = options || {};\n        duration = $$.getOption(options, \"duration\", config.transition_duration);\n        classes = $$.getOption(options, \"classes\", [CLASS.region]);\n\n        regions = $$.main.select('.' + CLASS.regions).selectAll(classes.map(function (c) {\n            return '.' + c;\n        }));\n        (duration ? regions.transition().duration(duration) : regions).style('opacity', 0).remove();\n\n        config.regions = config.regions.filter(function (region) {\n            var found = false;\n            if (!region['class']) {\n                return true;\n            }\n            region['class'].split(' ').forEach(function (c) {\n                if (classes.indexOf(c) >= 0) {\n                    found = true;\n                }\n            });\n            return !found;\n        });\n\n        return config.regions;\n    };\n\n    c3_chart_fn.selected = function (targetId) {\n        var $$ = this.internal,\n            d3 = $$.d3;\n        return d3.merge($$.main.selectAll('.' + CLASS.shapes + $$.getTargetSelectorSuffix(targetId)).selectAll('.' + CLASS.shape).filter(function () {\n            return d3.select(this).classed(CLASS.SELECTED);\n        }).map(function (d) {\n            return d.map(function (d) {\n                var data = d.__data__;return data.data ? data.data : data;\n            });\n        }));\n    };\n    c3_chart_fn.select = function (ids, indices, resetOther) {\n        var $$ = this.internal,\n            d3 = $$.d3,\n            config = $$.config;\n        if (!config.data_selection_enabled) {\n            return;\n        }\n        $$.main.selectAll('.' + CLASS.shapes).selectAll('.' + CLASS.shape).each(function (d, i) {\n            var shape = d3.select(this),\n                id = d.data ? d.data.id : d.id,\n                toggle = $$.getToggle(this, d).bind($$),\n                isTargetId = config.data_selection_grouped || !ids || ids.indexOf(id) >= 0,\n                isTargetIndex = !indices || indices.indexOf(i) >= 0,\n                isSelected = shape.classed(CLASS.SELECTED);\n            // line/area selection not supported yet\n            if (shape.classed(CLASS.line) || shape.classed(CLASS.area)) {\n                return;\n            }\n            if (isTargetId && isTargetIndex) {\n                if (config.data_selection_isselectable(d) && !isSelected) {\n                    toggle(true, shape.classed(CLASS.SELECTED, true), d, i);\n                }\n            } else if (isDefined(resetOther) && resetOther) {\n                if (isSelected) {\n                    toggle(false, shape.classed(CLASS.SELECTED, false), d, i);\n                }\n            }\n        });\n    };\n    c3_chart_fn.unselect = function (ids, indices) {\n        var $$ = this.internal,\n            d3 = $$.d3,\n            config = $$.config;\n        if (!config.data_selection_enabled) {\n            return;\n        }\n        $$.main.selectAll('.' + CLASS.shapes).selectAll('.' + CLASS.shape).each(function (d, i) {\n            var shape = d3.select(this),\n                id = d.data ? d.data.id : d.id,\n                toggle = $$.getToggle(this, d).bind($$),\n                isTargetId = config.data_selection_grouped || !ids || ids.indexOf(id) >= 0,\n                isTargetIndex = !indices || indices.indexOf(i) >= 0,\n                isSelected = shape.classed(CLASS.SELECTED);\n            // line/area selection not supported yet\n            if (shape.classed(CLASS.line) || shape.classed(CLASS.area)) {\n                return;\n            }\n            if (isTargetId && isTargetIndex) {\n                if (config.data_selection_isselectable(d)) {\n                    if (isSelected) {\n                        toggle(false, shape.classed(CLASS.SELECTED, false), d, i);\n                    }\n                }\n            }\n        });\n    };\n\n    c3_chart_fn.show = function (targetIds, options) {\n        var $$ = this.internal,\n            targets;\n\n        targetIds = $$.mapToTargetIds(targetIds);\n        options = options || {};\n\n        $$.removeHiddenTargetIds(targetIds);\n        targets = $$.svg.selectAll($$.selectorTargets(targetIds));\n\n        targets.transition().style('display', 'initial', 'important').style('opacity', 1, 'important').call($$.endall, function () {\n            targets.style('opacity', null).style('opacity', 1);\n        });\n\n        if (options.withLegend) {\n            $$.showLegend(targetIds);\n        }\n\n        $$.redraw({ withUpdateOrgXDomain: true, withUpdateXDomain: true, withLegend: true });\n    };\n\n    c3_chart_fn.hide = function (targetIds, options) {\n        var $$ = this.internal,\n            targets;\n\n        targetIds = $$.mapToTargetIds(targetIds);\n        options = options || {};\n\n        $$.addHiddenTargetIds(targetIds);\n        targets = $$.svg.selectAll($$.selectorTargets(targetIds));\n\n        targets.transition().style('opacity', 0, 'important').call($$.endall, function () {\n            targets.style('opacity', null).style('opacity', 0);\n            targets.style('display', 'none');\n        });\n\n        if (options.withLegend) {\n            $$.hideLegend(targetIds);\n        }\n\n        $$.redraw({ withUpdateOrgXDomain: true, withUpdateXDomain: true, withLegend: true });\n    };\n\n    c3_chart_fn.toggle = function (targetIds, options) {\n        var that = this,\n            $$ = this.internal;\n        $$.mapToTargetIds(targetIds).forEach(function (targetId) {\n            $$.isTargetToShow(targetId) ? that.hide(targetId, options) : that.show(targetId, options);\n        });\n    };\n\n    c3_chart_fn.tooltip = function () {};\n    c3_chart_fn.tooltip.show = function (args) {\n        var $$ = this.internal,\n            targets,\n            data,\n            mouse = {};\n\n        // determine mouse position on the chart\n        if (args.mouse) {\n            mouse = args.mouse;\n        } else {\n            // determine focus data\n            if (args.data) {\n                data = args.data;\n            } else if (typeof args.x !== 'undefined') {\n                if (args.id) {\n                    targets = $$.data.targets.filter(function (t) {\n                        return t.id === args.id;\n                    });\n                } else {\n                    targets = $$.data.targets;\n                }\n                data = $$.filterByX(targets, args.x).slice(0, 1)[0];\n            }\n            mouse = data ? $$.getMousePosition(data) : null;\n        }\n\n        // emulate mouse events to show\n        $$.dispatchEvent('mousemove', mouse);\n\n        $$.config.tooltip_onshow.call($$, data);\n    };\n    c3_chart_fn.tooltip.hide = function () {\n        // TODO: get target data by checking the state of focus\n        this.internal.dispatchEvent('mouseout', 0);\n\n        this.internal.config.tooltip_onhide.call(this);\n    };\n\n    c3_chart_fn.transform = function (type, targetIds) {\n        var $$ = this.internal,\n            options = ['pie', 'donut'].indexOf(type) >= 0 ? { withTransform: true } : null;\n        $$.transformTo(targetIds, type, options);\n    };\n\n    c3_chart_internal_fn.transformTo = function (targetIds, type, optionsForRedraw) {\n        var $$ = this,\n            withTransitionForAxis = !$$.hasArcType(),\n            options = optionsForRedraw || { withTransitionForAxis: withTransitionForAxis };\n        options.withTransitionForTransform = false;\n        $$.transiting = false;\n        $$.setTargetType(targetIds, type);\n        $$.updateTargets($$.data.targets); // this is needed when transforming to arc\n        $$.updateAndRedraw(options);\n    };\n\n    c3_chart_fn.x = function (x) {\n        var $$ = this.internal;\n        if (arguments.length) {\n            $$.updateTargetX($$.data.targets, x);\n            $$.redraw({ withUpdateOrgXDomain: true, withUpdateXDomain: true });\n        }\n        return $$.data.xs;\n    };\n    c3_chart_fn.xs = function (xs) {\n        var $$ = this.internal;\n        if (arguments.length) {\n            $$.updateTargetXs($$.data.targets, xs);\n            $$.redraw({ withUpdateOrgXDomain: true, withUpdateXDomain: true });\n        }\n        return $$.data.xs;\n    };\n\n    c3_chart_fn.zoom = function (domain) {\n        var $$ = this.internal;\n        if (domain) {\n            if ($$.isTimeSeries()) {\n                domain = domain.map(function (x) {\n                    return $$.parseDate(x);\n                });\n            }\n            if ($$.config.subchart_show) {\n                $$.brush.selectionAsValue(domain, true);\n            } else {\n                $$.updateXDomain(null, true, false, false, domain);\n                $$.redraw({ withY: $$.config.zoom_rescale, withSubchart: false });\n            }\n            $$.config.zoom_onzoom.call(this, $$.x.orgDomain());\n            return domain;\n        } else {\n            return $$.x.domain();\n        }\n    };\n    c3_chart_fn.zoom.enable = function (enabled) {\n        var $$ = this.internal;\n        $$.config.zoom_enabled = enabled;\n        $$.updateAndRedraw();\n    };\n    c3_chart_fn.unzoom = function () {\n        var $$ = this.internal;\n        if ($$.config.subchart_show) {\n            $$.brush.clear();\n        } else {\n            $$.updateXDomain(null, true, false, false, $$.subX.domain());\n            $$.redraw({ withY: $$.config.zoom_rescale, withSubchart: false });\n        }\n    };\n\n    c3_chart_fn.zoom.max = function (max) {\n        var $$ = this.internal,\n            config = $$.config,\n            d3 = $$.d3;\n        if (max === 0 || max) {\n            config.zoom_x_max = d3.max([$$.orgXDomain[1], max]);\n        } else {\n            return config.zoom_x_max;\n        }\n    };\n\n    c3_chart_fn.zoom.min = function (min) {\n        var $$ = this.internal,\n            config = $$.config,\n            d3 = $$.d3;\n        if (min === 0 || min) {\n            config.zoom_x_min = d3.min([$$.orgXDomain[0], min]);\n        } else {\n            return config.zoom_x_min;\n        }\n    };\n\n    c3_chart_fn.zoom.range = function (range) {\n        if (arguments.length) {\n            if (isDefined(range.max)) {\n                this.domain.max(range.max);\n            }\n            if (isDefined(range.min)) {\n                this.domain.min(range.min);\n            }\n        } else {\n            return {\n                max: this.domain.max(),\n                min: this.domain.min()\n            };\n        }\n    };\n\n    c3_chart_internal_fn.initPie = function () {\n        var $$ = this,\n            d3 = $$.d3;\n        $$.pie = d3.pie().value(function (d) {\n            return d.values.reduce(function (a, b) {\n                return a + b.value;\n            }, 0);\n        });\n\n        var orderFct = $$.getOrderFunction();\n\n        // we need to reverse the returned order if asc or desc to have the slice in expected order.\n        if (orderFct && ($$.isOrderAsc() || $$.isOrderDesc())) {\n            var defaultSort = orderFct;\n            orderFct = function orderFct(t1, t2) {\n                return defaultSort(t1, t2) * -1;\n            };\n        }\n\n        $$.pie.sort(orderFct || null);\n    };\n\n    c3_chart_internal_fn.updateRadius = function () {\n        var $$ = this,\n            config = $$.config,\n            w = config.gauge_width || config.donut_width,\n            gaugeArcWidth = $$.filterTargetsToShow($$.data.targets).length * $$.config.gauge_arcs_minWidth;\n        $$.radiusExpanded = Math.min($$.arcWidth, $$.arcHeight) / 2 * ($$.hasType('gauge') ? 0.85 : 1);\n        $$.radius = $$.radiusExpanded * 0.95;\n        $$.innerRadiusRatio = w ? ($$.radius - w) / $$.radius : 0.6;\n        $$.innerRadius = $$.hasType('donut') || $$.hasType('gauge') ? $$.radius * $$.innerRadiusRatio : 0;\n        $$.gaugeArcWidth = w ? w : gaugeArcWidth <= $$.radius - $$.innerRadius ? $$.radius - $$.innerRadius : gaugeArcWidth <= $$.radius ? gaugeArcWidth : $$.radius;\n    };\n\n    c3_chart_internal_fn.updateArc = function () {\n        var $$ = this;\n        $$.svgArc = $$.getSvgArc();\n        $$.svgArcExpanded = $$.getSvgArcExpanded();\n        $$.svgArcExpandedSub = $$.getSvgArcExpanded(0.98);\n    };\n\n    c3_chart_internal_fn.updateAngle = function (d) {\n        var $$ = this,\n            config = $$.config,\n            found = false,\n            index = 0,\n            gMin,\n            gMax,\n            gTic,\n            gValue;\n\n        if (!config) {\n            return null;\n        }\n\n        $$.pie($$.filterTargetsToShow($$.data.targets)).forEach(function (t) {\n            if (!found && t.data.id === d.data.id) {\n                found = true;\n                d = t;\n                d.index = index;\n            }\n            index++;\n        });\n        if (isNaN(d.startAngle)) {\n            d.startAngle = 0;\n        }\n        if (isNaN(d.endAngle)) {\n            d.endAngle = d.startAngle;\n        }\n        if ($$.isGaugeType(d.data)) {\n            gMin = config.gauge_min;\n            gMax = config.gauge_max;\n            gTic = Math.PI * (config.gauge_fullCircle ? 2 : 1) / (gMax - gMin);\n            gValue = d.value < gMin ? 0 : d.value < gMax ? d.value - gMin : gMax - gMin;\n            d.startAngle = config.gauge_startingAngle;\n            d.endAngle = d.startAngle + gTic * gValue;\n        }\n        return found ? d : null;\n    };\n\n    c3_chart_internal_fn.getSvgArc = function () {\n        var $$ = this,\n            hasGaugeType = $$.hasType('gauge'),\n            singleArcWidth = $$.gaugeArcWidth / $$.filterTargetsToShow($$.data.targets).length,\n            arc = $$.d3.arc().outerRadius(function (d) {\n            return hasGaugeType ? $$.radius - singleArcWidth * d.index : $$.radius;\n        }).innerRadius(function (d) {\n            return hasGaugeType ? $$.radius - singleArcWidth * (d.index + 1) : $$.innerRadius;\n        }),\n            newArc = function newArc(d, withoutUpdate) {\n            var updated;\n            if (withoutUpdate) {\n                return arc(d);\n            } // for interpolate\n            updated = $$.updateAngle(d);\n            return updated ? arc(updated) : \"M 0 0\";\n        };\n        // TODO: extends all function\n        newArc.centroid = arc.centroid;\n        return newArc;\n    };\n\n    c3_chart_internal_fn.getSvgArcExpanded = function (rate) {\n        rate = rate || 1;\n        var $$ = this,\n            hasGaugeType = $$.hasType('gauge'),\n            singleArcWidth = $$.gaugeArcWidth / $$.filterTargetsToShow($$.data.targets).length,\n            expandWidth = Math.min($$.radiusExpanded * rate - $$.radius, singleArcWidth * 0.8 - (1 - rate) * 100),\n            arc = $$.d3.arc().outerRadius(function (d) {\n            return hasGaugeType ? $$.radius - singleArcWidth * d.index + expandWidth : $$.radiusExpanded * rate;\n        }).innerRadius(function (d) {\n            return hasGaugeType ? $$.radius - singleArcWidth * (d.index + 1) : $$.innerRadius;\n        });\n        return function (d) {\n            var updated = $$.updateAngle(d);\n            return updated ? arc(updated) : \"M 0 0\";\n        };\n    };\n\n    c3_chart_internal_fn.getArc = function (d, withoutUpdate, force) {\n        return force || this.isArcType(d.data) ? this.svgArc(d, withoutUpdate) : \"M 0 0\";\n    };\n\n    c3_chart_internal_fn.transformForArcLabel = function (d) {\n        var $$ = this,\n            config = $$.config,\n            updated = $$.updateAngle(d),\n            c,\n            x,\n            y,\n            h,\n            ratio,\n            translate = \"\",\n            hasGauge = $$.hasType('gauge');\n        if (updated && !hasGauge) {\n            c = this.svgArc.centroid(updated);\n            x = isNaN(c[0]) ? 0 : c[0];\n            y = isNaN(c[1]) ? 0 : c[1];\n            h = Math.sqrt(x * x + y * y);\n            if ($$.hasType('donut') && config.donut_label_ratio) {\n                ratio = isFunction(config.donut_label_ratio) ? config.donut_label_ratio(d, $$.radius, h) : config.donut_label_ratio;\n            } else if ($$.hasType('pie') && config.pie_label_ratio) {\n                ratio = isFunction(config.pie_label_ratio) ? config.pie_label_ratio(d, $$.radius, h) : config.pie_label_ratio;\n            } else {\n                ratio = $$.radius && h ? (36 / $$.radius > 0.375 ? 1.175 - 36 / $$.radius : 0.8) * $$.radius / h : 0;\n            }\n            translate = \"translate(\" + x * ratio + ',' + y * ratio + \")\";\n        } else if (updated && hasGauge && $$.filterTargetsToShow($$.data.targets).length > 1) {\n            var y1 = Math.sin(updated.endAngle - Math.PI / 2);\n            x = Math.cos(updated.endAngle - Math.PI / 2) * ($$.radiusExpanded + 25);\n            y = y1 * ($$.radiusExpanded + 15 - Math.abs(y1 * 10)) + 3;\n            translate = \"translate(\" + x + ',' + y + \")\";\n        }\n        return translate;\n    };\n\n    c3_chart_internal_fn.getArcRatio = function (d) {\n        var $$ = this,\n            config = $$.config,\n            whole = Math.PI * ($$.hasType('gauge') && !config.gauge_fullCircle ? 1 : 2);\n        return d ? (d.endAngle - d.startAngle) / whole : null;\n    };\n\n    c3_chart_internal_fn.convertToArcData = function (d) {\n        return this.addName({\n            id: d.data.id,\n            value: d.value,\n            ratio: this.getArcRatio(d),\n            index: d.index\n        });\n    };\n\n    c3_chart_internal_fn.textForArcLabel = function (d) {\n        var $$ = this,\n            updated,\n            value,\n            ratio,\n            id,\n            format;\n        if (!$$.shouldShowArcLabel()) {\n            return \"\";\n        }\n        updated = $$.updateAngle(d);\n        value = updated ? updated.value : null;\n        ratio = $$.getArcRatio(updated);\n        id = d.data.id;\n        if (!$$.hasType('gauge') && !$$.meetsArcLabelThreshold(ratio)) {\n            return \"\";\n        }\n        format = $$.getArcLabelFormat();\n        return format ? format(value, ratio, id) : $$.defaultArcValueFormat(value, ratio);\n    };\n\n    c3_chart_internal_fn.textForGaugeMinMax = function (value, isMax) {\n        var $$ = this,\n            format = $$.getGaugeLabelExtents();\n\n        return format ? format(value, isMax) : value;\n    };\n\n    c3_chart_internal_fn.expandArc = function (targetIds) {\n        var $$ = this,\n            interval;\n\n        // MEMO: avoid to cancel transition\n        if ($$.transiting) {\n            interval = window.setInterval(function () {\n                if (!$$.transiting) {\n                    window.clearInterval(interval);\n                    if ($$.legend.selectAll('.c3-legend-item-focused').size() > 0) {\n                        $$.expandArc(targetIds);\n                    }\n                }\n            }, 10);\n            return;\n        }\n\n        targetIds = $$.mapToTargetIds(targetIds);\n\n        $$.svg.selectAll($$.selectorTargets(targetIds, '.' + CLASS.chartArc)).each(function (d) {\n            if (!$$.shouldExpand(d.data.id)) {\n                return;\n            }\n            $$.d3.select(this).selectAll('path').transition().duration($$.expandDuration(d.data.id)).attr(\"d\", $$.svgArcExpanded).transition().duration($$.expandDuration(d.data.id) * 2).attr(\"d\", $$.svgArcExpandedSub).each(function (d) {\n                if ($$.isDonutType(d.data)) {\n                    // callback here\n                }\n            });\n        });\n    };\n\n    c3_chart_internal_fn.unexpandArc = function (targetIds) {\n        var $$ = this;\n\n        if ($$.transiting) {\n            return;\n        }\n\n        targetIds = $$.mapToTargetIds(targetIds);\n\n        $$.svg.selectAll($$.selectorTargets(targetIds, '.' + CLASS.chartArc)).selectAll('path').transition().duration(function (d) {\n            return $$.expandDuration(d.data.id);\n        }).attr(\"d\", $$.svgArc);\n        $$.svg.selectAll('.' + CLASS.arc);\n    };\n\n    c3_chart_internal_fn.expandDuration = function (id) {\n        var $$ = this,\n            config = $$.config;\n\n        if ($$.isDonutType(id)) {\n            return config.donut_expand_duration;\n        } else if ($$.isGaugeType(id)) {\n            return config.gauge_expand_duration;\n        } else if ($$.isPieType(id)) {\n            return config.pie_expand_duration;\n        } else {\n            return 50;\n        }\n    };\n\n    c3_chart_internal_fn.shouldExpand = function (id) {\n        var $$ = this,\n            config = $$.config;\n        return $$.isDonutType(id) && config.donut_expand || $$.isGaugeType(id) && config.gauge_expand || $$.isPieType(id) && config.pie_expand;\n    };\n\n    c3_chart_internal_fn.shouldShowArcLabel = function () {\n        var $$ = this,\n            config = $$.config,\n            shouldShow = true;\n        if ($$.hasType('donut')) {\n            shouldShow = config.donut_label_show;\n        } else if ($$.hasType('pie')) {\n            shouldShow = config.pie_label_show;\n        }\n        // when gauge, always true\n        return shouldShow;\n    };\n\n    c3_chart_internal_fn.meetsArcLabelThreshold = function (ratio) {\n        var $$ = this,\n            config = $$.config,\n            threshold = $$.hasType('donut') ? config.donut_label_threshold : config.pie_label_threshold;\n        return ratio >= threshold;\n    };\n\n    c3_chart_internal_fn.getArcLabelFormat = function () {\n        var $$ = this,\n            config = $$.config,\n            format = config.pie_label_format;\n        if ($$.hasType('gauge')) {\n            format = config.gauge_label_format;\n        } else if ($$.hasType('donut')) {\n            format = config.donut_label_format;\n        }\n        return format;\n    };\n\n    c3_chart_internal_fn.getGaugeLabelExtents = function () {\n        var $$ = this,\n            config = $$.config;\n        return config.gauge_label_extents;\n    };\n\n    c3_chart_internal_fn.getArcTitle = function () {\n        var $$ = this;\n        return $$.hasType('donut') ? $$.config.donut_title : \"\";\n    };\n\n    c3_chart_internal_fn.updateTargetsForArc = function (targets) {\n        var $$ = this,\n            main = $$.main,\n            mainPies,\n            mainPieEnter,\n            classChartArc = $$.classChartArc.bind($$),\n            classArcs = $$.classArcs.bind($$),\n            classFocus = $$.classFocus.bind($$);\n        mainPies = main.select('.' + CLASS.chartArcs).selectAll('.' + CLASS.chartArc).data($$.pie(targets)).attr(\"class\", function (d) {\n            return classChartArc(d) + classFocus(d.data);\n        });\n        mainPieEnter = mainPies.enter().append(\"g\").attr(\"class\", classChartArc);\n        mainPieEnter.append('g').attr('class', classArcs);\n        mainPieEnter.append(\"text\").attr(\"dy\", $$.hasType('gauge') ? \"-.1em\" : \".35em\").style(\"opacity\", 0).style(\"text-anchor\", \"middle\").style(\"pointer-events\", \"none\");\n        // MEMO: can not keep same color..., but not bad to update color in redraw\n        //mainPieUpdate.exit().remove();\n    };\n\n    c3_chart_internal_fn.initArc = function () {\n        var $$ = this;\n        $$.arcs = $$.main.select('.' + CLASS.chart).append(\"g\").attr(\"class\", CLASS.chartArcs).attr(\"transform\", $$.getTranslate('arc'));\n        $$.arcs.append('text').attr('class', CLASS.chartArcsTitle).style(\"text-anchor\", \"middle\").text($$.getArcTitle());\n    };\n\n    c3_chart_internal_fn.redrawArc = function (duration, durationForExit, withTransform) {\n        var $$ = this,\n            d3 = $$.d3,\n            config = $$.config,\n            main = $$.main,\n            arcs,\n            mainArc,\n            backgroundArc,\n            arcLabelLines,\n            mainArcLabelLine,\n            hasGaugeType = $$.hasType('gauge');\n        arcs = main.selectAll('.' + CLASS.arcs).selectAll('.' + CLASS.arc).data($$.arcData.bind($$));\n        mainArc = arcs.enter().append('path').attr(\"class\", $$.classArc.bind($$)).style(\"fill\", function (d) {\n            return $$.color(d.data);\n        }).style(\"cursor\", function (d) {\n            return config.interaction_enabled && config.data_selection_isselectable(d) ? \"pointer\" : null;\n        }).each(function (d) {\n            if ($$.isGaugeType(d.data)) {\n                d.startAngle = d.endAngle = config.gauge_startingAngle;\n            }\n            this._current = d;\n        }).merge(arcs);\n        if (hasGaugeType) {\n            arcLabelLines = main.selectAll('.' + CLASS.arcs).selectAll('.' + CLASS.arcLabelLine).data($$.arcData.bind($$));\n            mainArcLabelLine = arcLabelLines.enter().append('rect').attr(\"class\", function (d) {\n                return CLASS.arcLabelLine + ' ' + CLASS.target + ' ' + CLASS.target + '-' + d.data.id;\n            }).merge(arcLabelLines);\n\n            if ($$.filterTargetsToShow($$.data.targets).length === 1) {\n                mainArcLabelLine.style(\"display\", \"none\");\n            } else {\n                mainArcLabelLine.style(\"fill\", function (d) {\n                    return config.color_pattern.length > 0 ? $$.levelColor(d.data.values[0].value) : $$.color(d.data);\n                }).style(\"display\", config.gauge_labelLine_show ? \"\" : \"none\").each(function (d) {\n                    var lineLength = 0,\n                        lineThickness = 2,\n                        x = 0,\n                        y = 0,\n                        transform = \"\";\n                    if ($$.hiddenTargetIds.indexOf(d.data.id) < 0) {\n                        var updated = $$.updateAngle(d),\n                            innerLineLength = $$.gaugeArcWidth / $$.filterTargetsToShow($$.data.targets).length * (updated.index + 1),\n                            lineAngle = updated.endAngle - Math.PI / 2,\n                            arcInnerRadius = $$.radius - innerLineLength,\n                            linePositioningAngle = lineAngle - (arcInnerRadius === 0 ? 0 : 1 / arcInnerRadius);\n                        lineLength = $$.radiusExpanded - $$.radius + innerLineLength;\n                        x = Math.cos(linePositioningAngle) * arcInnerRadius;\n                        y = Math.sin(linePositioningAngle) * arcInnerRadius;\n                        transform = \"rotate(\" + lineAngle * 180 / Math.PI + \", \" + x + \", \" + y + \")\";\n                    }\n                    d3.select(this).attr('x', x).attr('y', y).attr('width', lineLength).attr('height', lineThickness).attr('transform', transform).style(\"stroke-dasharray\", \"0, \" + (lineLength + lineThickness) + \", 0\");\n                });\n            }\n        }\n        mainArc.attr(\"transform\", function (d) {\n            return !$$.isGaugeType(d.data) && withTransform ? \"scale(0)\" : \"\";\n        }).on('mouseover', config.interaction_enabled ? function (d) {\n            var updated, arcData;\n            if ($$.transiting) {\n                // skip while transiting\n                return;\n            }\n            updated = $$.updateAngle(d);\n            if (updated) {\n                arcData = $$.convertToArcData(updated);\n                // transitions\n                $$.expandArc(updated.data.id);\n                $$.api.focus(updated.data.id);\n                $$.toggleFocusLegend(updated.data.id, true);\n                $$.config.data_onmouseover(arcData, this);\n            }\n        } : null).on('mousemove', config.interaction_enabled ? function (d) {\n            var updated = $$.updateAngle(d),\n                arcData,\n                selectedData;\n            if (updated) {\n                arcData = $$.convertToArcData(updated), selectedData = [arcData];\n                $$.showTooltip(selectedData, this);\n            }\n        } : null).on('mouseout', config.interaction_enabled ? function (d) {\n            var updated, arcData;\n            if ($$.transiting) {\n                // skip while transiting\n                return;\n            }\n            updated = $$.updateAngle(d);\n            if (updated) {\n                arcData = $$.convertToArcData(updated);\n                // transitions\n                $$.unexpandArc(updated.data.id);\n                $$.api.revert();\n                $$.revertLegend();\n                $$.hideTooltip();\n                $$.config.data_onmouseout(arcData, this);\n            }\n        } : null).on('click', config.interaction_enabled ? function (d, i) {\n            var updated = $$.updateAngle(d),\n                arcData;\n            if (updated) {\n                arcData = $$.convertToArcData(updated);\n                if ($$.toggleShape) {\n                    $$.toggleShape(this, arcData, i);\n                }\n                $$.config.data_onclick.call($$.api, arcData, this);\n            }\n        } : null).each(function () {\n            $$.transiting = true;\n        }).transition().duration(duration).attrTween(\"d\", function (d) {\n            var updated = $$.updateAngle(d),\n                interpolate;\n            if (!updated) {\n                return function () {\n                    return \"M 0 0\";\n                };\n            }\n            //                if (this._current === d) {\n            //                    this._current = {\n            //                        startAngle: Math.PI*2,\n            //                        endAngle: Math.PI*2,\n            //                    };\n            //                }\n            if (isNaN(this._current.startAngle)) {\n                this._current.startAngle = 0;\n            }\n            if (isNaN(this._current.endAngle)) {\n                this._current.endAngle = this._current.startAngle;\n            }\n            interpolate = d3.interpolate(this._current, updated);\n            this._current = interpolate(0);\n            return function (t) {\n                var interpolated = interpolate(t);\n                interpolated.data = d.data; // data.id will be updated by interporator\n                return $$.getArc(interpolated, true);\n            };\n        }).attr(\"transform\", withTransform ? \"scale(1)\" : \"\").style(\"fill\", function (d) {\n            return $$.levelColor ? $$.levelColor(d.data.values[0].value) : $$.color(d.data.id);\n        }) // Where gauge reading color would receive customization.\n        .call($$.endall, function () {\n            $$.transiting = false;\n        });\n        arcs.exit().transition().duration(durationForExit).style('opacity', 0).remove();\n        main.selectAll('.' + CLASS.chartArc).select('text').style(\"opacity\", 0).attr('class', function (d) {\n            return $$.isGaugeType(d.data) ? CLASS.gaugeValue : '';\n        }).text($$.textForArcLabel.bind($$)).attr(\"transform\", $$.transformForArcLabel.bind($$)).style('font-size', function (d) {\n            return $$.isGaugeType(d.data) && $$.filterTargetsToShow($$.data.targets).length === 1 ? Math.round($$.radius / 5) + 'px' : '';\n        }).transition().duration(duration).style(\"opacity\", function (d) {\n            return $$.isTargetToShow(d.data.id) && $$.isArcType(d.data) ? 1 : 0;\n        });\n        main.select('.' + CLASS.chartArcsTitle).style(\"opacity\", $$.hasType('donut') || hasGaugeType ? 1 : 0);\n\n        if (hasGaugeType) {\n            var index = 0;\n            backgroundArc = $$.arcs.select('g.' + CLASS.chartArcsBackground).selectAll('path.' + CLASS.chartArcsBackground).data($$.data.targets);\n            backgroundArc.enter().append(\"path\");\n            backgroundArc.attr(\"class\", function (d, i) {\n                return CLASS.chartArcsBackground + ' ' + CLASS.chartArcsBackground + '-' + i;\n            }).attr(\"d\", function (d1) {\n                if ($$.hiddenTargetIds.indexOf(d1.id) >= 0) {\n                    return \"M 0 0\";\n                }\n\n                var d = {\n                    data: [{ value: config.gauge_max }],\n                    startAngle: config.gauge_startingAngle,\n                    endAngle: -1 * config.gauge_startingAngle * (config.gauge_fullCircle ? Math.PI : 1),\n                    index: index++\n                };\n                return $$.getArc(d, true, true);\n            });\n            backgroundArc.exit().remove();\n\n            $$.arcs.select('.' + CLASS.chartArcsGaugeUnit).attr(\"dy\", \".75em\").text(config.gauge_label_show ? config.gauge_units : '');\n            $$.arcs.select('.' + CLASS.chartArcsGaugeMin).attr(\"dx\", -1 * ($$.innerRadius + ($$.radius - $$.innerRadius) / (config.gauge_fullCircle ? 1 : 2)) + \"px\").attr(\"dy\", \"1.2em\").text(config.gauge_label_show ? $$.textForGaugeMinMax(config.gauge_min, false) : '');\n            $$.arcs.select('.' + CLASS.chartArcsGaugeMax).attr(\"dx\", $$.innerRadius + ($$.radius - $$.innerRadius) / (config.gauge_fullCircle ? 1 : 2) + \"px\").attr(\"dy\", \"1.2em\").text(config.gauge_label_show ? $$.textForGaugeMinMax(config.gauge_max, true) : '');\n        }\n    };\n    c3_chart_internal_fn.initGauge = function () {\n        var arcs = this.arcs;\n        if (this.hasType('gauge')) {\n            arcs.append('g').attr(\"class\", CLASS.chartArcsBackground);\n            arcs.append(\"text\").attr(\"class\", CLASS.chartArcsGaugeUnit).style(\"text-anchor\", \"middle\").style(\"pointer-events\", \"none\");\n            arcs.append(\"text\").attr(\"class\", CLASS.chartArcsGaugeMin).style(\"text-anchor\", \"middle\").style(\"pointer-events\", \"none\");\n            arcs.append(\"text\").attr(\"class\", CLASS.chartArcsGaugeMax).style(\"text-anchor\", \"middle\").style(\"pointer-events\", \"none\");\n        }\n    };\n    c3_chart_internal_fn.getGaugeLabelHeight = function () {\n        return this.config.gauge_label_show ? 20 : 0;\n    };\n\n    c3_chart_internal_fn.hasCaches = function (ids) {\n        for (var i = 0; i < ids.length; i++) {\n            if (!(ids[i] in this.cache)) {\n                return false;\n            }\n        }\n        return true;\n    };\n    c3_chart_internal_fn.addCache = function (id, target) {\n        this.cache[id] = this.cloneTarget(target);\n    };\n    c3_chart_internal_fn.getCaches = function (ids) {\n        var targets = [],\n            i;\n        for (i = 0; i < ids.length; i++) {\n            if (ids[i] in this.cache) {\n                targets.push(this.cloneTarget(this.cache[ids[i]]));\n            }\n        }\n        return targets;\n    };\n\n    c3_chart_internal_fn.categoryName = function (i) {\n        var config = this.config;\n        return i < config.axis_x_categories.length ? config.axis_x_categories[i] : i;\n    };\n\n    c3_chart_internal_fn.generateTargetClass = function (targetId) {\n        return targetId || targetId === 0 ? ('-' + targetId).replace(/\\s/g, '-') : '';\n    };\n    c3_chart_internal_fn.generateClass = function (prefix, targetId) {\n        return \" \" + prefix + \" \" + prefix + this.generateTargetClass(targetId);\n    };\n    c3_chart_internal_fn.classText = function (d) {\n        return this.generateClass(CLASS.text, d.index);\n    };\n    c3_chart_internal_fn.classTexts = function (d) {\n        return this.generateClass(CLASS.texts, d.id);\n    };\n    c3_chart_internal_fn.classShape = function (d) {\n        return this.generateClass(CLASS.shape, d.index);\n    };\n    c3_chart_internal_fn.classShapes = function (d) {\n        return this.generateClass(CLASS.shapes, d.id);\n    };\n    c3_chart_internal_fn.classLine = function (d) {\n        return this.classShape(d) + this.generateClass(CLASS.line, d.id);\n    };\n    c3_chart_internal_fn.classLines = function (d) {\n        return this.classShapes(d) + this.generateClass(CLASS.lines, d.id);\n    };\n    c3_chart_internal_fn.classCircle = function (d) {\n        return this.classShape(d) + this.generateClass(CLASS.circle, d.index);\n    };\n    c3_chart_internal_fn.classCircles = function (d) {\n        return this.classShapes(d) + this.generateClass(CLASS.circles, d.id);\n    };\n    c3_chart_internal_fn.classBar = function (d) {\n        return this.classShape(d) + this.generateClass(CLASS.bar, d.index);\n    };\n    c3_chart_internal_fn.classBars = function (d) {\n        return this.classShapes(d) + this.generateClass(CLASS.bars, d.id);\n    };\n    c3_chart_internal_fn.classArc = function (d) {\n        return this.classShape(d.data) + this.generateClass(CLASS.arc, d.data.id);\n    };\n    c3_chart_internal_fn.classArcs = function (d) {\n        return this.classShapes(d.data) + this.generateClass(CLASS.arcs, d.data.id);\n    };\n    c3_chart_internal_fn.classArea = function (d) {\n        return this.classShape(d) + this.generateClass(CLASS.area, d.id);\n    };\n    c3_chart_internal_fn.classAreas = function (d) {\n        return this.classShapes(d) + this.generateClass(CLASS.areas, d.id);\n    };\n    c3_chart_internal_fn.classRegion = function (d, i) {\n        return this.generateClass(CLASS.region, i) + ' ' + ('class' in d ? d['class'] : '');\n    };\n    c3_chart_internal_fn.classEvent = function (d) {\n        return this.generateClass(CLASS.eventRect, d.index);\n    };\n    c3_chart_internal_fn.classTarget = function (id) {\n        var $$ = this;\n        var additionalClassSuffix = $$.config.data_classes[id],\n            additionalClass = '';\n        if (additionalClassSuffix) {\n            additionalClass = ' ' + CLASS.target + '-' + additionalClassSuffix;\n        }\n        return $$.generateClass(CLASS.target, id) + additionalClass;\n    };\n    c3_chart_internal_fn.classFocus = function (d) {\n        return this.classFocused(d) + this.classDefocused(d);\n    };\n    c3_chart_internal_fn.classFocused = function (d) {\n        return ' ' + (this.focusedTargetIds.indexOf(d.id) >= 0 ? CLASS.focused : '');\n    };\n    c3_chart_internal_fn.classDefocused = function (d) {\n        return ' ' + (this.defocusedTargetIds.indexOf(d.id) >= 0 ? CLASS.defocused : '');\n    };\n    c3_chart_internal_fn.classChartText = function (d) {\n        return CLASS.chartText + this.classTarget(d.id);\n    };\n    c3_chart_internal_fn.classChartLine = function (d) {\n        return CLASS.chartLine + this.classTarget(d.id);\n    };\n    c3_chart_internal_fn.classChartBar = function (d) {\n        return CLASS.chartBar + this.classTarget(d.id);\n    };\n    c3_chart_internal_fn.classChartArc = function (d) {\n        return CLASS.chartArc + this.classTarget(d.data.id);\n    };\n    c3_chart_internal_fn.getTargetSelectorSuffix = function (targetId) {\n        return this.generateTargetClass(targetId).replace(/([?!@#$%^&*()_=+,.<>'\":;\\[\\]\\/|~`{}\\\\])/g, '\\\\$1');\n    };\n    c3_chart_internal_fn.selectorTarget = function (id, prefix) {\n        return (prefix || '') + '.' + CLASS.target + this.getTargetSelectorSuffix(id);\n    };\n    c3_chart_internal_fn.selectorTargets = function (ids, prefix) {\n        var $$ = this;\n        ids = ids || [];\n        return ids.length ? ids.map(function (id) {\n            return $$.selectorTarget(id, prefix);\n        }) : null;\n    };\n    c3_chart_internal_fn.selectorLegend = function (id) {\n        return '.' + CLASS.legendItem + this.getTargetSelectorSuffix(id);\n    };\n    c3_chart_internal_fn.selectorLegends = function (ids) {\n        var $$ = this;\n        return ids && ids.length ? ids.map(function (id) {\n            return $$.selectorLegend(id);\n        }) : null;\n    };\n\n    c3_chart_internal_fn.getClipPath = function (id) {\n        var isIE9 = window.navigator.appVersion.toLowerCase().indexOf(\"msie 9.\") >= 0;\n        return \"url(\" + (isIE9 ? \"\" : document.URL.split('#')[0]) + \"#\" + id + \")\";\n    };\n    c3_chart_internal_fn.appendClip = function (parent, id) {\n        return parent.append(\"clipPath\").attr(\"id\", id).append(\"rect\");\n    };\n    c3_chart_internal_fn.getAxisClipX = function (forHorizontal) {\n        // axis line width + padding for left\n        var left = Math.max(30, this.margin.left);\n        return forHorizontal ? -(1 + left) : -(left - 1);\n    };\n    c3_chart_internal_fn.getAxisClipY = function (forHorizontal) {\n        return forHorizontal ? -20 : -this.margin.top;\n    };\n    c3_chart_internal_fn.getXAxisClipX = function () {\n        var $$ = this;\n        return $$.getAxisClipX(!$$.config.axis_rotated);\n    };\n    c3_chart_internal_fn.getXAxisClipY = function () {\n        var $$ = this;\n        return $$.getAxisClipY(!$$.config.axis_rotated);\n    };\n    c3_chart_internal_fn.getYAxisClipX = function () {\n        var $$ = this;\n        return $$.config.axis_y_inner ? -1 : $$.getAxisClipX($$.config.axis_rotated);\n    };\n    c3_chart_internal_fn.getYAxisClipY = function () {\n        var $$ = this;\n        return $$.getAxisClipY($$.config.axis_rotated);\n    };\n    c3_chart_internal_fn.getAxisClipWidth = function (forHorizontal) {\n        var $$ = this,\n            left = Math.max(30, $$.margin.left),\n            right = Math.max(30, $$.margin.right);\n        // width + axis line width + padding for left/right\n        return forHorizontal ? $$.width + 2 + left + right : $$.margin.left + 20;\n    };\n    c3_chart_internal_fn.getAxisClipHeight = function (forHorizontal) {\n        // less than 20 is not enough to show the axis label 'outer' without legend\n        return (forHorizontal ? this.margin.bottom : this.margin.top + this.height) + 20;\n    };\n    c3_chart_internal_fn.getXAxisClipWidth = function () {\n        var $$ = this;\n        return $$.getAxisClipWidth(!$$.config.axis_rotated);\n    };\n    c3_chart_internal_fn.getXAxisClipHeight = function () {\n        var $$ = this;\n        return $$.getAxisClipHeight(!$$.config.axis_rotated);\n    };\n    c3_chart_internal_fn.getYAxisClipWidth = function () {\n        var $$ = this;\n        return $$.getAxisClipWidth($$.config.axis_rotated) + ($$.config.axis_y_inner ? 20 : 0);\n    };\n    c3_chart_internal_fn.getYAxisClipHeight = function () {\n        var $$ = this;\n        return $$.getAxisClipHeight($$.config.axis_rotated);\n    };\n\n    c3_chart_internal_fn.generateColor = function () {\n        var $$ = this,\n            config = $$.config,\n            d3 = $$.d3,\n            colors = config.data_colors,\n            pattern = notEmpty(config.color_pattern) ? config.color_pattern : d3.schemeCategory10,\n            callback = config.data_color,\n            ids = [];\n\n        return function (d) {\n            var id = d.id || d.data && d.data.id || d,\n                color;\n\n            // if callback function is provided\n            if (colors[id] instanceof Function) {\n                color = colors[id](d);\n            }\n            // if specified, choose that color\n            else if (colors[id]) {\n                    color = colors[id];\n                }\n                // if not specified, choose from pattern\n                else {\n                        if (ids.indexOf(id) < 0) {\n                            ids.push(id);\n                        }\n                        color = pattern[ids.indexOf(id) % pattern.length];\n                        colors[id] = color;\n                    }\n            return callback instanceof Function ? callback(color, d) : color;\n        };\n    };\n    c3_chart_internal_fn.generateLevelColor = function () {\n        var $$ = this,\n            config = $$.config,\n            colors = config.color_pattern,\n            threshold = config.color_threshold,\n            asValue = threshold.unit === 'value',\n            values = threshold.values && threshold.values.length ? threshold.values : [],\n            max = threshold.max || 100;\n        return notEmpty(config.color_threshold) ? function (value) {\n            var i,\n                v,\n                color = colors[colors.length - 1];\n            for (i = 0; i < values.length; i++) {\n                v = asValue ? value : value * 100 / max;\n                if (v < values[i]) {\n                    color = colors[i];\n                    break;\n                }\n            }\n            return color;\n        } : null;\n    };\n\n    c3_chart_internal_fn.getDefaultConfig = function () {\n        var config = {\n            bindto: '#chart',\n            svg_classname: undefined,\n            size_width: undefined,\n            size_height: undefined,\n            padding_left: undefined,\n            padding_right: undefined,\n            padding_top: undefined,\n            padding_bottom: undefined,\n            resize_auto: true,\n            zoom_enabled: false,\n            zoom_initialRange: undefined,\n            zoom_privileged: false,\n            zoom_rescale: false,\n            zoom_onzoom: function zoom_onzoom() {},\n            zoom_onzoomstart: function zoom_onzoomstart() {},\n            zoom_onzoomend: function zoom_onzoomend() {},\n            zoom_x_min: undefined,\n            zoom_x_max: undefined,\n            interaction_brighten: true,\n            interaction_enabled: true,\n            onmouseover: function onmouseover() {},\n            onmouseout: function onmouseout() {},\n            onresize: function onresize() {},\n            onresized: function onresized() {},\n            oninit: function oninit() {},\n            onrendered: function onrendered() {},\n            transition_duration: 350,\n            data_x: undefined,\n            data_xs: {},\n            data_xFormat: '%Y-%m-%d',\n            data_xLocaltime: true,\n            data_xSort: true,\n            data_idConverter: function data_idConverter(id) {\n                return id;\n            },\n            data_names: {},\n            data_classes: {},\n            data_groups: [],\n            data_axes: {},\n            data_type: undefined,\n            data_types: {},\n            data_labels: {},\n            data_order: 'desc',\n            data_regions: {},\n            data_color: undefined,\n            data_colors: {},\n            data_hide: false,\n            data_filter: undefined,\n            data_selection_enabled: false,\n            data_selection_grouped: false,\n            data_selection_isselectable: function data_selection_isselectable() {\n                return true;\n            },\n            data_selection_multiple: true,\n            data_selection_draggable: false,\n            data_onclick: function data_onclick() {},\n            data_onmouseover: function data_onmouseover() {},\n            data_onmouseout: function data_onmouseout() {},\n            data_onselected: function data_onselected() {},\n            data_onunselected: function data_onunselected() {},\n            data_url: undefined,\n            data_headers: undefined,\n            data_json: undefined,\n            data_rows: undefined,\n            data_columns: undefined,\n            data_mimeType: undefined,\n            data_keys: undefined,\n            // configuration for no plot-able data supplied.\n            data_empty_label_text: \"\",\n            // subchart\n            subchart_show: false,\n            subchart_size_height: 60,\n            subchart_axis_x_show: true,\n            subchart_onbrush: function subchart_onbrush() {},\n            // color\n            color_pattern: [],\n            color_threshold: {},\n            // legend\n            legend_show: true,\n            legend_hide: false,\n            legend_position: 'bottom',\n            legend_inset_anchor: 'top-left',\n            legend_inset_x: 10,\n            legend_inset_y: 0,\n            legend_inset_step: undefined,\n            legend_item_onclick: undefined,\n            legend_item_onmouseover: undefined,\n            legend_item_onmouseout: undefined,\n            legend_equally: false,\n            legend_padding: 0,\n            legend_item_tile_width: 10,\n            legend_item_tile_height: 10,\n            // axis\n            axis_rotated: false,\n            axis_x_show: true,\n            axis_x_type: 'indexed',\n            axis_x_localtime: true,\n            axis_x_categories: [],\n            axis_x_tick_centered: false,\n            axis_x_tick_format: undefined,\n            axis_x_tick_culling: {},\n            axis_x_tick_culling_max: 10,\n            axis_x_tick_count: undefined,\n            axis_x_tick_fit: true,\n            axis_x_tick_values: null,\n            axis_x_tick_rotate: 0,\n            axis_x_tick_outer: true,\n            axis_x_tick_multiline: true,\n            axis_x_tick_multilineMax: 0,\n            axis_x_tick_width: null,\n            axis_x_max: undefined,\n            axis_x_min: undefined,\n            axis_x_padding: {},\n            axis_x_height: undefined,\n            axis_x_selection: undefined,\n            axis_x_label: {},\n            axis_x_inner: undefined,\n            axis_y_show: true,\n            axis_y_type: undefined,\n            axis_y_max: undefined,\n            axis_y_min: undefined,\n            axis_y_inverted: false,\n            axis_y_center: undefined,\n            axis_y_inner: undefined,\n            axis_y_label: {},\n            axis_y_tick_format: undefined,\n            axis_y_tick_outer: true,\n            axis_y_tick_values: null,\n            axis_y_tick_rotate: 0,\n            axis_y_tick_count: undefined,\n            axis_y_tick_time_type: undefined,\n            axis_y_tick_time_interval: undefined,\n            axis_y_padding: {},\n            axis_y_default: undefined,\n            axis_y2_show: false,\n            axis_y2_max: undefined,\n            axis_y2_min: undefined,\n            axis_y2_inverted: false,\n            axis_y2_center: undefined,\n            axis_y2_inner: undefined,\n            axis_y2_label: {},\n            axis_y2_tick_format: undefined,\n            axis_y2_tick_outer: true,\n            axis_y2_tick_values: null,\n            axis_y2_tick_count: undefined,\n            axis_y2_padding: {},\n            axis_y2_default: undefined,\n            // grid\n            grid_x_show: false,\n            grid_x_type: 'tick',\n            grid_x_lines: [],\n            grid_y_show: false,\n            // not used\n            // grid_y_type: 'tick',\n            grid_y_lines: [],\n            grid_y_ticks: 10,\n            grid_focus_show: true,\n            grid_lines_front: true,\n            // point - point of each data\n            point_show: true,\n            point_r: 2.5,\n            point_sensitivity: 10,\n            point_focus_expand_enabled: true,\n            point_focus_expand_r: undefined,\n            point_select_r: undefined,\n            // line\n            line_connectNull: false,\n            line_step_type: 'step',\n            // bar\n            bar_width: undefined,\n            bar_width_ratio: 0.6,\n            bar_width_max: undefined,\n            bar_zerobased: true,\n            bar_space: 0,\n            // area\n            area_zerobased: true,\n            area_above: false,\n            // pie\n            pie_label_show: true,\n            pie_label_format: undefined,\n            pie_label_threshold: 0.05,\n            pie_label_ratio: undefined,\n            pie_expand: {},\n            pie_expand_duration: 50,\n            // gauge\n            gauge_fullCircle: false,\n            gauge_label_show: true,\n            gauge_labelLine_show: true,\n            gauge_label_format: undefined,\n            gauge_min: 0,\n            gauge_max: 100,\n            gauge_startingAngle: -1 * Math.PI / 2,\n            gauge_label_extents: undefined,\n            gauge_units: undefined,\n            gauge_width: undefined,\n            gauge_arcs_minWidth: 5,\n            gauge_expand: {},\n            gauge_expand_duration: 50,\n            // donut\n            donut_label_show: true,\n            donut_label_format: undefined,\n            donut_label_threshold: 0.05,\n            donut_label_ratio: undefined,\n            donut_width: undefined,\n            donut_title: \"\",\n            donut_expand: {},\n            donut_expand_duration: 50,\n            // spline\n            spline_interpolation_type: 'cardinal',\n            // region - region to change style\n            regions: [],\n            // tooltip - show when mouseover on each data\n            tooltip_show: true,\n            tooltip_grouped: true,\n            tooltip_order: undefined,\n            tooltip_format_title: undefined,\n            tooltip_format_name: undefined,\n            tooltip_format_value: undefined,\n            tooltip_position: undefined,\n            tooltip_contents: function tooltip_contents(d, defaultTitleFormat, defaultValueFormat, color) {\n                return this.getTooltipContent ? this.getTooltipContent(d, defaultTitleFormat, defaultValueFormat, color) : '';\n            },\n            tooltip_init_show: false,\n            tooltip_init_x: 0,\n            tooltip_init_position: { top: '0px', left: '50px' },\n            tooltip_onshow: function tooltip_onshow() {},\n            tooltip_onhide: function tooltip_onhide() {},\n            // title\n            title_text: undefined,\n            title_padding: {\n                top: 0,\n                right: 0,\n                bottom: 0,\n                left: 0\n            },\n            title_position: 'top-center'\n        };\n\n        Object.keys(this.additionalConfig).forEach(function (key) {\n            config[key] = this.additionalConfig[key];\n        }, this);\n\n        return config;\n    };\n    c3_chart_internal_fn.additionalConfig = {};\n\n    c3_chart_internal_fn.loadConfig = function (config) {\n        var this_config = this.config,\n            target,\n            keys,\n            read;\n        function find() {\n            var key = keys.shift();\n            //        console.log(\"key =>\", key, \", target =>\", target);\n            if (key && target && (typeof target === 'undefined' ? 'undefined' : _typeof(target)) === 'object' && key in target) {\n                target = target[key];\n                return find();\n            } else if (!key) {\n                return target;\n            } else {\n                return undefined;\n            }\n        }\n        Object.keys(this_config).forEach(function (key) {\n            target = config;\n            keys = key.split('_');\n            read = find();\n            //        console.log(\"CONFIG : \", key, read);\n            if (isDefined(read)) {\n                this_config[key] = read;\n            }\n        });\n    };\n\n    c3_chart_internal_fn.convertUrlToData = function (url, mimeType, headers, keys, done) {\n        var $$ = this,\n            type = mimeType ? mimeType : 'csv',\n            f,\n            converter;\n\n        if (type === 'json') {\n            f = $$.d3.json;\n            converter = $$.convertJsonToData;\n        } else if (type === 'tsv') {\n            f = $$.d3.tsv;\n            converter = $$.convertXsvToData;\n        } else {\n            f = $$.d3.csv;\n            converter = $$.convertXsvToData;\n        }\n\n        f(url, headers).then(function (data) {\n            done.call($$, converter.call($$, data, keys));\n        }).catch(function (error) {\n            throw error;\n        });\n    };\n    c3_chart_internal_fn.convertXsvToData = function (xsv) {\n        var keys = xsv.columns,\n            rows = xsv;\n        if (rows.length === 0) {\n            return { keys: keys, rows: [keys.reduce(function (row, key) {\n                    return Object.assign(row, defineProperty({}, key, null));\n                }, {})] };\n        } else {\n            // [].concat() is to convert result into a plain array otherwise\n            // test is not happy because rows have properties.\n            return { keys: keys, rows: [].concat(xsv) };\n        }\n    };\n    c3_chart_internal_fn.convertJsonToData = function (json, keys) {\n        var $$ = this,\n            new_rows = [],\n            targetKeys,\n            data;\n        if (keys) {\n            // when keys specified, json would be an array that includes objects\n            if (keys.x) {\n                targetKeys = keys.value.concat(keys.x);\n                $$.config.data_x = keys.x;\n            } else {\n                targetKeys = keys.value;\n            }\n            new_rows.push(targetKeys);\n            json.forEach(function (o) {\n                var new_row = [];\n                targetKeys.forEach(function (key) {\n                    // convert undefined to null because undefined data will be removed in convertDataToTargets()\n                    var v = $$.findValueInJson(o, key);\n                    if (isUndefined(v)) {\n                        v = null;\n                    }\n                    new_row.push(v);\n                });\n                new_rows.push(new_row);\n            });\n            data = $$.convertRowsToData(new_rows);\n        } else {\n            Object.keys(json).forEach(function (key) {\n                new_rows.push([key].concat(json[key]));\n            });\n            data = $$.convertColumnsToData(new_rows);\n        }\n        return data;\n    };\n    c3_chart_internal_fn.findValueInJson = function (object, path) {\n        path = path.replace(/\\[(\\w+)\\]/g, '.$1'); // convert indexes to properties (replace [] with .)\n        path = path.replace(/^\\./, ''); // strip a leading dot\n        var pathArray = path.split('.');\n        for (var i = 0; i < pathArray.length; ++i) {\n            var k = pathArray[i];\n            if (k in object) {\n                object = object[k];\n            } else {\n                return;\n            }\n        }\n        return object;\n    };\n\n    /**\n     * Converts the rows to normalized data.\n     * @param {any[][]} rows The row data\n     * @return {Object}\n     */\n    c3_chart_internal_fn.convertRowsToData = function (rows) {\n        var newRows = [];\n        var keys = rows[0];\n\n        for (var i = 1; i < rows.length; i++) {\n            var newRow = {};\n            for (var j = 0; j < rows[i].length; j++) {\n                if (isUndefined(rows[i][j])) {\n                    throw new Error(\"Source data is missing a component at (\" + i + \",\" + j + \")!\");\n                }\n                newRow[keys[j]] = rows[i][j];\n            }\n            newRows.push(newRow);\n        }\n        return { keys: keys, rows: newRows };\n    };\n\n    /**\n     * Converts the columns to normalized data.\n     * @param {any[][]} columns The column data\n     * @return {Object}\n     */\n    c3_chart_internal_fn.convertColumnsToData = function (columns) {\n        var newRows = [];\n        var keys = [];\n\n        for (var i = 0; i < columns.length; i++) {\n            var key = columns[i][0];\n            for (var j = 1; j < columns[i].length; j++) {\n                if (isUndefined(newRows[j - 1])) {\n                    newRows[j - 1] = {};\n                }\n                if (isUndefined(columns[i][j])) {\n                    throw new Error(\"Source data is missing a component at (\" + i + \",\" + j + \")!\");\n                }\n                newRows[j - 1][key] = columns[i][j];\n            }\n            keys.push(key);\n        }\n\n        return { keys: keys, rows: newRows };\n    };\n\n    /**\n     * Converts the data format into the target format.\n     * @param {!Object} data\n     * @param {!Array} data.keys Ordered list of target IDs.\n     * @param {!Array} data.rows Rows of data to convert.\n     * @param {boolean} appendXs True to append to $$.data.xs, False to replace.\n     * @return {!Array}\n     */\n    c3_chart_internal_fn.convertDataToTargets = function (data, appendXs) {\n        var $$ = this,\n            config = $$.config,\n            targets,\n            ids,\n            xs,\n            keys;\n\n        // handles format where keys are not orderly provided\n        if (isArray(data)) {\n            keys = Object.keys(data[0]);\n        } else {\n            keys = data.keys;\n            data = data.rows;\n        }\n\n        ids = keys.filter($$.isNotX, $$);\n        xs = keys.filter($$.isX, $$);\n\n        // save x for update data by load when custom x and c3.x API\n        ids.forEach(function (id) {\n            var xKey = $$.getXKey(id);\n\n            if ($$.isCustomX() || $$.isTimeSeries()) {\n                // if included in input data\n                if (xs.indexOf(xKey) >= 0) {\n                    $$.data.xs[id] = (appendXs && $$.data.xs[id] ? $$.data.xs[id] : []).concat(data.map(function (d) {\n                        return d[xKey];\n                    }).filter(isValue).map(function (rawX, i) {\n                        return $$.generateTargetX(rawX, id, i);\n                    }));\n                }\n                // if not included in input data, find from preloaded data of other id's x\n                else if (config.data_x) {\n                        $$.data.xs[id] = $$.getOtherTargetXs();\n                    }\n                    // if not included in input data, find from preloaded data\n                    else if (notEmpty(config.data_xs)) {\n                            $$.data.xs[id] = $$.getXValuesOfXKey(xKey, $$.data.targets);\n                        }\n                // MEMO: if no x included, use same x of current will be used\n            } else {\n                $$.data.xs[id] = data.map(function (d, i) {\n                    return i;\n                });\n            }\n        });\n\n        // check x is defined\n        ids.forEach(function (id) {\n            if (!$$.data.xs[id]) {\n                throw new Error('x is not defined for id = \"' + id + '\".');\n            }\n        });\n\n        // convert to target\n        targets = ids.map(function (id, index) {\n            var convertedId = config.data_idConverter(id);\n            return {\n                id: convertedId,\n                id_org: id,\n                values: data.map(function (d, i) {\n                    var xKey = $$.getXKey(id),\n                        rawX = d[xKey],\n                        value = d[id] !== null && !isNaN(d[id]) ? +d[id] : null,\n                        x;\n                    // use x as categories if custom x and categorized\n                    if ($$.isCustomX() && $$.isCategorized() && !isUndefined(rawX)) {\n                        if (index === 0 && i === 0) {\n                            config.axis_x_categories = [];\n                        }\n                        x = config.axis_x_categories.indexOf(rawX);\n                        if (x === -1) {\n                            x = config.axis_x_categories.length;\n                            config.axis_x_categories.push(rawX);\n                        }\n                    } else {\n                        x = $$.generateTargetX(rawX, id, i);\n                    }\n                    // mark as x = undefined if value is undefined and filter to remove after mapped\n                    if (isUndefined(d[id]) || $$.data.xs[id].length <= i) {\n                        x = undefined;\n                    }\n                    return { x: x, value: value, id: convertedId };\n                }).filter(function (v) {\n                    return isDefined(v.x);\n                })\n            };\n        });\n\n        // finish targets\n        targets.forEach(function (t) {\n            var i;\n            // sort values by its x\n            if (config.data_xSort) {\n                t.values = t.values.sort(function (v1, v2) {\n                    var x1 = v1.x || v1.x === 0 ? v1.x : Infinity,\n                        x2 = v2.x || v2.x === 0 ? v2.x : Infinity;\n                    return x1 - x2;\n                });\n            }\n            // indexing each value\n            i = 0;\n            t.values.forEach(function (v) {\n                v.index = i++;\n            });\n            // this needs to be sorted because its index and value.index is identical\n            $$.data.xs[t.id].sort(function (v1, v2) {\n                return v1 - v2;\n            });\n        });\n\n        // cache information about values\n        $$.hasNegativeValue = $$.hasNegativeValueInTargets(targets);\n        $$.hasPositiveValue = $$.hasPositiveValueInTargets(targets);\n\n        // set target types\n        if (config.data_type) {\n            $$.setTargetType($$.mapToIds(targets).filter(function (id) {\n                return !(id in config.data_types);\n            }), config.data_type);\n        }\n\n        // cache as original id keyed\n        targets.forEach(function (d) {\n            $$.addCache(d.id_org, d);\n        });\n\n        return targets;\n    };\n\n    c3_chart_internal_fn.isX = function (key) {\n        var $$ = this,\n            config = $$.config;\n        return config.data_x && key === config.data_x || notEmpty(config.data_xs) && hasValue(config.data_xs, key);\n    };\n    c3_chart_internal_fn.isNotX = function (key) {\n        return !this.isX(key);\n    };\n    c3_chart_internal_fn.getXKey = function (id) {\n        var $$ = this,\n            config = $$.config;\n        return config.data_x ? config.data_x : notEmpty(config.data_xs) ? config.data_xs[id] : null;\n    };\n    c3_chart_internal_fn.getXValuesOfXKey = function (key, targets) {\n        var $$ = this,\n            xValues,\n            ids = targets && notEmpty(targets) ? $$.mapToIds(targets) : [];\n        ids.forEach(function (id) {\n            if ($$.getXKey(id) === key) {\n                xValues = $$.data.xs[id];\n            }\n        });\n        return xValues;\n    };\n    c3_chart_internal_fn.getXValue = function (id, i) {\n        var $$ = this;\n        return id in $$.data.xs && $$.data.xs[id] && isValue($$.data.xs[id][i]) ? $$.data.xs[id][i] : i;\n    };\n    c3_chart_internal_fn.getOtherTargetXs = function () {\n        var $$ = this,\n            idsForX = Object.keys($$.data.xs);\n        return idsForX.length ? $$.data.xs[idsForX[0]] : null;\n    };\n    c3_chart_internal_fn.getOtherTargetX = function (index) {\n        var xs = this.getOtherTargetXs();\n        return xs && index < xs.length ? xs[index] : null;\n    };\n    c3_chart_internal_fn.addXs = function (xs) {\n        var $$ = this;\n        Object.keys(xs).forEach(function (id) {\n            $$.config.data_xs[id] = xs[id];\n        });\n    };\n    c3_chart_internal_fn.addName = function (data) {\n        var $$ = this,\n            name;\n        if (data) {\n            name = $$.config.data_names[data.id];\n            data.name = name !== undefined ? name : data.id;\n        }\n        return data;\n    };\n    c3_chart_internal_fn.getValueOnIndex = function (values, index) {\n        var valueOnIndex = values.filter(function (v) {\n            return v.index === index;\n        });\n        return valueOnIndex.length ? valueOnIndex[0] : null;\n    };\n    c3_chart_internal_fn.updateTargetX = function (targets, x) {\n        var $$ = this;\n        targets.forEach(function (t) {\n            t.values.forEach(function (v, i) {\n                v.x = $$.generateTargetX(x[i], t.id, i);\n            });\n            $$.data.xs[t.id] = x;\n        });\n    };\n    c3_chart_internal_fn.updateTargetXs = function (targets, xs) {\n        var $$ = this;\n        targets.forEach(function (t) {\n            if (xs[t.id]) {\n                $$.updateTargetX([t], xs[t.id]);\n            }\n        });\n    };\n    c3_chart_internal_fn.generateTargetX = function (rawX, id, index) {\n        var $$ = this,\n            x;\n        if ($$.isTimeSeries()) {\n            x = rawX ? $$.parseDate(rawX) : $$.parseDate($$.getXValue(id, index));\n        } else if ($$.isCustomX() && !$$.isCategorized()) {\n            x = isValue(rawX) ? +rawX : $$.getXValue(id, index);\n        } else {\n            x = index;\n        }\n        return x;\n    };\n    c3_chart_internal_fn.cloneTarget = function (target) {\n        return {\n            id: target.id,\n            id_org: target.id_org,\n            values: target.values.map(function (d) {\n                return { x: d.x, value: d.value, id: d.id };\n            })\n        };\n    };\n    c3_chart_internal_fn.getMaxDataCount = function () {\n        var $$ = this;\n        return $$.d3.max($$.data.targets, function (t) {\n            return t.values.length;\n        });\n    };\n    c3_chart_internal_fn.mapToIds = function (targets) {\n        return targets.map(function (d) {\n            return d.id;\n        });\n    };\n    c3_chart_internal_fn.mapToTargetIds = function (ids) {\n        var $$ = this;\n        return ids ? [].concat(ids) : $$.mapToIds($$.data.targets);\n    };\n    c3_chart_internal_fn.hasTarget = function (targets, id) {\n        var ids = this.mapToIds(targets),\n            i;\n        for (i = 0; i < ids.length; i++) {\n            if (ids[i] === id) {\n                return true;\n            }\n        }\n        return false;\n    };\n    c3_chart_internal_fn.isTargetToShow = function (targetId) {\n        return this.hiddenTargetIds.indexOf(targetId) < 0;\n    };\n    c3_chart_internal_fn.isLegendToShow = function (targetId) {\n        return this.hiddenLegendIds.indexOf(targetId) < 0;\n    };\n    c3_chart_internal_fn.filterTargetsToShow = function (targets) {\n        var $$ = this;\n        return targets.filter(function (t) {\n            return $$.isTargetToShow(t.id);\n        });\n    };\n    c3_chart_internal_fn.mapTargetsToUniqueXs = function (targets) {\n        var $$ = this;\n        var xs = $$.d3.set($$.d3.merge(targets.map(function (t) {\n            return t.values.map(function (v) {\n                return +v.x;\n            });\n        }))).values();\n        xs = $$.isTimeSeries() ? xs.map(function (x) {\n            return new Date(+x);\n        }) : xs.map(function (x) {\n            return +x;\n        });\n        return xs.sort(function (a, b) {\n            return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n        });\n    };\n    c3_chart_internal_fn.addHiddenTargetIds = function (targetIds) {\n        targetIds = targetIds instanceof Array ? targetIds : new Array(targetIds);\n        for (var i = 0; i < targetIds.length; i++) {\n            if (this.hiddenTargetIds.indexOf(targetIds[i]) < 0) {\n                this.hiddenTargetIds = this.hiddenTargetIds.concat(targetIds[i]);\n            }\n        }\n    };\n    c3_chart_internal_fn.removeHiddenTargetIds = function (targetIds) {\n        this.hiddenTargetIds = this.hiddenTargetIds.filter(function (id) {\n            return targetIds.indexOf(id) < 0;\n        });\n    };\n    c3_chart_internal_fn.addHiddenLegendIds = function (targetIds) {\n        targetIds = targetIds instanceof Array ? targetIds : new Array(targetIds);\n        for (var i = 0; i < targetIds.length; i++) {\n            if (this.hiddenLegendIds.indexOf(targetIds[i]) < 0) {\n                this.hiddenLegendIds = this.hiddenLegendIds.concat(targetIds[i]);\n            }\n        }\n    };\n    c3_chart_internal_fn.removeHiddenLegendIds = function (targetIds) {\n        this.hiddenLegendIds = this.hiddenLegendIds.filter(function (id) {\n            return targetIds.indexOf(id) < 0;\n        });\n    };\n    c3_chart_internal_fn.getValuesAsIdKeyed = function (targets) {\n        var ys = {};\n        targets.forEach(function (t) {\n            ys[t.id] = [];\n            t.values.forEach(function (v) {\n                ys[t.id].push(v.value);\n            });\n        });\n        return ys;\n    };\n    c3_chart_internal_fn.checkValueInTargets = function (targets, checker) {\n        var ids = Object.keys(targets),\n            i,\n            j,\n            values;\n        for (i = 0; i < ids.length; i++) {\n            values = targets[ids[i]].values;\n            for (j = 0; j < values.length; j++) {\n                if (checker(values[j].value)) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    c3_chart_internal_fn.hasNegativeValueInTargets = function (targets) {\n        return this.checkValueInTargets(targets, function (v) {\n            return v < 0;\n        });\n    };\n    c3_chart_internal_fn.hasPositiveValueInTargets = function (targets) {\n        return this.checkValueInTargets(targets, function (v) {\n            return v > 0;\n        });\n    };\n    c3_chart_internal_fn.isOrderDesc = function () {\n        var config = this.config;\n        return typeof config.data_order === 'string' && config.data_order.toLowerCase() === 'desc';\n    };\n    c3_chart_internal_fn.isOrderAsc = function () {\n        var config = this.config;\n        return typeof config.data_order === 'string' && config.data_order.toLowerCase() === 'asc';\n    };\n    c3_chart_internal_fn.getOrderFunction = function () {\n        var $$ = this,\n            config = $$.config,\n            orderAsc = $$.isOrderAsc(),\n            orderDesc = $$.isOrderDesc();\n        if (orderAsc || orderDesc) {\n            var reducer = function reducer(p, c) {\n                return p + Math.abs(c.value);\n            };\n            return function (t1, t2) {\n                var t1Sum = t1.values.reduce(reducer, 0),\n                    t2Sum = t2.values.reduce(reducer, 0);\n                return orderAsc ? t2Sum - t1Sum : t1Sum - t2Sum;\n            };\n        } else if (isFunction(config.data_order)) {\n            return config.data_order;\n        } else if (isArray(config.data_order)) {\n            var order = config.data_order;\n            return function (t1, t2) {\n                return order.indexOf(t1.id) - order.indexOf(t2.id);\n            };\n        }\n    };\n    c3_chart_internal_fn.orderTargets = function (targets) {\n        var fct = this.getOrderFunction();\n        if (fct) {\n            targets.sort(fct);\n        }\n        return targets;\n    };\n    c3_chart_internal_fn.filterByX = function (targets, x) {\n        return this.d3.merge(targets.map(function (t) {\n            return t.values;\n        })).filter(function (v) {\n            return v.x - x === 0;\n        });\n    };\n    c3_chart_internal_fn.filterRemoveNull = function (data) {\n        return data.filter(function (d) {\n            return isValue(d.value);\n        });\n    };\n    c3_chart_internal_fn.filterByXDomain = function (targets, xDomain) {\n        return targets.map(function (t) {\n            return {\n                id: t.id,\n                id_org: t.id_org,\n                values: t.values.filter(function (v) {\n                    return xDomain[0] <= v.x && v.x <= xDomain[1];\n                })\n            };\n        });\n    };\n    c3_chart_internal_fn.hasDataLabel = function () {\n        var config = this.config;\n        if (typeof config.data_labels === 'boolean' && config.data_labels) {\n            return true;\n        } else if (_typeof(config.data_labels) === 'object' && notEmpty(config.data_labels)) {\n            return true;\n        }\n        return false;\n    };\n    c3_chart_internal_fn.getDataLabelLength = function (min, max, key) {\n        var $$ = this,\n            lengths = [0, 0],\n            paddingCoef = 1.3;\n        $$.selectChart.select('svg').selectAll('.dummy').data([min, max]).enter().append('text').text(function (d) {\n            return $$.dataLabelFormat(d.id)(d);\n        }).each(function (d, i) {\n            lengths[i] = this.getBoundingClientRect()[key] * paddingCoef;\n        }).remove();\n        return lengths;\n    };\n    c3_chart_internal_fn.isNoneArc = function (d) {\n        return this.hasTarget(this.data.targets, d.id);\n    }, c3_chart_internal_fn.isArc = function (d) {\n        return 'data' in d && this.hasTarget(this.data.targets, d.data.id);\n    };\n    c3_chart_internal_fn.findClosestFromTargets = function (targets, pos) {\n        var $$ = this,\n            candidates;\n\n        // map to array of closest points of each target\n        candidates = targets.map(function (target) {\n            return $$.findClosest(target.values, pos);\n        });\n\n        // decide closest point and return\n        return $$.findClosest(candidates, pos);\n    };\n    c3_chart_internal_fn.findClosest = function (values, pos) {\n        var $$ = this,\n            minDist = $$.config.point_sensitivity,\n            closest;\n\n        // find mouseovering bar\n        values.filter(function (v) {\n            return v && $$.isBarType(v.id);\n        }).forEach(function (v) {\n            var shape = $$.main.select('.' + CLASS.bars + $$.getTargetSelectorSuffix(v.id) + ' .' + CLASS.bar + '-' + v.index).node();\n            if (!closest && $$.isWithinBar($$.d3.mouse(shape), shape)) {\n                closest = v;\n            }\n        });\n\n        // find closest point from non-bar\n        values.filter(function (v) {\n            return v && !$$.isBarType(v.id);\n        }).forEach(function (v) {\n            var d = $$.dist(v, pos);\n            if (d < minDist) {\n                minDist = d;\n                closest = v;\n            }\n        });\n\n        return closest;\n    };\n    c3_chart_internal_fn.dist = function (data, pos) {\n        var $$ = this,\n            config = $$.config,\n            xIndex = config.axis_rotated ? 1 : 0,\n            yIndex = config.axis_rotated ? 0 : 1,\n            y = $$.circleY(data, data.index),\n            x = $$.x(data.x);\n        return Math.sqrt(Math.pow(x - pos[xIndex], 2) + Math.pow(y - pos[yIndex], 2));\n    };\n    c3_chart_internal_fn.convertValuesToStep = function (values) {\n        var converted = [].concat(values),\n            i;\n\n        if (!this.isCategorized()) {\n            return values;\n        }\n\n        for (i = values.length + 1; 0 < i; i--) {\n            converted[i] = converted[i - 1];\n        }\n\n        converted[0] = {\n            x: converted[0].x - 1,\n            value: converted[0].value,\n            id: converted[0].id\n        };\n        converted[values.length + 1] = {\n            x: converted[values.length].x + 1,\n            value: converted[values.length].value,\n            id: converted[values.length].id\n        };\n\n        return converted;\n    };\n    c3_chart_internal_fn.updateDataAttributes = function (name, attrs) {\n        var $$ = this,\n            config = $$.config,\n            current = config['data_' + name];\n        if (typeof attrs === 'undefined') {\n            return current;\n        }\n        Object.keys(attrs).forEach(function (id) {\n            current[id] = attrs[id];\n        });\n        $$.redraw({ withLegend: true });\n        return current;\n    };\n\n    c3_chart_internal_fn.load = function (targets, args) {\n        var $$ = this;\n        if (targets) {\n            // filter loading targets if needed\n            if (args.filter) {\n                targets = targets.filter(args.filter);\n            }\n            // set type if args.types || args.type specified\n            if (args.type || args.types) {\n                targets.forEach(function (t) {\n                    var type = args.types && args.types[t.id] ? args.types[t.id] : args.type;\n                    $$.setTargetType(t.id, type);\n                });\n            }\n            // Update/Add data\n            $$.data.targets.forEach(function (d) {\n                for (var i = 0; i < targets.length; i++) {\n                    if (d.id === targets[i].id) {\n                        d.values = targets[i].values;\n                        targets.splice(i, 1);\n                        break;\n                    }\n                }\n            });\n            $$.data.targets = $$.data.targets.concat(targets); // add remained\n        }\n\n        // Set targets\n        $$.updateTargets($$.data.targets);\n\n        // Redraw with new targets\n        $$.redraw({ withUpdateOrgXDomain: true, withUpdateXDomain: true, withLegend: true });\n\n        if (args.done) {\n            args.done();\n        }\n    };\n    c3_chart_internal_fn.loadFromArgs = function (args) {\n        var $$ = this;\n        if (args.data) {\n            $$.load($$.convertDataToTargets(args.data), args);\n        } else if (args.url) {\n            $$.convertUrlToData(args.url, args.mimeType, args.headers, args.keys, function (data) {\n                $$.load($$.convertDataToTargets(data), args);\n            });\n        } else if (args.json) {\n            $$.load($$.convertDataToTargets($$.convertJsonToData(args.json, args.keys)), args);\n        } else if (args.rows) {\n            $$.load($$.convertDataToTargets($$.convertRowsToData(args.rows)), args);\n        } else if (args.columns) {\n            $$.load($$.convertDataToTargets($$.convertColumnsToData(args.columns)), args);\n        } else {\n            $$.load(null, args);\n        }\n    };\n    c3_chart_internal_fn.unload = function (targetIds, done) {\n        var $$ = this;\n        if (!done) {\n            done = function done() {};\n        }\n        // filter existing target\n        targetIds = targetIds.filter(function (id) {\n            return $$.hasTarget($$.data.targets, id);\n        });\n        // If no target, call done and return\n        if (!targetIds || targetIds.length === 0) {\n            done();\n            return;\n        }\n        $$.svg.selectAll(targetIds.map(function (id) {\n            return $$.selectorTarget(id);\n        })).transition().style('opacity', 0).remove().call($$.endall, done);\n        targetIds.forEach(function (id) {\n            // Reset fadein for future load\n            $$.withoutFadeIn[id] = false;\n            // Remove target's elements\n            if ($$.legend) {\n                $$.legend.selectAll('.' + CLASS.legendItem + $$.getTargetSelectorSuffix(id)).remove();\n            }\n            // Remove target\n            $$.data.targets = $$.data.targets.filter(function (t) {\n                return t.id !== id;\n            });\n        });\n    };\n\n    c3_chart_internal_fn.getYDomainMin = function (targets) {\n        var $$ = this,\n            config = $$.config,\n            ids = $$.mapToIds(targets),\n            ys = $$.getValuesAsIdKeyed(targets),\n            j,\n            k,\n            baseId,\n            idsInGroup,\n            id,\n            hasNegativeValue;\n        if (config.data_groups.length > 0) {\n            hasNegativeValue = $$.hasNegativeValueInTargets(targets);\n            for (j = 0; j < config.data_groups.length; j++) {\n                // Determine baseId\n                idsInGroup = config.data_groups[j].filter(function (id) {\n                    return ids.indexOf(id) >= 0;\n                });\n                if (idsInGroup.length === 0) {\n                    continue;\n                }\n                baseId = idsInGroup[0];\n                // Consider negative values\n                if (hasNegativeValue && ys[baseId]) {\n                    ys[baseId].forEach(function (v, i) {\n                        ys[baseId][i] = v < 0 ? v : 0;\n                    });\n                }\n                // Compute min\n                for (k = 1; k < idsInGroup.length; k++) {\n                    id = idsInGroup[k];\n                    if (!ys[id]) {\n                        continue;\n                    }\n                    ys[id].forEach(function (v, i) {\n                        if ($$.axis.getId(id) === $$.axis.getId(baseId) && ys[baseId] && !(hasNegativeValue && +v > 0)) {\n                            ys[baseId][i] += +v;\n                        }\n                    });\n                }\n            }\n        }\n        return $$.d3.min(Object.keys(ys).map(function (key) {\n            return $$.d3.min(ys[key]);\n        }));\n    };\n    c3_chart_internal_fn.getYDomainMax = function (targets) {\n        var $$ = this,\n            config = $$.config,\n            ids = $$.mapToIds(targets),\n            ys = $$.getValuesAsIdKeyed(targets),\n            j,\n            k,\n            baseId,\n            idsInGroup,\n            id,\n            hasPositiveValue;\n        if (config.data_groups.length > 0) {\n            hasPositiveValue = $$.hasPositiveValueInTargets(targets);\n            for (j = 0; j < config.data_groups.length; j++) {\n                // Determine baseId\n                idsInGroup = config.data_groups[j].filter(function (id) {\n                    return ids.indexOf(id) >= 0;\n                });\n                if (idsInGroup.length === 0) {\n                    continue;\n                }\n                baseId = idsInGroup[0];\n                // Consider positive values\n                if (hasPositiveValue && ys[baseId]) {\n                    ys[baseId].forEach(function (v, i) {\n                        ys[baseId][i] = v > 0 ? v : 0;\n                    });\n                }\n                // Compute max\n                for (k = 1; k < idsInGroup.length; k++) {\n                    id = idsInGroup[k];\n                    if (!ys[id]) {\n                        continue;\n                    }\n                    ys[id].forEach(function (v, i) {\n                        if ($$.axis.getId(id) === $$.axis.getId(baseId) && ys[baseId] && !(hasPositiveValue && +v < 0)) {\n                            ys[baseId][i] += +v;\n                        }\n                    });\n                }\n            }\n        }\n        return $$.d3.max(Object.keys(ys).map(function (key) {\n            return $$.d3.max(ys[key]);\n        }));\n    };\n    c3_chart_internal_fn.getYDomain = function (targets, axisId, xDomain) {\n        var $$ = this,\n            config = $$.config,\n            targetsByAxisId = targets.filter(function (t) {\n            return $$.axis.getId(t.id) === axisId;\n        }),\n            yTargets = xDomain ? $$.filterByXDomain(targetsByAxisId, xDomain) : targetsByAxisId,\n            yMin = axisId === 'y2' ? config.axis_y2_min : config.axis_y_min,\n            yMax = axisId === 'y2' ? config.axis_y2_max : config.axis_y_max,\n            yDomainMin = $$.getYDomainMin(yTargets),\n            yDomainMax = $$.getYDomainMax(yTargets),\n            domain,\n            domainLength,\n            padding,\n            padding_top,\n            padding_bottom,\n            center = axisId === 'y2' ? config.axis_y2_center : config.axis_y_center,\n            yDomainAbs,\n            lengths,\n            diff,\n            ratio,\n            isAllPositive,\n            isAllNegative,\n            isZeroBased = $$.hasType('bar', yTargets) && config.bar_zerobased || $$.hasType('area', yTargets) && config.area_zerobased,\n            isInverted = axisId === 'y2' ? config.axis_y2_inverted : config.axis_y_inverted,\n            showHorizontalDataLabel = $$.hasDataLabel() && config.axis_rotated,\n            showVerticalDataLabel = $$.hasDataLabel() && !config.axis_rotated;\n\n        // MEMO: avoid inverting domain unexpectedly\n        yDomainMin = isValue(yMin) ? yMin : isValue(yMax) ? yDomainMin < yMax ? yDomainMin : yMax - 10 : yDomainMin;\n        yDomainMax = isValue(yMax) ? yMax : isValue(yMin) ? yMin < yDomainMax ? yDomainMax : yMin + 10 : yDomainMax;\n\n        if (yTargets.length === 0) {\n            // use current domain if target of axisId is none\n            return axisId === 'y2' ? $$.y2.domain() : $$.y.domain();\n        }\n        if (isNaN(yDomainMin)) {\n            // set minimum to zero when not number\n            yDomainMin = 0;\n        }\n        if (isNaN(yDomainMax)) {\n            // set maximum to have same value as yDomainMin\n            yDomainMax = yDomainMin;\n        }\n        if (yDomainMin === yDomainMax) {\n            yDomainMin < 0 ? yDomainMax = 0 : yDomainMin = 0;\n        }\n        isAllPositive = yDomainMin >= 0 && yDomainMax >= 0;\n        isAllNegative = yDomainMin <= 0 && yDomainMax <= 0;\n\n        // Cancel zerobased if axis_*_min / axis_*_max specified\n        if (isValue(yMin) && isAllPositive || isValue(yMax) && isAllNegative) {\n            isZeroBased = false;\n        }\n\n        // Bar/Area chart should be 0-based if all positive|negative\n        if (isZeroBased) {\n            if (isAllPositive) {\n                yDomainMin = 0;\n            }\n            if (isAllNegative) {\n                yDomainMax = 0;\n            }\n        }\n\n        domainLength = Math.abs(yDomainMax - yDomainMin);\n        padding = padding_top = padding_bottom = domainLength * 0.1;\n\n        if (typeof center !== 'undefined') {\n            yDomainAbs = Math.max(Math.abs(yDomainMin), Math.abs(yDomainMax));\n            yDomainMax = center + yDomainAbs;\n            yDomainMin = center - yDomainAbs;\n        }\n        // add padding for data label\n        if (showHorizontalDataLabel) {\n            lengths = $$.getDataLabelLength(yDomainMin, yDomainMax, 'width');\n            diff = diffDomain($$.y.range());\n            ratio = [lengths[0] / diff, lengths[1] / diff];\n            padding_top += domainLength * (ratio[1] / (1 - ratio[0] - ratio[1]));\n            padding_bottom += domainLength * (ratio[0] / (1 - ratio[0] - ratio[1]));\n        } else if (showVerticalDataLabel) {\n            lengths = $$.getDataLabelLength(yDomainMin, yDomainMax, 'height');\n            padding_top += $$.axis.convertPixelsToAxisPadding(lengths[1], domainLength);\n            padding_bottom += $$.axis.convertPixelsToAxisPadding(lengths[0], domainLength);\n        }\n        if (axisId === 'y' && notEmpty(config.axis_y_padding)) {\n            padding_top = $$.axis.getPadding(config.axis_y_padding, 'top', padding_top, domainLength);\n            padding_bottom = $$.axis.getPadding(config.axis_y_padding, 'bottom', padding_bottom, domainLength);\n        }\n        if (axisId === 'y2' && notEmpty(config.axis_y2_padding)) {\n            padding_top = $$.axis.getPadding(config.axis_y2_padding, 'top', padding_top, domainLength);\n            padding_bottom = $$.axis.getPadding(config.axis_y2_padding, 'bottom', padding_bottom, domainLength);\n        }\n        // Bar/Area chart should be 0-based if all positive|negative\n        if (isZeroBased) {\n            if (isAllPositive) {\n                padding_bottom = yDomainMin;\n            }\n            if (isAllNegative) {\n                padding_top = -yDomainMax;\n            }\n        }\n        domain = [yDomainMin - padding_bottom, yDomainMax + padding_top];\n        return isInverted ? domain.reverse() : domain;\n    };\n    c3_chart_internal_fn.getXDomainMin = function (targets) {\n        var $$ = this,\n            config = $$.config;\n        return isDefined(config.axis_x_min) ? $$.isTimeSeries() ? this.parseDate(config.axis_x_min) : config.axis_x_min : $$.d3.min(targets, function (t) {\n            return $$.d3.min(t.values, function (v) {\n                return v.x;\n            });\n        });\n    };\n    c3_chart_internal_fn.getXDomainMax = function (targets) {\n        var $$ = this,\n            config = $$.config;\n        return isDefined(config.axis_x_max) ? $$.isTimeSeries() ? this.parseDate(config.axis_x_max) : config.axis_x_max : $$.d3.max(targets, function (t) {\n            return $$.d3.max(t.values, function (v) {\n                return v.x;\n            });\n        });\n    };\n    c3_chart_internal_fn.getXDomainPadding = function (domain) {\n        var $$ = this,\n            config = $$.config,\n            diff = domain[1] - domain[0],\n            maxDataCount,\n            padding,\n            paddingLeft,\n            paddingRight;\n        if ($$.isCategorized()) {\n            padding = 0;\n        } else if ($$.hasType('bar')) {\n            maxDataCount = $$.getMaxDataCount();\n            padding = maxDataCount > 1 ? diff / (maxDataCount - 1) / 2 : 0.5;\n        } else {\n            padding = diff * 0.01;\n        }\n        if (_typeof(config.axis_x_padding) === 'object' && notEmpty(config.axis_x_padding)) {\n            paddingLeft = isValue(config.axis_x_padding.left) ? config.axis_x_padding.left : padding;\n            paddingRight = isValue(config.axis_x_padding.right) ? config.axis_x_padding.right : padding;\n        } else if (typeof config.axis_x_padding === 'number') {\n            paddingLeft = paddingRight = config.axis_x_padding;\n        } else {\n            paddingLeft = paddingRight = padding;\n        }\n        return { left: paddingLeft, right: paddingRight };\n    };\n    c3_chart_internal_fn.getXDomain = function (targets) {\n        var $$ = this,\n            xDomain = [$$.getXDomainMin(targets), $$.getXDomainMax(targets)],\n            firstX = xDomain[0],\n            lastX = xDomain[1],\n            padding = $$.getXDomainPadding(xDomain),\n            min = 0,\n            max = 0;\n        // show center of x domain if min and max are the same\n        if (firstX - lastX === 0 && !$$.isCategorized()) {\n            if ($$.isTimeSeries()) {\n                firstX = new Date(firstX.getTime() * 0.5);\n                lastX = new Date(lastX.getTime() * 1.5);\n            } else {\n                firstX = firstX === 0 ? 1 : firstX * 0.5;\n                lastX = lastX === 0 ? -1 : lastX * 1.5;\n            }\n        }\n        if (firstX || firstX === 0) {\n            min = $$.isTimeSeries() ? new Date(firstX.getTime() - padding.left) : firstX - padding.left;\n        }\n        if (lastX || lastX === 0) {\n            max = $$.isTimeSeries() ? new Date(lastX.getTime() + padding.right) : lastX + padding.right;\n        }\n        return [min, max];\n    };\n    c3_chart_internal_fn.updateXDomain = function (targets, withUpdateXDomain, withUpdateOrgXDomain, withTrim, domain) {\n        var $$ = this,\n            config = $$.config;\n\n        if (withUpdateOrgXDomain) {\n            $$.x.domain(domain ? domain : $$.d3.extent($$.getXDomain(targets)));\n            $$.orgXDomain = $$.x.domain();\n            if (config.zoom_enabled) {\n                $$.zoom.update();\n            }\n            $$.subX.domain($$.x.domain());\n            if ($$.brush) {\n                $$.brush.updateScale($$.subX);\n            }\n        }\n        if (withUpdateXDomain) {\n            $$.x.domain(domain ? domain : !$$.brush || $$.brush.empty() ? $$.orgXDomain : $$.brush.selectionAsValue());\n        }\n\n        // Trim domain when too big by zoom mousemove event\n        if (withTrim) {\n            $$.x.domain($$.trimXDomain($$.x.orgDomain()));\n        }\n\n        return $$.x.domain();\n    };\n    c3_chart_internal_fn.trimXDomain = function (domain) {\n        var zoomDomain = this.getZoomDomain(),\n            min = zoomDomain[0],\n            max = zoomDomain[1];\n        if (domain[0] <= min) {\n            domain[1] = +domain[1] + (min - domain[0]);\n            domain[0] = min;\n        }\n        if (max <= domain[1]) {\n            domain[0] = +domain[0] - (domain[1] - max);\n            domain[1] = max;\n        }\n        return domain;\n    };\n\n    c3_chart_internal_fn.drag = function (mouse) {\n        var $$ = this,\n            config = $$.config,\n            main = $$.main,\n            d3 = $$.d3;\n        var sx, sy, mx, my, minX, maxX, minY, maxY;\n\n        if ($$.hasArcType()) {\n            return;\n        }\n        if (!config.data_selection_enabled) {\n            return;\n        } // do nothing if not selectable\n        if (!config.data_selection_multiple) {\n            return;\n        } // skip when single selection because drag is used for multiple selection\n\n        sx = $$.dragStart[0];\n        sy = $$.dragStart[1];\n        mx = mouse[0];\n        my = mouse[1];\n        minX = Math.min(sx, mx);\n        maxX = Math.max(sx, mx);\n        minY = config.data_selection_grouped ? $$.margin.top : Math.min(sy, my);\n        maxY = config.data_selection_grouped ? $$.height : Math.max(sy, my);\n\n        main.select('.' + CLASS.dragarea).attr('x', minX).attr('y', minY).attr('width', maxX - minX).attr('height', maxY - minY);\n        // TODO: binary search when multiple xs\n        main.selectAll('.' + CLASS.shapes).selectAll('.' + CLASS.shape).filter(function (d) {\n            return config.data_selection_isselectable(d);\n        }).each(function (d, i) {\n            var shape = d3.select(this),\n                isSelected = shape.classed(CLASS.SELECTED),\n                isIncluded = shape.classed(CLASS.INCLUDED),\n                _x,\n                _y,\n                _w,\n                _h,\n                toggle,\n                isWithin = false,\n                box;\n            if (shape.classed(CLASS.circle)) {\n                _x = shape.attr(\"cx\") * 1;\n                _y = shape.attr(\"cy\") * 1;\n                toggle = $$.togglePoint;\n                isWithin = minX < _x && _x < maxX && minY < _y && _y < maxY;\n            } else if (shape.classed(CLASS.bar)) {\n                box = getPathBox(this);\n                _x = box.x;\n                _y = box.y;\n                _w = box.width;\n                _h = box.height;\n                toggle = $$.togglePath;\n                isWithin = !(maxX < _x || _x + _w < minX) && !(maxY < _y || _y + _h < minY);\n            } else {\n                // line/area selection not supported yet\n                return;\n            }\n            if (isWithin ^ isIncluded) {\n                shape.classed(CLASS.INCLUDED, !isIncluded);\n                // TODO: included/unincluded callback here\n                shape.classed(CLASS.SELECTED, !isSelected);\n                toggle.call($$, !isSelected, shape, d, i);\n            }\n        });\n    };\n\n    c3_chart_internal_fn.dragstart = function (mouse) {\n        var $$ = this,\n            config = $$.config;\n        if ($$.hasArcType()) {\n            return;\n        }\n        if (!config.data_selection_enabled) {\n            return;\n        } // do nothing if not selectable\n        $$.dragStart = mouse;\n        $$.main.select('.' + CLASS.chart).append('rect').attr('class', CLASS.dragarea).style('opacity', 0.1);\n        $$.dragging = true;\n    };\n\n    c3_chart_internal_fn.dragend = function () {\n        var $$ = this,\n            config = $$.config;\n        if ($$.hasArcType()) {\n            return;\n        }\n        if (!config.data_selection_enabled) {\n            return;\n        } // do nothing if not selectable\n        $$.main.select('.' + CLASS.dragarea).transition().duration(100).style('opacity', 0).remove();\n        $$.main.selectAll('.' + CLASS.shape).classed(CLASS.INCLUDED, false);\n        $$.dragging = false;\n    };\n\n    c3_chart_internal_fn.getYFormat = function (forArc) {\n        var $$ = this,\n            formatForY = forArc && !$$.hasType('gauge') ? $$.defaultArcValueFormat : $$.yFormat,\n            formatForY2 = forArc && !$$.hasType('gauge') ? $$.defaultArcValueFormat : $$.y2Format;\n        return function (v, ratio, id) {\n            var format = $$.axis.getId(id) === 'y2' ? formatForY2 : formatForY;\n            return format.call($$, v, ratio);\n        };\n    };\n    c3_chart_internal_fn.yFormat = function (v) {\n        var $$ = this,\n            config = $$.config,\n            format = config.axis_y_tick_format ? config.axis_y_tick_format : $$.defaultValueFormat;\n        return format(v);\n    };\n    c3_chart_internal_fn.y2Format = function (v) {\n        var $$ = this,\n            config = $$.config,\n            format = config.axis_y2_tick_format ? config.axis_y2_tick_format : $$.defaultValueFormat;\n        return format(v);\n    };\n    c3_chart_internal_fn.defaultValueFormat = function (v) {\n        return isValue(v) ? +v : \"\";\n    };\n    c3_chart_internal_fn.defaultArcValueFormat = function (v, ratio) {\n        return (ratio * 100).toFixed(1) + '%';\n    };\n    c3_chart_internal_fn.dataLabelFormat = function (targetId) {\n        var $$ = this,\n            data_labels = $$.config.data_labels,\n            format,\n            defaultFormat = function defaultFormat(v) {\n            return isValue(v) ? +v : \"\";\n        };\n        // find format according to axis id\n        if (typeof data_labels.format === 'function') {\n            format = data_labels.format;\n        } else if (_typeof(data_labels.format) === 'object') {\n            if (data_labels.format[targetId]) {\n                format = data_labels.format[targetId] === true ? defaultFormat : data_labels.format[targetId];\n            } else {\n                format = function format() {\n                    return '';\n                };\n            }\n        } else {\n            format = defaultFormat;\n        }\n        return format;\n    };\n\n    c3_chart_internal_fn.initGrid = function () {\n        var $$ = this,\n            config = $$.config,\n            d3 = $$.d3;\n        $$.grid = $$.main.append('g').attr(\"clip-path\", $$.clipPathForGrid).attr('class', CLASS.grid);\n        if (config.grid_x_show) {\n            $$.grid.append(\"g\").attr(\"class\", CLASS.xgrids);\n        }\n        if (config.grid_y_show) {\n            $$.grid.append('g').attr('class', CLASS.ygrids);\n        }\n        if (config.grid_focus_show) {\n            $$.grid.append('g').attr(\"class\", CLASS.xgridFocus).append('line').attr('class', CLASS.xgridFocus);\n        }\n        $$.xgrid = d3.selectAll([]);\n        if (!config.grid_lines_front) {\n            $$.initGridLines();\n        }\n    };\n    c3_chart_internal_fn.initGridLines = function () {\n        var $$ = this,\n            d3 = $$.d3;\n        $$.gridLines = $$.main.append('g').attr(\"clip-path\", $$.clipPathForGrid).attr('class', CLASS.grid + ' ' + CLASS.gridLines);\n        $$.gridLines.append('g').attr(\"class\", CLASS.xgridLines);\n        $$.gridLines.append('g').attr('class', CLASS.ygridLines);\n        $$.xgridLines = d3.selectAll([]);\n    };\n    c3_chart_internal_fn.updateXGrid = function (withoutUpdate) {\n        var $$ = this,\n            config = $$.config,\n            d3 = $$.d3,\n            xgridData = $$.generateGridData(config.grid_x_type, $$.x),\n            tickOffset = $$.isCategorized() ? $$.xAxis.tickOffset() : 0;\n\n        $$.xgridAttr = config.axis_rotated ? {\n            'x1': 0,\n            'x2': $$.width,\n            'y1': function y1(d) {\n                return $$.x(d) - tickOffset;\n            },\n            'y2': function y2(d) {\n                return $$.x(d) - tickOffset;\n            }\n        } : {\n            'x1': function x1(d) {\n                return $$.x(d) + tickOffset;\n            },\n            'x2': function x2(d) {\n                return $$.x(d) + tickOffset;\n            },\n            'y1': 0,\n            'y2': $$.height\n        };\n        $$.xgridAttr.opacity = function () {\n            var pos = +d3.select(this).attr(config.axis_rotated ? 'y1' : 'x1');\n            return pos === (config.axis_rotated ? $$.height : 0) ? 0 : 1;\n        };\n\n        var xgrid = $$.main.select('.' + CLASS.xgrids).selectAll('.' + CLASS.xgrid).data(xgridData);\n        var xgridEnter = xgrid.enter().append('line').attr(\"class\", CLASS.xgrid).attr('x1', $$.xgridAttr.x1).attr('x2', $$.xgridAttr.x2).attr('y1', $$.xgridAttr.y1).attr('y2', $$.xgridAttr.y2).style(\"opacity\", 0);\n        $$.xgrid = xgridEnter.merge(xgrid);\n        if (!withoutUpdate) {\n            $$.xgrid.attr('x1', $$.xgridAttr.x1).attr('x2', $$.xgridAttr.x2).attr('y1', $$.xgridAttr.y1).attr('y2', $$.xgridAttr.y2).style(\"opacity\", $$.xgridAttr.opacity);\n        }\n        xgrid.exit().remove();\n    };\n\n    c3_chart_internal_fn.updateYGrid = function () {\n        var $$ = this,\n            config = $$.config,\n            gridValues = $$.yAxis.tickValues() || $$.y.ticks(config.grid_y_ticks);\n        var ygrid = $$.main.select('.' + CLASS.ygrids).selectAll('.' + CLASS.ygrid).data(gridValues);\n        var ygridEnter = ygrid.enter().append('line')\n        // TODO: x1, x2, y1, y2, opacity need to be set here maybe\n        .attr('class', CLASS.ygrid);\n        $$.ygrid = ygridEnter.merge(ygrid);\n        $$.ygrid.attr(\"x1\", config.axis_rotated ? $$.y : 0).attr(\"x2\", config.axis_rotated ? $$.y : $$.width).attr(\"y1\", config.axis_rotated ? 0 : $$.y).attr(\"y2\", config.axis_rotated ? $$.height : $$.y);\n        ygrid.exit().remove();\n        $$.smoothLines($$.ygrid, 'grid');\n    };\n\n    c3_chart_internal_fn.gridTextAnchor = function (d) {\n        return d.position ? d.position : \"end\";\n    };\n    c3_chart_internal_fn.gridTextDx = function (d) {\n        return d.position === 'start' ? 4 : d.position === 'middle' ? 0 : -4;\n    };\n    c3_chart_internal_fn.xGridTextX = function (d) {\n        return d.position === 'start' ? -this.height : d.position === 'middle' ? -this.height / 2 : 0;\n    };\n    c3_chart_internal_fn.yGridTextX = function (d) {\n        return d.position === 'start' ? 0 : d.position === 'middle' ? this.width / 2 : this.width;\n    };\n    c3_chart_internal_fn.updateGrid = function (duration) {\n        var $$ = this,\n            main = $$.main,\n            config = $$.config,\n            xgridLine,\n            xgridLineEnter,\n            ygridLine,\n            ygridLineEnter,\n            xv = $$.xv.bind($$),\n            yv = $$.yv.bind($$),\n            xGridTextX = $$.xGridTextX.bind($$),\n            yGridTextX = $$.yGridTextX.bind($$);\n\n        // hide if arc type\n        $$.grid.style('visibility', $$.hasArcType() ? 'hidden' : 'visible');\n\n        main.select('line.' + CLASS.xgridFocus).style(\"visibility\", \"hidden\");\n        if (config.grid_x_show) {\n            $$.updateXGrid();\n        }\n        xgridLine = main.select('.' + CLASS.xgridLines).selectAll('.' + CLASS.xgridLine).data(config.grid_x_lines);\n        // enter\n        xgridLineEnter = xgridLine.enter().append('g').attr(\"class\", function (d) {\n            return CLASS.xgridLine + (d['class'] ? ' ' + d['class'] : '');\n        });\n        xgridLineEnter.append('line').attr(\"x1\", config.axis_rotated ? 0 : xv).attr(\"x2\", config.axis_rotated ? $$.width : xv).attr(\"y1\", config.axis_rotated ? xv : 0).attr(\"y2\", config.axis_rotated ? xv : $$.height).style(\"opacity\", 0);\n        xgridLineEnter.append('text').attr(\"text-anchor\", $$.gridTextAnchor).attr(\"transform\", config.axis_rotated ? \"\" : \"rotate(-90)\").attr(\"x\", config.axis_rotated ? yGridTextX : xGridTextX).attr(\"y\", xv).attr('dx', $$.gridTextDx).attr('dy', -5).style(\"opacity\", 0);\n        // udpate\n        $$.xgridLines = xgridLineEnter.merge(xgridLine);\n        // done in d3.transition() of the end of this function\n        // exit\n        xgridLine.exit().transition().duration(duration).style(\"opacity\", 0).remove();\n\n        // Y-Grid\n        if (config.grid_y_show) {\n            $$.updateYGrid();\n        }\n        ygridLine = main.select('.' + CLASS.ygridLines).selectAll('.' + CLASS.ygridLine).data(config.grid_y_lines);\n        // enter\n        ygridLineEnter = ygridLine.enter().append('g').attr(\"class\", function (d) {\n            return CLASS.ygridLine + (d['class'] ? ' ' + d['class'] : '');\n        });\n        ygridLineEnter.append('line').attr(\"x1\", config.axis_rotated ? yv : 0).attr(\"x2\", config.axis_rotated ? yv : $$.width).attr(\"y1\", config.axis_rotated ? 0 : yv).attr(\"y2\", config.axis_rotated ? $$.height : yv).style(\"opacity\", 0);\n        ygridLineEnter.append('text').attr(\"text-anchor\", $$.gridTextAnchor).attr(\"transform\", config.axis_rotated ? \"rotate(-90)\" : \"\").attr(\"x\", config.axis_rotated ? xGridTextX : yGridTextX).attr(\"y\", yv).attr('dx', $$.gridTextDx).attr('dy', -5).style(\"opacity\", 0);\n        // update\n        $$.ygridLines = ygridLineEnter.merge(ygridLine);\n        $$.ygridLines.select('line').transition().duration(duration).attr(\"x1\", config.axis_rotated ? yv : 0).attr(\"x2\", config.axis_rotated ? yv : $$.width).attr(\"y1\", config.axis_rotated ? 0 : yv).attr(\"y2\", config.axis_rotated ? $$.height : yv).style(\"opacity\", 1);\n        $$.ygridLines.select('text').transition().duration(duration).attr(\"x\", config.axis_rotated ? $$.xGridTextX.bind($$) : $$.yGridTextX.bind($$)).attr(\"y\", yv).text(function (d) {\n            return d.text;\n        }).style(\"opacity\", 1);\n        // exit\n        ygridLine.exit().transition().duration(duration).style(\"opacity\", 0).remove();\n    };\n    c3_chart_internal_fn.redrawGrid = function (withTransition, transition) {\n        var $$ = this,\n            config = $$.config,\n            xv = $$.xv.bind($$),\n            lines = $$.xgridLines.select('line'),\n            texts = $$.xgridLines.select('text');\n        return [(withTransition ? lines.transition(transition) : lines).attr(\"x1\", config.axis_rotated ? 0 : xv).attr(\"x2\", config.axis_rotated ? $$.width : xv).attr(\"y1\", config.axis_rotated ? xv : 0).attr(\"y2\", config.axis_rotated ? xv : $$.height).style(\"opacity\", 1), (withTransition ? texts.transition(transition) : texts).attr(\"x\", config.axis_rotated ? $$.yGridTextX.bind($$) : $$.xGridTextX.bind($$)).attr(\"y\", xv).text(function (d) {\n            return d.text;\n        }).style(\"opacity\", 1)];\n    };\n    c3_chart_internal_fn.showXGridFocus = function (selectedData) {\n        var $$ = this,\n            config = $$.config,\n            dataToShow = selectedData.filter(function (d) {\n            return d && isValue(d.value);\n        }),\n            focusEl = $$.main.selectAll('line.' + CLASS.xgridFocus),\n            xx = $$.xx.bind($$);\n        if (!config.tooltip_show) {\n            return;\n        }\n        // Hide when scatter plot exists\n        if ($$.hasType('scatter') || $$.hasArcType()) {\n            return;\n        }\n        focusEl.style(\"visibility\", \"visible\").data([dataToShow[0]]).attr(config.axis_rotated ? 'y1' : 'x1', xx).attr(config.axis_rotated ? 'y2' : 'x2', xx);\n        $$.smoothLines(focusEl, 'grid');\n    };\n    c3_chart_internal_fn.hideXGridFocus = function () {\n        this.main.select('line.' + CLASS.xgridFocus).style(\"visibility\", \"hidden\");\n    };\n    c3_chart_internal_fn.updateXgridFocus = function () {\n        var $$ = this,\n            config = $$.config;\n        $$.main.select('line.' + CLASS.xgridFocus).attr(\"x1\", config.axis_rotated ? 0 : -10).attr(\"x2\", config.axis_rotated ? $$.width : -10).attr(\"y1\", config.axis_rotated ? -10 : 0).attr(\"y2\", config.axis_rotated ? -10 : $$.height);\n    };\n    c3_chart_internal_fn.generateGridData = function (type, scale) {\n        var $$ = this,\n            gridData = [],\n            xDomain,\n            firstYear,\n            lastYear,\n            i,\n            tickNum = $$.main.select(\".\" + CLASS.axisX).selectAll('.tick').size();\n        if (type === 'year') {\n            xDomain = $$.getXDomain();\n            firstYear = xDomain[0].getFullYear();\n            lastYear = xDomain[1].getFullYear();\n            for (i = firstYear; i <= lastYear; i++) {\n                gridData.push(new Date(i + '-01-01 00:00:00'));\n            }\n        } else {\n            gridData = scale.ticks(10);\n            if (gridData.length > tickNum) {\n                // use only int\n                gridData = gridData.filter(function (d) {\n                    return (\"\" + d).indexOf('.') < 0;\n                });\n            }\n        }\n        return gridData;\n    };\n    c3_chart_internal_fn.getGridFilterToRemove = function (params) {\n        return params ? function (line) {\n            var found = false;\n            [].concat(params).forEach(function (param) {\n                if ('value' in param && line.value === param.value || 'class' in param && line['class'] === param['class']) {\n                    found = true;\n                }\n            });\n            return found;\n        } : function () {\n            return true;\n        };\n    };\n    c3_chart_internal_fn.removeGridLines = function (params, forX) {\n        var $$ = this,\n            config = $$.config,\n            toRemove = $$.getGridFilterToRemove(params),\n            toShow = function toShow(line) {\n            return !toRemove(line);\n        },\n            classLines = forX ? CLASS.xgridLines : CLASS.ygridLines,\n            classLine = forX ? CLASS.xgridLine : CLASS.ygridLine;\n        $$.main.select('.' + classLines).selectAll('.' + classLine).filter(toRemove).transition().duration(config.transition_duration).style('opacity', 0).remove();\n        if (forX) {\n            config.grid_x_lines = config.grid_x_lines.filter(toShow);\n        } else {\n            config.grid_y_lines = config.grid_y_lines.filter(toShow);\n        }\n    };\n\n    c3_chart_internal_fn.initEventRect = function () {\n        var $$ = this,\n            config = $$.config;\n\n        $$.main.select('.' + CLASS.chart).append(\"g\").attr(\"class\", CLASS.eventRects).style('fill-opacity', 0);\n        $$.eventRect = $$.main.select('.' + CLASS.eventRects).append('rect').attr('class', CLASS.eventRect);\n\n        // event rect handle zoom event as well\n        if (config.zoom_enabled && $$.zoom) {\n            $$.eventRect.call($$.zoom).on(\"dblclick.zoom\", null);\n            if (config.zoom_initialRange) {\n                // WORKAROUND: Add transition to apply transform immediately when no subchart\n                $$.eventRect.transition().duration(0).call($$.zoom.transform, $$.zoomTransform(config.zoom_initialRange));\n            }\n        }\n    };\n    c3_chart_internal_fn.redrawEventRect = function () {\n        var $$ = this,\n            d3 = $$.d3,\n            config = $$.config,\n            x,\n            y,\n            w,\n            h;\n\n        // TODO: rotated not supported yet\n        x = 0;\n        y = 0;\n        w = $$.width;\n        h = $$.height;\n\n        function mouseout() {\n            $$.svg.select('.' + CLASS.eventRect).style('cursor', null);\n            $$.hideXGridFocus();\n            $$.hideTooltip();\n            $$.unexpandCircles();\n            $$.unexpandBars();\n        }\n\n        // rects for mouseover\n        $$.main.select('.' + CLASS.eventRects).style('cursor', config.zoom_enabled ? config.axis_rotated ? 'ns-resize' : 'ew-resize' : null);\n\n        $$.eventRect.attr('x', x).attr('y', y).attr('width', w).attr('height', h).on('mouseout', config.interaction_enabled ? function () {\n            if (!config) {\n                return;\n            } // chart is destroyed\n            if ($$.hasArcType()) {\n                return;\n            }\n            mouseout();\n        } : null).on('mousemove', config.interaction_enabled ? function () {\n            var targetsToShow, mouse, closest, sameXData, selectedData;\n\n            if ($$.dragging) {\n                return;\n            } // do nothing when dragging\n            if ($$.hasArcType(targetsToShow)) {\n                return;\n            }\n\n            targetsToShow = $$.filterTargetsToShow($$.data.targets);\n            mouse = d3.mouse(this);\n            closest = $$.findClosestFromTargets(targetsToShow, mouse);\n\n            if ($$.mouseover && (!closest || closest.id !== $$.mouseover.id)) {\n                config.data_onmouseout.call($$.api, $$.mouseover);\n                $$.mouseover = undefined;\n            }\n\n            if (!closest) {\n                mouseout();\n                return;\n            }\n\n            if ($$.isScatterType(closest) || !config.tooltip_grouped) {\n                sameXData = [closest];\n            } else {\n                sameXData = $$.filterByX(targetsToShow, closest.x);\n            }\n\n            // show tooltip when cursor is close to some point\n            selectedData = sameXData.map(function (d) {\n                return $$.addName(d);\n            });\n            $$.showTooltip(selectedData, this);\n\n            // expand points\n            if (config.point_focus_expand_enabled) {\n                $$.unexpandCircles();\n                selectedData.forEach(function (d) {\n                    $$.expandCircles(d.index, d.id, false);\n                });\n            }\n            $$.expandBars(closest.index, closest.id, true);\n\n            // Show xgrid focus line\n            $$.showXGridFocus(selectedData);\n\n            // Show cursor as pointer if point is close to mouse position\n            if ($$.isBarType(closest.id) || $$.dist(closest, mouse) < config.point_sensitivity) {\n                $$.svg.select('.' + CLASS.eventRect).style('cursor', 'pointer');\n                if (!$$.mouseover) {\n                    config.data_onmouseover.call($$.api, closest);\n                    $$.mouseover = closest;\n                }\n            }\n        } : null).on('click', config.interaction_enabled ? function () {\n            var targetsToShow, mouse, closest, sameXData;\n            if ($$.hasArcType(targetsToShow)) {\n                return;\n            }\n\n            targetsToShow = $$.filterTargetsToShow($$.data.targets);\n            mouse = d3.mouse(this);\n            closest = $$.findClosestFromTargets(targetsToShow, mouse);\n            if (!closest) {\n                return;\n            }\n            // select if selection enabled\n            if ($$.isBarType(closest.id) || $$.dist(closest, mouse) < config.point_sensitivity) {\n                if ($$.isScatterType(closest) || !config.data_selection_grouped) {\n                    sameXData = [closest];\n                } else {\n                    sameXData = $$.filterByX(targetsToShow, closest.x);\n                }\n                sameXData.forEach(function (d) {\n                    $$.main.selectAll('.' + CLASS.shapes + $$.getTargetSelectorSuffix(d.id)).selectAll('.' + CLASS.shape + '-' + d.index).each(function () {\n                        if (config.data_selection_grouped || $$.isWithinShape(this, d)) {\n                            $$.toggleShape(this, d, d.index);\n                            config.data_onclick.call($$.api, d, this);\n                        }\n                    });\n                });\n            }\n        } : null).call(config.interaction_enabled && config.data_selection_draggable && $$.drag ? d3.drag().on('drag', function () {\n            $$.drag(d3.mouse(this));\n        }).on('start', function () {\n            $$.dragstart(d3.mouse(this));\n        }).on('end', function () {\n            $$.dragend();\n        }) : function () {});\n    };\n    c3_chart_internal_fn.getMousePosition = function (data) {\n        var $$ = this;\n        return [$$.x(data.x), $$.getYScale(data.id)(data.value)];\n    };\n    c3_chart_internal_fn.dispatchEvent = function (type, mouse) {\n        var $$ = this,\n            selector = '.' + CLASS.eventRect,\n            eventRect = $$.main.select(selector).node(),\n            box = eventRect.getBoundingClientRect(),\n            x = box.left + (mouse ? mouse[0] : 0),\n            y = box.top + (mouse ? mouse[1] : 0),\n            event = document.createEvent(\"MouseEvents\");\n\n        event.initMouseEvent(type, true, true, window, 0, x, y, x, y, false, false, false, false, 0, null);\n        eventRect.dispatchEvent(event);\n    };\n\n    c3_chart_internal_fn.initLegend = function () {\n        var $$ = this;\n        $$.legendItemTextBox = {};\n        $$.legendHasRendered = false;\n        $$.legend = $$.svg.append(\"g\").attr(\"transform\", $$.getTranslate('legend'));\n        if (!$$.config.legend_show) {\n            $$.legend.style('visibility', 'hidden');\n            $$.hiddenLegendIds = $$.mapToIds($$.data.targets);\n            return;\n        }\n        // MEMO: call here to update legend box and tranlate for all\n        // MEMO: translate will be upated by this, so transform not needed in updateLegend()\n        $$.updateLegendWithDefaults();\n    };\n    c3_chart_internal_fn.updateLegendWithDefaults = function () {\n        var $$ = this;\n        $$.updateLegend($$.mapToIds($$.data.targets), { withTransform: false, withTransitionForTransform: false, withTransition: false });\n    };\n    c3_chart_internal_fn.updateSizeForLegend = function (legendHeight, legendWidth) {\n        var $$ = this,\n            config = $$.config,\n            insetLegendPosition = {\n            top: $$.isLegendTop ? $$.getCurrentPaddingTop() + config.legend_inset_y + 5.5 : $$.currentHeight - legendHeight - $$.getCurrentPaddingBottom() - config.legend_inset_y,\n            left: $$.isLegendLeft ? $$.getCurrentPaddingLeft() + config.legend_inset_x + 0.5 : $$.currentWidth - legendWidth - $$.getCurrentPaddingRight() - config.legend_inset_x + 0.5\n        };\n\n        $$.margin3 = {\n            top: $$.isLegendRight ? 0 : $$.isLegendInset ? insetLegendPosition.top : $$.currentHeight - legendHeight,\n            right: NaN,\n            bottom: 0,\n            left: $$.isLegendRight ? $$.currentWidth - legendWidth : $$.isLegendInset ? insetLegendPosition.left : 0\n        };\n    };\n    c3_chart_internal_fn.transformLegend = function (withTransition) {\n        var $$ = this;\n        (withTransition ? $$.legend.transition() : $$.legend).attr(\"transform\", $$.getTranslate('legend'));\n    };\n    c3_chart_internal_fn.updateLegendStep = function (step) {\n        this.legendStep = step;\n    };\n    c3_chart_internal_fn.updateLegendItemWidth = function (w) {\n        this.legendItemWidth = w;\n    };\n    c3_chart_internal_fn.updateLegendItemHeight = function (h) {\n        this.legendItemHeight = h;\n    };\n    c3_chart_internal_fn.getLegendWidth = function () {\n        var $$ = this;\n        return $$.config.legend_show ? $$.isLegendRight || $$.isLegendInset ? $$.legendItemWidth * ($$.legendStep + 1) : $$.currentWidth : 0;\n    };\n    c3_chart_internal_fn.getLegendHeight = function () {\n        var $$ = this,\n            h = 0;\n        if ($$.config.legend_show) {\n            if ($$.isLegendRight) {\n                h = $$.currentHeight;\n            } else {\n                h = Math.max(20, $$.legendItemHeight) * ($$.legendStep + 1);\n            }\n        }\n        return h;\n    };\n    c3_chart_internal_fn.opacityForLegend = function (legendItem) {\n        return legendItem.classed(CLASS.legendItemHidden) ? null : 1;\n    };\n    c3_chart_internal_fn.opacityForUnfocusedLegend = function (legendItem) {\n        return legendItem.classed(CLASS.legendItemHidden) ? null : 0.3;\n    };\n    c3_chart_internal_fn.toggleFocusLegend = function (targetIds, focus) {\n        var $$ = this;\n        targetIds = $$.mapToTargetIds(targetIds);\n        $$.legend.selectAll('.' + CLASS.legendItem).filter(function (id) {\n            return targetIds.indexOf(id) >= 0;\n        }).classed(CLASS.legendItemFocused, focus).transition().duration(100).style('opacity', function () {\n            var opacity = focus ? $$.opacityForLegend : $$.opacityForUnfocusedLegend;\n            return opacity.call($$, $$.d3.select(this));\n        });\n    };\n    c3_chart_internal_fn.revertLegend = function () {\n        var $$ = this,\n            d3 = $$.d3;\n        $$.legend.selectAll('.' + CLASS.legendItem).classed(CLASS.legendItemFocused, false).transition().duration(100).style('opacity', function () {\n            return $$.opacityForLegend(d3.select(this));\n        });\n    };\n    c3_chart_internal_fn.showLegend = function (targetIds) {\n        var $$ = this,\n            config = $$.config;\n        if (!config.legend_show) {\n            config.legend_show = true;\n            $$.legend.style('visibility', 'visible');\n            if (!$$.legendHasRendered) {\n                $$.updateLegendWithDefaults();\n            }\n        }\n        $$.removeHiddenLegendIds(targetIds);\n        $$.legend.selectAll($$.selectorLegends(targetIds)).style('visibility', 'visible').transition().style('opacity', function () {\n            return $$.opacityForLegend($$.d3.select(this));\n        });\n    };\n    c3_chart_internal_fn.hideLegend = function (targetIds) {\n        var $$ = this,\n            config = $$.config;\n        if (config.legend_show && isEmpty(targetIds)) {\n            config.legend_show = false;\n            $$.legend.style('visibility', 'hidden');\n        }\n        $$.addHiddenLegendIds(targetIds);\n        $$.legend.selectAll($$.selectorLegends(targetIds)).style('opacity', 0).style('visibility', 'hidden');\n    };\n    c3_chart_internal_fn.clearLegendItemTextBoxCache = function () {\n        this.legendItemTextBox = {};\n    };\n    c3_chart_internal_fn.updateLegend = function (targetIds, options, transitions) {\n        var $$ = this,\n            config = $$.config;\n        var xForLegend, xForLegendText, xForLegendRect, yForLegend, yForLegendText, yForLegendRect, x1ForLegendTile, x2ForLegendTile, yForLegendTile;\n        var paddingTop = 4,\n            paddingRight = 10,\n            maxWidth = 0,\n            maxHeight = 0,\n            posMin = 10,\n            tileWidth = config.legend_item_tile_width + 5;\n        var l,\n            totalLength = 0,\n            offsets = {},\n            widths = {},\n            heights = {},\n            margins = [0],\n            steps = {},\n            step = 0;\n        var withTransition, withTransitionForTransform;\n        var texts, rects, tiles, background;\n\n        // Skip elements when their name is set to null\n        targetIds = targetIds.filter(function (id) {\n            return !isDefined(config.data_names[id]) || config.data_names[id] !== null;\n        });\n\n        options = options || {};\n        withTransition = getOption(options, \"withTransition\", true);\n        withTransitionForTransform = getOption(options, \"withTransitionForTransform\", true);\n\n        function getTextBox(textElement, id) {\n            if (!$$.legendItemTextBox[id]) {\n                $$.legendItemTextBox[id] = $$.getTextRect(textElement.textContent, CLASS.legendItem, textElement);\n            }\n            return $$.legendItemTextBox[id];\n        }\n\n        function updatePositions(textElement, id, index) {\n            var reset = index === 0,\n                isLast = index === targetIds.length - 1,\n                box = getTextBox(textElement, id),\n                itemWidth = box.width + tileWidth + (isLast && !($$.isLegendRight || $$.isLegendInset) ? 0 : paddingRight) + config.legend_padding,\n                itemHeight = box.height + paddingTop,\n                itemLength = $$.isLegendRight || $$.isLegendInset ? itemHeight : itemWidth,\n                areaLength = $$.isLegendRight || $$.isLegendInset ? $$.getLegendHeight() : $$.getLegendWidth(),\n                margin,\n                maxLength;\n\n            // MEMO: care about condifion of step, totalLength\n            function updateValues(id, withoutStep) {\n                if (!withoutStep) {\n                    margin = (areaLength - totalLength - itemLength) / 2;\n                    if (margin < posMin) {\n                        margin = (areaLength - itemLength) / 2;\n                        totalLength = 0;\n                        step++;\n                    }\n                }\n                steps[id] = step;\n                margins[step] = $$.isLegendInset ? 10 : margin;\n                offsets[id] = totalLength;\n                totalLength += itemLength;\n            }\n\n            if (reset) {\n                totalLength = 0;\n                step = 0;\n                maxWidth = 0;\n                maxHeight = 0;\n            }\n\n            if (config.legend_show && !$$.isLegendToShow(id)) {\n                widths[id] = heights[id] = steps[id] = offsets[id] = 0;\n                return;\n            }\n\n            widths[id] = itemWidth;\n            heights[id] = itemHeight;\n\n            if (!maxWidth || itemWidth >= maxWidth) {\n                maxWidth = itemWidth;\n            }\n            if (!maxHeight || itemHeight >= maxHeight) {\n                maxHeight = itemHeight;\n            }\n            maxLength = $$.isLegendRight || $$.isLegendInset ? maxHeight : maxWidth;\n\n            if (config.legend_equally) {\n                Object.keys(widths).forEach(function (id) {\n                    widths[id] = maxWidth;\n                });\n                Object.keys(heights).forEach(function (id) {\n                    heights[id] = maxHeight;\n                });\n                margin = (areaLength - maxLength * targetIds.length) / 2;\n                if (margin < posMin) {\n                    totalLength = 0;\n                    step = 0;\n                    targetIds.forEach(function (id) {\n                        updateValues(id);\n                    });\n                } else {\n                    updateValues(id, true);\n                }\n            } else {\n                updateValues(id);\n            }\n        }\n\n        if ($$.isLegendInset) {\n            step = config.legend_inset_step ? config.legend_inset_step : targetIds.length;\n            $$.updateLegendStep(step);\n        }\n\n        if ($$.isLegendRight) {\n            xForLegend = function xForLegend(id) {\n                return maxWidth * steps[id];\n            };\n            yForLegend = function yForLegend(id) {\n                return margins[steps[id]] + offsets[id];\n            };\n        } else if ($$.isLegendInset) {\n            xForLegend = function xForLegend(id) {\n                return maxWidth * steps[id] + 10;\n            };\n            yForLegend = function yForLegend(id) {\n                return margins[steps[id]] + offsets[id];\n            };\n        } else {\n            xForLegend = function xForLegend(id) {\n                return margins[steps[id]] + offsets[id];\n            };\n            yForLegend = function yForLegend(id) {\n                return maxHeight * steps[id];\n            };\n        }\n        xForLegendText = function xForLegendText(id, i) {\n            return xForLegend(id, i) + 4 + config.legend_item_tile_width;\n        };\n        yForLegendText = function yForLegendText(id, i) {\n            return yForLegend(id, i) + 9;\n        };\n        xForLegendRect = function xForLegendRect(id, i) {\n            return xForLegend(id, i);\n        };\n        yForLegendRect = function yForLegendRect(id, i) {\n            return yForLegend(id, i) - 5;\n        };\n        x1ForLegendTile = function x1ForLegendTile(id, i) {\n            return xForLegend(id, i) - 2;\n        };\n        x2ForLegendTile = function x2ForLegendTile(id, i) {\n            return xForLegend(id, i) - 2 + config.legend_item_tile_width;\n        };\n        yForLegendTile = function yForLegendTile(id, i) {\n            return yForLegend(id, i) + 4;\n        };\n\n        // Define g for legend area\n        l = $$.legend.selectAll('.' + CLASS.legendItem).data(targetIds).enter().append('g').attr('class', function (id) {\n            return $$.generateClass(CLASS.legendItem, id);\n        }).style('visibility', function (id) {\n            return $$.isLegendToShow(id) ? 'visible' : 'hidden';\n        }).style('cursor', 'pointer').on('click', function (id) {\n            if (config.legend_item_onclick) {\n                config.legend_item_onclick.call($$, id);\n            } else {\n                if ($$.d3.event.altKey) {\n                    $$.api.hide();\n                    $$.api.show(id);\n                } else {\n                    $$.api.toggle(id);\n                    $$.isTargetToShow(id) ? $$.api.focus(id) : $$.api.revert();\n                }\n            }\n        }).on('mouseover', function (id) {\n            if (config.legend_item_onmouseover) {\n                config.legend_item_onmouseover.call($$, id);\n            } else {\n                $$.d3.select(this).classed(CLASS.legendItemFocused, true);\n                if (!$$.transiting && $$.isTargetToShow(id)) {\n                    $$.api.focus(id);\n                }\n            }\n        }).on('mouseout', function (id) {\n            if (config.legend_item_onmouseout) {\n                config.legend_item_onmouseout.call($$, id);\n            } else {\n                $$.d3.select(this).classed(CLASS.legendItemFocused, false);\n                $$.api.revert();\n            }\n        });\n        l.append('text').text(function (id) {\n            return isDefined(config.data_names[id]) ? config.data_names[id] : id;\n        }).each(function (id, i) {\n            updatePositions(this, id, i);\n        }).style(\"pointer-events\", \"none\").attr('x', $$.isLegendRight || $$.isLegendInset ? xForLegendText : -200).attr('y', $$.isLegendRight || $$.isLegendInset ? -200 : yForLegendText);\n        l.append('rect').attr(\"class\", CLASS.legendItemEvent).style('fill-opacity', 0).attr('x', $$.isLegendRight || $$.isLegendInset ? xForLegendRect : -200).attr('y', $$.isLegendRight || $$.isLegendInset ? -200 : yForLegendRect);\n        l.append('line').attr('class', CLASS.legendItemTile).style('stroke', $$.color).style(\"pointer-events\", \"none\").attr('x1', $$.isLegendRight || $$.isLegendInset ? x1ForLegendTile : -200).attr('y1', $$.isLegendRight || $$.isLegendInset ? -200 : yForLegendTile).attr('x2', $$.isLegendRight || $$.isLegendInset ? x2ForLegendTile : -200).attr('y2', $$.isLegendRight || $$.isLegendInset ? -200 : yForLegendTile).attr('stroke-width', config.legend_item_tile_height);\n\n        // Set background for inset legend\n        background = $$.legend.select('.' + CLASS.legendBackground + ' rect');\n        if ($$.isLegendInset && maxWidth > 0 && background.size() === 0) {\n            background = $$.legend.insert('g', '.' + CLASS.legendItem).attr(\"class\", CLASS.legendBackground).append('rect');\n        }\n\n        texts = $$.legend.selectAll('text').data(targetIds).text(function (id) {\n            return isDefined(config.data_names[id]) ? config.data_names[id] : id;\n        }) // MEMO: needed for update\n        .each(function (id, i) {\n            updatePositions(this, id, i);\n        });\n        (withTransition ? texts.transition() : texts).attr('x', xForLegendText).attr('y', yForLegendText);\n\n        rects = $$.legend.selectAll('rect.' + CLASS.legendItemEvent).data(targetIds);\n        (withTransition ? rects.transition() : rects).attr('width', function (id) {\n            return widths[id];\n        }).attr('height', function (id) {\n            return heights[id];\n        }).attr('x', xForLegendRect).attr('y', yForLegendRect);\n\n        tiles = $$.legend.selectAll('line.' + CLASS.legendItemTile).data(targetIds);\n        (withTransition ? tiles.transition() : tiles).style('stroke', $$.levelColor ? function (id) {\n            return $$.levelColor($$.cache[id].values[0].value);\n        } : $$.color).attr('x1', x1ForLegendTile).attr('y1', yForLegendTile).attr('x2', x2ForLegendTile).attr('y2', yForLegendTile);\n\n        if (background) {\n            (withTransition ? background.transition() : background).attr('height', $$.getLegendHeight() - 12).attr('width', maxWidth * (step + 1) + 10);\n        }\n\n        // toggle legend state\n        $$.legend.selectAll('.' + CLASS.legendItem).classed(CLASS.legendItemHidden, function (id) {\n            return !$$.isTargetToShow(id);\n        });\n\n        // Update all to reflect change of legend\n        $$.updateLegendItemWidth(maxWidth);\n        $$.updateLegendItemHeight(maxHeight);\n        $$.updateLegendStep(step);\n        // Update size and scale\n        $$.updateSizes();\n        $$.updateScales();\n        $$.updateSvgSize();\n        // Update g positions\n        $$.transformAll(withTransitionForTransform, transitions);\n        $$.legendHasRendered = true;\n    };\n\n    c3_chart_internal_fn.initRegion = function () {\n        var $$ = this;\n        $$.region = $$.main.append('g').attr(\"clip-path\", $$.clipPath).attr(\"class\", CLASS.regions);\n    };\n    c3_chart_internal_fn.updateRegion = function (duration) {\n        var $$ = this,\n            config = $$.config;\n\n        // hide if arc type\n        $$.region.style('visibility', $$.hasArcType() ? 'hidden' : 'visible');\n\n        var mainRegion = $$.main.select('.' + CLASS.regions).selectAll('.' + CLASS.region).data(config.regions);\n        var mainRegionEnter = mainRegion.enter().append('rect').attr(\"x\", $$.regionX.bind($$)).attr(\"y\", $$.regionY.bind($$)).attr(\"width\", $$.regionWidth.bind($$)).attr(\"height\", $$.regionHeight.bind($$)).style(\"fill-opacity\", 0);\n        $$.mainRegion = mainRegionEnter.merge(mainRegion).attr('class', $$.classRegion.bind($$));\n        mainRegion.exit().transition().duration(duration).style(\"opacity\", 0).remove();\n    };\n    c3_chart_internal_fn.redrawRegion = function (withTransition, transition) {\n        var $$ = this,\n            regions = $$.mainRegion;\n        return [(withTransition ? regions.transition(transition) : regions).attr(\"x\", $$.regionX.bind($$)).attr(\"y\", $$.regionY.bind($$)).attr(\"width\", $$.regionWidth.bind($$)).attr(\"height\", $$.regionHeight.bind($$)).style(\"fill-opacity\", function (d) {\n            return isValue(d.opacity) ? d.opacity : 0.1;\n        })];\n    };\n    c3_chart_internal_fn.regionX = function (d) {\n        var $$ = this,\n            config = $$.config,\n            xPos,\n            yScale = d.axis === 'y' ? $$.y : $$.y2;\n        if (d.axis === 'y' || d.axis === 'y2') {\n            xPos = config.axis_rotated ? 'start' in d ? yScale(d.start) : 0 : 0;\n        } else {\n            xPos = config.axis_rotated ? 0 : 'start' in d ? $$.x($$.isTimeSeries() ? $$.parseDate(d.start) : d.start) : 0;\n        }\n        return xPos;\n    };\n    c3_chart_internal_fn.regionY = function (d) {\n        var $$ = this,\n            config = $$.config,\n            yPos,\n            yScale = d.axis === 'y' ? $$.y : $$.y2;\n        if (d.axis === 'y' || d.axis === 'y2') {\n            yPos = config.axis_rotated ? 0 : 'end' in d ? yScale(d.end) : 0;\n        } else {\n            yPos = config.axis_rotated ? 'start' in d ? $$.x($$.isTimeSeries() ? $$.parseDate(d.start) : d.start) : 0 : 0;\n        }\n        return yPos;\n    };\n    c3_chart_internal_fn.regionWidth = function (d) {\n        var $$ = this,\n            config = $$.config,\n            start = $$.regionX(d),\n            end,\n            yScale = d.axis === 'y' ? $$.y : $$.y2;\n        if (d.axis === 'y' || d.axis === 'y2') {\n            end = config.axis_rotated ? 'end' in d ? yScale(d.end) : $$.width : $$.width;\n        } else {\n            end = config.axis_rotated ? $$.width : 'end' in d ? $$.x($$.isTimeSeries() ? $$.parseDate(d.end) : d.end) : $$.width;\n        }\n        return end < start ? 0 : end - start;\n    };\n    c3_chart_internal_fn.regionHeight = function (d) {\n        var $$ = this,\n            config = $$.config,\n            start = this.regionY(d),\n            end,\n            yScale = d.axis === 'y' ? $$.y : $$.y2;\n        if (d.axis === 'y' || d.axis === 'y2') {\n            end = config.axis_rotated ? $$.height : 'start' in d ? yScale(d.start) : $$.height;\n        } else {\n            end = config.axis_rotated ? 'end' in d ? $$.x($$.isTimeSeries() ? $$.parseDate(d.end) : d.end) : $$.height : $$.height;\n        }\n        return end < start ? 0 : end - start;\n    };\n    c3_chart_internal_fn.isRegionOnX = function (d) {\n        return !d.axis || d.axis === 'x';\n    };\n\n    c3_chart_internal_fn.getScale = function (min, max, forTimeseries) {\n        return (forTimeseries ? this.d3.scaleTime() : this.d3.scaleLinear()).range([min, max]);\n    };\n    c3_chart_internal_fn.getX = function (min, max, domain, offset) {\n        var $$ = this,\n            scale = $$.getScale(min, max, $$.isTimeSeries()),\n            _scale = domain ? scale.domain(domain) : scale,\n            key;\n        // Define customized scale if categorized axis\n        if ($$.isCategorized()) {\n            offset = offset || function () {\n                return 0;\n            };\n            scale = function scale(d, raw) {\n                var v = _scale(d) + offset(d);\n                return raw ? v : Math.ceil(v);\n            };\n        } else {\n            scale = function scale(d, raw) {\n                var v = _scale(d);\n                return raw ? v : Math.ceil(v);\n            };\n        }\n        // define functions\n        for (key in _scale) {\n            scale[key] = _scale[key];\n        }\n        scale.orgDomain = function () {\n            return _scale.domain();\n        };\n        // define custom domain() for categorized axis\n        if ($$.isCategorized()) {\n            scale.domain = function (domain) {\n                if (!arguments.length) {\n                    domain = this.orgDomain();\n                    return [domain[0], domain[1] + 1];\n                }\n                _scale.domain(domain);\n                return scale;\n            };\n        }\n        return scale;\n    };\n    c3_chart_internal_fn.getY = function (min, max, domain) {\n        var scale = this.getScale(min, max, this.isTimeSeriesY());\n        if (domain) {\n            scale.domain(domain);\n        }\n        return scale;\n    };\n    c3_chart_internal_fn.getYScale = function (id) {\n        return this.axis.getId(id) === 'y2' ? this.y2 : this.y;\n    };\n    c3_chart_internal_fn.getSubYScale = function (id) {\n        return this.axis.getId(id) === 'y2' ? this.subY2 : this.subY;\n    };\n    c3_chart_internal_fn.updateScales = function () {\n        var $$ = this,\n            config = $$.config,\n            forInit = !$$.x;\n        // update edges\n        $$.xMin = config.axis_rotated ? 1 : 0;\n        $$.xMax = config.axis_rotated ? $$.height : $$.width;\n        $$.yMin = config.axis_rotated ? 0 : $$.height;\n        $$.yMax = config.axis_rotated ? $$.width : 1;\n        $$.subXMin = $$.xMin;\n        $$.subXMax = $$.xMax;\n        $$.subYMin = config.axis_rotated ? 0 : $$.height2;\n        $$.subYMax = config.axis_rotated ? $$.width2 : 1;\n        // update scales\n        $$.x = $$.getX($$.xMin, $$.xMax, forInit ? undefined : $$.x.orgDomain(), function () {\n            return $$.xAxis.tickOffset();\n        });\n        $$.y = $$.getY($$.yMin, $$.yMax, forInit ? config.axis_y_default : $$.y.domain());\n        $$.y2 = $$.getY($$.yMin, $$.yMax, forInit ? config.axis_y2_default : $$.y2.domain());\n        $$.subX = $$.getX($$.xMin, $$.xMax, $$.orgXDomain, function (d) {\n            return d % 1 ? 0 : $$.subXAxis.tickOffset();\n        });\n        $$.subY = $$.getY($$.subYMin, $$.subYMax, forInit ? config.axis_y_default : $$.subY.domain());\n        $$.subY2 = $$.getY($$.subYMin, $$.subYMax, forInit ? config.axis_y2_default : $$.subY2.domain());\n        // update axes\n        $$.xAxisTickFormat = $$.axis.getXAxisTickFormat();\n        $$.xAxisTickValues = $$.axis.getXAxisTickValues();\n        $$.yAxisTickValues = $$.axis.getYAxisTickValues();\n        $$.y2AxisTickValues = $$.axis.getY2AxisTickValues();\n\n        $$.xAxis = $$.axis.getXAxis($$.x, $$.xOrient, $$.xAxisTickFormat, $$.xAxisTickValues, config.axis_x_tick_outer);\n        $$.subXAxis = $$.axis.getXAxis($$.subX, $$.subXOrient, $$.xAxisTickFormat, $$.xAxisTickValues, config.axis_x_tick_outer);\n        $$.yAxis = $$.axis.getYAxis($$.y, $$.yOrient, config.axis_y_tick_format, $$.yAxisTickValues, config.axis_y_tick_outer);\n        $$.y2Axis = $$.axis.getYAxis($$.y2, $$.y2Orient, config.axis_y2_tick_format, $$.y2AxisTickValues, config.axis_y2_tick_outer);\n\n        // Set initialized scales to brush and zoom\n        if (!forInit) {\n            if ($$.brush) {\n                $$.brush.updateScale($$.subX);\n            }\n        }\n        // update for arc\n        if ($$.updateArc) {\n            $$.updateArc();\n        }\n    };\n\n    c3_chart_internal_fn.selectPoint = function (target, d, i) {\n        var $$ = this,\n            config = $$.config,\n            cx = (config.axis_rotated ? $$.circleY : $$.circleX).bind($$),\n            cy = (config.axis_rotated ? $$.circleX : $$.circleY).bind($$),\n            r = $$.pointSelectR.bind($$);\n        config.data_onselected.call($$.api, d, target.node());\n        // add selected-circle on low layer g\n        $$.main.select('.' + CLASS.selectedCircles + $$.getTargetSelectorSuffix(d.id)).selectAll('.' + CLASS.selectedCircle + '-' + i).data([d]).enter().append('circle').attr(\"class\", function () {\n            return $$.generateClass(CLASS.selectedCircle, i);\n        }).attr(\"cx\", cx).attr(\"cy\", cy).attr(\"stroke\", function () {\n            return $$.color(d);\n        }).attr(\"r\", function (d) {\n            return $$.pointSelectR(d) * 1.4;\n        }).transition().duration(100).attr(\"r\", r);\n    };\n    c3_chart_internal_fn.unselectPoint = function (target, d, i) {\n        var $$ = this;\n        $$.config.data_onunselected.call($$.api, d, target.node());\n        // remove selected-circle from low layer g\n        $$.main.select('.' + CLASS.selectedCircles + $$.getTargetSelectorSuffix(d.id)).selectAll('.' + CLASS.selectedCircle + '-' + i).transition().duration(100).attr('r', 0).remove();\n    };\n    c3_chart_internal_fn.togglePoint = function (selected, target, d, i) {\n        selected ? this.selectPoint(target, d, i) : this.unselectPoint(target, d, i);\n    };\n    c3_chart_internal_fn.selectPath = function (target, d) {\n        var $$ = this;\n        $$.config.data_onselected.call($$, d, target.node());\n        if ($$.config.interaction_brighten) {\n            target.transition().duration(100).style(\"fill\", function () {\n                return $$.d3.rgb($$.color(d)).brighter(0.75);\n            });\n        }\n    };\n    c3_chart_internal_fn.unselectPath = function (target, d) {\n        var $$ = this;\n        $$.config.data_onunselected.call($$, d, target.node());\n        if ($$.config.interaction_brighten) {\n            target.transition().duration(100).style(\"fill\", function () {\n                return $$.color(d);\n            });\n        }\n    };\n    c3_chart_internal_fn.togglePath = function (selected, target, d, i) {\n        selected ? this.selectPath(target, d, i) : this.unselectPath(target, d, i);\n    };\n    c3_chart_internal_fn.getToggle = function (that, d) {\n        var $$ = this,\n            toggle;\n        if (that.nodeName === 'circle') {\n            if ($$.isStepType(d)) {\n                // circle is hidden in step chart, so treat as within the click area\n                toggle = function toggle() {}; // TODO: how to select step chart?\n            } else {\n                toggle = $$.togglePoint;\n            }\n        } else if (that.nodeName === 'path') {\n            toggle = $$.togglePath;\n        }\n        return toggle;\n    };\n    c3_chart_internal_fn.toggleShape = function (that, d, i) {\n        var $$ = this,\n            d3 = $$.d3,\n            config = $$.config,\n            shape = d3.select(that),\n            isSelected = shape.classed(CLASS.SELECTED),\n            toggle = $$.getToggle(that, d).bind($$);\n\n        if (config.data_selection_enabled && config.data_selection_isselectable(d)) {\n            if (!config.data_selection_multiple) {\n                $$.main.selectAll('.' + CLASS.shapes + (config.data_selection_grouped ? $$.getTargetSelectorSuffix(d.id) : \"\")).selectAll('.' + CLASS.shape).each(function (d, i) {\n                    var shape = d3.select(this);\n                    if (shape.classed(CLASS.SELECTED)) {\n                        toggle(false, shape.classed(CLASS.SELECTED, false), d, i);\n                    }\n                });\n            }\n            shape.classed(CLASS.SELECTED, !isSelected);\n            toggle(!isSelected, shape, d, i);\n        }\n    };\n\n    c3_chart_internal_fn.initBar = function () {\n        var $$ = this;\n        $$.main.select('.' + CLASS.chart).append(\"g\").attr(\"class\", CLASS.chartBars);\n    };\n    c3_chart_internal_fn.updateTargetsForBar = function (targets) {\n        var $$ = this,\n            config = $$.config,\n            mainBars,\n            mainBarEnter,\n            classChartBar = $$.classChartBar.bind($$),\n            classBars = $$.classBars.bind($$),\n            classFocus = $$.classFocus.bind($$);\n        mainBars = $$.main.select('.' + CLASS.chartBars).selectAll('.' + CLASS.chartBar).data(targets).attr('class', function (d) {\n            return classChartBar(d) + classFocus(d);\n        });\n        mainBarEnter = mainBars.enter().append('g').attr('class', classChartBar).style(\"pointer-events\", \"none\");\n        // Bars for each data\n        mainBarEnter.append('g').attr(\"class\", classBars).style(\"cursor\", function (d) {\n            return config.data_selection_isselectable(d) ? \"pointer\" : null;\n        });\n    };\n    c3_chart_internal_fn.updateBar = function (durationForExit) {\n        var $$ = this,\n            barData = $$.barData.bind($$),\n            classBar = $$.classBar.bind($$),\n            initialOpacity = $$.initialOpacity.bind($$),\n            color = function color(d) {\n            return $$.color(d.id);\n        };\n        var mainBar = $$.main.selectAll('.' + CLASS.bars).selectAll('.' + CLASS.bar).data(barData);\n        var mainBarEnter = mainBar.enter().append('path').attr(\"class\", classBar).style(\"stroke\", color).style(\"fill\", color);\n        $$.mainBar = mainBarEnter.merge(mainBar).style(\"opacity\", initialOpacity);\n        mainBar.exit().transition().duration(durationForExit).style(\"opacity\", 0);\n    };\n    c3_chart_internal_fn.redrawBar = function (drawBar, withTransition, transition) {\n        return [(withTransition ? this.mainBar.transition(transition) : this.mainBar).attr('d', drawBar).style(\"stroke\", this.color).style(\"fill\", this.color).style(\"opacity\", 1)];\n    };\n    c3_chart_internal_fn.getBarW = function (axis, barTargetsNum) {\n        var $$ = this,\n            config = $$.config,\n            w = typeof config.bar_width === 'number' ? config.bar_width : barTargetsNum ? axis.tickInterval() * config.bar_width_ratio / barTargetsNum : 0;\n        return config.bar_width_max && w > config.bar_width_max ? config.bar_width_max : w;\n    };\n    c3_chart_internal_fn.getBars = function (i, id) {\n        var $$ = this;\n        return (id ? $$.main.selectAll('.' + CLASS.bars + $$.getTargetSelectorSuffix(id)) : $$.main).selectAll('.' + CLASS.bar + (isValue(i) ? '-' + i : ''));\n    };\n    c3_chart_internal_fn.expandBars = function (i, id, reset) {\n        var $$ = this;\n        if (reset) {\n            $$.unexpandBars();\n        }\n        $$.getBars(i, id).classed(CLASS.EXPANDED, true);\n    };\n    c3_chart_internal_fn.unexpandBars = function (i) {\n        var $$ = this;\n        $$.getBars(i).classed(CLASS.EXPANDED, false);\n    };\n    c3_chart_internal_fn.generateDrawBar = function (barIndices, isSub) {\n        var $$ = this,\n            config = $$.config,\n            getPoints = $$.generateGetBarPoints(barIndices, isSub);\n        return function (d, i) {\n            // 4 points that make a bar\n            var points = getPoints(d, i);\n\n            // switch points if axis is rotated, not applicable for sub chart\n            var indexX = config.axis_rotated ? 1 : 0;\n            var indexY = config.axis_rotated ? 0 : 1;\n\n            var path = 'M ' + points[0][indexX] + ',' + points[0][indexY] + ' ' + 'L' + points[1][indexX] + ',' + points[1][indexY] + ' ' + 'L' + points[2][indexX] + ',' + points[2][indexY] + ' ' + 'L' + points[3][indexX] + ',' + points[3][indexY] + ' ' + 'z';\n\n            return path;\n        };\n    };\n    c3_chart_internal_fn.generateGetBarPoints = function (barIndices, isSub) {\n        var $$ = this,\n            axis = isSub ? $$.subXAxis : $$.xAxis,\n            barTargetsNum = barIndices.__max__ + 1,\n            barW = $$.getBarW(axis, barTargetsNum),\n            barX = $$.getShapeX(barW, barTargetsNum, barIndices, !!isSub),\n            barY = $$.getShapeY(!!isSub),\n            barOffset = $$.getShapeOffset($$.isBarType, barIndices, !!isSub),\n            barSpaceOffset = barW * ($$.config.bar_space / 2),\n            yScale = isSub ? $$.getSubYScale : $$.getYScale;\n        return function (d, i) {\n            var y0 = yScale.call($$, d.id)(0),\n                offset = barOffset(d, i) || y0,\n                // offset is for stacked bar chart\n            posX = barX(d),\n                posY = barY(d);\n            // fix posY not to overflow opposite quadrant\n            if ($$.config.axis_rotated) {\n                if (0 < d.value && posY < y0 || d.value < 0 && y0 < posY) {\n                    posY = y0;\n                }\n            }\n            // 4 points that make a bar\n            return [[posX + barSpaceOffset, offset], [posX + barSpaceOffset, posY - (y0 - offset)], [posX + barW - barSpaceOffset, posY - (y0 - offset)], [posX + barW - barSpaceOffset, offset]];\n        };\n    };\n    c3_chart_internal_fn.isWithinBar = function (mouse, that) {\n        var box = that.getBoundingClientRect(),\n            seg0 = that.pathSegList.getItem(0),\n            seg1 = that.pathSegList.getItem(1),\n            x = Math.min(seg0.x, seg1.x),\n            y = Math.min(seg0.y, seg1.y),\n            w = box.width,\n            h = box.height,\n            offset = 2,\n            sx = x - offset,\n            ex = x + w + offset,\n            sy = y + h + offset,\n            ey = y - offset;\n        return sx < mouse[0] && mouse[0] < ex && ey < mouse[1] && mouse[1] < sy;\n    };\n\n    c3_chart_internal_fn.getShapeIndices = function (typeFilter) {\n        var $$ = this,\n            config = $$.config,\n            indices = {},\n            i = 0,\n            j,\n            k;\n        $$.filterTargetsToShow($$.data.targets.filter(typeFilter, $$)).forEach(function (d) {\n            for (j = 0; j < config.data_groups.length; j++) {\n                if (config.data_groups[j].indexOf(d.id) < 0) {\n                    continue;\n                }\n                for (k = 0; k < config.data_groups[j].length; k++) {\n                    if (config.data_groups[j][k] in indices) {\n                        indices[d.id] = indices[config.data_groups[j][k]];\n                        break;\n                    }\n                }\n            }\n            if (isUndefined(indices[d.id])) {\n                indices[d.id] = i++;\n            }\n        });\n        indices.__max__ = i - 1;\n        return indices;\n    };\n    c3_chart_internal_fn.getShapeX = function (offset, targetsNum, indices, isSub) {\n        var $$ = this,\n            scale = isSub ? $$.subX : $$.x;\n        return function (d) {\n            var index = d.id in indices ? indices[d.id] : 0;\n            return d.x || d.x === 0 ? scale(d.x) - offset * (targetsNum / 2 - index) : 0;\n        };\n    };\n    c3_chart_internal_fn.getShapeY = function (isSub) {\n        var $$ = this;\n        return function (d) {\n            var scale = isSub ? $$.getSubYScale(d.id) : $$.getYScale(d.id);\n            return scale(d.value);\n        };\n    };\n    c3_chart_internal_fn.getShapeOffset = function (typeFilter, indices, isSub) {\n        var $$ = this,\n            targets = $$.orderTargets($$.filterTargetsToShow($$.data.targets.filter(typeFilter, $$))),\n            targetIds = targets.map(function (t) {\n            return t.id;\n        });\n        return function (d, i) {\n            var scale = isSub ? $$.getSubYScale(d.id) : $$.getYScale(d.id),\n                y0 = scale(0),\n                offset = y0;\n            targets.forEach(function (t) {\n                var values = $$.isStepType(d) ? $$.convertValuesToStep(t.values) : t.values;\n                if (t.id === d.id || indices[t.id] !== indices[d.id]) {\n                    return;\n                }\n                if (targetIds.indexOf(t.id) < targetIds.indexOf(d.id)) {\n                    // check if the x values line up\n                    if (typeof values[i] === 'undefined' || +values[i].x !== +d.x) {\n                        // \"+\" for timeseries\n                        // if not, try to find the value that does line up\n                        i = -1;\n                        values.forEach(function (v, j) {\n                            if (v.x === d.x) {\n                                i = j;\n                            }\n                        });\n                    }\n                    if (i in values && values[i].value * d.value >= 0) {\n                        offset += scale(values[i].value) - y0;\n                    }\n                }\n            });\n            return offset;\n        };\n    };\n    c3_chart_internal_fn.isWithinShape = function (that, d) {\n        var $$ = this,\n            shape = $$.d3.select(that),\n            isWithin;\n        if (!$$.isTargetToShow(d.id)) {\n            isWithin = false;\n        } else if (that.nodeName === 'circle') {\n            isWithin = $$.isStepType(d) ? $$.isWithinStep(that, $$.getYScale(d.id)(d.value)) : $$.isWithinCircle(that, $$.pointSelectR(d) * 1.5);\n        } else if (that.nodeName === 'path') {\n            isWithin = shape.classed(CLASS.bar) ? $$.isWithinBar($$.d3.mouse(that), that) : true;\n        }\n        return isWithin;\n    };\n\n    c3_chart_internal_fn.getInterpolate = function (d) {\n        var $$ = this,\n            d3 = $$.d3,\n            types = {\n            'linear': d3.curveLinear,\n            'linear-closed': d3.curveLinearClosed,\n            'basis': d3.curveBasis,\n            'basis-open': d3.curveBasisOpen,\n            'basis-closed': d3.curveBasisClosed,\n            'bundle': d3.curveBundle,\n            'cardinal': d3.curveCardinal,\n            'cardinal-open': d3.curveCardinalOpen,\n            'cardinal-closed': d3.curveCardinalClosed,\n            'monotone': d3.curveMonotoneX,\n            'step': d3.curveStep\n        },\n            type;\n\n        if ($$.isSplineType(d)) {\n            type = types[$$.config.spline_interpolation_type] || types.cardinal;\n        } else if ($$.isStepType(d)) {\n            type = types[$$.config.line_step_type];\n        } else {\n            type = types.linear;\n        }\n        return type;\n    };\n\n    c3_chart_internal_fn.initLine = function () {\n        var $$ = this;\n        $$.main.select('.' + CLASS.chart).append(\"g\").attr(\"class\", CLASS.chartLines);\n    };\n    c3_chart_internal_fn.updateTargetsForLine = function (targets) {\n        var $$ = this,\n            config = $$.config,\n            mainLines,\n            mainLineEnter,\n            classChartLine = $$.classChartLine.bind($$),\n            classLines = $$.classLines.bind($$),\n            classAreas = $$.classAreas.bind($$),\n            classCircles = $$.classCircles.bind($$),\n            classFocus = $$.classFocus.bind($$);\n        mainLines = $$.main.select('.' + CLASS.chartLines).selectAll('.' + CLASS.chartLine).data(targets).attr('class', function (d) {\n            return classChartLine(d) + classFocus(d);\n        });\n        mainLineEnter = mainLines.enter().append('g').attr('class', classChartLine).style('opacity', 0).style(\"pointer-events\", \"none\");\n        // Lines for each data\n        mainLineEnter.append('g').attr(\"class\", classLines);\n        // Areas\n        mainLineEnter.append('g').attr('class', classAreas);\n        // Circles for each data point on lines\n        mainLineEnter.append('g').attr(\"class\", function (d) {\n            return $$.generateClass(CLASS.selectedCircles, d.id);\n        });\n        mainLineEnter.append('g').attr(\"class\", classCircles).style(\"cursor\", function (d) {\n            return config.data_selection_isselectable(d) ? \"pointer\" : null;\n        });\n        // Update date for selected circles\n        targets.forEach(function (t) {\n            $$.main.selectAll('.' + CLASS.selectedCircles + $$.getTargetSelectorSuffix(t.id)).selectAll('.' + CLASS.selectedCircle).each(function (d) {\n                d.value = t.values[d.index].value;\n            });\n        });\n        // MEMO: can not keep same color...\n        //mainLineUpdate.exit().remove();\n    };\n    c3_chart_internal_fn.updateLine = function (durationForExit) {\n        var $$ = this;\n        var mainLine = $$.main.selectAll('.' + CLASS.lines).selectAll('.' + CLASS.line).data($$.lineData.bind($$));\n        var mainLineEnter = mainLine.enter().append('path').attr('class', $$.classLine.bind($$)).style(\"stroke\", $$.color);\n        $$.mainLine = mainLineEnter.merge(mainLine).style(\"opacity\", $$.initialOpacity.bind($$)).style('shape-rendering', function (d) {\n            return $$.isStepType(d) ? 'crispEdges' : '';\n        }).attr('transform', null);\n        mainLine.exit().transition().duration(durationForExit).style('opacity', 0);\n    };\n    c3_chart_internal_fn.redrawLine = function (drawLine, withTransition, transition) {\n        return [(withTransition ? this.mainLine.transition(transition) : this.mainLine).attr(\"d\", drawLine).style(\"stroke\", this.color).style(\"opacity\", 1)];\n    };\n    c3_chart_internal_fn.generateDrawLine = function (lineIndices, isSub) {\n        var $$ = this,\n            config = $$.config,\n            line = $$.d3.line(),\n            getPoints = $$.generateGetLinePoints(lineIndices, isSub),\n            yScaleGetter = isSub ? $$.getSubYScale : $$.getYScale,\n            xValue = function xValue(d) {\n            return (isSub ? $$.subxx : $$.xx).call($$, d);\n        },\n            yValue = function yValue(d, i) {\n            return config.data_groups.length > 0 ? getPoints(d, i)[0][1] : yScaleGetter.call($$, d.id)(d.value);\n        };\n\n        line = config.axis_rotated ? line.x(yValue).y(xValue) : line.x(xValue).y(yValue);\n        if (!config.line_connectNull) {\n            line = line.defined(function (d) {\n                return d.value != null;\n            });\n        }\n        return function (d) {\n            var values = config.line_connectNull ? $$.filterRemoveNull(d.values) : d.values,\n                x = isSub ? $$.subX : $$.x,\n                y = yScaleGetter.call($$, d.id),\n                x0 = 0,\n                y0 = 0,\n                path;\n            if ($$.isLineType(d)) {\n                if (config.data_regions[d.id]) {\n                    path = $$.lineWithRegions(values, x, y, config.data_regions[d.id]);\n                } else {\n                    if ($$.isStepType(d)) {\n                        values = $$.convertValuesToStep(values);\n                    }\n                    path = line.curve($$.getInterpolate(d))(values);\n                }\n            } else {\n                if (values[0]) {\n                    x0 = x(values[0].x);\n                    y0 = y(values[0].value);\n                }\n                path = config.axis_rotated ? \"M \" + y0 + \" \" + x0 : \"M \" + x0 + \" \" + y0;\n            }\n            return path ? path : \"M 0 0\";\n        };\n    };\n    c3_chart_internal_fn.generateGetLinePoints = function (lineIndices, isSub) {\n        // partial duplication of generateGetBarPoints\n        var $$ = this,\n            config = $$.config,\n            lineTargetsNum = lineIndices.__max__ + 1,\n            x = $$.getShapeX(0, lineTargetsNum, lineIndices, !!isSub),\n            y = $$.getShapeY(!!isSub),\n            lineOffset = $$.getShapeOffset($$.isLineType, lineIndices, !!isSub),\n            yScale = isSub ? $$.getSubYScale : $$.getYScale;\n        return function (d, i) {\n            var y0 = yScale.call($$, d.id)(0),\n                offset = lineOffset(d, i) || y0,\n                // offset is for stacked area chart\n            posX = x(d),\n                posY = y(d);\n            // fix posY not to overflow opposite quadrant\n            if (config.axis_rotated) {\n                if (0 < d.value && posY < y0 || d.value < 0 && y0 < posY) {\n                    posY = y0;\n                }\n            }\n            // 1 point that marks the line position\n            return [[posX, posY - (y0 - offset)], [posX, posY - (y0 - offset)], // needed for compatibility\n            [posX, posY - (y0 - offset)], // needed for compatibility\n            [posX, posY - (y0 - offset)] // needed for compatibility\n            ];\n        };\n    };\n\n    c3_chart_internal_fn.lineWithRegions = function (d, x, y, _regions) {\n        var $$ = this,\n            config = $$.config,\n            prev = -1,\n            i,\n            j,\n            s = \"M\",\n            sWithRegion,\n            xp,\n            yp,\n            dx,\n            dy,\n            dd,\n            diff,\n            diffx2,\n            xOffset = $$.isCategorized() ? 0.5 : 0,\n            xValue,\n            yValue,\n            regions = [];\n\n        function isWithinRegions(x, regions) {\n            var i;\n            for (i = 0; i < regions.length; i++) {\n                if (regions[i].start < x && x <= regions[i].end) {\n                    return true;\n                }\n            }\n            return false;\n        }\n\n        // Check start/end of regions\n        if (isDefined(_regions)) {\n            for (i = 0; i < _regions.length; i++) {\n                regions[i] = {};\n                if (isUndefined(_regions[i].start)) {\n                    regions[i].start = d[0].x;\n                } else {\n                    regions[i].start = $$.isTimeSeries() ? $$.parseDate(_regions[i].start) : _regions[i].start;\n                }\n                if (isUndefined(_regions[i].end)) {\n                    regions[i].end = d[d.length - 1].x;\n                } else {\n                    regions[i].end = $$.isTimeSeries() ? $$.parseDate(_regions[i].end) : _regions[i].end;\n                }\n            }\n        }\n\n        // Set scales\n        xValue = config.axis_rotated ? function (d) {\n            return y(d.value);\n        } : function (d) {\n            return x(d.x);\n        };\n        yValue = config.axis_rotated ? function (d) {\n            return x(d.x);\n        } : function (d) {\n            return y(d.value);\n        };\n\n        // Define svg generator function for region\n        function generateM(points) {\n            return 'M' + points[0][0] + ' ' + points[0][1] + ' ' + points[1][0] + ' ' + points[1][1];\n        }\n        if ($$.isTimeSeries()) {\n            sWithRegion = function sWithRegion(d0, d1, j, diff) {\n                var x0 = d0.x.getTime(),\n                    x_diff = d1.x - d0.x,\n                    xv0 = new Date(x0 + x_diff * j),\n                    xv1 = new Date(x0 + x_diff * (j + diff)),\n                    points;\n                if (config.axis_rotated) {\n                    points = [[y(yp(j)), x(xv0)], [y(yp(j + diff)), x(xv1)]];\n                } else {\n                    points = [[x(xv0), y(yp(j))], [x(xv1), y(yp(j + diff))]];\n                }\n                return generateM(points);\n            };\n        } else {\n            sWithRegion = function sWithRegion(d0, d1, j, diff) {\n                var points;\n                if (config.axis_rotated) {\n                    points = [[y(yp(j), true), x(xp(j))], [y(yp(j + diff), true), x(xp(j + diff))]];\n                } else {\n                    points = [[x(xp(j), true), y(yp(j))], [x(xp(j + diff), true), y(yp(j + diff))]];\n                }\n                return generateM(points);\n            };\n        }\n\n        // Generate\n        for (i = 0; i < d.length; i++) {\n\n            // Draw as normal\n            if (isUndefined(regions) || !isWithinRegions(d[i].x, regions)) {\n                s += \" \" + xValue(d[i]) + \" \" + yValue(d[i]);\n            }\n            // Draw with region // TODO: Fix for horizotal charts\n            else {\n                    xp = $$.getScale(d[i - 1].x + xOffset, d[i].x + xOffset, $$.isTimeSeries());\n                    yp = $$.getScale(d[i - 1].value, d[i].value);\n\n                    dx = x(d[i].x) - x(d[i - 1].x);\n                    dy = y(d[i].value) - y(d[i - 1].value);\n                    dd = Math.sqrt(Math.pow(dx, 2) + Math.pow(dy, 2));\n                    diff = 2 / dd;\n                    diffx2 = diff * 2;\n\n                    for (j = diff; j <= 1; j += diffx2) {\n                        s += sWithRegion(d[i - 1], d[i], j, diff);\n                    }\n                }\n            prev = d[i].x;\n        }\n\n        return s;\n    };\n\n    c3_chart_internal_fn.updateArea = function (durationForExit) {\n        var $$ = this,\n            d3 = $$.d3;\n        var mainArea = $$.main.selectAll('.' + CLASS.areas).selectAll('.' + CLASS.area).data($$.lineData.bind($$));\n        var mainAreaEnter = mainArea.enter().append('path').attr(\"class\", $$.classArea.bind($$)).style(\"fill\", $$.color).style(\"opacity\", function () {\n            $$.orgAreaOpacity = +d3.select(this).style('opacity');return 0;\n        });\n        $$.mainArea = mainAreaEnter.merge(mainArea).style(\"opacity\", $$.orgAreaOpacity);\n        mainArea.exit().transition().duration(durationForExit).style('opacity', 0);\n    };\n    c3_chart_internal_fn.redrawArea = function (drawArea, withTransition, transition) {\n        return [(withTransition ? this.mainArea.transition(transition) : this.mainArea).attr(\"d\", drawArea).style(\"fill\", this.color).style(\"opacity\", this.orgAreaOpacity)];\n    };\n    c3_chart_internal_fn.generateDrawArea = function (areaIndices, isSub) {\n        var $$ = this,\n            config = $$.config,\n            area = $$.d3.area(),\n            getPoints = $$.generateGetAreaPoints(areaIndices, isSub),\n            yScaleGetter = isSub ? $$.getSubYScale : $$.getYScale,\n            xValue = function xValue(d) {\n            return (isSub ? $$.subxx : $$.xx).call($$, d);\n        },\n            value0 = function value0(d, i) {\n            return config.data_groups.length > 0 ? getPoints(d, i)[0][1] : yScaleGetter.call($$, d.id)($$.getAreaBaseValue(d.id));\n        },\n            value1 = function value1(d, i) {\n            return config.data_groups.length > 0 ? getPoints(d, i)[1][1] : yScaleGetter.call($$, d.id)(d.value);\n        };\n\n        area = config.axis_rotated ? area.x0(value0).x1(value1).y(xValue) : area.x(xValue).y0(config.area_above ? 0 : value0).y1(value1);\n        if (!config.line_connectNull) {\n            area = area.defined(function (d) {\n                return d.value !== null;\n            });\n        }\n\n        return function (d) {\n            var values = config.line_connectNull ? $$.filterRemoveNull(d.values) : d.values,\n                x0 = 0,\n                y0 = 0,\n                path;\n            if ($$.isAreaType(d)) {\n                if ($$.isStepType(d)) {\n                    values = $$.convertValuesToStep(values);\n                }\n                path = area.curve($$.getInterpolate(d))(values);\n            } else {\n                if (values[0]) {\n                    x0 = $$.x(values[0].x);\n                    y0 = $$.getYScale(d.id)(values[0].value);\n                }\n                path = config.axis_rotated ? \"M \" + y0 + \" \" + x0 : \"M \" + x0 + \" \" + y0;\n            }\n            return path ? path : \"M 0 0\";\n        };\n    };\n    c3_chart_internal_fn.getAreaBaseValue = function () {\n        return 0;\n    };\n    c3_chart_internal_fn.generateGetAreaPoints = function (areaIndices, isSub) {\n        // partial duplication of generateGetBarPoints\n        var $$ = this,\n            config = $$.config,\n            areaTargetsNum = areaIndices.__max__ + 1,\n            x = $$.getShapeX(0, areaTargetsNum, areaIndices, !!isSub),\n            y = $$.getShapeY(!!isSub),\n            areaOffset = $$.getShapeOffset($$.isAreaType, areaIndices, !!isSub),\n            yScale = isSub ? $$.getSubYScale : $$.getYScale;\n        return function (d, i) {\n            var y0 = yScale.call($$, d.id)(0),\n                offset = areaOffset(d, i) || y0,\n                // offset is for stacked area chart\n            posX = x(d),\n                posY = y(d);\n            // fix posY not to overflow opposite quadrant\n            if (config.axis_rotated) {\n                if (0 < d.value && posY < y0 || d.value < 0 && y0 < posY) {\n                    posY = y0;\n                }\n            }\n            // 1 point that marks the area position\n            return [[posX, offset], [posX, posY - (y0 - offset)], [posX, posY - (y0 - offset)], // needed for compatibility\n            [posX, offset] // needed for compatibility\n            ];\n        };\n    };\n\n    c3_chart_internal_fn.updateCircle = function (cx, cy) {\n        var $$ = this;\n        var mainCircle = $$.main.selectAll('.' + CLASS.circles).selectAll('.' + CLASS.circle).data($$.lineOrScatterData.bind($$));\n        var mainCircleEnter = mainCircle.enter().append(\"circle\").attr(\"class\", $$.classCircle.bind($$)).attr(\"cx\", cx).attr(\"cy\", cy).attr(\"r\", $$.pointR.bind($$)).style(\"fill\", $$.color);\n        $$.mainCircle = mainCircleEnter.merge(mainCircle).style(\"opacity\", $$.initialOpacityForCircle.bind($$));\n        mainCircle.exit().style(\"opacity\", 0);\n    };\n    c3_chart_internal_fn.redrawCircle = function (cx, cy, withTransition, transition) {\n        var $$ = this,\n            selectedCircles = $$.main.selectAll('.' + CLASS.selectedCircle);\n        return [(withTransition ? $$.mainCircle.transition(transition) : $$.mainCircle).style('opacity', this.opacityForCircle.bind($$)).style(\"fill\", $$.color).attr(\"cx\", cx).attr(\"cy\", cy), (withTransition ? selectedCircles.transition(transition) : selectedCircles).attr(\"cx\", cx).attr(\"cy\", cy)];\n    };\n    c3_chart_internal_fn.circleX = function (d) {\n        return d.x || d.x === 0 ? this.x(d.x) : null;\n    };\n    c3_chart_internal_fn.updateCircleY = function () {\n        var $$ = this,\n            lineIndices,\n            getPoints;\n        if ($$.config.data_groups.length > 0) {\n            lineIndices = $$.getShapeIndices($$.isLineType), getPoints = $$.generateGetLinePoints(lineIndices);\n            $$.circleY = function (d, i) {\n                return getPoints(d, i)[0][1];\n            };\n        } else {\n            $$.circleY = function (d) {\n                return $$.getYScale(d.id)(d.value);\n            };\n        }\n    };\n    c3_chart_internal_fn.getCircles = function (i, id) {\n        var $$ = this;\n        return (id ? $$.main.selectAll('.' + CLASS.circles + $$.getTargetSelectorSuffix(id)) : $$.main).selectAll('.' + CLASS.circle + (isValue(i) ? '-' + i : ''));\n    };\n    c3_chart_internal_fn.expandCircles = function (i, id, reset) {\n        var $$ = this,\n            r = $$.pointExpandedR.bind($$);\n        if (reset) {\n            $$.unexpandCircles();\n        }\n        $$.getCircles(i, id).classed(CLASS.EXPANDED, true).attr('r', r);\n    };\n    c3_chart_internal_fn.unexpandCircles = function (i) {\n        var $$ = this,\n            r = $$.pointR.bind($$);\n        $$.getCircles(i).filter(function () {\n            return $$.d3.select(this).classed(CLASS.EXPANDED);\n        }).classed(CLASS.EXPANDED, false).attr('r', r);\n    };\n    c3_chart_internal_fn.pointR = function (d) {\n        var $$ = this,\n            config = $$.config;\n        return $$.isStepType(d) ? 0 : isFunction(config.point_r) ? config.point_r(d) : config.point_r;\n    };\n    c3_chart_internal_fn.pointExpandedR = function (d) {\n        var $$ = this,\n            config = $$.config;\n        if (config.point_focus_expand_enabled) {\n            return isFunction(config.point_focus_expand_r) ? config.point_focus_expand_r(d) : config.point_focus_expand_r ? config.point_focus_expand_r : $$.pointR(d) * 1.75;\n        } else {\n            return $$.pointR(d);\n        }\n    };\n    c3_chart_internal_fn.pointSelectR = function (d) {\n        var $$ = this,\n            config = $$.config;\n        return isFunction(config.point_select_r) ? config.point_select_r(d) : config.point_select_r ? config.point_select_r : $$.pointR(d) * 4;\n    };\n    c3_chart_internal_fn.isWithinCircle = function (that, r) {\n        var d3 = this.d3,\n            mouse = d3.mouse(that),\n            d3_this = d3.select(that),\n            cx = +d3_this.attr(\"cx\"),\n            cy = +d3_this.attr(\"cy\");\n        return Math.sqrt(Math.pow(cx - mouse[0], 2) + Math.pow(cy - mouse[1], 2)) < r;\n    };\n    c3_chart_internal_fn.isWithinStep = function (that, y) {\n        return Math.abs(y - this.d3.mouse(that)[1]) < 30;\n    };\n\n    c3_chart_internal_fn.getCurrentWidth = function () {\n        var $$ = this,\n            config = $$.config;\n        return config.size_width ? config.size_width : $$.getParentWidth();\n    };\n    c3_chart_internal_fn.getCurrentHeight = function () {\n        var $$ = this,\n            config = $$.config,\n            h = config.size_height ? config.size_height : $$.getParentHeight();\n        return h > 0 ? h : 320 / ($$.hasType('gauge') && !config.gauge_fullCircle ? 2 : 1);\n    };\n    c3_chart_internal_fn.getCurrentPaddingTop = function () {\n        var $$ = this,\n            config = $$.config,\n            padding = isValue(config.padding_top) ? config.padding_top : 0;\n        if ($$.title && $$.title.node()) {\n            padding += $$.getTitlePadding();\n        }\n        return padding;\n    };\n    c3_chart_internal_fn.getCurrentPaddingBottom = function () {\n        var config = this.config;\n        return isValue(config.padding_bottom) ? config.padding_bottom : 0;\n    };\n    c3_chart_internal_fn.getCurrentPaddingLeft = function (withoutRecompute) {\n        var $$ = this,\n            config = $$.config;\n        if (isValue(config.padding_left)) {\n            return config.padding_left;\n        } else if (config.axis_rotated) {\n            return !config.axis_x_show || config.axis_x_inner ? 1 : Math.max(ceil10($$.getAxisWidthByAxisId('x', withoutRecompute)), 40);\n        } else if (!config.axis_y_show || config.axis_y_inner) {\n            // && !config.axis_rotated\n            return $$.axis.getYAxisLabelPosition().isOuter ? 30 : 1;\n        } else {\n            return ceil10($$.getAxisWidthByAxisId('y', withoutRecompute));\n        }\n    };\n    c3_chart_internal_fn.getCurrentPaddingRight = function () {\n        var $$ = this,\n            config = $$.config,\n            defaultPadding = 10,\n            legendWidthOnRight = $$.isLegendRight ? $$.getLegendWidth() + 20 : 0;\n        if (isValue(config.padding_right)) {\n            return config.padding_right + 1; // 1 is needed not to hide tick line\n        } else if (config.axis_rotated) {\n            return defaultPadding + legendWidthOnRight;\n        } else if (!config.axis_y2_show || config.axis_y2_inner) {\n            // && !config.axis_rotated\n            return 2 + legendWidthOnRight + ($$.axis.getY2AxisLabelPosition().isOuter ? 20 : 0);\n        } else {\n            return ceil10($$.getAxisWidthByAxisId('y2')) + legendWidthOnRight;\n        }\n    };\n\n    c3_chart_internal_fn.getParentRectValue = function (key) {\n        var parent = this.selectChart.node(),\n            v;\n        while (parent && parent.tagName !== 'BODY') {\n            try {\n                v = parent.getBoundingClientRect()[key];\n            } catch (e) {\n                if (key === 'width') {\n                    // In IE in certain cases getBoundingClientRect\n                    // will cause an \"unspecified error\"\n                    v = parent.offsetWidth;\n                }\n            }\n            if (v) {\n                break;\n            }\n            parent = parent.parentNode;\n        }\n        return v;\n    };\n    c3_chart_internal_fn.getParentWidth = function () {\n        return this.getParentRectValue('width');\n    };\n    c3_chart_internal_fn.getParentHeight = function () {\n        var h = this.selectChart.style('height');\n        return h.indexOf('px') > 0 ? +h.replace('px', '') : 0;\n    };\n\n    c3_chart_internal_fn.getSvgLeft = function (withoutRecompute) {\n        var $$ = this,\n            config = $$.config,\n            hasLeftAxisRect = config.axis_rotated || !config.axis_rotated && !config.axis_y_inner,\n            leftAxisClass = config.axis_rotated ? CLASS.axisX : CLASS.axisY,\n            leftAxis = $$.main.select('.' + leftAxisClass).node(),\n            svgRect = leftAxis && hasLeftAxisRect ? leftAxis.getBoundingClientRect() : { right: 0 },\n            chartRect = $$.selectChart.node().getBoundingClientRect(),\n            hasArc = $$.hasArcType(),\n            svgLeft = svgRect.right - chartRect.left - (hasArc ? 0 : $$.getCurrentPaddingLeft(withoutRecompute));\n        return svgLeft > 0 ? svgLeft : 0;\n    };\n\n    c3_chart_internal_fn.getAxisWidthByAxisId = function (id, withoutRecompute) {\n        var $$ = this,\n            position = $$.axis.getLabelPositionById(id);\n        return $$.axis.getMaxTickWidth(id, withoutRecompute) + (position.isInner ? 20 : 40);\n    };\n    c3_chart_internal_fn.getHorizontalAxisHeight = function (axisId) {\n        var $$ = this,\n            config = $$.config,\n            h = 30;\n        if (axisId === 'x' && !config.axis_x_show) {\n            return 8;\n        }\n        if (axisId === 'x' && config.axis_x_height) {\n            return config.axis_x_height;\n        }\n        if (axisId === 'y' && !config.axis_y_show) {\n            return config.legend_show && !$$.isLegendRight && !$$.isLegendInset ? 10 : 1;\n        }\n        if (axisId === 'y2' && !config.axis_y2_show) {\n            return $$.rotated_padding_top;\n        }\n        // Calculate x axis height when tick rotated\n        if (axisId === 'x' && !config.axis_rotated && config.axis_x_tick_rotate) {\n            h = 30 + $$.axis.getMaxTickWidth(axisId) * Math.cos(Math.PI * (90 - Math.abs(config.axis_x_tick_rotate)) / 180);\n        }\n        // Calculate y axis height when tick rotated\n        if (axisId === 'y' && config.axis_rotated && config.axis_y_tick_rotate) {\n            h = 30 + $$.axis.getMaxTickWidth(axisId) * Math.cos(Math.PI * (90 - Math.abs(config.axis_y_tick_rotate)) / 180);\n        }\n        return h + ($$.axis.getLabelPositionById(axisId).isInner ? 0 : 10) + (axisId === 'y2' ? -10 : 0);\n    };\n\n    c3_chart_internal_fn.initBrush = function (scale) {\n        var $$ = this,\n            d3 = $$.d3;\n        // TODO: dynamically change brushY/brushX according to axis_rotated.\n        $$.brush = ($$.config.axis_rotated ? d3.brushY() : d3.brushX()).on(\"brush\", function () {\n            var event = d3.event.sourceEvent;\n            if (event && event.type === \"zoom\") {\n                return;\n            }\n            $$.redrawForBrush();\n        }).on(\"end\", function () {\n            var event = d3.event.sourceEvent;\n            if (event && event.type === \"zoom\") {\n                return;\n            }\n            if ($$.brush.empty() && event && event.type !== 'end') {\n                $$.brush.clear();\n            }\n        });\n        $$.brush.updateExtent = function () {\n            var range = this.scale.range(),\n                extent;\n            if ($$.config.axis_rotated) {\n                extent = [[0, range[0]], [$$.width2, range[1]]];\n            } else {\n                extent = [[range[0], 0], [range[1], $$.height2]];\n            }\n            this.extent(extent);\n            return this;\n        };\n        $$.brush.updateScale = function (scale) {\n            this.scale = scale;\n            return this;\n        };\n        $$.brush.update = function (scale) {\n            this.updateScale(scale || $$.subX).updateExtent();\n            $$.context.select('.' + CLASS.brush).call(this);\n        };\n        $$.brush.clear = function () {\n            $$.context.select('.' + CLASS.brush).call($$.brush.move, null);\n        };\n        $$.brush.selection = function () {\n            return d3.brushSelection($$.context.select('.' + CLASS.brush).node());\n        };\n        $$.brush.selectionAsValue = function (selectionAsValue, withTransition) {\n            var selection, brush;\n            if (selectionAsValue) {\n                if ($$.context) {\n                    selection = [this.scale(selectionAsValue[0]), this.scale(selectionAsValue[1])];\n                    brush = $$.context.select('.' + CLASS.brush);\n                    if (withTransition) {\n                        brush = brush.transition();\n                    }\n                    $$.brush.move(brush, selection);\n                }\n                return [];\n            }\n            selection = $$.brush.selection() || [0, 0];\n            return [this.scale.invert(selection[0]), this.scale.invert(selection[1])];\n        };\n        $$.brush.empty = function () {\n            var selection = $$.brush.selection();\n            return !selection || selection[0] === selection[1];\n        };\n        return $$.brush.updateScale(scale);\n    };\n    c3_chart_internal_fn.initSubchart = function () {\n        var $$ = this,\n            config = $$.config,\n            context = $$.context = $$.svg.append(\"g\").attr(\"transform\", $$.getTranslate('context')),\n            visibility = config.subchart_show ? 'visible' : 'hidden';\n\n        // set style\n        context.style('visibility', visibility);\n\n        // Define g for chart area\n        context.append('g').attr(\"clip-path\", $$.clipPathForSubchart).attr('class', CLASS.chart);\n\n        // Define g for bar chart area\n        context.select('.' + CLASS.chart).append(\"g\").attr(\"class\", CLASS.chartBars);\n\n        // Define g for line chart area\n        context.select('.' + CLASS.chart).append(\"g\").attr(\"class\", CLASS.chartLines);\n\n        // Add extent rect for Brush\n        context.append(\"g\").attr(\"clip-path\", $$.clipPath).attr(\"class\", CLASS.brush);\n\n        // ATTENTION: This must be called AFTER chart added\n        // Add Axis\n        $$.axes.subx = context.append(\"g\").attr(\"class\", CLASS.axisX).attr(\"transform\", $$.getTranslate('subx')).attr(\"clip-path\", config.axis_rotated ? \"\" : $$.clipPathForXAxis);\n    };\n    c3_chart_internal_fn.initSubchartBrush = function () {\n        var $$ = this;\n        // Add extent rect for Brush\n        $$.initBrush($$.subX).updateExtent();\n        $$.context.select('.' + CLASS.brush).call($$.brush);\n    };\n    c3_chart_internal_fn.updateTargetsForSubchart = function (targets) {\n        var $$ = this,\n            context = $$.context,\n            config = $$.config,\n            contextLineEnter,\n            contextLine,\n            contextBarEnter,\n            contextBar,\n            classChartBar = $$.classChartBar.bind($$),\n            classBars = $$.classBars.bind($$),\n            classChartLine = $$.classChartLine.bind($$),\n            classLines = $$.classLines.bind($$),\n            classAreas = $$.classAreas.bind($$);\n\n        if (config.subchart_show) {\n            //-- Bar --//\n            contextBar = context.select('.' + CLASS.chartBars).selectAll('.' + CLASS.chartBar).data(targets);\n            contextBarEnter = contextBar.enter().append('g').style('opacity', 0);\n            contextBarEnter.merge(contextBar).attr('class', classChartBar);\n            // Bars for each data\n            contextBarEnter.append('g').attr(\"class\", classBars);\n\n            //-- Line --//\n            contextLine = context.select('.' + CLASS.chartLines).selectAll('.' + CLASS.chartLine).data(targets);\n            contextLineEnter = contextLine.enter().append('g').style('opacity', 0);\n            contextLineEnter.merge(contextLine).attr('class', classChartLine);\n            // Lines for each data\n            contextLineEnter.append(\"g\").attr(\"class\", classLines);\n            // Area\n            contextLineEnter.append(\"g\").attr(\"class\", classAreas);\n\n            //-- Brush --//\n            context.selectAll('.' + CLASS.brush + ' rect').attr(config.axis_rotated ? \"width\" : \"height\", config.axis_rotated ? $$.width2 : $$.height2);\n        }\n    };\n    c3_chart_internal_fn.updateBarForSubchart = function (durationForExit) {\n        var $$ = this;\n        var contextBar = $$.context.selectAll('.' + CLASS.bars).selectAll('.' + CLASS.bar).data($$.barData.bind($$));\n        var contextBarEnter = contextBar.enter().append('path').attr(\"class\", $$.classBar.bind($$)).style(\"stroke\", 'none').style(\"fill\", $$.color);\n        contextBar.exit().transition().duration(durationForExit).style('opacity', 0).remove();\n        $$.contextBar = contextBarEnter.merge(contextBar).style(\"opacity\", $$.initialOpacity.bind($$));\n    };\n    c3_chart_internal_fn.redrawBarForSubchart = function (drawBarOnSub, withTransition, duration) {\n        (withTransition ? this.contextBar.transition(Math.random().toString()).duration(duration) : this.contextBar).attr('d', drawBarOnSub).style('opacity', 1);\n    };\n    c3_chart_internal_fn.updateLineForSubchart = function (durationForExit) {\n        var $$ = this;\n        var contextLine = $$.context.selectAll('.' + CLASS.lines).selectAll('.' + CLASS.line).data($$.lineData.bind($$));\n        var contextLineEnter = contextLine.enter().append('path').attr('class', $$.classLine.bind($$)).style('stroke', $$.color);\n        contextLine.exit().transition().duration(durationForExit).style('opacity', 0).remove();\n        $$.contextLine = contextLineEnter.merge(contextLine).style(\"opacity\", $$.initialOpacity.bind($$));\n    };\n    c3_chart_internal_fn.redrawLineForSubchart = function (drawLineOnSub, withTransition, duration) {\n        (withTransition ? this.contextLine.transition(Math.random().toString()).duration(duration) : this.contextLine).attr(\"d\", drawLineOnSub).style('opacity', 1);\n    };\n    c3_chart_internal_fn.updateAreaForSubchart = function (durationForExit) {\n        var $$ = this,\n            d3 = $$.d3;\n        var contextArea = $$.context.selectAll('.' + CLASS.areas).selectAll('.' + CLASS.area).data($$.lineData.bind($$));\n        var contextAreaEnter = contextArea.enter().append('path').attr(\"class\", $$.classArea.bind($$)).style(\"fill\", $$.color).style(\"opacity\", function () {\n            $$.orgAreaOpacity = +d3.select(this).style('opacity');return 0;\n        });\n        contextArea.exit().transition().duration(durationForExit).style('opacity', 0).remove();\n        $$.contextArea = contextAreaEnter.merge(contextArea).style(\"opacity\", 0);\n    };\n    c3_chart_internal_fn.redrawAreaForSubchart = function (drawAreaOnSub, withTransition, duration) {\n        (withTransition ? this.contextArea.transition(Math.random().toString()).duration(duration) : this.contextArea).attr(\"d\", drawAreaOnSub).style(\"fill\", this.color).style(\"opacity\", this.orgAreaOpacity);\n    };\n    c3_chart_internal_fn.redrawSubchart = function (withSubchart, transitions, duration, durationForExit, areaIndices, barIndices, lineIndices) {\n        var $$ = this,\n            d3 = $$.d3,\n            config = $$.config,\n            drawAreaOnSub,\n            drawBarOnSub,\n            drawLineOnSub;\n\n        $$.context.style('visibility', config.subchart_show ? 'visible' : 'hidden');\n\n        // subchart\n        if (config.subchart_show) {\n            // reflect main chart to extent on subchart if zoomed\n            if (d3.event && d3.event.type === 'zoom') {\n                $$.brush.selectionAsValue($$.x.orgDomain());\n            }\n            // update subchart elements if needed\n            if (withSubchart) {\n                // extent rect\n                if (!$$.brush.empty()) {\n                    $$.brush.selectionAsValue($$.x.orgDomain());\n                }\n                // setup drawer - MEMO: this must be called after axis updated\n                drawAreaOnSub = $$.generateDrawArea(areaIndices, true);\n                drawBarOnSub = $$.generateDrawBar(barIndices, true);\n                drawLineOnSub = $$.generateDrawLine(lineIndices, true);\n\n                $$.updateBarForSubchart(duration);\n                $$.updateLineForSubchart(duration);\n                $$.updateAreaForSubchart(duration);\n\n                $$.redrawBarForSubchart(drawBarOnSub, duration, duration);\n                $$.redrawLineForSubchart(drawLineOnSub, duration, duration);\n                $$.redrawAreaForSubchart(drawAreaOnSub, duration, duration);\n            }\n        }\n    };\n    c3_chart_internal_fn.redrawForBrush = function () {\n        var $$ = this,\n            x = $$.x,\n            d3 = $$.d3,\n            s;\n        $$.redraw({\n            withTransition: false,\n            withY: $$.config.zoom_rescale,\n            withSubchart: false,\n            withUpdateXDomain: true,\n            withEventRect: false,\n            withDimension: false\n        });\n        // update zoom transation binded to event rect\n        s = d3.event.selection || $$.brush.scale.range();\n        $$.main.select('.' + CLASS.eventRect).call($$.zoom.transform, d3.zoomIdentity.scale($$.width / (s[1] - s[0])).translate(-s[0], 0));\n        $$.config.subchart_onbrush.call($$.api, x.orgDomain());\n    };\n    c3_chart_internal_fn.transformContext = function (withTransition, transitions) {\n        var $$ = this,\n            subXAxis;\n        if (transitions && transitions.axisSubX) {\n            subXAxis = transitions.axisSubX;\n        } else {\n            subXAxis = $$.context.select('.' + CLASS.axisX);\n            if (withTransition) {\n                subXAxis = subXAxis.transition();\n            }\n        }\n        $$.context.attr(\"transform\", $$.getTranslate('context'));\n        subXAxis.attr(\"transform\", $$.getTranslate('subx'));\n    };\n    c3_chart_internal_fn.getDefaultSelection = function () {\n        var $$ = this,\n            config = $$.config,\n            selection = isFunction(config.axis_x_selection) ? config.axis_x_selection($$.getXDomain($$.data.targets)) : config.axis_x_selection;\n        if ($$.isTimeSeries()) {\n            selection = [$$.parseDate(selection[0]), $$.parseDate(selection[1])];\n        }\n        return selection;\n    };\n\n    c3_chart_internal_fn.initText = function () {\n        var $$ = this;\n        $$.main.select('.' + CLASS.chart).append(\"g\").attr(\"class\", CLASS.chartTexts);\n        $$.mainText = $$.d3.selectAll([]);\n    };\n    c3_chart_internal_fn.updateTargetsForText = function (targets) {\n        var $$ = this,\n            classChartText = $$.classChartText.bind($$),\n            classTexts = $$.classTexts.bind($$),\n            classFocus = $$.classFocus.bind($$);\n        var mainText = $$.main.select('.' + CLASS.chartTexts).selectAll('.' + CLASS.chartText).data(targets);\n        var mainTextEnter = mainText.enter().append('g').attr('class', classChartText).style('opacity', 0).style(\"pointer-events\", \"none\");\n        mainTextEnter.append('g').attr('class', classTexts);\n        mainTextEnter.merge(mainText).attr('class', function (d) {\n            return classChartText(d) + classFocus(d);\n        });\n    };\n    c3_chart_internal_fn.updateText = function (xForText, yForText, durationForExit) {\n        var $$ = this,\n            config = $$.config,\n            barOrLineData = $$.barOrLineData.bind($$),\n            classText = $$.classText.bind($$);\n        var mainText = $$.main.selectAll('.' + CLASS.texts).selectAll('.' + CLASS.text).data(barOrLineData);\n        var mainTextEnter = mainText.enter().append('text').attr(\"class\", classText).attr('text-anchor', function (d) {\n            return config.axis_rotated ? d.value < 0 ? 'end' : 'start' : 'middle';\n        }).style(\"stroke\", 'none').attr('x', xForText).attr('y', yForText).style(\"fill\", function (d) {\n            return $$.color(d);\n        }).style(\"fill-opacity\", 0);\n        $$.mainText = mainTextEnter.merge(mainText).text(function (d, i, j) {\n            return $$.dataLabelFormat(d.id)(d.value, d.id, i, j);\n        });\n        mainText.exit().transition().duration(durationForExit).style('fill-opacity', 0).remove();\n    };\n    c3_chart_internal_fn.redrawText = function (xForText, yForText, forFlow, withTransition, transition) {\n        return [(withTransition ? this.mainText.transition(transition) : this.mainText).attr('x', xForText).attr('y', yForText).style(\"fill\", this.color).style(\"fill-opacity\", forFlow ? 0 : this.opacityForText.bind(this))];\n    };\n    c3_chart_internal_fn.getTextRect = function (text, cls, element) {\n        var dummy = this.d3.select('body').append('div').classed('c3', true),\n            svg = dummy.append(\"svg\").style('visibility', 'hidden').style('position', 'fixed').style('top', 0).style('left', 0),\n            font = this.d3.select(element).style('font'),\n            rect;\n        svg.selectAll('.dummy').data([text]).enter().append('text').classed(cls ? cls : \"\", true).style('font', font).text(text).each(function () {\n            rect = this.getBoundingClientRect();\n        });\n        dummy.remove();\n        return rect;\n    };\n    c3_chart_internal_fn.generateXYForText = function (areaIndices, barIndices, lineIndices, forX) {\n        var $$ = this,\n            getAreaPoints = $$.generateGetAreaPoints(areaIndices, false),\n            getBarPoints = $$.generateGetBarPoints(barIndices, false),\n            getLinePoints = $$.generateGetLinePoints(lineIndices, false),\n            getter = forX ? $$.getXForText : $$.getYForText;\n        return function (d, i) {\n            var getPoints = $$.isAreaType(d) ? getAreaPoints : $$.isBarType(d) ? getBarPoints : getLinePoints;\n            return getter.call($$, getPoints(d, i), d, this);\n        };\n    };\n    c3_chart_internal_fn.getXForText = function (points, d, textElement) {\n        var $$ = this,\n            box = textElement.getBoundingClientRect(),\n            xPos,\n            padding;\n        if ($$.config.axis_rotated) {\n            padding = $$.isBarType(d) ? 4 : 6;\n            xPos = points[2][1] + padding * (d.value < 0 ? -1 : 1);\n        } else {\n            xPos = $$.hasType('bar') ? (points[2][0] + points[0][0]) / 2 : points[0][0];\n        }\n        // show labels regardless of the domain if value is null\n        if (d.value === null) {\n            if (xPos > $$.width) {\n                xPos = $$.width - box.width;\n            } else if (xPos < 0) {\n                xPos = 4;\n            }\n        }\n        return xPos;\n    };\n    c3_chart_internal_fn.getYForText = function (points, d, textElement) {\n        var $$ = this,\n            box = textElement.getBoundingClientRect(),\n            yPos;\n        if ($$.config.axis_rotated) {\n            yPos = (points[0][0] + points[2][0] + box.height * 0.6) / 2;\n        } else {\n            yPos = points[2][1];\n            if (d.value < 0 || d.value === 0 && !$$.hasPositiveValue) {\n                yPos += box.height;\n                if ($$.isBarType(d) && $$.isSafari()) {\n                    yPos -= 3;\n                } else if (!$$.isBarType(d) && $$.isChrome()) {\n                    yPos += 3;\n                }\n            } else {\n                yPos += $$.isBarType(d) ? -3 : -6;\n            }\n        }\n        // show labels regardless of the domain if value is null\n        if (d.value === null && !$$.config.axis_rotated) {\n            if (yPos < box.height) {\n                yPos = box.height;\n            } else if (yPos > this.height) {\n                yPos = this.height - 4;\n            }\n        }\n        return yPos;\n    };\n\n    c3_chart_internal_fn.initTitle = function () {\n        var $$ = this;\n        $$.title = $$.svg.append(\"text\").text($$.config.title_text).attr(\"class\", $$.CLASS.title);\n    };\n    c3_chart_internal_fn.redrawTitle = function () {\n        var $$ = this;\n        $$.title.attr(\"x\", $$.xForTitle.bind($$)).attr(\"y\", $$.yForTitle.bind($$));\n    };\n    c3_chart_internal_fn.xForTitle = function () {\n        var $$ = this,\n            config = $$.config,\n            position = config.title_position || 'left',\n            x;\n        if (position.indexOf('right') >= 0) {\n            x = $$.currentWidth - $$.getTextRect($$.title.node().textContent, $$.CLASS.title, $$.title.node()).width - config.title_padding.right;\n        } else if (position.indexOf('center') >= 0) {\n            x = ($$.currentWidth - $$.getTextRect($$.title.node().textContent, $$.CLASS.title, $$.title.node()).width) / 2;\n        } else {\n            // left\n            x = config.title_padding.left;\n        }\n        return x;\n    };\n    c3_chart_internal_fn.yForTitle = function () {\n        var $$ = this;\n        return $$.config.title_padding.top + $$.getTextRect($$.title.node().textContent, $$.CLASS.title, $$.title.node()).height;\n    };\n    c3_chart_internal_fn.getTitlePadding = function () {\n        var $$ = this;\n        return $$.yForTitle() + $$.config.title_padding.bottom;\n    };\n\n    c3_chart_internal_fn.initTooltip = function () {\n        var $$ = this,\n            config = $$.config,\n            i;\n        $$.tooltip = $$.selectChart.style(\"position\", \"relative\").append(\"div\").attr('class', CLASS.tooltipContainer).style(\"position\", \"absolute\").style(\"pointer-events\", \"none\").style(\"display\", \"none\");\n        // Show tooltip if needed\n        if (config.tooltip_init_show) {\n            if ($$.isTimeSeries() && isString(config.tooltip_init_x)) {\n                config.tooltip_init_x = $$.parseDate(config.tooltip_init_x);\n                for (i = 0; i < $$.data.targets[0].values.length; i++) {\n                    if ($$.data.targets[0].values[i].x - config.tooltip_init_x === 0) {\n                        break;\n                    }\n                }\n                config.tooltip_init_x = i;\n            }\n            $$.tooltip.html(config.tooltip_contents.call($$, $$.data.targets.map(function (d) {\n                return $$.addName(d.values[config.tooltip_init_x]);\n            }), $$.axis.getXAxisTickFormat(), $$.getYFormat($$.hasArcType()), $$.color));\n            $$.tooltip.style(\"top\", config.tooltip_init_position.top).style(\"left\", config.tooltip_init_position.left).style(\"display\", \"block\");\n        }\n    };\n    c3_chart_internal_fn.getTooltipSortFunction = function () {\n        var $$ = this,\n            config = $$.config;\n\n        if (config.data_groups.length === 0 || config.tooltip_order !== undefined) {\n            // if data are not grouped or if an order is specified\n            // for the tooltip values we sort them by their values\n\n            var order = config.tooltip_order;\n            if (order === undefined) {\n                order = config.data_order;\n            }\n\n            var valueOf = function valueOf(obj) {\n                return obj ? obj.value : null;\n            };\n\n            // if data are not grouped, we sort them by their value\n            if (isString(order) && order.toLowerCase() === 'asc') {\n                return function (a, b) {\n                    return valueOf(a) - valueOf(b);\n                };\n            } else if (isString(order) && order.toLowerCase() === 'desc') {\n                return function (a, b) {\n                    return valueOf(b) - valueOf(a);\n                };\n            } else if (isFunction(order)) {\n\n                // if the function is from data_order we need\n                // to wrap the returned function in order to format\n                // the sorted value to the expected format\n\n                var sortFunction = order;\n\n                if (config.tooltip_order === undefined) {\n                    sortFunction = function sortFunction(a, b) {\n                        return order(a ? {\n                            id: a.id,\n                            values: [a]\n                        } : null, b ? {\n                            id: b.id,\n                            values: [b]\n                        } : null);\n                    };\n                }\n\n                return sortFunction;\n            } else if (isArray(order)) {\n                return function (a, b) {\n                    return order.indexOf(a.id) - order.indexOf(b.id);\n                };\n            }\n        } else {\n            // if data are grouped, we follow the order of grouped targets\n            var ids = $$.orderTargets($$.data.targets).map(function (i) {\n                return i.id;\n            });\n\n            // if it was either asc or desc we need to invert the order\n            // returned by orderTargets\n            if ($$.isOrderAsc() || $$.isOrderDesc()) {\n                ids = ids.reverse();\n            }\n\n            return function (a, b) {\n                return ids.indexOf(a.id) - ids.indexOf(b.id);\n            };\n        }\n    };\n    c3_chart_internal_fn.getTooltipContent = function (d, defaultTitleFormat, defaultValueFormat, color) {\n        var $$ = this,\n            config = $$.config,\n            titleFormat = config.tooltip_format_title || defaultTitleFormat,\n            nameFormat = config.tooltip_format_name || function (name) {\n            return name;\n        },\n            valueFormat = config.tooltip_format_value || defaultValueFormat,\n            text,\n            i,\n            title,\n            value,\n            name,\n            bgcolor;\n\n        var tooltipSortFunction = this.getTooltipSortFunction();\n        if (tooltipSortFunction) {\n            d.sort(tooltipSortFunction);\n        }\n\n        for (i = 0; i < d.length; i++) {\n            if (!(d[i] && (d[i].value || d[i].value === 0))) {\n                continue;\n            }\n\n            if (!text) {\n                title = sanitise(titleFormat ? titleFormat(d[i].x) : d[i].x);\n                text = \"<table class='\" + $$.CLASS.tooltip + \"'>\" + (title || title === 0 ? \"<tr><th colspan='2'>\" + title + \"</th></tr>\" : \"\");\n            }\n\n            value = sanitise(valueFormat(d[i].value, d[i].ratio, d[i].id, d[i].index, d));\n            if (value !== undefined) {\n                // Skip elements when their name is set to null\n                if (d[i].name === null) {\n                    continue;\n                }\n                name = sanitise(nameFormat(d[i].name, d[i].ratio, d[i].id, d[i].index));\n                bgcolor = $$.levelColor ? $$.levelColor(d[i].value) : color(d[i].id);\n\n                text += \"<tr class='\" + $$.CLASS.tooltipName + \"-\" + $$.getTargetSelectorSuffix(d[i].id) + \"'>\";\n                text += \"<td class='name'><span style='background-color:\" + bgcolor + \"'></span>\" + name + \"</td>\";\n                text += \"<td class='value'>\" + value + \"</td>\";\n                text += \"</tr>\";\n            }\n        }\n        return text + \"</table>\";\n    };\n    c3_chart_internal_fn.tooltipPosition = function (dataToShow, tWidth, tHeight, element) {\n        var $$ = this,\n            config = $$.config,\n            d3 = $$.d3;\n        var svgLeft, tooltipLeft, tooltipRight, tooltipTop, chartRight;\n        var forArc = $$.hasArcType(),\n            mouse = d3.mouse(element);\n        // Determin tooltip position\n        if (forArc) {\n            tooltipLeft = ($$.width - ($$.isLegendRight ? $$.getLegendWidth() : 0)) / 2 + mouse[0];\n            tooltipTop = ($$.hasType('gauge') ? $$.height : $$.height / 2) + mouse[1] + 20;\n        } else {\n            svgLeft = $$.getSvgLeft(true);\n            if (config.axis_rotated) {\n                tooltipLeft = svgLeft + mouse[0] + 100;\n                tooltipRight = tooltipLeft + tWidth;\n                chartRight = $$.currentWidth - $$.getCurrentPaddingRight();\n                tooltipTop = $$.x(dataToShow[0].x) + 20;\n            } else {\n                tooltipLeft = svgLeft + $$.getCurrentPaddingLeft(true) + $$.x(dataToShow[0].x) + 20;\n                tooltipRight = tooltipLeft + tWidth;\n                chartRight = svgLeft + $$.currentWidth - $$.getCurrentPaddingRight();\n                tooltipTop = mouse[1] + 15;\n            }\n\n            if (tooltipRight > chartRight) {\n                // 20 is needed for Firefox to keep tooltip width\n                tooltipLeft -= tooltipRight - chartRight + 20;\n            }\n            if (tooltipTop + tHeight > $$.currentHeight) {\n                tooltipTop -= tHeight + 30;\n            }\n        }\n        if (tooltipTop < 0) {\n            tooltipTop = 0;\n        }\n        return { top: tooltipTop, left: tooltipLeft };\n    };\n    c3_chart_internal_fn.showTooltip = function (selectedData, element) {\n        var $$ = this,\n            config = $$.config;\n        var tWidth, tHeight, position;\n        var forArc = $$.hasArcType(),\n            dataToShow = selectedData.filter(function (d) {\n            return d && isValue(d.value);\n        }),\n            positionFunction = config.tooltip_position || c3_chart_internal_fn.tooltipPosition;\n        if (dataToShow.length === 0 || !config.tooltip_show) {\n            return;\n        }\n        $$.tooltip.html(config.tooltip_contents.call($$, selectedData, $$.axis.getXAxisTickFormat(), $$.getYFormat(forArc), $$.color)).style(\"display\", \"block\");\n\n        // Get tooltip dimensions\n        tWidth = $$.tooltip.property('offsetWidth');\n        tHeight = $$.tooltip.property('offsetHeight');\n\n        position = positionFunction.call(this, dataToShow, tWidth, tHeight, element);\n        // Set tooltip\n        $$.tooltip.style(\"top\", position.top + \"px\").style(\"left\", position.left + 'px');\n    };\n    c3_chart_internal_fn.hideTooltip = function () {\n        this.tooltip.style(\"display\", \"none\");\n    };\n\n    c3_chart_internal_fn.setTargetType = function (targetIds, type) {\n        var $$ = this,\n            config = $$.config;\n        $$.mapToTargetIds(targetIds).forEach(function (id) {\n            $$.withoutFadeIn[id] = type === config.data_types[id];\n            config.data_types[id] = type;\n        });\n        if (!targetIds) {\n            config.data_type = type;\n        }\n    };\n    c3_chart_internal_fn.hasType = function (type, targets) {\n        var $$ = this,\n            types = $$.config.data_types,\n            has = false;\n        targets = targets || $$.data.targets;\n        if (targets && targets.length) {\n            targets.forEach(function (target) {\n                var t = types[target.id];\n                if (t && t.indexOf(type) >= 0 || !t && type === 'line') {\n                    has = true;\n                }\n            });\n        } else if (Object.keys(types).length) {\n            Object.keys(types).forEach(function (id) {\n                if (types[id] === type) {\n                    has = true;\n                }\n            });\n        } else {\n            has = $$.config.data_type === type;\n        }\n        return has;\n    };\n    c3_chart_internal_fn.hasArcType = function (targets) {\n        return this.hasType('pie', targets) || this.hasType('donut', targets) || this.hasType('gauge', targets);\n    };\n    c3_chart_internal_fn.isLineType = function (d) {\n        var config = this.config,\n            id = isString(d) ? d : d.id;\n        return !config.data_types[id] || ['line', 'spline', 'area', 'area-spline', 'step', 'area-step'].indexOf(config.data_types[id]) >= 0;\n    };\n    c3_chart_internal_fn.isStepType = function (d) {\n        var id = isString(d) ? d : d.id;\n        return ['step', 'area-step'].indexOf(this.config.data_types[id]) >= 0;\n    };\n    c3_chart_internal_fn.isSplineType = function (d) {\n        var id = isString(d) ? d : d.id;\n        return ['spline', 'area-spline'].indexOf(this.config.data_types[id]) >= 0;\n    };\n    c3_chart_internal_fn.isAreaType = function (d) {\n        var id = isString(d) ? d : d.id;\n        return ['area', 'area-spline', 'area-step'].indexOf(this.config.data_types[id]) >= 0;\n    };\n    c3_chart_internal_fn.isBarType = function (d) {\n        var id = isString(d) ? d : d.id;\n        return this.config.data_types[id] === 'bar';\n    };\n    c3_chart_internal_fn.isScatterType = function (d) {\n        var id = isString(d) ? d : d.id;\n        return this.config.data_types[id] === 'scatter';\n    };\n    c3_chart_internal_fn.isPieType = function (d) {\n        var id = isString(d) ? d : d.id;\n        return this.config.data_types[id] === 'pie';\n    };\n    c3_chart_internal_fn.isGaugeType = function (d) {\n        var id = isString(d) ? d : d.id;\n        return this.config.data_types[id] === 'gauge';\n    };\n    c3_chart_internal_fn.isDonutType = function (d) {\n        var id = isString(d) ? d : d.id;\n        return this.config.data_types[id] === 'donut';\n    };\n    c3_chart_internal_fn.isArcType = function (d) {\n        return this.isPieType(d) || this.isDonutType(d) || this.isGaugeType(d);\n    };\n    c3_chart_internal_fn.lineData = function (d) {\n        return this.isLineType(d) ? [d] : [];\n    };\n    c3_chart_internal_fn.arcData = function (d) {\n        return this.isArcType(d.data) ? [d] : [];\n    };\n    /* not used\n     function scatterData(d) {\n     return isScatterType(d) ? d.values : [];\n     }\n     */\n    c3_chart_internal_fn.barData = function (d) {\n        return this.isBarType(d) ? d.values : [];\n    };\n    c3_chart_internal_fn.lineOrScatterData = function (d) {\n        return this.isLineType(d) || this.isScatterType(d) ? d.values : [];\n    };\n    c3_chart_internal_fn.barOrLineData = function (d) {\n        return this.isBarType(d) || this.isLineType(d) ? d.values : [];\n    };\n\n    c3_chart_internal_fn.isSafari = function () {\n        var ua = window.navigator.userAgent;\n        return ua.indexOf('Safari') >= 0 && ua.indexOf('Chrome') < 0;\n    };\n    c3_chart_internal_fn.isChrome = function () {\n        var ua = window.navigator.userAgent;\n        return ua.indexOf('Chrome') >= 0;\n    };\n\n    c3_chart_internal_fn.initZoom = function () {\n        var $$ = this,\n            d3 = $$.d3,\n            config = $$.config,\n            startEvent;\n\n        $$.zoom = d3.zoom().on(\"start\", function () {\n            var e = d3.event.sourceEvent;\n            if (e && e.type === \"brush\") {\n                return;\n            }\n            startEvent = e;\n            config.zoom_onzoomstart.call($$.api, e);\n        }).on(\"zoom\", function () {\n            var e = d3.event.sourceEvent;\n            if (e && e.type === \"brush\") {\n                return;\n            }\n            $$.redrawForZoom.call($$);\n        }).on('end', function () {\n            var e = d3.event.sourceEvent;\n            if (e && e.type === \"brush\") {\n                return;\n            }\n            // if click, do nothing. otherwise, click interaction will be canceled.\n            if (e && startEvent.clientX === e.clientX && startEvent.clientY === e.clientY) {\n                return;\n            }\n            config.zoom_onzoomend.call($$.api, $$.x.orgDomain());\n        });\n\n        $$.zoom.updateDomain = function () {\n            if (d3.event && d3.event.transform) {\n                $$.x.domain(d3.event.transform.rescaleX($$.subX).domain());\n            }\n            return this;\n        };\n        $$.zoom.updateExtent = function () {\n            this.scaleExtent([1, Infinity]).translateExtent([[0, 0], [$$.width, $$.height]]).extent([[0, 0], [$$.width, $$.height]]);\n            return this;\n        };\n        $$.zoom.update = function () {\n            return this.updateExtent().updateDomain();\n        };\n\n        return $$.zoom.updateExtent();\n    };\n    c3_chart_internal_fn.zoomTransform = function (range) {\n        var $$ = this,\n            s = [$$.x(range[0]), $$.x(range[1])];\n        return $$.d3.zoomIdentity.scale($$.width / (s[1] - s[0])).translate(-s[0], 0);\n    };\n\n    c3_chart_internal_fn.getZoomDomain = function () {\n        var $$ = this,\n            config = $$.config,\n            d3 = $$.d3,\n            min = d3.min([$$.orgXDomain[0], config.zoom_x_min]),\n            max = d3.max([$$.orgXDomain[1], config.zoom_x_max]);\n        return [min, max];\n    };\n    c3_chart_internal_fn.redrawForZoom = function () {\n        var $$ = this,\n            d3 = $$.d3,\n            config = $$.config,\n            zoom = $$.zoom,\n            x = $$.x;\n        if (!config.zoom_enabled) {\n            return;\n        }\n        if ($$.filterTargetsToShow($$.data.targets).length === 0) {\n            return;\n        }\n\n        zoom.update();\n\n        if ($$.isCategorized() && x.orgDomain()[0] === $$.orgXDomain[0]) {\n            x.domain([$$.orgXDomain[0] - 1e-10, x.orgDomain()[1]]);\n        }\n        $$.redraw({\n            withTransition: false,\n            withY: config.zoom_rescale,\n            withSubchart: false,\n            withEventRect: false,\n            withDimension: false\n        });\n        if (d3.event.sourceEvent && d3.event.sourceEvent.type === 'mousemove') {\n            $$.cancelClick = true;\n        }\n        config.zoom_onzoom.call($$.api, x.orgDomain());\n    };\n\n    return c3;\n\n})));\n","import c3 from 'c3';\nimport d3 from 'd3';\n\nimport { each } from '../utils/each';\nimport { extend } from '../utils/extend';\nimport { extendDeep } from '../utils/extend-deep';\nimport isDateString from '../utils/assert-date-string';\nimport c3DefaultDateFormat from './c3/extensions/default-date-format';\nimport c3PaginatingLegend from './c3/extensions/paginating-legend';\nimport c3TooltipContents from './c3/extensions/tooltip-contents';\n\nimport message from './default/message';\nimport metric from './default/metric';\nimport table from './default/table';\nimport spinner from './default/spinner';\n\nconst types = {\n  message,\n  metric,\n  table,\n  spinner,\n};\n\nexport default function(lib) {\n  var timer, delay;\n  bindResizeListener(function(){\n    if (timer) {\n      clearTimeout(timer);\n    }\n    delay = (lib.visuals.length > 12) ? 1000 : 250;\n    timer = setTimeout(function(){\n      each(lib.visuals, function(chart){\n        if (chart.view._artifacts.c3) {\n          chart.view._artifacts.c3.resize();\n        }\n      });\n    }, delay);\n  });\n\n  defineC3();\n  return types;\n};\n\nfunction defineC3(){\n  var c3Types = [\n    // Standard types\n    'area',\n    'area-spline',\n    'area-step',\n    'bar',\n    'donut',\n    'gauge',\n    'line',\n    'pie',\n    'step',\n    'spline',\n\n    // Horizontal variant types\n    'horizontal-area',\n    'horizontal-area-spline',\n    'horizontal-area-step',\n    'horizontal-bar',\n    'horizontal-line',\n    'horizontal-step',\n    'horizontal-spline'\n  ];\n\n  function getDefaultOptions(){\n    var DEFAULT_OPTIONS,\n        ENFORCED_OPTIONS,\n        options;\n\n    DEFAULT_OPTIONS = {\n      axis: {},\n      color: {},\n      data: {\n        order: null\n      },\n      legend: {\n        position: 'right',\n        show: true\n      },\n      padding: {},\n      point: {\n        focus: {\n          expand: {\n            enabled: false\n          }\n        },\n        r: 2,\n        show: true\n      },\n      tooltip: {},\n      transition: {\n        duration: 0\n      }\n    };\n\n    ENFORCED_OPTIONS = {\n      bindto: this.el().querySelector('.' + this.theme() + '-rendering'),\n      color: {\n        pattern: this.colors()\n      },\n      data: {\n        colors: extend({}, this.colorMapping()),\n        columns: [],\n        type: this.type().replace('horizontal-', '')\n      },\n      size: {\n        height: this.height() ? this.height() - this.el().offsetHeight : 400,\n        width: this.width()\n      },\n      tooltip: {}\n    };\n\n    // Apply chartOptions\n    options = extendDeep({}, DEFAULT_OPTIONS, this.chartOptions());\n\n    // Apply enforced options\n    options = extendDeep(options, ENFORCED_OPTIONS);\n    options.color.pattern = ENFORCED_OPTIONS.color.pattern;\n    options.data.colors = ENFORCED_OPTIONS.data.colors;\n    options.data.columns = ENFORCED_OPTIONS.data.columns;\n\n    return options;\n  }\n\n  each(c3Types, function(type, index) {\n    types[type] = {\n      render: function(){\n        var options = getDefaultOptions.call(this);\n\n        if (this.data()[0].length === 1 || this.data().length === 1) {\n          this.message('No data to display');\n          return;\n        }\n\n        if (type === 'gauge') {\n          // Accommodate a neat bug:\n          options.legend.position = 'bottom';\n          options.data.columns = [[\n            this.title() || this.data()[1][0],\n            this.data()[1][1]\n          ]];\n        }\n        else if (type === 'pie' || type === 'donut') {\n          options.data.columns = this.data().slice(1);\n        }\n        else {\n\n          // Apply formatting for horizontal variant types\n          if (type.indexOf('horizontal-') > -1) {\n            options.axis.rotated = type.indexOf('horizontal-') > -1;\n          }\n\n          if (isDateString(this.data()[1][0])) {\n            // TIMESERIES\n            options.axis.x = options.axis.x || {};\n            options.axis.x.type = 'timeseries';\n            options.axis.x.tick = options.axis.x.tick || {\n              format: this.dateFormat() || c3DefaultDateFormat(this.data()[1][0], this.data()[2] ? this.data()[2][0] : this.data()[1][0]),\n              culling: { max: 5 }\n            };\n\n            options.data.columns[0] = [];\n            each(this.dataset.selectColumn(0), function(cell, i){\n              if (i > 0) {\n                cell = new Date(cell);\n              }\n              options.data.columns[0][i] = cell;\n            });\n            options.data.columns[0][0] = 'x';\n            options.data.x = 'x';\n            if (this.stacked() && this.data()[0].length > 2) {\n              options.data.groups = [ this.dataset.selectRow(0).slice(1) ];\n            }\n          }\n          else {\n            // CATEGORIES\n            options.axis.x = options.axis.x || {};\n            options.axis.x.type = 'category';\n            options.axis.x.categories = this.dataset.selectColumn(0).slice(1);\n            if (this.stacked() && this.data()[0].length > 2) {\n              options.data.groups = [ this.dataset.selectRow(0).slice(1) ];\n            }\n          }\n\n          if (this.data()[0].length === 2) {\n            options.legend.show = false;\n          }\n\n          each(this.data()[0], function(cell, i){\n            if (i > 0) {\n              options.data.columns.push(this.dataset.selectColumn(i));\n            }\n          }.bind(this));\n\n        }\n\n        if (options.legend.show === true\n          && options.legend.position === 'right'\n            && ['gauge'].indexOf(type.replace('horizontal-', ''))) {\n\n                // Apply custom color handling\n                options.data.color = c3CustomDataMapping.bind(this);\n\n                // Apply custom tooltip\n                options.tooltip = {\n                  contents: c3TooltipContents,\n                  format: {\n                    value: c3CustomTooltipFiltering.bind(this)\n                  }\n                };\n\n                options.legend.show = false;\n                var paddedWidth = this.el().querySelector('.' + this.theme() + '-rendering').offsetWidth - 100;\n                options.size.width = options.size.width || paddedWidth;\n                this.el().querySelector('.' + this.theme() + '-rendering').setAttribute('style', 'margin-right: 120px;');\n\n                // Render artifacts\n                this.view._artifacts['c3'] = c3.generate(options);\n                c3PaginatingLegend.call(this, options.data.columns);\n        }\n        else {\n          options.legend.show = false;\n          this.view._artifacts['c3'] = c3.generate(options);\n        }\n\n      },\n      update: function(){\n        // no special update handling\n        this.render();\n      },\n      destroy: function(){\n        if (this.view._artifacts['c3']) {\n          this.view._artifacts['c3'].destroy();\n          this.view._artifacts['c3'] = null;\n        }\n      }\n    };\n  });\n}\n\nfunction c3CustomDataMapping(color, d) {\n  var scope;\n  if (this.view._artifacts.pagination\n    && this.type() !== 'gauge'\n      /*&& this.type() !== 'pie'\n        && this.type() !== 'donut'*/) {\n          scope = this.view._artifacts.pagination.labels;\n          if ((d.id && scope.indexOf(d.id) > -1)\n            || (d && !d.id && scope.indexOf(d) > -1)) {\n              return color;\n          }\n          else {\n            if (this.type() === 'donut' || this.type() === 'pie') {\n              return 'rgba(0,0,0,.1)';\n            }\n            else {\n              return 'rgba(0,0,0,.07)';\n            }\n          }\n  }\n  else {\n    return color;\n  }\n}\n\nfunction c3CustomTooltipFiltering(value, ratio, id, index) {\n  var scope;\n  if (this.view._artifacts.pagination\n    && this.type() !== 'gauge'\n      /*&& this.type() !== 'pie'\n        && this.type() !== 'donut'*/) {\n          scope = this.view._artifacts.pagination.labels;\n          if (scope.indexOf(id) > -1) {\n            return value;\n          }\n  }\n  else {\n    return value;\n  }\n}\n\nfunction bindResizeListener(fn){\n  if ('undefined' === typeof window) return;\n  window.onresize = window.resize = function(){};\n  if (window.addEventListener) {\n    window.addEventListener('resize', fn, true);\n  }\n  else if (window.attachEvent) {\n    window.attachEvent('onresize', fn);\n  }\n}\n","import Dataset from './dataset';\nimport { extend } from './utils/extend';\nimport { stripHtmlTags } from './utils/strip-html-tags';\n\nexport default function (data) {\n  if (!arguments.length) return this.dataset.data();\n  if (data instanceof Dataset) {\n    this.dataset = data;\n    return this;\n  }\n  else {\n    return parseResponse.call(this, data);\n  }\n};\n\nfunction parseResponse(response) {\n  var dataset,\n      indexBy,\n      meta,\n      parser,\n      parserArgs = [],\n      query,\n      selectedParser,\n      title,\n      type;\n\n  indexBy = this.indexBy() ? this.indexBy() : 'timestamp.start';\n  meta = response.metadata || {};\n  query = (typeof response.query !== 'undefined') ? response.query : {};\n\n  // Ensure all required params are present\n  query = extend({\n    analysis_type: null,\n    event_collection: null,\n    filters: [],\n    group_by: null,\n    interval: null,\n    timeframe: null,\n    timezone: null\n  }, query);\n\n  if (query.analysis_type === 'funnel') {\n    parser = 'funnel';\n  }\n  else if (query.analysis_type === 'extraction'){\n    parser = 'extraction';\n  }\n  else if (query.analysis_type === 'select_unique') {\n    if (!query.group_by && !query.interval) {\n      parser = 'list';\n    }\n    // else { Not supported }\n  }\n  else if (query.analysis_type) {\n    if (!query.group_by && !query.interval) {\n      parser = 'metric';\n    }\n    else if (query.group_by && !query.interval) {\n      if (query.group_by instanceof Array && query.group_by.length > 1) {\n        parser = 'double-grouped-metric';\n        parserArgs.push(query.group_by);\n      }\n      else {\n        parser = 'grouped-metric';\n      }\n    }\n    else if (query.interval && !query.group_by) {\n      parser = 'interval';\n      parserArgs.push(indexBy);\n    }\n    else if (query.group_by && query.interval) {\n      if (query.group_by instanceof Array && query.group_by.length > 1) {\n        parser = 'double-grouped-interval';\n        parserArgs.push(query.group_by);\n        parserArgs.push(indexBy);\n      }\n      else {\n        parser = 'grouped-interval';\n        parserArgs.push(indexBy);\n      }\n    }\n  }\n\n  if (!parser) {\n\n    // Metric\n    // -------------------------------\n    if (typeof response.result === 'number'){\n      parser = 'metric';\n    }\n\n    // Everything else\n    // -------------------------------\n    if (response.result instanceof Array && response.result.length > 0){\n\n      // Interval w/ single value\n      // -------------------------------\n      if (response.result[0].timeframe && (typeof response.result[0].value == 'number' || response.result[0].value == null)) {\n        parser = 'interval';\n        parserArgs.push(indexBy)\n      }\n\n      // Static GroupBy\n      // -------------------------------\n      if (typeof response.result[0].result == 'number'){\n        parser = 'grouped-metric';\n      }\n\n      // Grouped Interval\n      // -------------------------------\n      if (response.result[0].value instanceof Array){\n        parser = 'grouped-interval';\n        parserArgs.push(indexBy)\n      }\n\n      // Funnel\n      // -------------------------------\n      if (typeof response.result[0] === 'number'\n        && typeof response.steps !== 'undefined'){\n          parser = 'funnel';\n          // Move steps into query object\n          query.steps = response.steps;\n      }\n\n      // Select Unique\n      // -------------------------------\n      if ((typeof response.result[0] === 'string' || typeof response.result[0] == 'number') && typeof response.steps === 'undefined'){\n        parser = 'list';\n      }\n\n      // Extraction\n      // -------------------------------\n      if (!parser) {\n        parser = 'extraction';\n      }\n    }\n  }\n\n  // Set title from saved query body, or create a default title\n  if (!this.title()) {\n    if (meta.display_name) {\n      title = meta.display_name;\n    }\n    else {\n      title = getDefaultTitle(query);\n    }\n    this.title(title);\n  }\n\n  // Set type from saved query body, or use a default type\n  if (!this.type()) {\n    if (meta.visualization && meta.visualization.chart_type) {\n      type = meta.visualization.chart_type;\n    }\n    else {\n      type = getDefaultType(parser);\n    }\n    this.type(type);\n  }\n\n  // Define the appropriate parser\n  selectedParser = Dataset.parser.apply(this, [parser].concat(parserArgs));\n\n  // Parse the response with augmented query body\n  dataset = selectedParser(extend(response, { 'query': query }));\n\n  // Set true dates for 'interval' data\n  if (parser.indexOf('interval') > -1) {\n    dataset.updateColumn(0, function(value, i){\n      return new Date(value);\n    });\n  }\n\n  dataset.updateRow(0, function(value, i){\n    return stripHtmlTags(value);\n  });\n\n  this.dataset = dataset;\n\n  return this;\n}\n\nfunction getDefaultTitle(query) {\n  var analysis = query.analysis_type ? query.analysis_type.replace('_', ' ') : '',\n      title;\n\n  title = analysis.replace( /\\b./g, function(a){\n    return a.toUpperCase();\n  });\n\n  if (query.event_collection) {\n    title += ' - ' + query.event_collection;\n  }\n  return title;\n}\n\nfunction getDefaultType(parser) {\n  let type;\n  switch (parser) {\n    case 'metric':\n      type = 'metric';\n      break;\n    case 'interval':\n      type = 'area';\n      break;\n    case 'grouped-metric':\n    case 'double-grouped-metric':\n      type = 'bar';\n      break;\n    case 'grouped-interval':\n    case 'double-grouped-interval':\n      type = 'line';\n      break;\n    case 'funnel':\n      type = 'horizontal-bar';\n      break;\n    case 'list':\n    case 'extraction':\n    default:\n      type = 'table';\n  }\n  return type;\n}\n","// Pure awesomeness by Will Rayner (penguinboy)\n// https://gist.github.com/penguinboy/762197\n\nexport function flatten(ob){\n  var toReturn = {};\n  for (var i in ob) {\n    if (!ob.hasOwnProperty(i)) continue;\n    if ((typeof ob[i]) == 'object' && ob[i] !== null) {\n      var flatObject = flatten(ob[i]);\n      for (var x in flatObject) {\n        if (!flatObject.hasOwnProperty(x)) continue;\n        toReturn[i + '.' + x] = flatObject[x];\n      }\n    } else {\n      toReturn[i] = ob[i];\n    }\n  }\n  return toReturn;\n};\n","let Dataset; /* injected */\n\nimport { each } from '../../utils/each';\nimport { flatten } from '../utils/flatten';\n\nexport default function initialize(lib){\n  Dataset = lib;\n  return function(name){\n    var options = Array.prototype.slice.call(arguments, 1);\n\n    if (!parsers[name]) {\n      throw 'Requested parser does not exist';\n    }\n    else {\n      return parsers[name].apply(this, options);\n    }\n  };\n}\n\nfunction parseMetric(){\n  return function(res){\n    return new Dataset()\n      .set(['Value', 'Result'], res.result)\n      .type('metric');\n  }\n}\n\n//var myParser = Dataset.parser('interval', 'timeframe.end');\nfunction parseInterval(){\n  var options = Array.prototype.slice.call(arguments);\n  return function(res){\n    var dataset = new Dataset()\n      .type('interval');\n    each(res.result, function(record, i){\n      var index = options[0] && options[0] === 'timeframe.end' ? record.timeframe.end : record.timeframe.start;\n      dataset.set(['Result', index], record.value);\n    });\n    return dataset;\n  }\n}\n\nfunction parseGroupedMetric(){\n  return function(res){\n    var dataset = new Dataset()\n      .type('grouped-metric');\n    each(res.result, function(record, i){\n      var label;\n      each(record, function(value, key){\n        if (key !== 'result') {\n          label = key;\n        }\n      });\n      dataset.set(['Result', String(record[label])], record.result);\n    });\n    return dataset;\n  }\n}\n\n//var myParser = Dataset.parser('grouped-interval', 'timeframe.end');\nfunction parseGroupedInterval(){\n  var options = Array.prototype.slice.call(arguments);\n  return function(res){\n    var dataset = new Dataset()\n      .type('grouped-interval');\n    each(res.result, function(record, i){\n      var index = options[0] && options[0] === 'timeframe.end' ? record.timeframe.end : record.timeframe.start;\n      if (record.value.length) {\n        each(record.value, function(group, j){\n          var label;\n          each(group, function(value, key){\n            if (key !== 'result') {\n              label = key;\n            }\n          });\n          dataset.set([ String(group[label]), index ], group.result);\n        });\n      }\n      else {\n        dataset.appendRow(index);\n      }\n    });\n    return dataset;\n  }\n}\n\n//var myParser = Dataset.parser('double-grouped-metric', ['first', 'second']);\nfunction parseDoubleGroupedMetric(){\n  var options = Array.prototype.slice.call(arguments);\n  if (!options[0]) throw 'Requested parser requires a sequential list (array) of properties to target as a second argument';\n  return function(res){\n    var dataset = new Dataset()\n      .type('double-grouped-metric');\n    each(res.result, function(record, i){\n      var rowLabel = record[options[0][0]] + ' ' + record[options[0][1]];\n      dataset.set([ 'Result', rowLabel ], record.result);\n    });\n    return dataset;\n  }\n}\n\n//var myParser = Dataset.parser('double-grouped-interval', ['first', 'second'], 'timeframe.end');\nfunction parseDoubleGroupedInterval(){\n  var options = Array.prototype.slice.call(arguments);\n  if (!options[0]) throw 'Requested parser requires a sequential list (array) of properties to target as a second argument';\n  return function(res){\n    var dataset = new Dataset()\n      .type('double-grouped-interval');\n    each(res.result, function(record, i){\n      var index = options[1] && options[1] === 'timeframe.end' ? record.timeframe.end : record.timeframe.start;\n      each(record['value'], function(value, j){\n        var label = value[options[0][0]] + ' ' + value[options[0][1]];\n        dataset.set([ label, index ], value.result);\n      });\n    });\n    return dataset;\n  }\n}\n\nfunction parseFunnel(){\n  return function(res){\n    var result, steps, dataset;\n    if (typeof res.steps !== 'undefined'\n        && typeof res.result !== 'undefined'\n          && res.result instanceof Array) {\n            // Ad-hoc funnel response\n            result = res.result;\n            steps = res.steps;\n    }\n    else if (typeof res.result.steps !== 'undefined'\n        && typeof res.result.result !== 'undefined'\n          && res.result.result instanceof Array) {\n            // Saved funnel response\n            result = res.result.result;\n            steps = res.result.steps;\n    }\n    dataset = new Dataset().type('funnel');\n    dataset.appendColumn('Step Value');\n    each(result, function(value, i){\n      if (typeof steps !== 'undefined' && steps[i]) {\n        dataset.appendRow(String(steps[i].event_collection), [value]);\n      }\n    });\n    return dataset;\n  }\n}\n\nfunction parseList(){\n  return function(res){\n    var dataset = new Dataset()\n      .type('list');\n    each(res.result, function(value, i){\n      dataset.set( [ 'Result', String(i+1) ], value );\n    });\n    return dataset;\n  }\n}\n\nfunction parseExtraction(){\n  return function(res){\n    var dataset = new Dataset()\n      .type('extraction');\n    each(res.result, function(record, i){\n      each(flatten(record), function(value, key){\n        dataset.set([ key, String(i+1) ], value);\n      });\n    });\n    dataset.deleteColumn(0);\n    return dataset;\n  }\n}\n\n// Parser definitions\nconst parsers = {\n  metric: parseMetric,\n  interval: parseInterval,\n  'grouped-metric': parseGroupedMetric,\n  'grouped-interval': parseGroupedInterval,\n  'double-grouped-metric': parseDoubleGroupedMetric,\n  'double-grouped-interval': parseDoubleGroupedInterval,\n  funnel: parseFunnel,\n  list: parseList,\n  extraction: parseExtraction,\n};\n","import { each } from '../../utils/each';\nimport createNullList from '../utils/create-null-list';\nimport { appendRow, appendColumn } from './append';\n\nexport function updateColumn(q, input) {\n  var self = this,\n      index = (typeof q === 'number') ? q : this.matrix[0].indexOf(q);\n\n  if (index > -1) {\n\n    if (typeof input === 'function') {\n\n      each(self.data(), function(row, i){\n        var cell;\n        if (i > 0) {\n          cell = input.call(self, row[index], i, row);\n          if (typeof cell !== 'undefined') {\n            self.matrix[i][index] = cell;\n          }\n        }\n      });\n\n    } else if (!input || input instanceof Array) {\n      input = input || [];\n\n      if (input.length <= self.data().length - 1) {\n        input = input.concat( createNullList(self.data().length - 1 - input.length) );\n      }\n      else {\n        // If this new column is longer than existing columns,\n        // we need to update the rest to match ...\n        each(input, function(value, i){\n          if (self.matrix.length -1 < input.length) {\n            appendRow.call(self, String( self.matrix.length ));\n          }\n        });\n      }\n\n      each(input, function(value, i){\n        self.matrix[i+1][index] = value;\n      });\n\n    }\n\n  }\n  return self;\n}\n\nexport function updateRow(q, input){\n  var self = this,\n      index = (typeof q === 'number') ? q : this.selectColumn(0).indexOf(q);\n\n  if (index > -1) {\n\n    if (typeof input === 'function') {\n\n      each(self.data()[index], function(value, i){\n        var col = self.selectColumn(i),\n        cell = input.call(self, value, i, col);\n        if (typeof cell !== 'undefined') {\n          self.matrix[index][i] = cell;\n        }\n      });\n\n    } else if (!input || input instanceof Array) {\n      input = input || [];\n\n      if (input.length <= self.matrix[0].length - 1) {\n        input = input.concat( createNullList( self.matrix[0].length - 1 - input.length ) );\n      }\n      else {\n        each(input, function(value, i){\n          if (self.matrix[0].length -1 < input.length) {\n            appendColumn.call(self, String( self.matrix[0].length ));\n          }\n        });\n      }\n\n      each(input, function(value, i){\n        self.matrix[index][i+1] = value;\n      });\n    }\n\n  }\n  return self;\n}\n","import { each } from '../../utils/each';\nimport analysesUtilMethods from '../utils/analyses';\n\nexport function sortColumns(str, comp) {\n  var self = this,\n      head = this.matrix[0].slice(1), // minus index\n      cols = [],\n      clone = [],\n      fn = comp || analysesUtilMethods.getColumnLabel;\n\n  // Isolate each column (except the index)\n  each(head, function(cell, i) {\n    cols.push(self.selectColumn(i+1).slice(0));\n  });\n  cols.sort(function(a,b){\n    // If fn(a) > fn(b)\n    var op = fn.call(self, a) > fn.call(self, b);\n    if (op) {\n      return (str === 'asc' ? 1 : -1);\n    } else if (!op) {\n      return (str === 'asc' ? -1 : 1);\n    } else {\n      return 0;\n    }\n  });\n  each(cols, function(col, i) {\n    self\n      .deleteColumn(i+1)\n      .insertColumn(i+1, col[0], col.slice(1));\n  });\n  return self;\n}\n\nexport function sortRows(str, comp) {\n  var self = this,\n      head = this.matrix.slice(0,1),\n      body = this.matrix.slice(1),\n      fn = comp || analysesUtilMethods.getRowIndex;\n  body.sort(function(a, b){\n    // If fn(a) > fn(b)\n    var op = fn.call(self, a) > fn.call(self, b);\n    if (op) {\n      return (str === 'asc' ? 1 : -1);\n    } else if (!op) {\n      return (str === 'asc' ? -1 : 1);\n    } else {\n      return 0;\n    }\n  });\n  self.data(head.concat(body));\n  return self;\n}\n","import { each } from '../../utils/each';\n\nexport function selectColumn(q) {\n  const result = [];\n  const index = (typeof q === 'number') ? q : this.matrix[0].indexOf(q);\n\n  if (index > -1 && typeof this.matrix[0][index] !== 'undefined') {\n    each(this.matrix, function(row, i) {\n      result.push(row[index]);\n    });\n  }\n  return result;\n}\n\nexport function selectRow(q) {\n  let result = [];\n  const index = (typeof q === 'number') ? q : this.selectColumn(0).indexOf(q);\n\n  if (index > -1 && typeof this.matrix[index] !== 'undefined') {\n    result = this.matrix[index];\n  }\n  return result;\n}\n","import { each } from '../../utils/each';\nimport createNullList from '../utils/create-null-list';\nimport { appendRow, appendColumn } from './append';\n\nexport function insertColumn(index, str, input) {\n  const self = this;\n  const label = (str !== undefined) ? str : null;\n\n  if (typeof input === 'function') {\n\n    self.matrix[0].splice(index, 0, label);\n    each(self.matrix, function(row, i) {\n      var cell;\n      if (i > 0) {\n        cell = input.call(self, row, i);\n        if (typeof cell === 'undefined') {\n          cell = null;\n        }\n        self.matrix[i].splice(index, 0, cell);\n      }\n    });\n\n  }\n\n  else if (!input || input instanceof Array) {\n    input = input || [];\n\n    if (input.length <= self.matrix.length - 1) {\n      input = input.concat( createNullList(self.matrix.length - 1 - input.length) );\n    }\n    else {\n      // If this new column is longer than existing columns,\n      // we need to update the rest to match ...\n      each(input, function(value, i){\n        if (self.matrix.length -1 < input.length) {\n          appendRow.call(self, String( self.matrix.length ));\n        }\n      });\n    }\n\n    self.matrix[0].splice(index, 0, label);\n    each(input, function(value, i){\n      self.matrix[i+1].splice(index, 0, value);\n    });\n\n  }\n  return self;\n}\n\nexport function insertRow(index, str, input) {\n  const self = this;\n  const newRow = [];\n  const label = (str !== undefined) ? str : null;\n  newRow.push(label);\n\n  if (typeof input === 'function') {\n    each(self.matrix[0], function(label, i) {\n      let col;\n      let cell;\n      if (i > 0) {\n        col = self.selectColumn(i);\n        cell = input.call(self, col, i);\n        if (typeof cell === 'undefined') {\n          cell = null;\n        }\n        newRow.push(cell);\n      }\n    });\n    self.matrix.splice(index, 0, newRow);\n  }\n\n  else if (!input || input instanceof Array) {\n    input = input || [];\n\n    if (input.length <= self.matrix[0].length - 1) {\n      input = input.concat( createNullList( self.matrix[0].length - 1 - input.length ) );\n    }\n    else {\n      each(input, function(value, i){\n        if (self.matrix[0].length -1 < input.length) {\n          appendColumn.call(self, String( self.matrix[0].length ));\n        }\n      });\n    }\n\n    self.matrix.splice(index, 0, newRow.concat(input) );\n  }\n\n  return self;\n}\n","import { each } from '../../utils/each';\n\nexport function filterColumns(fn) {\n  const self = this;\n  const clone = [];\n\n  each(self.matrix, function(row, i) {\n    clone.push([]);\n  });\n\n  each(self.matrix[0], function(col, i){\n    var selectedColumn = self.selectColumn(i);\n    if (i == 0 || fn.call(self, selectedColumn, i)) {\n      each(selectedColumn, function(cell, ri){\n        clone[ri].push(cell);\n      });\n    }\n  });\n\n  self.data(clone);\n  return self;\n}\n\nexport function filterRows(fn) {\n  const self = this;\n  const clone = [];\n\n  each(self.matrix, function(row, i){\n    if (i == 0 || fn.call(self, row, i)) {\n      clone.push(row);\n    }\n  });\n\n  self.data(clone);\n  return self;\n}\n","import { each } from '../../utils/each';\n\nexport function deleteColumn(q) {\n  const self = this;\n  const index = (typeof q === 'number') ? q : this.matrix[0].indexOf(q);\n\n  if (index > -1) {\n    each(self.matrix, function(row, i){\n      self.matrix[i].splice(index, 1);\n    });\n  }\n  return self;\n}\n\nexport function deleteRow(q) {\n  var index = (typeof q === 'number') ? q : this.selectColumn(0).indexOf(q);\n\n  if (index > -1) {\n    this.matrix.splice(index, 1);\n  }\n  return this;\n}\n","import data from './data';\nimport { Dataset } from './dataset';\n// Utils\nimport { each } from './utils/each';\nimport isDateString from './utils/assert-date-string';\nimport { stripHtmlTags } from './utils/strip-html-tags';\nimport { escapeHtml } from './utils/escape-html';\nimport libraries from './libraries';\n\n// Constructor\nexport const Dataviz = function () {\n  if (this instanceof Dataviz === false) {\n    return new Dataviz();\n  }\n\n  this.dataset = new Dataset();\n  this.view = {\n    _prepared: false,\n    _rendered: false,\n    _artifacts: { /* state bin */ },\n\n    chartOptions: {},\n    colors: [\n      '#00bbde', '#fe6672', '#eeb058', '#8a8ad6', '#ff855c', '#00cfbb',\n      '#5a9eed', '#73d483', '#c879bb', '#0099b6', '#d74d58', '#cb9141',\n      '#6b6bb6', '#d86945', '#00aa99', '#4281c9', '#57b566', '#ac5c9e',\n      '#27cceb', '#ff818b', '#f6bf71', '#9b9be1', '#ff9b79', '#26dfcd',\n      '#73aff4', '#87e096', '#d88bcb',\n    ],\n    colorMapping: {},\n    dateFormat: undefined,\n    el: undefined,\n    height: undefined,\n    indexBy: 'timeframe.start',\n    labels: [],\n    labelMapping: {},\n    library: 'default',\n    notes: undefined,\n    sortGroups: undefined,\n    sortIntervals: undefined,\n    stacked: false,\n    theme: 'keen-dataviz',\n    title: undefined,\n    type: undefined,\n    width: undefined,\n  };\n\n  Dataviz.visuals.push(this);\n};\n\nDataviz.libraries = { default: {} };\nif (typeof window !== 'undefined') {\n  Dataviz.libraries.default = libraries(Dataviz);\n}\nDataviz.visuals = [];\n\nDataviz.register = function (name, actions) {\n  Dataviz.libraries[name] = Dataviz.libraries[name] || {};\n  each(actions, function(method, key){\n    Dataviz.libraries[name][key] = method;\n  });\n};\n\nDataviz.find = function(target){\n    if (!arguments.length) return Dataviz.visuals;\n    var el = target.nodeName ? target : document.querySelector(target),\n        match = null;\n    each(Dataviz.visuals, function(visual){\n      if (el == visual.el()){\n        match = visual;\n        return false;\n      }\n    });\n    return match;\n};\n\n\n  // Prototype\n  // ------------\n\nDataviz.prototype.attributes = function(obj){\n    if (!arguments.length) return this.view;\n    var view = this.view;\n    each(obj, function(prop, key){\n      // Handle deprecated property names\n      if (key === 'chartType') {\n        key = 'type';\n      }\n      view[key] = prop;\n    });\n    return this;\n};\n\nDataviz.prototype.call = function(fn){\n    fn.call(this);\n    return this;\n};\n\nDataviz.prototype.chartOptions = function(obj){\n    var self = this;\n    if (!arguments.length) return this.view.chartOptions;\n    if (obj === null) {\n      this.view.chartOptions = {};\n    }\n    else if (typeof obj === 'object') {\n      each(obj, function(value, key){\n        self.view.chartOptions[key] = (value ? value : null);\n      });\n    }\n    return this;\n};\n\nDataviz.prototype.colors = function(arr){\n    if (!arguments.length) return this.view.colors;\n    this.view.colors = (arr instanceof Array ? arr : []);\n    return this;\n};\n\nDataviz.prototype.colorMapping = function(obj){\n    var self = this;\n    if (!arguments.length) return this.view.colorMapping;\n    if (obj === null) {\n      this.view.colorMapping = {};\n    }\n    else if (typeof obj === 'object') {\n      each(obj, function(value, key){\n        self.view.colorMapping[key] = (value ? value : null);\n      });\n    }\n    return this;\n};\n\nDataviz.prototype.data = data;\n\nDataviz.prototype.dateFormat = function(val){\n    if (!arguments.length) return this.view.dateFormat;\n    if (typeof val === 'string' || typeof val === 'function') {\n      this.view.dateFormat = val;\n    }\n    else {\n      this.view.dateFormat = undefined;\n    }\n    return this;\n};\n\nDataviz.prototype.destroy = function(){\n    var library = this.library(),\n        type = this.type(),\n        element = this.el();\n\n    // Call destroy method if present\n  if (Dataviz.libraries[library]\n      && Dataviz.libraries[library][type]){\n        Dataviz.libraries[library][type].destroy.call(this);\n  }\n\n    // Clear rendered artifacts, state bin\n    if (element) {\n      element.innerHTML = '';\n    }\n    this.view._prepared = false;\n    this.view._rendered = false;\n    this.view._artifacts = {};\n    return this;\n};\n\nDataviz.prototype.el = function(target){\n    var self = this;\n    if (!arguments.length) return this.view.el;\n    domReady(function(){\n      if (target && target !== null) {\n        if (target.nodeName) {\n          self.view.el = target;\n        }\n        else if (document.querySelector) {\n          self.view.el = document.querySelector(target);\n        }\n      }\n      else {\n        self.view.el = undefined;\n      }\n    });\n    return this;\n};\n\nDataviz.prototype.height = function(num){\n    if (!arguments.length) return this.view['height'];\n    this.view['height'] = (!isNaN(parseInt(num)) ? parseInt(num) : null);\n    return this;\n};\n\n// IMPORTANT: Must be run before data parsing\nDataviz.prototype.indexBy = function(str){\n    if (!arguments.length) return this.view.indexBy;\n    this.view.indexBy = (str ? String(str) : 'timeframe.start');\n    return this;\n};\n\nDataviz.prototype.labels = function(arr){\n    if (!arguments.length) return this.view.labels;\n    this.view.labels = (arr instanceof Array ? arr : []);\n\n    // Write labels\n    if (this.data()[0].length === 2 && !isDateString(this.data()[1][0])) {\n      this.dataset.updateColumn(0, function(value, index){\n        if (this.view.labels[index-1]) {\n          return stripHtmlTags(String(this.view.labels[index-1]));\n        }\n        return stripHtmlTags(value);\n      }.bind(this));\n    }\n    else {\n      this.dataset.updateRow(0, function(value, index){\n        if (index > 0 && this.view.labels[index-1]) {\n          return stripHtmlTags(String(this.view.labels[index-1]));\n        }\n        return stripHtmlTags(value);\n      }.bind(this));\n    }\n    return this;\n};\n\nDataviz.prototype.labelMapping = function(obj){\n    if (!arguments.length) return this.view.labelMapping;\n    if (obj === null) {\n      this.view.labelMapping = {};\n    }\n    else if (typeof obj === 'object') {\n      each(obj, function(value, key){\n        this.view.labelMapping[key] = (value ? value : null);\n      }.bind(this));\n}\n\n    // Write labels\n    if (this.data()[0].length === 2 && !isDateString(this.data()[1][0])) {\n      this.dataset.updateColumn(0, function(value){\n        if (this.view.labelMapping[value]) {\n          return stripHtmlTags(String(this.view.labelMapping[value]));\n        }\n        return stripHtmlTags(value);\n      }.bind(this));\n    }\n    else {\n      this.dataset.updateRow(0, function(value){\n        if (this.view.labelMapping[value]) {\n          return stripHtmlTags(String(this.view.labelMapping[value]));\n        }\n        return stripHtmlTags(value);\n      }.bind(this));\n    }\n    return this;\n  };\n\nDataviz.prototype.library = function(str){\n    if (!arguments.length) return this.view['library'];\n    this.view['library'] = (str ? String(str) : null);\n    return this;\n};\n\nDataviz.prototype.message = function(){\n    var loader;\n    if (this.view._rendered) {\n      this.destroy();\n    }\n    if (this.el()) {\n      this.el().innerHTML = '';\n      var message = Dataviz.libraries['default'].message;\n      if (message.render) {\n        message.render.apply(this, arguments);\n      }\n    }\n    return this;\n};\n\nDataviz.prototype.notes = function(str){\n    if (!arguments.length) return this.view['notes'];\n    this.view['notes'] = (str ? String(str) : null);\n    return this;\n};\n\nDataviz.prototype.prepare = function(){\n    var self = this, loader;\n\n    if (!this.el()) {\n      throw 'A DOM element is required. Check out the .el() method.';\n      return;\n    }\n\n    domReady(function(){\n      if (self.view._rendered) {\n        self.destroy();\n      }\n      if (self.el()) {\n        self.el().innerHTML = '';\n        loader = Dataviz.libraries['default'].spinner;\n        if (loader.render) {\n          loader.render.call(self);\n        }\n        self.view._prepared = true;\n      }\n    });\n    return this;\n};\n\nDataviz.prototype.render = function(){\n    var self = this,\n        loader = Dataviz.libraries['default'].spinner,\n        library = this.library(),\n        type = this.type(),\n        element = this.el();\n\n    if (!this.el()) {\n      this.message('A DOM element is required. Check out the .el() method.');\n      throw 'A DOM element is required. Check out the .el() method.';\n      return;\n    }\n\n    if (!this.type()) {\n      this.message('A chart type is required. Check out the .type() method.');\n      throw 'A chart type is required. Check out the .type() method.';\n      return;\n    }\n\n    domReady(function(){\n      if (self.view._prepared && loader.destroy) {\n        loader.destroy.apply(self, arguments);\n      }\n      self.el().innerHTML = '';\n\n      if (Dataviz.libraries[library] === 'undefined'){\n        // Error: Unregistered library\n        self.message('Incorrect library');\n        throw 'Incorrect library';\n        return;\n      }\n      else {\n        if (typeof Dataviz.libraries[library][type] === 'undefined') {\n          self.message('Incorrect chart type');\n          throw 'Incorrect chart type';\n          return;\n        }\n        else {\n          buildDomWrapper(self.el(), {\n            notes: self.notes(),\n            theme: self.theme(),\n            title: self['title']()\n          });\n          Dataviz.libraries[library][type].render.call(self);\n          self.view._rendered = true;\n        }\n      }\n    });\n    return this;\n};\n\nDataviz.prototype.sortGroups = function(str){\n    if (!arguments.length) return this.view.sortGroups;\n    this.view.sortGroups = (str ? String(str) : null);\n\n    // Sort groups\n    if (this.view.sortGroups && this.data().length > 1) {\n      if (isDateString(this.data()[1][0])) {\n        this.dataset.sortColumns(this.view.sortGroups, this.dataset.getColumnSum);\n      }\n      else {\n        this.dataset.sortRows(this.view.sortGroups, this.dataset.getRowSum);\n      }\n    }\n    return this;\n};\n\nDataviz.prototype.sortIntervals = function(str){\n    if (!arguments.length) return this.view.sortIntervals;\n    this.view.sortIntervals = (str ? String(str) : null);\n    if (this.view.sortIntervals) {\n      this.dataset.sortRows(this.view.sortIntervals);\n    }\n    return this;\n};\n\nDataviz.prototype.stacked = function(bool){\n    if (!arguments.length) return this.view['stacked'];\n    this.view['stacked'] = bool ? true : false;\n    return this;\n};\n\nDataviz.prototype.theme = function(str){\n    if (!arguments.length) return this.view.theme;\n    this.view.theme = (str ? String(str) : null);\n    return this;\n};\n\nDataviz.prototype.title = function(str){\n    if (!arguments.length) return this.view['title'];\n    this.view['title'] = (str ? String(str) : null);\n    return this;\n};\n\nDataviz.prototype.type = function(str){\n    if (!arguments.length) return this.view['type'];\n    this.view['type'] = (str ? convertChartTypes(str) : null);\n    return this;\n};\n\nDataviz.prototype.update = function(){\n    var library = this.library(),\n        type = this.type(),\n        element = this.el();\n    if (library && type && element && Dataviz.libraries[library][type].update) {\n      Dataviz.libraries[library][type].update.apply(this, arguments);\n    }\n    return this;\n};\n\nDataviz.prototype.width = function(num){\n    if (!arguments.length) return this.view['width'];\n    this.view['width'] = (!isNaN(parseInt(num)) ? parseInt(num) : null);\n    return this;\n};\n\n  // Deprecations\n  Dataviz.prototype.chartType = Dataviz.prototype.type;\n  Dataviz.prototype.error = Dataviz.prototype.message;\n  Dataviz.prototype.parseRawData = Dataviz.prototype.data;\n  Dataviz.prototype.parseRequest = function(){\n    // this.emit('error', 'This method is no longer supported. Use .data() instead: https://github.com/keen/keen-dataviz.js#data');\n    return this;\n  };\n  Dataviz.prototype.initialize = function(){\n    // this.emit('error', 'This method is no longer supported, and can be omitted as it has no impact');\n    return this;\n  };\n\n  // Private\n  // ------------\n\nfunction buildDomWrapper(el, options) {\n  let html = '';\n  html += '<div class=\"' + options.theme + '\">';\n  if (options['title']) {\n    html += '<div class=\"' + options.theme + '-title\">' + escapeHtml(options['title']) + '</div>';\n  }\n  html += '<div class=\"' + options.theme + '-stage\"><div class=\"' + options.theme + '-rendering\"></div></div>';\n  if (options.notes) {\n    html += '<div class=\"' + options.theme + '-notes\">' + escapeHtml(options.notes) + '</div>';\n  }\n  html += '</div>';\n  el.innerHTML = html;\n}\n\nfunction convertChartTypes(str) {\n  const map = {\n    areachart: 'area',\n    barchart: 'horizontal-bar',\n    columnchart: 'bar',\n    linechart: 'line',\n    piechart: 'pie',\n  };\n  return map[str] || str;\n}\n\nfunction testDom(fn) {\n  if (/in/.test(document.readyState)) {\n    setTimeout(function(){\n      testDom(fn);\n    }, 9);\n  } else {\n    fn();\n  }\n}\n\nfunction domReady(fn) {\n  if (typeof document !== 'undefined' || typeof window === 'undefined') {\n    fn();\n    return;\n  }\n  // Firefox 3.5 shim\n  if (document.readyState == null && document.addEventListener) {\n    document.addEventListener('DOMContentLoaded', function DOMContentLoaded() {\n      document.removeEventListener('DOMContentLoaded', DOMContentLoaded, false);\n      document.readyState = 'complete';\n    }, false);\n    document.readyState = 'loading';\n  }\n  testDom(fn);\n}\n\nexport { Dataset } from './dataset';\n\nexport default Dataviz;\n","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1, eval)(\"this\");\r\n} catch (e) {\r\n\t// This works if the window reference is available\r\n\tif (typeof window === \"object\") g = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n","import { Dataviz, Dataset } from './index';\n\nconst env = typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : typeof window !== 'undefined' ? window : {};\n\nexport const extendKeenGlobalObject = function(env) {\n  env.Keen = env.Keen || {};\n  env.Keen.Dataset = Dataset;\n  env.Keen.Dataviz = Dataviz;\n};\n\nif (\n     (typeof KEEN_GLOBAL_OBJECT !== 'undefined'\n      && KEEN_GLOBAL_OBJECT)\n     || typeof KEEN_EXPOSE_AS_GLOBAL_OBJECT !== 'undefined'\n   ) {\n  extendKeenGlobalObject(env);\n}\n\nexport { Dataviz, Dataset } from './index';\nexport default Dataviz;\n"],"sourceRoot":""}