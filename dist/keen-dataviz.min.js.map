{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap","webpack:///./lib/utils/each.js","webpack:///./lib/utils/escape-html.js","webpack:///./lib/utils/extend.js","webpack:///./node_modules/d3/d3.js","webpack:///./lib/utils/assert-date-string.js","webpack:///./lib/dataset/utils/create-null-list.js","webpack:///./lib/dataset/modifiers/append.js","webpack:///./lib/utils/strip-html-tags.js","webpack:///./lib/dataset/utils/analyses.js","webpack:///./lib/dataset/index.js","webpack:///./lib/libraries/default/spinner.js","webpack:///./lib/libraries/default/table.js","webpack:///./lib/utils/pretty-number.js","webpack:///./lib/libraries/default/metric.js","webpack:///./lib/libraries/default/message.js","webpack:///./lib/libraries/c3/extensions/tooltip-contents.js","webpack:///./lib/libraries/c3/extensions/paginating-legend.js","webpack:///./lib/libraries/c3/extensions/default-date-format.js","webpack:///./lib/utils/extend-deep.js","webpack:///./node_modules/c3/c3.js","webpack:///./lib/libraries/index.js","webpack:///./lib/data.js","webpack:///./lib/dataset/utils/flatten.js","webpack:///./lib/dataset/utils/parsers.js","webpack:///./lib/dataset/modifiers/update.js","webpack:///./lib/dataset/modifiers/sort.js","webpack:///./lib/dataset/modifiers/select.js","webpack:///./lib/dataset/modifiers/insert.js","webpack:///./lib/dataset/modifiers/filter.js","webpack:///./lib/dataset/modifiers/delete.js","webpack:///(webpack)/buildin/global.js","webpack:///./lib/index.js","webpack:///./lib/browser.js"],"names":["root","factory","exports","module","define","amd","a","i","window","installedModules","__webpack_require__","moduleId","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","s","each","cb","Array","length","escapeHtml","string","escape","str","match","matchHtmlRegExp","exec","html","index","lastIndex","charCodeAt","substring","extend","target","arguments","prop","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_RESULT__","d3","version","d3_arraySlice","slice","d3_array","list","d3_document","this","document","d3_documentElement","node","ownerDocument","documentElement","d3_window","defaultView","childNodes","nodeType","e","array","Date","now","createElement","style","setProperty","error","d3_element_prototype","Element","d3_element_setAttribute","setAttribute","d3_element_setAttributeNS","setAttributeNS","d3_style_prototype","CSSStyleDeclaration","d3_style_setProperty","space","local","priority","d3_ascending","b","NaN","d3_number","x","d3_numeric","isNaN","d3_bisector","compare","left","lo","hi","mid","right","ascending","descending","min","f","max","extent","sum","mean","j","quantile","values","H","h","Math","floor","v","median","numbers","push","sort","variance","deviation","apply","sqrt","d3_bisect","d3_transposeLength","bisectLeft","bisect","bisectRight","bisector","shuffle","i0","i1","t","random","permute","indexes","permutes","pairs","p1","transpose","matrix","row","zip","keys","map","key","entries","merge","arrays","merged","abs","d3_class","ctor","properties","d3_Map","_","create","range","start","stop","step","Infinity","Error","k","d3_range_integerScale","forEach","set","isArray","d3_map_proto","d3_map_zero","d3_map_escape","d3_map_unescape","d3_map_has","d3_map_remove","d3_map_keys","d3_map_size","size","d3_map_empty","d3_Set","d3_identity","d3_rebind","source","method","d3_vendorSymbol","charAt","toUpperCase","d3_vendorPrefixes","prefixName","has","remove","empty","nest","sortValues","rollup","sortKeys","mapType","depth","keyValue","setter","valuesByKey","sortKey","keyMap","order","add","behavior","rebind","d3_noop","d3_dispatch","d3_dispatch_event","dispatch","listeners","listenerByName","event","z","on","listener","indexOf","concat","d3_eventPreventDefault","preventDefault","d3_eventSource","sourceEvent","d3_eventDispatch","of","thiz","argumentz","e1","e0","type","requote","replace","d3_requote_re","d3_subclass","__proto__","d3_selection","groups","d3_selectionPrototype","d3_select","querySelector","d3_selectAll","querySelectorAll","d3_selectMatches","d3_selectMatcher","matches","Sizzle","matchesSelector","selection","select","d3_selection_selector","selector","d3_selection_selectorAll","subgroup","subnode","group","subgroups","parentNode","__data__","selectAll","d3_nsXhtml","d3_nsPrefix","svg","xhtml","xlink","xml","xmlns","d3_selection_attr","ns","qualify","removeAttributeNS","removeAttribute","d3_collapse","trim","d3_selection_classedRe","RegExp","d3_selection_classes","split","d3_selection_classed","d3_selection_classedName","re","classList","getAttribute","test","d3_selection_style","removeProperty","d3_selection_property","d3_selection_creator","createElementNS","namespace","namespaceURI","d3_selectionRemove","parent","removeChild","d3_selection_dataNode","data","d3_selection_filter","d3_selection_each","callback","d3_selection_enter","d3_selection_enterPrototype","prefix","attr","getAttributeNS","classed","contains","getComputedStyle","getPropertyValue","text","textContent","innerHTML","append","appendChild","insert","before","insertBefore","bind","groupData","nodeData","n0","updateNodes","enterNodes","exitNodes","nodeByKeyValue","keyValues","update","enter","exit","datum","filter","next","nextSibling","comparator","args","d3_selection_on","capture","wrap","d3_selection_onListener","d3_selection_onFilters","onRemove","removeEventListener","$","d3_selection_onFilter","addEventListener","upgroup","j0","nodes","mouseenter","mouseleave","related","relatedTarget","compareDocumentPosition","d3_event_dragSelect","d3_event_dragId","d3_event_dragSuppress","click","w","suppressClick","off","setTimeout","mouse","container","d3_mousePoint","d3_mouse_bug44083","navigator","userAgent","changedTouches","ownerSVGElement","createSVGPoint","point","scrollX","scrollY","ctm","position","top","margin","padding","border","getScreenCTM","pageX","y","pageY","clientX","clientY","matrixTransform","inverse","rect","getBoundingClientRect","clientLeft","clientTop","d3_behavior_dragTouchId","identifier","touch","touches","drag","origin","mousedown","dragstart","touchstart","id","subject","move","end","dragOffset","correspondingElement","dragged","dragId","dragName","dragSubject","dx","dy","position1","position0","dragRestore","ε","ε2","π","PI","τ","τε","halfπ","d3_radians","d3_degrees","d3_sgn","d3_cross2d","d3_acos","acos","d3_asin","asin","d3_cosh","exp","d3_haversin","sin","ρ","SQRT2","interpolateZoom","p0","S","ux0","uy0","w0","ux1","uy1","w1","d2","log","d1","b0","b1","r0","r1","coshr0","u","d3_sinh","duration","zoom","translate0","center0","center","mousewheelTimer","touchtime","x0","x1","y0","y1","view","scaleExtent","d3_behavior_zoomInfinity","zooming","mousemove","mouseup","g","mousedowned","d3_behavior_zoomWheel","mousewheeled","dblclicked","touchstarted","location","scaleTo","translateTo","zoomTo","that","__chart__","pow","transition","rescale","domain","invert","zoomstarted","zoomed","scale","translate","zoomended","location0","d3_selection_interrupt","scale0","locations0","distance0","zoomName","touchmove","touchend","targets","relocate","started","moved","ended","changed","LN2","q","l0","l1","distance1","scale1","clearTimeout","d3_behavior_zoomDelta","shiftKey","ceil","deltaY","deltaMode","wheelDelta","detail","view1","d3_transitionInheritId","tween","cx","cy","copy","d3_color","d3_hsl","d3_rgb_parse","d3_rgb_hsl","color","toString","rgb","hsl","d3_hslPrototype","d3_hsl_rgb","m1","m2","vv","round","d3_rgb","d3_hcl","d3_lab_hcl","d3_lab","d3_rgb_lab","brighter","darker","hcl","d3_hclPrototype","d3_hcl_lab","cos","d3_lab_K","lab","d3_lab_X","d3_lab_Y","d3_lab_Z","d3_labPrototype","d3_lab_rgb","d3_xyz_rgb","d3_lab_xyz","atan2","d3_xyz_lab","d3_rgbNumber","d3_rgbString","d3_rgbPrototype","d3_rgb_hex","format","toLowerCase","parseFloat","d3_rgb_parseNumber","d3_rgb_names","parseInt","d3_rgb_xyz","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","d3_functor","d3_xhrType","response","url","mimeType","d3_xhr","xhr","headers","request","XMLHttpRequest","responseType","respond","result","status","responseText","d3_xhrHasResponse","load","XDomainRequest","onload","onerror","onreadystatechange","readyState","onprogress","progress","header","send","open","setRequestHeader","overrideMimeType","beforesend","abort","d3_xhr_fixCallback","functor","dsv","delimiter","reFormat","delimiterCode","typedResponse","parse","formatRow","formatValue","join","parseRows","Function","JSON","stringify","eol","EOL","EOF","rows","N","I","token","formatRows","fieldSet","fields","field","csv","tsv","d3_timer_queueHead","d3_timer_queueTail","d3_timer_interval","d3_timer_timeout","d3_timer_frame","d3_timer","delay","then","timer","d3_timer_step","d3_timer_mark","d3_timer_sweep","isFinite","t0","t1","time","d3_format_precision","LN10","flush","d3_formatPrefixes","symbol","formatPrefix","precision","d3_format_re","d3_format_types","String","fromCharCode","X","toPrecision","toExponential","toFixed","d3_format_typeDefault","d3_time","d3_date","d3_date_utc","UTC","getDate","getUTCDate","getDay","getUTCDay","getFullYear","getUTCFullYear","getHours","getUTCHours","getMilliseconds","getUTCMilliseconds","getMinutes","getUTCMinutes","getMonth","getUTCMonth","getSeconds","getUTCSeconds","getTime","getTimezoneOffset","valueOf","setDate","d3_time_prototype","setUTCDate","setDay","setUTCDay","setFullYear","setUTCFullYear","setHours","setUTCHours","setMilliseconds","setUTCMilliseconds","setMinutes","setUTCMinutes","setMonth","setUTCMonth","setSeconds","setUTCSeconds","setTime","d3_time_interval","number","date","d0","offset","dt","times","utc","d3_time_interval_utc","year","day","years","days","dayOfYear","interval","week","sunday","weeks","weekOfYear","sundayOfYear","d3_time_formatPads","-","0","d3_time_numberRe","d3_time_percentRe","d3_time_formatPad","fill","width","sign","d3_time_formatRe","names","d3_time_formatLookup","d3_time_parseWeekdayNumber","d3_time_parseWeekNumberSunday","U","d3_time_parseWeekNumberMonday","W","d3_time_parseFullYear","d3_time_parseYear","d3_time_parseZone","Z","d3_time_parseMonthNumber","d3_time_parseDay","d3_time_parseDayOfYear","d3_time_parseHour24","d3_time_parseMinutes","M","d3_time_parseSeconds","d3_time_parseMilliseconds","L","d3_time_zone","zs","zh","zm","d3_time_parseLiteralPercent","d3_time_formatMulti","formats","locale","numberFormat","locale_decimal","decimal","locale_thousands","thousands","locale_grouping","grouping","locale_currency","currency","formatGroup","reverse","specifier","align","zfill","comma","suffix","integer","exponent","zcomma","fullSuffix","negative","unit","after","lastIndexOf","d3_locale_numberFormat","timeFormat","locale_dateTime","dateTime","locale_date","locale_time","locale_periods","periods","locale_days","locale_shortDays","shortDays","locale_months","months","locale_shortMonths","shortMonths","d3_time_format","template","d3_time_formats","d3_time_parse","localZ","d3_time_parsers","multi","d3_time_periodLookup","d3_time_dayRe","d3_time_dayLookup","d3_time_dayAbbrevRe","d3_time_dayAbbrevLookup","d3_time_monthRe","d3_time_monthLookup","d3_time_monthAbbrevRe","d3_time_monthAbbrevLookup","A","B","mondayOfYear","Y","%","d3_locale_timeFormat","d3_locale_enUS","d3_adder","geo","d3_adderSum","d3_adderTemp","reset","bv","av","d3_geo_streamGeometry","geometry","d3_geo_streamGeometryType","stream","d3_geo_streamObjectType","Feature","feature","FeatureCollection","features","Sphere","sphere","Point","coordinates","MultiPoint","LineString","d3_geo_streamLine","MultiLineString","Polygon","d3_geo_streamPolygon","MultiPolygon","GeometryCollection","geometries","closed","coordinate","lineStart","lineEnd","polygonStart","polygonEnd","area","d3_geo_areaSum","d3_geo_area","d3_geo_centroidW0","d3_geo_centroidW1","d3_geo_centroidX0","d3_geo_centroidY0","d3_geo_centroidZ0","d3_geo_centroidX1","d3_geo_centroidY1","d3_geo_centroidZ1","d3_geo_centroidX2","d3_geo_centroidY2","d3_geo_centroidZ2","d3_geo_areaRingSum","d3_geo_areaRingStart","λ00","φ00","λ0","cosφ0","sinφ0","nextPoint","λ","φ","dλ","sdλ","adλ","cosφ","sinφ","d3_geo_cartesian","spherical","d3_geo_cartesianDot","d3_geo_cartesianCross","d3_geo_cartesianAdd","d3_geo_cartesianScale","vector","d3_geo_cartesianNormalize","d3_geo_spherical","cartesian","d3_geo_sphericalEqual","bounds","φ0","λ1","φ1","λ_","λ__","φ__","dλSum","ranges","bound","ringPoint","ringStart","ringEnd","linePoint","normal","inflection","λi","antimeridian","φi","angle","compareRanges","withinRange","best","centroid","d3_geo_centroid","d3_geo_centroidPoint","d3_geo_centroidLineStart","d3_geo_centroidLineEnd","d3_geo_centroidRingStart","d3_geo_centroidPointXYZ","z0","cz","d3_geo_compose","compose","d3_true","d3_geo_clipPolygon","segments","clipStartInside","interpolate","clip","segment","d3_geo_clipPolygonIntersection","d3_geo_clipPolygonLinkCircular","entry","points","current","isSubject","other","d3_geo_clip","pointVisible","clipLine","clipStart","rotate","line","rotatedClipStart","pointRing","polygon","meridian","parallel","meridianNormal","polarAngle","winding","ring","point0","arc","intersection","φarc","d3_geo_pointInPolygon","polygonStarted","d3_geo_clipSort","pointLine","buffer","d3_geo_clipBufferListener","ringListener","clean","ringSegments","pop","shift","d3_geo_clipSegmentLength1","lines","rejoin","d3_geo_clipAntimeridian","sλ0","sλ1","cosφ1","sinλ0_λ1","atan","d3_geo_clipAntimeridianIntersect","from","to","direction","d3_geom_clipLine","ax","ay","d3_geo_clipExtentMAX","d3_geo_clipExtent","x__","y__","v__","x_","y_","v_","first","listener_","bufferListener","wn","insidePolygon","inside","visible","a1","corner","comparePoints","ca","d3_geo_conic","projectAt","d3_geo_projectionMutator","parallels","d3_geo_conicEqualArea","C","ρ0","forward","ρ0_y","clipExtent","output","valid","conicEqualArea","raw","albers","albersUsa","lower48Point","alaskaPoint","hawaiiPoint","lower48","alaska","hawaii","pointStream","lower48Stream","alaskaStream","hawaiiStream","d3_geo_pathAreaSum","d3_geo_pathAreaPolygon","d3_geo_pathBoundsX0","d3_geo_pathBoundsY0","d3_geo_pathBoundsX1","d3_geo_pathBoundsY1","d3_geo_pathArea","d3_geo_pathAreaRingStart","x00","y00","d3_geo_pathBounds","d3_geo_pathBufferCircle","radius","d3_geo_lengthSum","d3_geo_pathCentroid","d3_geo_pathCentroidPoint","d3_geo_pathCentroidLineStart","d3_geo_pathCentroidLineEnd","d3_geo_pathCentroidRingStart","d3_geo_resample","project","δ2","cosMinDistance","maxDepth","resample","a00","b00","c00","a0","c0","resampleLineTo","d3_geo_transformPoint","c1","φ2","λ2","x2","y2","dx2","dy2","dz","d3_geo_transform","d3_geo_projection","projectRotate","δx","δy","projectResample","δλ","δφ","δγ","preclip","postclip","clipAngle","projection","d3_geo_rotation","invalidate","d3_geo_projectionRadians","cr","smallRadius","notHemisphere","v0","v00","point2","point1","code","intersect","d3_geo_circleInterpolate","two","n1","n2","n2n2","n1n2","determinant","c2","n1xn2","uu","t2","polar","q1","d3_geo_clipCircle","d3_geo_equirectangular","d3_geo_identityRotation","d3_geo_rotationλ","d3_geo_rotationφγ","d3_geo_forwardRotationλ","rotation","cosδφ","sinδφ","cosδγ","sinδγ","sr","d3_geo_circleAngle","d3_geo_graticuleX","d3_geo_graticuleY","d3_source","d3_target","path","context","projectStream","contextStream","cacheStream","pointRadius","pointCircle","pointLineStart","lineEndPolygon","moveTo","lineTo","closePath","transform","methods","projectionMutator","equirectangular","circle","distance","Δλ","sinΔλ","cosΔλ","sinφ1","graticule","X1","X0","Y1","Y0","DX","DY","outline","majorExtent","minorExtent","majorStep","minorStep","greatArc","source_","target_","cy0","sy0","cy1","sy1","kx0","ky0","kx1","ky1","d3_geo_length","d3_geo_azimuthal","azimuthal","cosλ","sinc","cosc","d3_geo_azimuthalEqualArea","cosλcosφ","azimuthalEqualArea","d3_geo_azimuthalEquidistant","d3_geo_conicConformal","F","d3_geo_mercator","d3_geo_conicEquidistant","G","azimuthalEquidistant","conicConformal","conicEquidistant","d3_geo_gnomonic","d3_geo_mercatorProjection","clipAuto","gnomonic","mercator","d3_geo_orthographic","orthographic","d3_geo_stereographic","d3_geo_transverseMercator","d3_geom_pointX","d3_geom_pointY","d3_geom_hullUpper","hull","hs","d3_geom_hullOrder","stereographic","transverseMercator","geom","vertices","fx","fy","flippedPoints","upper","lower","skipLeft","skipRight","d3_geom_polygonPrototype","d3_geom_polygonInside","d3_geom_polygonIntersect","x3","x21","x43","y3","y21","y43","ua","d3_geom_polygonClosed","input","d3_geom_voronoiEdges","d3_geom_voronoiCells","d3_geom_voronoiBeaches","d3_geom_voronoiFirstCircle","d3_geom_voronoiCircles","d3_geom_voronoiBeachPool","d3_geom_voronoiCirclePool","d3_geom_voronoiCreateBeach","site","beach","d3_geom_voronoiRedBlackNode","edge","d3_geom_voronoiDetachBeach","d3_geom_voronoiDetachCircle","d3_geom_voronoiRemoveBeach","vertex","previous","P","disappearing","lArc","unshift","rArc","iArc","nArcs","d3_geom_voronoiSetEdgeEnd","d3_geom_voronoiCreateEdge","d3_geom_voronoiAttachCircle","d3_geom_voronoiAddBeach","dxl","dxr","directrix","d3_geom_voronoiLeftBreakPoint","d3_geom_voronoiRightBreakPoint","R","newArc","lSite","bx","by","rSite","hb","hc","rfocx","rfocy","pby2","lfocx","lfocy","plby2","hl","aby2","d3_geom_voronoiCell","edges","d3_geom_voronoiHalfEdgeOrder","cSite","ha","d3_geom_voronoiConnectEdge","vb","fm","fb","va","lx","ly","rx","ry","d3_geom_voronoiEdge","d3_geom_voronoiHalfEdge","d3_geom_voronoiRedBlackTree","d3_geom_voronoiRedBlackRotateLeft","tree","d3_geom_voronoiRedBlackRotateRight","d3_geom_voronoiRedBlackFirst","d3_geom_voronoi","sites","bbox","d3_geom_voronoiVertexOrder","splice","d3_geom_voronoiClipEdges","cell","iHalfEdge","halfEdges","nHalfEdges","cells","iCell","prepare","d3_geom_voronoiCloseCells","diagram","grandpa","uncle","sibling","voronoi","d3_geom_voronoiClipExtent","polygons","links","triangles","s0","s1","d3_geom_quadtreeCompatX","d3_geom_quadtreeCompatY","d3_interpolateRgb","ar","ag","ab","br","bg","bb","d3_interpolateObject","d3_interpolate","d3_interpolateNumber","d3_interpolateString","am","bm","bs","bi","d3_interpolate_numberA","d3_interpolate_numberB","delaunay","quadtree","compat","xs","ys","x1_","y1_","x2_","y2_","leaf","nx","ny","insertChild","nPoint","xm","ym","below","visit","d3_geom_quadtreeVisit","sx","sy","children","find","closestPoint","minDistance2","distance2","d3_geom_quadtreeFind","interpolateRgb","interpolateObject","interpolateNumber","interpolateString","interpolators","d3_interpolateArray","na","nb","interpolateArray","d3_ease_default","d3_ease","linear","poly","quad","d3_ease_quad","cubic","d3_ease_cubic","d3_ease_sin","d3_ease_exp","d3_ease_circle","elastic","back","bounce","d3_ease_bounce","d3_ease_mode","in","out","d3_ease_reverse","in-out","d3_ease_reflect","out-in","d3_ease_cubicInOut","t3","d3_interpolateRound","d3_transform","kx","d3_transformNormalize","kz","d3_transformDot","ky","skew","ease","interpolateHcl","ah","ac","al","bh","bc","bl","interpolateHsl","as","interpolateLab","aa","ba","interpolateRound","baseVal","consolidate","d3_transformIdentity","d3_interpolateTransformPop","d3_interpolateTransform","ta","tb","d3_interpolateTranslate","ra","rb","d3_interpolateRotate","wa","wb","d3_interpolateSkew","ka","kb","d3_interpolateScale","d3_uninterpolateNumber","d3_uninterpolateClamp","d3_layout_bundlePath","link","lca","aNodes","d3_layout_bundleAncestors","bNodes","aNode","bNode","sharedNode","d3_layout_bundleLeastCommonAncestor","ancestors","d3_layout_forceDragstart","fixed","d3_layout_forceDragend","d3_layout_forceMouseover","px","py","d3_layout_forceMouseout","interpolateTransform","layout","bundle","paths","chord","chords","sortGroups","sortSubgroups","sortChords","relayout","groupSums","groupIndex","subgroupIndex","di","dj","subindex","startAngle","endAngle","resort","force","alpha","distances","strengths","charges","friction","linkDistance","d3_layout_forceLinkDistance","linkStrength","d3_layout_forceLinkStrength","charge","chargeDistance2","d3_layout_forceChargeDistance2","gravity","theta2","repulse","dw","dn","pointCharge","dragmove","resume","tick","weight","d3_layout_forceAccumulate","chargeDistance","theta","neighbors","dimension","candidates","d3_layout_hierarchyRebind","hierarchy","d3_layout_hierarchyLinks","d3_layout_hierarchyVisitBefore","d3_layout_hierarchyVisitAfter","nodes2","d3_layout_hierarchyChildren","d3_layout_hierarchyValue","d3_layout_hierarchySort","child","stack","childs","revalue","partition","pie","Number","d3_layout_pieSortByValue","padAngle","da","pa","arcs","d3_layout_stackX","d3_layout_stackY","d3_layout_stackOut","d3_layout_stackOrderDefault","d3_layout_stackOffsetZero","series","orders","offsets","d3_layout_stackOrders","d3_layout_stackOffsets","inside-out","d3_layout_stackMaxIndex","sums","d3_layout_stackReduceSum","bottom","tops","bottoms","default","silhouette","wiggle","s2","s3","o0","expand","zero","reduce","d3_layout_stackSum","d3_layout_histogramBinSturges","d3_layout_histogramBinFixed","d3_layout_histogramRange","d3_layout_packSort","d3_layout_packInsert","_pack_next","_pack_prev","d3_layout_packSplice","d3_layout_packIntersects","dr","d3_layout_packSiblings","xMin","xMax","yMin","yMax","d3_layout_packLink","d3_layout_packPlace","isect","d3_layout_packUnlink","db","dc","d3_layout_treeSeparation","d3_layout_treeLeft","d3_layout_treeRight","d3_layout_treeMove","wm","wp","change","d3_layout_treeAncestor","vim","ancestor","d3_layout_treemapPadNull","d3_layout_treemapPad","d3_scaleExtent","d3_scaleRange","rangeExtent","d3_scale_bilinear","uninterpolate","d3_scale_nice","nice","d3_scale_niceStep","d3_scale_niceIdentity","histogram","frequency","valuer","ranger","binner","bin","bins","thresholds","pack","d3_layout_packTransform","separation","nodeSize","root0","root1","node1","queue","wrapTree","firstWalk","secondWalk","sizeNode","tx","siblings","d3_layout_treeShift","midpoint","vip","vop","vom","sip","sop","sim","som","apportion","cluster","previousNode","d3_layout_clusterX","d3_layout_clusterY","d3_layout_clusterLeft","d3_layout_clusterRight","treemap","stickies","pad","sticky","mode","ratio","squarify","score","remaining","worst","stickify","rmax","rmin","padConstant","µ","σ","logNormal","bates","irwinHall","d3_scale_polylinear","d3_scale_linearRebind","d3_scale_linearNice","d3_scale_linearTickRange","span","err","d3_scale_linearTicks","d3_scale_linearTickFormat","d3_scale_linearPrecision","d3_scale_linearFormatSignificant","d3_scale_linearFormatPrecision","d3_scale_linear","clamp","rangeRound","ticks","tickFormat","d3_scale_log","base","positive","niced","d3_scale_logNiceNegative","d3_scale_logFormat","d3_scale_powPow","d3_scale_pow","powp","powb","ordinal","d3_scale_ordinal","rangeBand","steps","xi","rangePoints","rangeRoundPoints","rangeBands","outerPadding","rangeRoundBands","category10","d3_category10","category20","d3_category20","category20b","d3_category20b","category20c","d3_category20c","d3_zero","d3_scale_quantile","quantiles","invertExtent","quantize","d3_scale_quantize","threshold","d3_scale_threshold","identity","d3_scale_identity","innerRadius","d3_svg_arcInnerRadius","outerRadius","d3_svg_arcOuterRadius","cornerRadius","padRadius","d3_svg_arcAuto","d3_svg_arcStartAngle","d3_svg_arcEndAngle","d3_svg_arcPadAngle","cw","rc","circleSegment","rp","ap","d3_svg_arcSweep","h1","h0","rc1","rc0","oc","kc","lc","t30","d3_svg_arcCornerTangents","t12","t03","t21","x01","y01","ox","oy","D","cx0","cx1","dx0","dy0","dx1","dy1","d3_svg_line","defined","d3_svg_lineLinear","interpolateKey","tension","d3_svg_lineInterpolators","linear-closed","d3_svg_lineLinearClosed","step-before","d3_svg_lineStepBefore","step-after","d3_svg_lineStepAfter","basis","d3_svg_lineBasis","basis-open","pi","d3_svg_lineDot4","d3_svg_lineBasisBezier3","d3_svg_lineBasisBezier","basis-closed","cardinal","d3_svg_lineHermite","d3_svg_lineCardinalTangents","cardinal-open","cardinal-closed","monotone","tangents","d3_svg_lineSlope","d3_svg_lineFiniteDifferences","d3_svg_lineMonotoneTangents","lp","p2","d3_svg_lineBasisBezier1","d3_svg_lineBasisBezier2","d3_svg_lineRadial","d3_svg_area","interpolateReverse","points0","points1","fx0","fy0","fx1","fy1","d3_svg_chordRadius","d3_svg_diagonalProjection","d3_svg_symbolSize","d3_svg_symbolType","d3_svg_symbolCircle","radial","curve","self","diagonal","p3","projection_","d3_svg_diagonalRadialProjection","d3_svg_symbols","cross","diamond","d3_svg_symbolTan30","square","triangle-down","d3_svg_symbolSqrt3","triangle-up","symbolTypes","d3_transitionId","d3_transitionNamespace","d3_transitionInherit","d3_transitionNode","d3_transition","interrupt","d3_selection_interruptNS","lock","activeId","active","count","d3_transitionPrototype","d3_transition_tween","d3_transition_text","inherit","tweens","elapsed","cancelId","cancel","subnodes","nameNS","attrNull","attrNullNS","attrTween","styleNull","styleTween","inheritId","id0","id1","axis","tickFormat_","orient","d3_svg_axisDefaultOrient","innerTickSize","outerTickSize","tickPadding","tickArguments_","tickValues","tickTransform","tickEnter","tickExit","tickUpdate","tickSpacing","pathUpdate","lineEnter","lineUpdate","textEnter","textUpdate","d3_svg_axisX","d3_svg_axisY","d3_svg_axisOrients","tickSize","tickSubdivide","brush","xExtentDomain","yExtentDomain","xExtent","yExtent","xClamp","yClamp","resizes","d3_svg_brushResizes","brushstart","background","resize","d3_svg_brushCursor","gUpdate","backgroundUpdate","redrawX","redrawY","redraw","eventTarget","event_","resizing","resizingX","resizingY","dragging","keyCode","brushmove","brushend","ex","ey","altKey","move1","extent1","extent0","yi","clear","nw","ne","se","sw","d3_time_formatUtc","d3_time_formatIso","d3_time_formatIsoNative","toISOString","d3_time_scale","tickMethod","d3_time_scaleSteps","d3_time_scaleMilliseconds","d3_time_scaleDate","skip","skipped","iso","second","seconds","minute","minutes","hour","timezone","hours","month","d3_time_scaleLocalMethods","d3_time_scaleLocalFormat","d3_time_scaleUtcMethods","d3_time_scaleUtcFormat","d3_json","d3_html","createRange","selectNode","body","createContextualFragment","json","responseXML","undefined","testObject","testString","_typeof","len","appendColumn","appendRow","_createNullList","_each","label","_createNullList2","newRow","col","selectColumn","stripHtmlTags","inputString","_extend","helpers","capitalized","arr","average","val","maximum","nums","minimum","del","analyses","_parsers","Dataset","meta","coords","colIndex","rowIndex","colResult","rowResult","selectRow","parser","_parsers2","render","spinner","artifacts","_artifacts","height","offsetPadding","prefixes","theme","el","animationName","setInterval","destroy","clearInterval","defaults","stickyHeader","stickyFooter","fixedHeader","dataset","offsetHeight","colAligns","colWidths","message","_generateTableRows","onscroll","scrollTop","prettyNumber","sciNo","suffixes","recurse","iteration","rhs","numNumerals","_prettyNumber","_escapeHtml","formattedNum","colors","title","opts","chartOptions","paddingTop","outer","inner","msg","titleContainer","notesContainer","className","notes","actualInnerHeight","defaultTitleFormat","defaultValueFormat","bgcolor","nameFormat","titleFormat","valueFormat","config","tooltip_format_name","tooltip_format_title","tooltip_format_value","CLASS","tooltip","levelColor","tooltipName","cols","chart","c3","columns","domNode","legendWidth","pagination","hidden","labels","total","_assertDateString2","legendEl","class","legendItems","paginateElOffset","paginateEl","paginateData","legendItemList","isHidden","font-size","pointer-events","getBBox","cursor","fill-opacity","focus","max-width","revert","toggle","path_d","stroke","getSelection","removeAllRanges","startDate","endDate","timeDiff","ms","extendDeep","c3_axis_fn","c3_axis_internal_fn","chartLine","chartLines","chartBar","chartBars","chartText","chartTexts","chartArc","chartArcs","chartArcsTitle","chartArcsBackground","chartArcsGaugeUnit","chartArcsGaugeMax","chartArcsGaugeMin","selectedCircle","selectedCircles","eventRect","eventRects","eventRectsSingle","eventRectsMultiple","zoomRect","focused","defocused","region","regions","tooltipContainer","shape","shapes","bar","bars","circles","arcLabelLine","areas","texts","gaugeValue","grid","gridLines","xgrid","xgrids","xgridLine","xgridLines","xgridFocus","ygrid","ygrids","ygridLine","ygridLines","axisX","axisXLabel","axisY","axisYLabel","axisY2","axisY2Label","legendBackground","legendItem","legendItemEvent","legendItemTile","legendItemHidden","legendItemFocused","dragarea","EXPANDED","SELECTED","INCLUDED","Symbol","iterator","obj","constructor","classCallCheck","instance","Constructor","TypeError","possibleConstructorReturn","ReferenceError","isValue","isFunction","isString","isUndefined","isDefined","ceil10","asHalfPixel","diffDomain","isEmpty","notEmpty","c3_chart_internal_fn","getOption","options","defaultValue","hasValue","dict","found","sanitise","getPathBox","box","items","pathSegList","getItem","minX","minY","AxisInternal","component","params","withOuterTick","tickArguments","tickOffset","tickCulling","tickCentered","tickTextCharSize","tickTextRotate","tickLength","generateAxis","generateTicks","copyScale","newScale","isCategory","textFormatted","formatted","updateRange","updateTickTextCharSize","internal","transitionise","withoutTransition","isVertical","tspanData","splitted","tickMultiline","splitTickText","tickMultilineMax","ellipsify","subtext","spaceIndex","textWidth","tickText","maxWidth","tickWidth","substr","ellipsified","available","padEnd","updateTickLength","lineY2","tickPosition","textY","textTransform","textTextAnchor","tspanDx","tspanDy","tickX","tickY","tspanUpdate","isCentered","tickInterval","getTotalLength","culling","Axis","_Component","owner","fn","_this","getPrototypeOf","subClass","superClass","writable","setPrototypeOf","inherits","componentKey","init","$$","main","axes","axis_x_inner","clipPathForXAxis","getTranslate","axis_x_show","axis_rotated","textAnchorForXAxisLabel","axis_y_inner","clipPathForYAxis","axis_y_show","textAnchorForYAxisLabel","axis_y2_show","textAnchorForY2AxisLabel","getXAxis","withoutRotateTickText","axisParams","isCategorized","axis_x_tick_multiline","axis_x_tick_multilineMax","axis_x_tick_width","axis_x_tick_rotate","isTimeSeries","parseDate","axis_x_tick_centered","axis_x_tick_culling","updateXAxisTickValues","axis_x_tick_fit","axis_x_tick_count","generateTickValues","mapTargetsToUniqueXs","xAxis","subXAxis","getYAxis","axis_y_tick_rotate","isTimeSeriesY","axis_y_tick_time_value","axis_y_tick_time_interval","getId","data_axes","getXAxisTickFormat","defaultAxisTimeFormat","categoryName","axis_x_tick_format","axisTimeFormat","getTickValues","getXAxisTickValues","axis_x_tick_values","getYAxisTickValues","axis_y_tick_values","yAxis","getY2AxisTickValues","axis_y2_tick_values","y2Axis","getLabelOptionByAxisId","axisId","option","axis_y_label","axis_y2_label","axis_x_label","getLabelText","setLabelText","getLabelPosition","defaultPosition","isInner","isOuter","isLeft","isCenter","isRight","isTop","isMiddle","isBottom","getXAxisLabelPosition","getYAxisLabelPosition","getY2AxisLabelPosition","getLabelPositionById","textForXAxisLabel","textForYAxisLabel","textForY2AxisLabel","xForAxisLabel","forHorizontal","dxForAxisLabel","textAnchorForAxisLabel","xForXAxisLabel","xForYAxisLabel","xForY2AxisLabel","dxForXAxisLabel","dxForYAxisLabel","dxForY2AxisLabel","dyForXAxisLabel","getMaxTickWidth","axis_x_height","dyForYAxisLabel","dyForY2AxisLabel","axis_y2_inner","withoutRecompute","targetsToShow","dummy","currentMaxTickWidths","filterTargetsToShow","getYDomain","yOrient","axis_y_tick_format","yAxisTickValues","y2Orient","axis_y2_tick_format","y2AxisTickValues","getXDomain","xOrient","xAxisTickFormat","xAxisTickValues","updateLabels","withTransition","getPadding","domainLength","convertPixelsToAxisPadding","pixels","tickCount","forTimeSeries","targetCount","tickValue","generateTransitions","axisSubX","subx","transitions","c3_chart_fn","Chart","ChartInternal","loadConfig","beforeInit","afterInit","bindThis","argThis","api","getDefaultConfig","cache","generate","initParams","data_url","convertUrlToData","data_mimeType","data_headers","data_keys","initWithData","data_json","convertJsonToData","data_rows","convertRowsToData","data_columns","convertColumnsToData","clipId","clipIdForXAxis","clipIdForYAxis","clipIdForGrid","clipIdForSubchart","clipPath","getClipPath","clipPathForGrid","clipPathForSubchart","dragStart","flowing","cancelClick","mouseover","transiting","generateColor","generateLevelColor","dataTimeFormat","data_xLocaltime","axis_x_localtime","hiddenTargetIds","hiddenLegendIds","focusedTargetIds","defocusedTargetIds","subXOrient","isLegendRight","legend_position","isLegendInset","isLegendTop","legend_inset_anchor","isLegendLeft","legendStep","legendItemWidth","legendItemHeight","rotated_padding_left","rotated_padding_right","rotated_padding_top","withoutFadeIn","intervalForObserveInserted","initChartElements","initBar","initLine","initArc","initGauge","initText","defs","binding","initPie","initBrush","initZoom","bindto","selectChart","observeInserted","convertDataToTargets","data_filter","data_hide","addHiddenTargetIds","mapToIds","legend_hide","addHiddenLegendIds","updateSizes","updateScales","subX","subY","subY2","orgXDomain","zoom_enabled","onmouseover","onmouseout","svg_classname","clipChart","appendClip","clipXAxis","clipYAxis","clipGrid","clipSubchart","updateSvgSize","initSubchart","initTooltip","initLegend","initTitle","initRegion","initGrid","grid_lines_front","initGridLines","initEventRect","zoom_privileged","axis_x_extent","getDefaultExtent","updateTargets","updateDimension","oninit","withTransform","withUpdateXDomain","withUpdateOrgXDomain","withTransitionForAxis","bindResize","element","smoothLines","legendHeight","legend","getLegendHeight","getLegendWidth","legendHeightForBottom","hasArc","hasArcType","xAxisHeight","getHorizontalAxisHeight","subchartHeight","subchart_show","subchart_size_height","currentWidth","getCurrentWidth","currentHeight","getCurrentHeight","getCurrentPaddingTop","getCurrentPaddingRight","getCurrentPaddingBottom","getCurrentPaddingLeft","margin2","margin3","updateSizeForLegend","width2","height2","arcWidth","arcHeight","hasType","gauge_fullCircle","getGaugeLabelHeight","updateRadius","radiusExpanded","updateTargetsForText","updateTargetsForBar","updateTargetsForLine","updateTargetsForArc","updateTargetsForSubchart","showTargets","isTargetToShow","transition_duration","withY","withSubchart","withTransitionForExit","withTrimXDomain","withLegend","withEventRect","withDimension","withUpdateXAxis","drawArea","drawBar","drawLine","xForText","yForText","durationForExit","durationForAxis","waitForDraw","flow","intervalForCulling","xDomainForZoom","areaIndices","getShapeIndices","isAreaType","barIndices","isBarType","lineIndices","isLineType","hideAxis","xv","legend_show","updateLegend","updateXDomain","zoom_rescale","orgDomain","axis_y_tick_count","axis_y2_tick_count","axis_x_tick_culling_max","generateDrawArea","generateDrawBar","generateDrawLine","generateXYForText","updateXgridFocus","data_empty_label_text","updateGrid","updateRegion","updateBar","updateLine","updateArea","updateCircle","hasDataLabel","updateText","redrawTitle","redrawArc","redrawSubchart","interaction_enabled","redrawEventRect","updateZoom","updateCircleY","circleY","circleX","generateFlow","isTabVisible","transitionsToWait","redrawBar","redrawLine","redrawArea","redrawCircle","redrawText","redrawRegion","redrawGrid","generateWait","onrendered","updateAndRedraw","withTransitionForTransform","transformAll","redrawWithoutRescale","axis_x_type","isCustomX","data_x","data_xs","axis_y_type","initialOpacity","initialOpacityForCircle","opacityForCircle","opacity","point_show","isScatterType","opacityForText","xx","axis_x_categories","yv","yScale","subxx","transformMain","transformContext","transformLegend","getXAxisClipX","getXAxisClipY","getXAxisClipWidth","getXAxisClipHeight","getYAxisClipX","getYAxisClipY","getYAxisClipWidth","getYAxisClipHeight","withoutAxis","observer","MutationObserver","mutations","mutation","previousSibling","disconnect","observe","attributes","childList","characterData","console","resizeFunction","generateResize","onresize","resize_auto","resizeTimeout","onresized","resizeIfElementDisplayed","offsetParent","attachEvent","wrapper","resizeFunctions","callResizeFunctions","endall","done","parsedDate","data_xFormat","mozHidden","msHidden","webkitHidden","oThis","aArgs","fToBind","fNOP","fBound","SVGPathSeg","typeAsLetter","owningPathSegList","pathSegType","pathSegTypeAsLetter","_owningPathSegList","classname","PATHSEG_UNKNOWN","PATHSEG_CLOSEPATH","PATHSEG_MOVETO_ABS","PATHSEG_MOVETO_REL","PATHSEG_LINETO_ABS","PATHSEG_LINETO_REL","PATHSEG_CURVETO_CUBIC_ABS","PATHSEG_CURVETO_CUBIC_REL","PATHSEG_CURVETO_QUADRATIC_ABS","PATHSEG_CURVETO_QUADRATIC_REL","PATHSEG_ARC_ABS","PATHSEG_ARC_REL","PATHSEG_LINETO_HORIZONTAL_ABS","PATHSEG_LINETO_HORIZONTAL_REL","PATHSEG_LINETO_VERTICAL_ABS","PATHSEG_LINETO_VERTICAL_REL","PATHSEG_CURVETO_CUBIC_SMOOTH_ABS","PATHSEG_CURVETO_CUBIC_SMOOTH_REL","PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS","PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL","_segmentChanged","segmentChanged","SVGPathSegClosePath","_asPathString","clone","SVGPathSegMovetoAbs","_x","_y","SVGPathSegMovetoRel","SVGPathSegLinetoAbs","SVGPathSegLinetoRel","SVGPathSegCurvetoCubicAbs","_x1","_y1","_x2","_y2","SVGPathSegCurvetoCubicRel","SVGPathSegCurvetoQuadraticAbs","SVGPathSegCurvetoQuadraticRel","SVGPathSegArcAbs","r2","largeArcFlag","sweepFlag","_r1","_r2","_angle","_largeArcFlag","_sweepFlag","SVGPathSegArcRel","SVGPathSegLinetoHorizontalAbs","SVGPathSegLinetoHorizontalRel","SVGPathSegLinetoVerticalAbs","SVGPathSegLinetoVerticalRel","SVGPathSegCurvetoCubicSmoothAbs","SVGPathSegCurvetoCubicSmoothRel","SVGPathSegCurvetoQuadraticSmoothAbs","SVGPathSegCurvetoQuadraticSmoothRel","SVGPathElement","createSVGPathSegClosePath","createSVGPathSegMovetoAbs","createSVGPathSegMovetoRel","createSVGPathSegLinetoAbs","createSVGPathSegLinetoRel","createSVGPathSegCurvetoCubicAbs","createSVGPathSegCurvetoCubicRel","createSVGPathSegCurvetoQuadraticAbs","createSVGPathSegCurvetoQuadraticRel","createSVGPathSegArcAbs","createSVGPathSegArcRel","createSVGPathSegLinetoHorizontalAbs","createSVGPathSegLinetoHorizontalRel","createSVGPathSegLinetoVerticalAbs","createSVGPathSegLinetoVerticalRel","createSVGPathSegCurvetoCubicSmoothAbs","createSVGPathSegCurvetoCubicSmoothRel","createSVGPathSegCurvetoQuadraticSmoothAbs","createSVGPathSegCurvetoQuadraticSmoothRel","getPathSegAtLength","measurementElement","lastPathSegment","numberOfItems","removeItem","SVGPathSegList","pathElement","_pathElement","_list","_parsePath","_mutationObserverConfig","attributeFilter","_pathElementMutationObserver","_updateListFromPathMutations","_checkPathSynchronizedToList","_pathSegList","takeRecords","mutationRecords","hasPathMutations","record","attributeName","_writeListToPath","_pathSegArrayAsString","pathSeg","initialize","newItem","_checkValidIndex","insertItemBefore","replaceItem","item","appendItem","pathSegArray","Builder","appendSegment","Source","_string","_currentIndex","_endIndex","_previousCommand","_skipOptionalSpaces","_isCurrentSpace","character","_skipOptionalSpacesOrDelimiter","hasMoreData","peekSegmentType","lookahead","_pathSegTypeFromChar","_nextCommandHelper","previousCommand","initialCommandIsMoveTo","command","_parseNumber","frac","expsign","startIndex","startIntPartIndex","scanIntPartIndex","multiplier","_parseArcFlag","flag","flagChar","parseSegment","arcAngle","arcLarge","arcSweep","builder","targetLength","padString","repeat","axis_x_max","axis_y_max","axis_y2_max","axis_x_min","axis_y_min","axis_y2_min","category","categories","size_width","size_height","detachEvent","targetIds","shown","targetId","clearLegendItemTextBoxCache","updateDataAttributes","baseTarget","baseValue","diff","notfoundIds","orgDataCount","getMaxDataCount","tail","getOtherTargetX","missing","translateX","scaleX","flowIndex","flowLength","flowStart","getValueOnIndex","flowEnd","durationForFlow","wait","mainRegion","mainText","mainBar","mainLine","mainArea","mainCircle","updateXGrid","hideXGridFocus","isRegionOnX","xgridAttr","regionX","regionWidth","mapToTargetIds","selectorTargets","defocus","expandArc","toggleFocusLegend","unexpandArc","showLegend","isLegendToShow","selectorLegends","grids","grid_x_lines","removeGridLines","grid_y_lines","data_groups","show","hide","hideLegend","addXs","classes","data_classes","data_colors","hasCaches","cacheIds","getCaches","unload","loadFromArgs","ids","selected","getTargetSelectorSuffix","indices","resetOther","data_selection_enabled","getToggle","isTargetId","data_selection_grouped","isTargetIndex","isSelected","data_selection_isselectable","unselect","removeHiddenTargetIds","isMultipleX","getYScale","getIndexByX","dispatchEvent","tooltip_onshow","tooltip_onhide","transformTo","optionsForRedraw","setTargetType","updateTargetX","updateTargetXs","zoom_onzoom","enable","enabled","unzoom","zoom_x_max","zoom_x_min","getOrderFunction","gauge_width","donut_width","gaugeArcWidth","gauge_arcs_minWidth","innerRadiusRatio","updateArc","svgArc","getSvgArc","svgArcExpanded","getSvgArcExpanded","svgArcExpandedSub","updateAngle","gMin","gMax","gTic","gValue","isGaugeType","gauge_min","gauge_max","gauge_startingAngle","hasGaugeType","singleArcWidth","withoutUpdate","updated","rate","expandWidth","getArc","isArcType","transformForArcLabel","hasGauge","donut_label_ratio","pie_label_ratio","getArcRatio","whole","convertToArcData","addName","textForArcLabel","shouldShowArcLabel","meetsArcLabelThreshold","getArcLabelFormat","defaultArcValueFormat","textForGaugeMinMax","isMax","getGaugeLabelExtents","shouldExpand","expandDuration","isDonutType","donut_expand_duration","gauge_expand_duration","isPieType","pie_expand_duration","donut_expand","gauge_expand","pie_expand","shouldShow","donut_label_show","pie_label_show","donut_label_threshold","pie_label_threshold","pie_label_format","gauge_label_format","donut_label_format","gauge_label_extents","getArcTitle","donut_title","mainPieEnter","classChartArc","classArcs","classFocus","mainArc","backgroundArc","mainArcLabelLine","arcData","classArc","_current","color_pattern","gauge_labelLine_show","lineLength","innerLineLength","lineAngle","arcInnerRadius","linePositioningAngle","data_onmouseover","selectedData","showTooltip","revertLegend","hideTooltip","data_onmouseout","toggleShape","data_onclick","interpolated","gauge_label_show","gauge_units","addCache","cloneTarget","generateClass","classText","classTexts","classShape","classShapes","classLine","classLines","classCircle","classCircles","classBar","classBars","classArea","classAreas","classRegion","classEvent","classTarget","additionalClassSuffix","additionalClass","classFocused","classDefocused","classChartText","classChartLine","classChartBar","selectorTarget","selectorLegend","appVersion","URL","getAxisClipX","getAxisClipY","getAxisClipWidth","getAxisClipHeight","pattern","data_color","color_threshold","asValue","padding_left","padding_right","padding_top","padding_bottom","zoom_extent","zoom_onzoomstart","zoom_onzoomend","interaction_brighten","data_xSort","data_idConverter","data_names","data_type","data_types","data_labels","data_order","data_regions","data_selection_multiple","data_selection_draggable","data_onselected","data_onunselected","subchart_axis_x_show","subchart_onbrush","legend_inset_x","legend_inset_y","legend_inset_step","legend_item_onclick","legend_item_onmouseover","legend_item_onmouseout","legend_equally","legend_padding","legend_item_tile_width","legend_item_tile_height","axis_x_tick_outer","axis_x_padding","axis_y_inverted","axis_y_center","axis_y_tick_outer","axis_y_padding","axis_y_default","axis_y2_inverted","axis_y2_center","axis_y2_tick_outer","axis_y2_padding","axis_y2_default","grid_x_show","grid_x_type","grid_y_show","grid_y_ticks","grid_focus_show","point_r","point_sensitivity","point_focus_expand_enabled","point_focus_expand_r","point_select_r","line_connectNull","line_step_type","bar_width","bar_width_ratio","bar_width_max","bar_zerobased","bar_space","area_zerobased","area_above","spline_interpolation_type","tooltip_show","tooltip_grouped","tooltip_order","tooltip_position","tooltip_contents","getTooltipContent","tooltip_init_show","tooltip_init_x","tooltip_init_position","title_text","title_padding","title_position","additionalConfig","read","this_config","req","dataResponse","responseURL","statusText","convertTsvToData","convertCsvToData","convertXsvToData","xsv","targetKeys","new_rows","new_row","findValueInJson","pathArray","newRows","appendXs","isNotX","isX","xKey","getXKey","rawX","generateTargetX","getOtherTargetXs","getXValuesOfXKey","convertedId","id_org","v1","v2","hasNegativeValue","hasNegativeValueInTargets","hasPositiveValue","hasPositiveValueInTargets","xValues","filterByX","getXValue","idsForX","hasMultipleX","valueOnIndex","updateXs","getPrevX","getNextX","getMaxDataCountTarget","maxTarget","getEdgeX","hasTarget","removeHiddenLegendIds","getValuesAsIdKeyed","checkValueInTargets","checker","isOrderDesc","isOrderAsc","orderAsc","orderDesc","reducer","t1Sum","t2Sum","orderTargets","fct","filterRemoveNull","filterByXDomain","xDomain","getDataLabelLength","lengths","dataLabelFormat","isNoneArc","isArc","findSameXOfValues","targetX","sames","findClosestFromTargets","pos","findClosest","closest","minDist","isWithinBar","dist","xIndex","yIndex","convertValuesToStep","converted","attrs","types","getYDomainMin","baseId","idsInGroup","getYDomainMax","yDomainAbs","isAllPositive","isAllNegative","targetsByAxisId","yTargets","yDomainMin","yDomainMax","isZeroBased","isInverted","showHorizontalDataLabel","showVerticalDataLabel","getXDomainMin","getXDomainMax","getXDomainPadding","maxDataCount","paddingLeft","paddingRight","firstX","lastX","withTrim","updateScaleExtent","trimXDomain","zoomDomain","getZoomDomain","mx","my","maxX","maxY","altDomain","_w","_h","isIncluded","isWithin","togglePoint","togglePath","dragend","getYFormat","forArc","formatForY","yFormat","formatForY2","y2Format","defaultFormat","xgridData","generateGridData","updateYGrid","gridValues","gridTextAnchor","gridTextDx","xGridTextX","yGridTextX","showXGridFocus","dataToShow","focusEl","firstYear","lastYear","gridData","tickNum","getGridFilterToRemove","param","forX","toRemove","toShow","eventRectUpdate","maxDataCountTarget","generateEventRectsForMultipleXs","updateEventRect","generateEventRectsForSingleX","rectW","rectX","getEventRectWidth","prevX","nextX","thisX","eventRectEnter","expandCircles","expandBars","unexpandCircles","unexpandBars","isStepType","isWithinShape","mouseout","createEvent","initMouseEvent","legendItemTextBox","legendHasRendered","updateLegendWithDefaults","insetLegendPosition","updateLegendStep","updateLegendItemWidth","updateLegendItemHeight","opacityForLegend","opacityForUnfocusedLegend","xForLegend","xForLegendText","xForLegendRect","yForLegend","yForLegendText","yForLegendRect","x1ForLegendTile","x2ForLegendTile","yForLegendTile","rects","tiles","maxHeight","posMin","tileWidth","totalLength","widths","heights","margins","updatePositions","textElement","maxLength","isLast","getTextRect","getTextBox","itemWidth","itemHeight","itemLength","areaLength","updateValues","withoutStep","parentData","regionY","regionHeight","getScale","forTimeseries","getX","_scale","getY","getSubYScale","forInit","subXMin","subXMax","subYMin","subYMax","selectPoint","pointSelectR","unselectPoint","selectPath","unselectPath","nodeName","barData","getBarW","barTargetsNum","getBars","isSub","getPoints","generateGetBarPoints","indexX","indexY","__max__","barW","barX","getShapeX","barY","getShapeY","barOffset","getShapeOffset","barSpaceOffset","posX","posY","seg0","seg1","typeFilter","targetsNum","isWithinStep","isWithinCircle","getInterpolate","interpolation","isInterpolationType","isSplineType","mainLineEnter","lineData","generateGetLinePoints","yScaleGetter","xValue","yValue","lineWithRegions","lineTargetsNum","lineOffset","_regions","sWithRegion","xp","yp","diffx2","xOffset","isWithinRegions","generateM","x_diff","xv0","xv1","orgAreaOpacity","generateGetAreaPoints","value0","getAreaBaseValue","value1","areaTargetsNum","areaOffset","lineOrScatterData","pointR","getCircles","pointExpandedR","d3_this","getParentWidth","getParentHeight","getTitlePadding","getAxisWidthByAxisId","legendWidthOnRight","getParentRectValue","tagName","offsetWidth","getSvgLeft","hasLeftAxisRect","leftAxisClass","leftAxis","svgRect","chartRect","svgLeft","redrawForBrush","visibility","contextLineEnter","updateBarForSubchart","contextBar","redrawBarForSubchart","drawBarOnSub","updateLineForSubchart","contextLine","redrawLineForSubchart","drawLineOnSub","updateAreaForSubchart","contextArea","redrawAreaForSubchart","drawAreaOnSub","barOrLineData","forFlow","cls","font","getAreaPoints","getBarPoints","getLinePoints","getXForText","getYForText","xPos","yPos","isSafari","isChrome","xForTitle","yForTitle","getTooltipSortFunction","sortFunction","tooltipSortFunction","tooltipPosition","tWidth","tHeight","tooltipLeft","tooltipRight","tooltipTop","chartRight","positionFunction","startEvent","redrawForZoom","orgScaleExtent","lib","bindResizeListener","visuals","DEFAULT_OPTIONS","ENFORCED_OPTIONS","colorMapping","_extendDeep","rotated","dateFormat","_defaultDateFormat2","stacked","scope","contents","c3TooltipContents","paddedWidth","c3PaginatingLegend","defineC3","metric","table","indexBy","query","selectedParser","parserArgs","metadata","analysis_type","event_collection","filters","group_by","timeframe","display_name","analysis","getDefaultTitle","visualization","chart_type","getDefaultType","updateColumn","updateRow","_stripHtmlTags","_dataset","flatten","ob","toReturn","flatObject","parsers","_flatten","res","grouped-metric","grouped-interval","double-grouped-metric","rowLabel","double-grouped-interval","funnel","extraction","deleteColumn","_append","sortColumns","comp","head","analysesUtilMethods","getColumnLabel","op","insertColumn","sortRows","getRowIndex","_analyses","insertRow","filterColumns","selectedColumn","ri","filterRows","deleteRow","eval","Dataviz","_prepared","_rendered","labelMapping","library","sortIntervals","domReady","DOMContentLoaded","testDom","libraries","_libraries2","register","actions","visual","num","loader","buildDomWrapper","getColumnSum","getRowSum","bool","areachart","barchart","columnchart","linechart","piechart","convertChartTypes","chartType","parseRawData","parseRequest","__KEEN_NO_COMMON_GLOBAL_OBJECT__","env","Keen","global"],"mappings":"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","file":"keen-dataviz.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 32);\n","export function each(o, cb, s) {\n  var n;\n  if (!o) {\n    return 0;\n  }\n  s = !s ? o : s;\n  if (o instanceof Array) {\n    // Indexed arrays, needed for Safari\n    for (n = 0; n < o.length; n++) {\n      if (cb.call(s, o[n], n, o) === false) {\n        return 0;\n      }\n    }\n  } else {\n    // Hashtables\n    for (n in o) {\n      if (o.hasOwnProperty(n)) {\n        if (cb.call(s, o[n], n, o) === false){\n          return 0;\n        }\n      }\n    }\n  }\n  return 1;\n}\n","const matchHtmlRegExp = /[\"'&<>]/;\n\n/**\n * Escape special characters in the given string of html.\n *\n * @param  {string} string The string to escape for inserting into HTML\n * @return {string}\n * @public\n */\n\nexport function escapeHtml(string) {\n  var str = '' + string;\n  var match = matchHtmlRegExp.exec(str);\n\n  if (!match) {\n    return str;\n  }\n\n  var escape;\n  var html = '';\n  var index = 0;\n  var lastIndex = 0;\n\n  for (index = match.index; index < str.length; index++) {\n    switch (str.charCodeAt(index)) {\n      case 34: // \"\n        escape = '&quot;';\n        break;\n      case 38: // &\n        escape = '&amp;';\n        break;\n      case 39: // '\n        escape = '&#39;';\n        break;\n      case 60: // <\n        escape = '&lt;';\n        break;\n      case 62: // >\n        escape = '&gt;';\n        break;\n      default:\n        continue;\n    }\n\n    if (lastIndex !== index) {\n      html += str.substring(lastIndex, index);\n    }\n\n    lastIndex = index + 1;\n    html += escape;\n  }\n\n  return lastIndex !== index\n    ? html + str.substring(lastIndex, index)\n    : html;\n}\n","export function extend(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    for (var prop in arguments[i]){\n      target[prop] = arguments[i][prop];\n    }\n  }\n  return target;\n}\n","!function() {\n  var d3 = {\n    version: \"3.5.17\"\n  };\n  var d3_arraySlice = [].slice, d3_array = function(list) {\n    return d3_arraySlice.call(list);\n  };\n  var d3_document = this.document;\n  function d3_documentElement(node) {\n    return node && (node.ownerDocument || node.document || node).documentElement;\n  }\n  function d3_window(node) {\n    return node && (node.ownerDocument && node.ownerDocument.defaultView || node.document && node || node.defaultView);\n  }\n  if (d3_document) {\n    try {\n      d3_array(d3_document.documentElement.childNodes)[0].nodeType;\n    } catch (e) {\n      d3_array = function(list) {\n        var i = list.length, array = new Array(i);\n        while (i--) array[i] = list[i];\n        return array;\n      };\n    }\n  }\n  if (!Date.now) Date.now = function() {\n    return +new Date();\n  };\n  if (d3_document) {\n    try {\n      d3_document.createElement(\"DIV\").style.setProperty(\"opacity\", 0, \"\");\n    } catch (error) {\n      var d3_element_prototype = this.Element.prototype, d3_element_setAttribute = d3_element_prototype.setAttribute, d3_element_setAttributeNS = d3_element_prototype.setAttributeNS, d3_style_prototype = this.CSSStyleDeclaration.prototype, d3_style_setProperty = d3_style_prototype.setProperty;\n      d3_element_prototype.setAttribute = function(name, value) {\n        d3_element_setAttribute.call(this, name, value + \"\");\n      };\n      d3_element_prototype.setAttributeNS = function(space, local, value) {\n        d3_element_setAttributeNS.call(this, space, local, value + \"\");\n      };\n      d3_style_prototype.setProperty = function(name, value, priority) {\n        d3_style_setProperty.call(this, name, value + \"\", priority);\n      };\n    }\n  }\n  d3.ascending = d3_ascending;\n  function d3_ascending(a, b) {\n    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n  }\n  d3.descending = function(a, b) {\n    return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n  };\n  d3.min = function(array, f) {\n    var i = -1, n = array.length, a, b;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null && a > b) a = b;\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && a > b) a = b;\n    }\n    return a;\n  };\n  d3.max = function(array, f) {\n    var i = -1, n = array.length, a, b;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null && b > a) a = b;\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b > a) a = b;\n    }\n    return a;\n  };\n  d3.extent = function(array, f) {\n    var i = -1, n = array.length, a, b, c;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = c = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = c = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    }\n    return [ a, c ];\n  };\n  function d3_number(x) {\n    return x === null ? NaN : +x;\n  }\n  function d3_numeric(x) {\n    return !isNaN(x);\n  }\n  d3.sum = function(array, f) {\n    var s = 0, n = array.length, a, i = -1;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = +array[i])) s += a;\n    } else {\n      while (++i < n) if (d3_numeric(a = +f.call(array, array[i], i))) s += a;\n    }\n    return s;\n  };\n  d3.mean = function(array, f) {\n    var s = 0, n = array.length, a, i = -1, j = n;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) s += a; else --j;\n    } else {\n      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) s += a; else --j;\n    }\n    if (j) return s / j;\n  };\n  d3.quantile = function(values, p) {\n    var H = (values.length - 1) * p + 1, h = Math.floor(H), v = +values[h - 1], e = H - h;\n    return e ? v + e * (values[h] - v) : v;\n  };\n  d3.median = function(array, f) {\n    var numbers = [], n = array.length, a, i = -1;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) numbers.push(a);\n    } else {\n      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) numbers.push(a);\n    }\n    if (numbers.length) return d3.quantile(numbers.sort(d3_ascending), .5);\n  };\n  d3.variance = function(array, f) {\n    var n = array.length, m = 0, a, d, s = 0, i = -1, j = 0;\n    if (arguments.length === 1) {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(array[i]))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    } else {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    }\n    if (j > 1) return s / (j - 1);\n  };\n  d3.deviation = function() {\n    var v = d3.variance.apply(this, arguments);\n    return v ? Math.sqrt(v) : v;\n  };\n  function d3_bisector(compare) {\n    return {\n      left: function(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) < 0) lo = mid + 1; else hi = mid;\n        }\n        return lo;\n      },\n      right: function(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) > 0) hi = mid; else lo = mid + 1;\n        }\n        return lo;\n      }\n    };\n  }\n  var d3_bisect = d3_bisector(d3_ascending);\n  d3.bisectLeft = d3_bisect.left;\n  d3.bisect = d3.bisectRight = d3_bisect.right;\n  d3.bisector = function(f) {\n    return d3_bisector(f.length === 1 ? function(d, x) {\n      return d3_ascending(f(d), x);\n    } : f);\n  };\n  d3.shuffle = function(array, i0, i1) {\n    if ((m = arguments.length) < 3) {\n      i1 = array.length;\n      if (m < 2) i0 = 0;\n    }\n    var m = i1 - i0, t, i;\n    while (m) {\n      i = Math.random() * m-- | 0;\n      t = array[m + i0], array[m + i0] = array[i + i0], array[i + i0] = t;\n    }\n    return array;\n  };\n  d3.permute = function(array, indexes) {\n    var i = indexes.length, permutes = new Array(i);\n    while (i--) permutes[i] = array[indexes[i]];\n    return permutes;\n  };\n  d3.pairs = function(array) {\n    var i = 0, n = array.length - 1, p0, p1 = array[0], pairs = new Array(n < 0 ? 0 : n);\n    while (i < n) pairs[i] = [ p0 = p1, p1 = array[++i] ];\n    return pairs;\n  };\n  d3.transpose = function(matrix) {\n    if (!(n = matrix.length)) return [];\n    for (var i = -1, m = d3.min(matrix, d3_transposeLength), transpose = new Array(m); ++i < m; ) {\n      for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n; ) {\n        row[j] = matrix[j][i];\n      }\n    }\n    return transpose;\n  };\n  function d3_transposeLength(d) {\n    return d.length;\n  }\n  d3.zip = function() {\n    return d3.transpose(arguments);\n  };\n  d3.keys = function(map) {\n    var keys = [];\n    for (var key in map) keys.push(key);\n    return keys;\n  };\n  d3.values = function(map) {\n    var values = [];\n    for (var key in map) values.push(map[key]);\n    return values;\n  };\n  d3.entries = function(map) {\n    var entries = [];\n    for (var key in map) entries.push({\n      key: key,\n      value: map[key]\n    });\n    return entries;\n  };\n  d3.merge = function(arrays) {\n    var n = arrays.length, m, i = -1, j = 0, merged, array;\n    while (++i < n) j += arrays[i].length;\n    merged = new Array(j);\n    while (--n >= 0) {\n      array = arrays[n];\n      m = array.length;\n      while (--m >= 0) {\n        merged[--j] = array[m];\n      }\n    }\n    return merged;\n  };\n  var abs = Math.abs;\n  d3.range = function(start, stop, step) {\n    if (arguments.length < 3) {\n      step = 1;\n      if (arguments.length < 2) {\n        stop = start;\n        start = 0;\n      }\n    }\n    if ((stop - start) / step === Infinity) throw new Error(\"infinite range\");\n    var range = [], k = d3_range_integerScale(abs(step)), i = -1, j;\n    start *= k, stop *= k, step *= k;\n    if (step < 0) while ((j = start + step * ++i) > stop) range.push(j / k); else while ((j = start + step * ++i) < stop) range.push(j / k);\n    return range;\n  };\n  function d3_range_integerScale(x) {\n    var k = 1;\n    while (x * k % 1) k *= 10;\n    return k;\n  }\n  function d3_class(ctor, properties) {\n    for (var key in properties) {\n      Object.defineProperty(ctor.prototype, key, {\n        value: properties[key],\n        enumerable: false\n      });\n    }\n  }\n  d3.map = function(object, f) {\n    var map = new d3_Map();\n    if (object instanceof d3_Map) {\n      object.forEach(function(key, value) {\n        map.set(key, value);\n      });\n    } else if (Array.isArray(object)) {\n      var i = -1, n = object.length, o;\n      if (arguments.length === 1) while (++i < n) map.set(i, object[i]); else while (++i < n) map.set(f.call(object, o = object[i], i), o);\n    } else {\n      for (var key in object) map.set(key, object[key]);\n    }\n    return map;\n  };\n  function d3_Map() {\n    this._ = Object.create(null);\n  }\n  var d3_map_proto = \"__proto__\", d3_map_zero = \"\\x00\";\n  d3_class(d3_Map, {\n    has: d3_map_has,\n    get: function(key) {\n      return this._[d3_map_escape(key)];\n    },\n    set: function(key, value) {\n      return this._[d3_map_escape(key)] = value;\n    },\n    remove: d3_map_remove,\n    keys: d3_map_keys,\n    values: function() {\n      var values = [];\n      for (var key in this._) values.push(this._[key]);\n      return values;\n    },\n    entries: function() {\n      var entries = [];\n      for (var key in this._) entries.push({\n        key: d3_map_unescape(key),\n        value: this._[key]\n      });\n      return entries;\n    },\n    size: d3_map_size,\n    empty: d3_map_empty,\n    forEach: function(f) {\n      for (var key in this._) f.call(this, d3_map_unescape(key), this._[key]);\n    }\n  });\n  function d3_map_escape(key) {\n    return (key += \"\") === d3_map_proto || key[0] === d3_map_zero ? d3_map_zero + key : key;\n  }\n  function d3_map_unescape(key) {\n    return (key += \"\")[0] === d3_map_zero ? key.slice(1) : key;\n  }\n  function d3_map_has(key) {\n    return d3_map_escape(key) in this._;\n  }\n  function d3_map_remove(key) {\n    return (key = d3_map_escape(key)) in this._ && delete this._[key];\n  }\n  function d3_map_keys() {\n    var keys = [];\n    for (var key in this._) keys.push(d3_map_unescape(key));\n    return keys;\n  }\n  function d3_map_size() {\n    var size = 0;\n    for (var key in this._) ++size;\n    return size;\n  }\n  function d3_map_empty() {\n    for (var key in this._) return false;\n    return true;\n  }\n  d3.nest = function() {\n    var nest = {}, keys = [], sortKeys = [], sortValues, rollup;\n    function map(mapType, array, depth) {\n      if (depth >= keys.length) return rollup ? rollup.call(nest, array) : sortValues ? array.sort(sortValues) : array;\n      var i = -1, n = array.length, key = keys[depth++], keyValue, object, setter, valuesByKey = new d3_Map(), values;\n      while (++i < n) {\n        if (values = valuesByKey.get(keyValue = key(object = array[i]))) {\n          values.push(object);\n        } else {\n          valuesByKey.set(keyValue, [ object ]);\n        }\n      }\n      if (mapType) {\n        object = mapType();\n        setter = function(keyValue, values) {\n          object.set(keyValue, map(mapType, values, depth));\n        };\n      } else {\n        object = {};\n        setter = function(keyValue, values) {\n          object[keyValue] = map(mapType, values, depth);\n        };\n      }\n      valuesByKey.forEach(setter);\n      return object;\n    }\n    function entries(map, depth) {\n      if (depth >= keys.length) return map;\n      var array = [], sortKey = sortKeys[depth++];\n      map.forEach(function(key, keyMap) {\n        array.push({\n          key: key,\n          values: entries(keyMap, depth)\n        });\n      });\n      return sortKey ? array.sort(function(a, b) {\n        return sortKey(a.key, b.key);\n      }) : array;\n    }\n    nest.map = function(array, mapType) {\n      return map(mapType, array, 0);\n    };\n    nest.entries = function(array) {\n      return entries(map(d3.map, array, 0), 0);\n    };\n    nest.key = function(d) {\n      keys.push(d);\n      return nest;\n    };\n    nest.sortKeys = function(order) {\n      sortKeys[keys.length - 1] = order;\n      return nest;\n    };\n    nest.sortValues = function(order) {\n      sortValues = order;\n      return nest;\n    };\n    nest.rollup = function(f) {\n      rollup = f;\n      return nest;\n    };\n    return nest;\n  };\n  d3.set = function(array) {\n    var set = new d3_Set();\n    if (array) for (var i = 0, n = array.length; i < n; ++i) set.add(array[i]);\n    return set;\n  };\n  function d3_Set() {\n    this._ = Object.create(null);\n  }\n  d3_class(d3_Set, {\n    has: d3_map_has,\n    add: function(key) {\n      this._[d3_map_escape(key += \"\")] = true;\n      return key;\n    },\n    remove: d3_map_remove,\n    values: d3_map_keys,\n    size: d3_map_size,\n    empty: d3_map_empty,\n    forEach: function(f) {\n      for (var key in this._) f.call(this, d3_map_unescape(key));\n    }\n  });\n  d3.behavior = {};\n  function d3_identity(d) {\n    return d;\n  }\n  d3.rebind = function(target, source) {\n    var i = 1, n = arguments.length, method;\n    while (++i < n) target[method = arguments[i]] = d3_rebind(target, source, source[method]);\n    return target;\n  };\n  function d3_rebind(target, source, method) {\n    return function() {\n      var value = method.apply(source, arguments);\n      return value === source ? target : value;\n    };\n  }\n  function d3_vendorSymbol(object, name) {\n    if (name in object) return name;\n    name = name.charAt(0).toUpperCase() + name.slice(1);\n    for (var i = 0, n = d3_vendorPrefixes.length; i < n; ++i) {\n      var prefixName = d3_vendorPrefixes[i] + name;\n      if (prefixName in object) return prefixName;\n    }\n  }\n  var d3_vendorPrefixes = [ \"webkit\", \"ms\", \"moz\", \"Moz\", \"o\", \"O\" ];\n  function d3_noop() {}\n  d3.dispatch = function() {\n    var dispatch = new d3_dispatch(), i = -1, n = arguments.length;\n    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    return dispatch;\n  };\n  function d3_dispatch() {}\n  d3_dispatch.prototype.on = function(type, listener) {\n    var i = type.indexOf(\".\"), name = \"\";\n    if (i >= 0) {\n      name = type.slice(i + 1);\n      type = type.slice(0, i);\n    }\n    if (type) return arguments.length < 2 ? this[type].on(name) : this[type].on(name, listener);\n    if (arguments.length === 2) {\n      if (listener == null) for (type in this) {\n        if (this.hasOwnProperty(type)) this[type].on(name, null);\n      }\n      return this;\n    }\n  };\n  function d3_dispatch_event(dispatch) {\n    var listeners = [], listenerByName = new d3_Map();\n    function event() {\n      var z = listeners, i = -1, n = z.length, l;\n      while (++i < n) if (l = z[i].on) l.apply(this, arguments);\n      return dispatch;\n    }\n    event.on = function(name, listener) {\n      var l = listenerByName.get(name), i;\n      if (arguments.length < 2) return l && l.on;\n      if (l) {\n        l.on = null;\n        listeners = listeners.slice(0, i = listeners.indexOf(l)).concat(listeners.slice(i + 1));\n        listenerByName.remove(name);\n      }\n      if (listener) listeners.push(listenerByName.set(name, {\n        on: listener\n      }));\n      return dispatch;\n    };\n    return event;\n  }\n  d3.event = null;\n  function d3_eventPreventDefault() {\n    d3.event.preventDefault();\n  }\n  function d3_eventSource() {\n    var e = d3.event, s;\n    while (s = e.sourceEvent) e = s;\n    return e;\n  }\n  function d3_eventDispatch(target) {\n    var dispatch = new d3_dispatch(), i = 0, n = arguments.length;\n    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    dispatch.of = function(thiz, argumentz) {\n      return function(e1) {\n        try {\n          var e0 = e1.sourceEvent = d3.event;\n          e1.target = target;\n          d3.event = e1;\n          dispatch[e1.type].apply(thiz, argumentz);\n        } finally {\n          d3.event = e0;\n        }\n      };\n    };\n    return dispatch;\n  }\n  d3.requote = function(s) {\n    return s.replace(d3_requote_re, \"\\\\$&\");\n  };\n  var d3_requote_re = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n  var d3_subclass = {}.__proto__ ? function(object, prototype) {\n    object.__proto__ = prototype;\n  } : function(object, prototype) {\n    for (var property in prototype) object[property] = prototype[property];\n  };\n  function d3_selection(groups) {\n    d3_subclass(groups, d3_selectionPrototype);\n    return groups;\n  }\n  var d3_select = function(s, n) {\n    return n.querySelector(s);\n  }, d3_selectAll = function(s, n) {\n    return n.querySelectorAll(s);\n  }, d3_selectMatches = function(n, s) {\n    var d3_selectMatcher = n.matches || n[d3_vendorSymbol(n, \"matchesSelector\")];\n    d3_selectMatches = function(n, s) {\n      return d3_selectMatcher.call(n, s);\n    };\n    return d3_selectMatches(n, s);\n  };\n  if (typeof Sizzle === \"function\") {\n    d3_select = function(s, n) {\n      return Sizzle(s, n)[0] || null;\n    };\n    d3_selectAll = Sizzle;\n    d3_selectMatches = Sizzle.matchesSelector;\n  }\n  d3.selection = function() {\n    return d3.select(d3_document.documentElement);\n  };\n  var d3_selectionPrototype = d3.selection.prototype = [];\n  d3_selectionPrototype.select = function(selector) {\n    var subgroups = [], subgroup, subnode, group, node;\n    selector = d3_selection_selector(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n      for (var i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroup.push(subnode = selector.call(node, node.__data__, i, j));\n          if (subnode && \"__data__\" in node) subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_selector(selector) {\n    return typeof selector === \"function\" ? selector : function() {\n      return d3_select(selector, this);\n    };\n  }\n  d3_selectionPrototype.selectAll = function(selector) {\n    var subgroups = [], subgroup, node;\n    selector = d3_selection_selectorAll(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroups.push(subgroup = d3_array(selector.call(node, node.__data__, i, j)));\n          subgroup.parentNode = node;\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_selectorAll(selector) {\n    return typeof selector === \"function\" ? selector : function() {\n      return d3_selectAll(selector, this);\n    };\n  }\n  var d3_nsXhtml = \"http://www.w3.org/1999/xhtml\";\n  var d3_nsPrefix = {\n    svg: \"http://www.w3.org/2000/svg\",\n    xhtml: d3_nsXhtml,\n    xlink: \"http://www.w3.org/1999/xlink\",\n    xml: \"http://www.w3.org/XML/1998/namespace\",\n    xmlns: \"http://www.w3.org/2000/xmlns/\"\n  };\n  d3.ns = {\n    prefix: d3_nsPrefix,\n    qualify: function(name) {\n      var i = name.indexOf(\":\"), prefix = name;\n      if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n      return d3_nsPrefix.hasOwnProperty(prefix) ? {\n        space: d3_nsPrefix[prefix],\n        local: name\n      } : name;\n    }\n  };\n  d3_selectionPrototype.attr = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node();\n        name = d3.ns.qualify(name);\n        return name.local ? node.getAttributeNS(name.space, name.local) : node.getAttribute(name);\n      }\n      for (value in name) this.each(d3_selection_attr(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_attr(name, value));\n  };\n  function d3_selection_attr(name, value) {\n    name = d3.ns.qualify(name);\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n    function attrConstant() {\n      this.setAttribute(name, value);\n    }\n    function attrConstantNS() {\n      this.setAttributeNS(name.space, name.local, value);\n    }\n    function attrFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttribute(name); else this.setAttribute(name, x);\n    }\n    function attrFunctionNS() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttributeNS(name.space, name.local); else this.setAttributeNS(name.space, name.local, x);\n    }\n    return value == null ? name.local ? attrNullNS : attrNull : typeof value === \"function\" ? name.local ? attrFunctionNS : attrFunction : name.local ? attrConstantNS : attrConstant;\n  }\n  function d3_collapse(s) {\n    return s.trim().replace(/\\s+/g, \" \");\n  }\n  d3_selectionPrototype.classed = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node(), n = (name = d3_selection_classes(name)).length, i = -1;\n        if (value = node.classList) {\n          while (++i < n) if (!value.contains(name[i])) return false;\n        } else {\n          value = node.getAttribute(\"class\");\n          while (++i < n) if (!d3_selection_classedRe(name[i]).test(value)) return false;\n        }\n        return true;\n      }\n      for (value in name) this.each(d3_selection_classed(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_classed(name, value));\n  };\n  function d3_selection_classedRe(name) {\n    return new RegExp(\"(?:^|\\\\s+)\" + d3.requote(name) + \"(?:\\\\s+|$)\", \"g\");\n  }\n  function d3_selection_classes(name) {\n    return (name + \"\").trim().split(/^|\\s+/);\n  }\n  function d3_selection_classed(name, value) {\n    name = d3_selection_classes(name).map(d3_selection_classedName);\n    var n = name.length;\n    function classedConstant() {\n      var i = -1;\n      while (++i < n) name[i](this, value);\n    }\n    function classedFunction() {\n      var i = -1, x = value.apply(this, arguments);\n      while (++i < n) name[i](this, x);\n    }\n    return typeof value === \"function\" ? classedFunction : classedConstant;\n  }\n  function d3_selection_classedName(name) {\n    var re = d3_selection_classedRe(name);\n    return function(node, value) {\n      if (c = node.classList) return value ? c.add(name) : c.remove(name);\n      var c = node.getAttribute(\"class\") || \"\";\n      if (value) {\n        re.lastIndex = 0;\n        if (!re.test(c)) node.setAttribute(\"class\", d3_collapse(c + \" \" + name));\n      } else {\n        node.setAttribute(\"class\", d3_collapse(c.replace(re, \" \")));\n      }\n    };\n  }\n  d3_selectionPrototype.style = function(name, value, priority) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n        for (priority in name) this.each(d3_selection_style(priority, name[priority], value));\n        return this;\n      }\n      if (n < 2) {\n        var node = this.node();\n        return d3_window(node).getComputedStyle(node, null).getPropertyValue(name);\n      }\n      priority = \"\";\n    }\n    return this.each(d3_selection_style(name, value, priority));\n  };\n  function d3_selection_style(name, value, priority) {\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n    function styleConstant() {\n      this.style.setProperty(name, value, priority);\n    }\n    function styleFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.style.removeProperty(name); else this.style.setProperty(name, x, priority);\n    }\n    return value == null ? styleNull : typeof value === \"function\" ? styleFunction : styleConstant;\n  }\n  d3_selectionPrototype.property = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") return this.node()[name];\n      for (value in name) this.each(d3_selection_property(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_property(name, value));\n  };\n  function d3_selection_property(name, value) {\n    function propertyNull() {\n      delete this[name];\n    }\n    function propertyConstant() {\n      this[name] = value;\n    }\n    function propertyFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) delete this[name]; else this[name] = x;\n    }\n    return value == null ? propertyNull : typeof value === \"function\" ? propertyFunction : propertyConstant;\n  }\n  d3_selectionPrototype.text = function(value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n      var v = value.apply(this, arguments);\n      this.textContent = v == null ? \"\" : v;\n    } : value == null ? function() {\n      this.textContent = \"\";\n    } : function() {\n      this.textContent = value;\n    }) : this.node().textContent;\n  };\n  d3_selectionPrototype.html = function(value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n      var v = value.apply(this, arguments);\n      this.innerHTML = v == null ? \"\" : v;\n    } : value == null ? function() {\n      this.innerHTML = \"\";\n    } : function() {\n      this.innerHTML = value;\n    }) : this.node().innerHTML;\n  };\n  d3_selectionPrototype.append = function(name) {\n    name = d3_selection_creator(name);\n    return this.select(function() {\n      return this.appendChild(name.apply(this, arguments));\n    });\n  };\n  function d3_selection_creator(name) {\n    function create() {\n      var document = this.ownerDocument, namespace = this.namespaceURI;\n      return namespace === d3_nsXhtml && document.documentElement.namespaceURI === d3_nsXhtml ? document.createElement(name) : document.createElementNS(namespace, name);\n    }\n    function createNS() {\n      return this.ownerDocument.createElementNS(name.space, name.local);\n    }\n    return typeof name === \"function\" ? name : (name = d3.ns.qualify(name)).local ? createNS : create;\n  }\n  d3_selectionPrototype.insert = function(name, before) {\n    name = d3_selection_creator(name);\n    before = d3_selection_selector(before);\n    return this.select(function() {\n      return this.insertBefore(name.apply(this, arguments), before.apply(this, arguments) || null);\n    });\n  };\n  d3_selectionPrototype.remove = function() {\n    return this.each(d3_selectionRemove);\n  };\n  function d3_selectionRemove() {\n    var parent = this.parentNode;\n    if (parent) parent.removeChild(this);\n  }\n  d3_selectionPrototype.data = function(value, key) {\n    var i = -1, n = this.length, group, node;\n    if (!arguments.length) {\n      value = new Array(n = (group = this[0]).length);\n      while (++i < n) {\n        if (node = group[i]) {\n          value[i] = node.__data__;\n        }\n      }\n      return value;\n    }\n    function bind(group, groupData) {\n      var i, n = group.length, m = groupData.length, n0 = Math.min(n, m), updateNodes = new Array(m), enterNodes = new Array(m), exitNodes = new Array(n), node, nodeData;\n      if (key) {\n        var nodeByKeyValue = new d3_Map(), keyValues = new Array(n), keyValue;\n        for (i = -1; ++i < n; ) {\n          if (node = group[i]) {\n            if (nodeByKeyValue.has(keyValue = key.call(node, node.__data__, i))) {\n              exitNodes[i] = node;\n            } else {\n              nodeByKeyValue.set(keyValue, node);\n            }\n            keyValues[i] = keyValue;\n          }\n        }\n        for (i = -1; ++i < m; ) {\n          if (!(node = nodeByKeyValue.get(keyValue = key.call(groupData, nodeData = groupData[i], i)))) {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          } else if (node !== true) {\n            updateNodes[i] = node;\n            node.__data__ = nodeData;\n          }\n          nodeByKeyValue.set(keyValue, true);\n        }\n        for (i = -1; ++i < n; ) {\n          if (i in keyValues && nodeByKeyValue.get(keyValues[i]) !== true) {\n            exitNodes[i] = group[i];\n          }\n        }\n      } else {\n        for (i = -1; ++i < n0; ) {\n          node = group[i];\n          nodeData = groupData[i];\n          if (node) {\n            node.__data__ = nodeData;\n            updateNodes[i] = node;\n          } else {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          }\n        }\n        for (;i < m; ++i) {\n          enterNodes[i] = d3_selection_dataNode(groupData[i]);\n        }\n        for (;i < n; ++i) {\n          exitNodes[i] = group[i];\n        }\n      }\n      enterNodes.update = updateNodes;\n      enterNodes.parentNode = updateNodes.parentNode = exitNodes.parentNode = group.parentNode;\n      enter.push(enterNodes);\n      update.push(updateNodes);\n      exit.push(exitNodes);\n    }\n    var enter = d3_selection_enter([]), update = d3_selection([]), exit = d3_selection([]);\n    if (typeof value === \"function\") {\n      while (++i < n) {\n        bind(group = this[i], value.call(group, group.parentNode.__data__, i));\n      }\n    } else {\n      while (++i < n) {\n        bind(group = this[i], value);\n      }\n    }\n    update.enter = function() {\n      return enter;\n    };\n    update.exit = function() {\n      return exit;\n    };\n    return update;\n  };\n  function d3_selection_dataNode(data) {\n    return {\n      __data__: data\n    };\n  }\n  d3_selectionPrototype.datum = function(value) {\n    return arguments.length ? this.property(\"__data__\", value) : this.property(\"__data__\");\n  };\n  d3_selectionPrototype.filter = function(filter) {\n    var subgroups = [], subgroup, group, node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n      for (var i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_filter(selector) {\n    return function() {\n      return d3_selectMatches(this, selector);\n    };\n  }\n  d3_selectionPrototype.order = function() {\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = group.length - 1, next = group[i], node; --i >= 0; ) {\n        if (node = group[i]) {\n          if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n          next = node;\n        }\n      }\n    }\n    return this;\n  };\n  d3_selectionPrototype.sort = function(comparator) {\n    comparator = d3_selection_sortComparator.apply(this, arguments);\n    for (var j = -1, m = this.length; ++j < m; ) this[j].sort(comparator);\n    return this.order();\n  };\n  function d3_selection_sortComparator(comparator) {\n    if (!arguments.length) comparator = d3_ascending;\n    return function(a, b) {\n      return a && b ? comparator(a.__data__, b.__data__) : !a - !b;\n    };\n  }\n  d3_selectionPrototype.each = function(callback) {\n    return d3_selection_each(this, function(node, i, j) {\n      callback.call(node, node.__data__, i, j);\n    });\n  };\n  function d3_selection_each(groups, callback) {\n    for (var j = 0, m = groups.length; j < m; j++) {\n      for (var group = groups[j], i = 0, n = group.length, node; i < n; i++) {\n        if (node = group[i]) callback(node, i, j);\n      }\n    }\n    return groups;\n  }\n  d3_selectionPrototype.call = function(callback) {\n    var args = d3_array(arguments);\n    callback.apply(args[0] = this, args);\n    return this;\n  };\n  d3_selectionPrototype.empty = function() {\n    return !this.node();\n  };\n  d3_selectionPrototype.node = function() {\n    for (var j = 0, m = this.length; j < m; j++) {\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        var node = group[i];\n        if (node) return node;\n      }\n    }\n    return null;\n  };\n  d3_selectionPrototype.size = function() {\n    var n = 0;\n    d3_selection_each(this, function() {\n      ++n;\n    });\n    return n;\n  };\n  function d3_selection_enter(selection) {\n    d3_subclass(selection, d3_selection_enterPrototype);\n    return selection;\n  }\n  var d3_selection_enterPrototype = [];\n  d3.selection.enter = d3_selection_enter;\n  d3.selection.enter.prototype = d3_selection_enterPrototype;\n  d3_selection_enterPrototype.append = d3_selectionPrototype.append;\n  d3_selection_enterPrototype.empty = d3_selectionPrototype.empty;\n  d3_selection_enterPrototype.node = d3_selectionPrototype.node;\n  d3_selection_enterPrototype.call = d3_selectionPrototype.call;\n  d3_selection_enterPrototype.size = d3_selectionPrototype.size;\n  d3_selection_enterPrototype.select = function(selector) {\n    var subgroups = [], subgroup, subnode, upgroup, group, node;\n    for (var j = -1, m = this.length; ++j < m; ) {\n      upgroup = (group = this[j]).update;\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = group.parentNode;\n      for (var i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroup.push(upgroup[i] = subnode = selector.call(group.parentNode, node.__data__, i, j));\n          subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  d3_selection_enterPrototype.insert = function(name, before) {\n    if (arguments.length < 2) before = d3_selection_enterInsertBefore(this);\n    return d3_selectionPrototype.insert.call(this, name, before);\n  };\n  function d3_selection_enterInsertBefore(enter) {\n    var i0, j0;\n    return function(d, i, j) {\n      var group = enter[j].update, n = group.length, node;\n      if (j != j0) j0 = j, i0 = 0;\n      if (i >= i0) i0 = i + 1;\n      while (!(node = group[i0]) && ++i0 < n) ;\n      return node;\n    };\n  }\n  d3.select = function(node) {\n    var group;\n    if (typeof node === \"string\") {\n      group = [ d3_select(node, d3_document) ];\n      group.parentNode = d3_document.documentElement;\n    } else {\n      group = [ node ];\n      group.parentNode = d3_documentElement(node);\n    }\n    return d3_selection([ group ]);\n  };\n  d3.selectAll = function(nodes) {\n    var group;\n    if (typeof nodes === \"string\") {\n      group = d3_array(d3_selectAll(nodes, d3_document));\n      group.parentNode = d3_document.documentElement;\n    } else {\n      group = d3_array(nodes);\n      group.parentNode = null;\n    }\n    return d3_selection([ group ]);\n  };\n  d3_selectionPrototype.on = function(type, listener, capture) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof type !== \"string\") {\n        if (n < 2) listener = false;\n        for (capture in type) this.each(d3_selection_on(capture, type[capture], listener));\n        return this;\n      }\n      if (n < 2) return (n = this.node()[\"__on\" + type]) && n._;\n      capture = false;\n    }\n    return this.each(d3_selection_on(type, listener, capture));\n  };\n  function d3_selection_on(type, listener, capture) {\n    var name = \"__on\" + type, i = type.indexOf(\".\"), wrap = d3_selection_onListener;\n    if (i > 0) type = type.slice(0, i);\n    var filter = d3_selection_onFilters.get(type);\n    if (filter) type = filter, wrap = d3_selection_onFilter;\n    function onRemove() {\n      var l = this[name];\n      if (l) {\n        this.removeEventListener(type, l, l.$);\n        delete this[name];\n      }\n    }\n    function onAdd() {\n      var l = wrap(listener, d3_array(arguments));\n      onRemove.call(this);\n      this.addEventListener(type, this[name] = l, l.$ = capture);\n      l._ = listener;\n    }\n    function removeAll() {\n      var re = new RegExp(\"^__on([^.]+)\" + d3.requote(type) + \"$\"), match;\n      for (var name in this) {\n        if (match = name.match(re)) {\n          var l = this[name];\n          this.removeEventListener(match[1], l, l.$);\n          delete this[name];\n        }\n      }\n    }\n    return i ? listener ? onAdd : onRemove : listener ? d3_noop : removeAll;\n  }\n  var d3_selection_onFilters = d3.map({\n    mouseenter: \"mouseover\",\n    mouseleave: \"mouseout\"\n  });\n  if (d3_document) {\n    d3_selection_onFilters.forEach(function(k) {\n      if (\"on\" + k in d3_document) d3_selection_onFilters.remove(k);\n    });\n  }\n  function d3_selection_onListener(listener, argumentz) {\n    return function(e) {\n      var o = d3.event;\n      d3.event = e;\n      argumentz[0] = this.__data__;\n      try {\n        listener.apply(this, argumentz);\n      } finally {\n        d3.event = o;\n      }\n    };\n  }\n  function d3_selection_onFilter(listener, argumentz) {\n    var l = d3_selection_onListener(listener, argumentz);\n    return function(e) {\n      var target = this, related = e.relatedTarget;\n      if (!related || related !== target && !(related.compareDocumentPosition(target) & 8)) {\n        l.call(target, e);\n      }\n    };\n  }\n  var d3_event_dragSelect, d3_event_dragId = 0;\n  function d3_event_dragSuppress(node) {\n    var name = \".dragsuppress-\" + ++d3_event_dragId, click = \"click\" + name, w = d3.select(d3_window(node)).on(\"touchmove\" + name, d3_eventPreventDefault).on(\"dragstart\" + name, d3_eventPreventDefault).on(\"selectstart\" + name, d3_eventPreventDefault);\n    if (d3_event_dragSelect == null) {\n      d3_event_dragSelect = \"onselectstart\" in node ? false : d3_vendorSymbol(node.style, \"userSelect\");\n    }\n    if (d3_event_dragSelect) {\n      var style = d3_documentElement(node).style, select = style[d3_event_dragSelect];\n      style[d3_event_dragSelect] = \"none\";\n    }\n    return function(suppressClick) {\n      w.on(name, null);\n      if (d3_event_dragSelect) style[d3_event_dragSelect] = select;\n      if (suppressClick) {\n        var off = function() {\n          w.on(click, null);\n        };\n        w.on(click, function() {\n          d3_eventPreventDefault();\n          off();\n        }, true);\n        setTimeout(off, 0);\n      }\n    };\n  }\n  d3.mouse = function(container) {\n    return d3_mousePoint(container, d3_eventSource());\n  };\n  var d3_mouse_bug44083 = this.navigator && /WebKit/.test(this.navigator.userAgent) ? -1 : 0;\n  function d3_mousePoint(container, e) {\n    if (e.changedTouches) e = e.changedTouches[0];\n    var svg = container.ownerSVGElement || container;\n    if (svg.createSVGPoint) {\n      var point = svg.createSVGPoint();\n      if (d3_mouse_bug44083 < 0) {\n        var window = d3_window(container);\n        if (window.scrollX || window.scrollY) {\n          svg = d3.select(\"body\").append(\"svg\").style({\n            position: \"absolute\",\n            top: 0,\n            left: 0,\n            margin: 0,\n            padding: 0,\n            border: \"none\"\n          }, \"important\");\n          var ctm = svg[0][0].getScreenCTM();\n          d3_mouse_bug44083 = !(ctm.f || ctm.e);\n          svg.remove();\n        }\n      }\n      if (d3_mouse_bug44083) point.x = e.pageX, point.y = e.pageY; else point.x = e.clientX, \n      point.y = e.clientY;\n      point = point.matrixTransform(container.getScreenCTM().inverse());\n      return [ point.x, point.y ];\n    }\n    var rect = container.getBoundingClientRect();\n    return [ e.clientX - rect.left - container.clientLeft, e.clientY - rect.top - container.clientTop ];\n  }\n  d3.touch = function(container, touches, identifier) {\n    if (arguments.length < 3) identifier = touches, touches = d3_eventSource().changedTouches;\n    if (touches) for (var i = 0, n = touches.length, touch; i < n; ++i) {\n      if ((touch = touches[i]).identifier === identifier) {\n        return d3_mousePoint(container, touch);\n      }\n    }\n  };\n  d3.behavior.drag = function() {\n    var event = d3_eventDispatch(drag, \"drag\", \"dragstart\", \"dragend\"), origin = null, mousedown = dragstart(d3_noop, d3.mouse, d3_window, \"mousemove\", \"mouseup\"), touchstart = dragstart(d3_behavior_dragTouchId, d3.touch, d3_identity, \"touchmove\", \"touchend\");\n    function drag() {\n      this.on(\"mousedown.drag\", mousedown).on(\"touchstart.drag\", touchstart);\n    }\n    function dragstart(id, position, subject, move, end) {\n      return function() {\n        var that = this, target = d3.event.target.correspondingElement || d3.event.target, parent = that.parentNode, dispatch = event.of(that, arguments), dragged = 0, dragId = id(), dragName = \".drag\" + (dragId == null ? \"\" : \"-\" + dragId), dragOffset, dragSubject = d3.select(subject(target)).on(move + dragName, moved).on(end + dragName, ended), dragRestore = d3_event_dragSuppress(target), position0 = position(parent, dragId);\n        if (origin) {\n          dragOffset = origin.apply(that, arguments);\n          dragOffset = [ dragOffset.x - position0[0], dragOffset.y - position0[1] ];\n        } else {\n          dragOffset = [ 0, 0 ];\n        }\n        dispatch({\n          type: \"dragstart\"\n        });\n        function moved() {\n          var position1 = position(parent, dragId), dx, dy;\n          if (!position1) return;\n          dx = position1[0] - position0[0];\n          dy = position1[1] - position0[1];\n          dragged |= dx | dy;\n          position0 = position1;\n          dispatch({\n            type: \"drag\",\n            x: position1[0] + dragOffset[0],\n            y: position1[1] + dragOffset[1],\n            dx: dx,\n            dy: dy\n          });\n        }\n        function ended() {\n          if (!position(parent, dragId)) return;\n          dragSubject.on(move + dragName, null).on(end + dragName, null);\n          dragRestore(dragged);\n          dispatch({\n            type: \"dragend\"\n          });\n        }\n      };\n    }\n    drag.origin = function(x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return drag;\n    };\n    return d3.rebind(drag, event, \"on\");\n  };\n  function d3_behavior_dragTouchId() {\n    return d3.event.changedTouches[0].identifier;\n  }\n  d3.touches = function(container, touches) {\n    if (arguments.length < 2) touches = d3_eventSource().touches;\n    return touches ? d3_array(touches).map(function(touch) {\n      var point = d3_mousePoint(container, touch);\n      point.identifier = touch.identifier;\n      return point;\n    }) : [];\n  };\n  var ε = 1e-6, ε2 = ε * ε, π = Math.PI, τ = 2 * π, τε = τ - ε, halfπ = π / 2, d3_radians = π / 180, d3_degrees = 180 / π;\n  function d3_sgn(x) {\n    return x > 0 ? 1 : x < 0 ? -1 : 0;\n  }\n  function d3_cross2d(a, b, c) {\n    return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n  }\n  function d3_acos(x) {\n    return x > 1 ? 0 : x < -1 ? π : Math.acos(x);\n  }\n  function d3_asin(x) {\n    return x > 1 ? halfπ : x < -1 ? -halfπ : Math.asin(x);\n  }\n  function d3_sinh(x) {\n    return ((x = Math.exp(x)) - 1 / x) / 2;\n  }\n  function d3_cosh(x) {\n    return ((x = Math.exp(x)) + 1 / x) / 2;\n  }\n  function d3_tanh(x) {\n    return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n  }\n  function d3_haversin(x) {\n    return (x = Math.sin(x / 2)) * x;\n  }\n  var ρ = Math.SQRT2, ρ2 = 2, ρ4 = 4;\n  d3.interpolateZoom = function(p0, p1) {\n    var ux0 = p0[0], uy0 = p0[1], w0 = p0[2], ux1 = p1[0], uy1 = p1[1], w1 = p1[2], dx = ux1 - ux0, dy = uy1 - uy0, d2 = dx * dx + dy * dy, i, S;\n    if (d2 < ε2) {\n      S = Math.log(w1 / w0) / ρ;\n      i = function(t) {\n        return [ ux0 + t * dx, uy0 + t * dy, w0 * Math.exp(ρ * t * S) ];\n      };\n    } else {\n      var d1 = Math.sqrt(d2), b0 = (w1 * w1 - w0 * w0 + ρ4 * d2) / (2 * w0 * ρ2 * d1), b1 = (w1 * w1 - w0 * w0 - ρ4 * d2) / (2 * w1 * ρ2 * d1), r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0), r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n      S = (r1 - r0) / ρ;\n      i = function(t) {\n        var s = t * S, coshr0 = d3_cosh(r0), u = w0 / (ρ2 * d1) * (coshr0 * d3_tanh(ρ * s + r0) - d3_sinh(r0));\n        return [ ux0 + u * dx, uy0 + u * dy, w0 * coshr0 / d3_cosh(ρ * s + r0) ];\n      };\n    }\n    i.duration = S * 1e3;\n    return i;\n  };\n  d3.behavior.zoom = function() {\n    var view = {\n      x: 0,\n      y: 0,\n      k: 1\n    }, translate0, center0, center, size = [ 960, 500 ], scaleExtent = d3_behavior_zoomInfinity, duration = 250, zooming = 0, mousedown = \"mousedown.zoom\", mousemove = \"mousemove.zoom\", mouseup = \"mouseup.zoom\", mousewheelTimer, touchstart = \"touchstart.zoom\", touchtime, event = d3_eventDispatch(zoom, \"zoomstart\", \"zoom\", \"zoomend\"), x0, x1, y0, y1;\n    if (!d3_behavior_zoomWheel) {\n      d3_behavior_zoomWheel = \"onwheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n        return -d3.event.deltaY * (d3.event.deltaMode ? 120 : 1);\n      }, \"wheel\") : \"onmousewheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n        return d3.event.wheelDelta;\n      }, \"mousewheel\") : (d3_behavior_zoomDelta = function() {\n        return -d3.event.detail;\n      }, \"MozMousePixelScroll\");\n    }\n    function zoom(g) {\n      g.on(mousedown, mousedowned).on(d3_behavior_zoomWheel + \".zoom\", mousewheeled).on(\"dblclick.zoom\", dblclicked).on(touchstart, touchstarted);\n    }\n    zoom.event = function(g) {\n      g.each(function() {\n        var dispatch = event.of(this, arguments), view1 = view;\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.zoom\", function() {\n            view = this.__chart__ || {\n              x: 0,\n              y: 0,\n              k: 1\n            };\n            zoomstarted(dispatch);\n          }).tween(\"zoom:zoom\", function() {\n            var dx = size[0], dy = size[1], cx = center0 ? center0[0] : dx / 2, cy = center0 ? center0[1] : dy / 2, i = d3.interpolateZoom([ (cx - view.x) / view.k, (cy - view.y) / view.k, dx / view.k ], [ (cx - view1.x) / view1.k, (cy - view1.y) / view1.k, dx / view1.k ]);\n            return function(t) {\n              var l = i(t), k = dx / l[2];\n              this.__chart__ = view = {\n                x: cx - l[0] * k,\n                y: cy - l[1] * k,\n                k: k\n              };\n              zoomed(dispatch);\n            };\n          }).each(\"interrupt.zoom\", function() {\n            zoomended(dispatch);\n          }).each(\"end.zoom\", function() {\n            zoomended(dispatch);\n          });\n        } else {\n          this.__chart__ = view;\n          zoomstarted(dispatch);\n          zoomed(dispatch);\n          zoomended(dispatch);\n        }\n      });\n    };\n    zoom.translate = function(_) {\n      if (!arguments.length) return [ view.x, view.y ];\n      view = {\n        x: +_[0],\n        y: +_[1],\n        k: view.k\n      };\n      rescale();\n      return zoom;\n    };\n    zoom.scale = function(_) {\n      if (!arguments.length) return view.k;\n      view = {\n        x: view.x,\n        y: view.y,\n        k: null\n      };\n      scaleTo(+_);\n      rescale();\n      return zoom;\n    };\n    zoom.scaleExtent = function(_) {\n      if (!arguments.length) return scaleExtent;\n      scaleExtent = _ == null ? d3_behavior_zoomInfinity : [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.center = function(_) {\n      if (!arguments.length) return center;\n      center = _ && [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.size = function(_) {\n      if (!arguments.length) return size;\n      size = _ && [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.duration = function(_) {\n      if (!arguments.length) return duration;\n      duration = +_;\n      return zoom;\n    };\n    zoom.x = function(z) {\n      if (!arguments.length) return x1;\n      x1 = z;\n      x0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n    zoom.y = function(z) {\n      if (!arguments.length) return y1;\n      y1 = z;\n      y0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n    function location(p) {\n      return [ (p[0] - view.x) / view.k, (p[1] - view.y) / view.k ];\n    }\n    function point(l) {\n      return [ l[0] * view.k + view.x, l[1] * view.k + view.y ];\n    }\n    function scaleTo(s) {\n      view.k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], s));\n    }\n    function translateTo(p, l) {\n      l = point(l);\n      view.x += p[0] - l[0];\n      view.y += p[1] - l[1];\n    }\n    function zoomTo(that, p, l, k) {\n      that.__chart__ = {\n        x: view.x,\n        y: view.y,\n        k: view.k\n      };\n      scaleTo(Math.pow(2, k));\n      translateTo(center0 = p, l);\n      that = d3.select(that);\n      if (duration > 0) that = that.transition().duration(duration);\n      that.call(zoom.event);\n    }\n    function rescale() {\n      if (x1) x1.domain(x0.range().map(function(x) {\n        return (x - view.x) / view.k;\n      }).map(x0.invert));\n      if (y1) y1.domain(y0.range().map(function(y) {\n        return (y - view.y) / view.k;\n      }).map(y0.invert));\n    }\n    function zoomstarted(dispatch) {\n      if (!zooming++) dispatch({\n        type: \"zoomstart\"\n      });\n    }\n    function zoomed(dispatch) {\n      rescale();\n      dispatch({\n        type: \"zoom\",\n        scale: view.k,\n        translate: [ view.x, view.y ]\n      });\n    }\n    function zoomended(dispatch) {\n      if (!--zooming) dispatch({\n        type: \"zoomend\"\n      }), center0 = null;\n    }\n    function mousedowned() {\n      var that = this, dispatch = event.of(that, arguments), dragged = 0, subject = d3.select(d3_window(that)).on(mousemove, moved).on(mouseup, ended), location0 = location(d3.mouse(that)), dragRestore = d3_event_dragSuppress(that);\n      d3_selection_interrupt.call(that);\n      zoomstarted(dispatch);\n      function moved() {\n        dragged = 1;\n        translateTo(d3.mouse(that), location0);\n        zoomed(dispatch);\n      }\n      function ended() {\n        subject.on(mousemove, null).on(mouseup, null);\n        dragRestore(dragged);\n        zoomended(dispatch);\n      }\n    }\n    function touchstarted() {\n      var that = this, dispatch = event.of(that, arguments), locations0 = {}, distance0 = 0, scale0, zoomName = \".zoom-\" + d3.event.changedTouches[0].identifier, touchmove = \"touchmove\" + zoomName, touchend = \"touchend\" + zoomName, targets = [], subject = d3.select(that), dragRestore = d3_event_dragSuppress(that);\n      started();\n      zoomstarted(dispatch);\n      subject.on(mousedown, null).on(touchstart, started);\n      function relocate() {\n        var touches = d3.touches(that);\n        scale0 = view.k;\n        touches.forEach(function(t) {\n          if (t.identifier in locations0) locations0[t.identifier] = location(t);\n        });\n        return touches;\n      }\n      function started() {\n        var target = d3.event.target;\n        d3.select(target).on(touchmove, moved).on(touchend, ended);\n        targets.push(target);\n        var changed = d3.event.changedTouches;\n        for (var i = 0, n = changed.length; i < n; ++i) {\n          locations0[changed[i].identifier] = null;\n        }\n        var touches = relocate(), now = Date.now();\n        if (touches.length === 1) {\n          if (now - touchtime < 500) {\n            var p = touches[0];\n            zoomTo(that, p, locations0[p.identifier], Math.floor(Math.log(view.k) / Math.LN2) + 1);\n            d3_eventPreventDefault();\n          }\n          touchtime = now;\n        } else if (touches.length > 1) {\n          var p = touches[0], q = touches[1], dx = p[0] - q[0], dy = p[1] - q[1];\n          distance0 = dx * dx + dy * dy;\n        }\n      }\n      function moved() {\n        var touches = d3.touches(that), p0, l0, p1, l1;\n        d3_selection_interrupt.call(that);\n        for (var i = 0, n = touches.length; i < n; ++i, l1 = null) {\n          p1 = touches[i];\n          if (l1 = locations0[p1.identifier]) {\n            if (l0) break;\n            p0 = p1, l0 = l1;\n          }\n        }\n        if (l1) {\n          var distance1 = (distance1 = p1[0] - p0[0]) * distance1 + (distance1 = p1[1] - p0[1]) * distance1, scale1 = distance0 && Math.sqrt(distance1 / distance0);\n          p0 = [ (p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2 ];\n          l0 = [ (l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2 ];\n          scaleTo(scale1 * scale0);\n        }\n        touchtime = null;\n        translateTo(p0, l0);\n        zoomed(dispatch);\n      }\n      function ended() {\n        if (d3.event.touches.length) {\n          var changed = d3.event.changedTouches;\n          for (var i = 0, n = changed.length; i < n; ++i) {\n            delete locations0[changed[i].identifier];\n          }\n          for (var identifier in locations0) {\n            return void relocate();\n          }\n        }\n        d3.selectAll(targets).on(zoomName, null);\n        subject.on(mousedown, mousedowned).on(touchstart, touchstarted);\n        dragRestore();\n        zoomended(dispatch);\n      }\n    }\n    function mousewheeled() {\n      var dispatch = event.of(this, arguments);\n      if (mousewheelTimer) clearTimeout(mousewheelTimer); else d3_selection_interrupt.call(this), \n      translate0 = location(center0 = center || d3.mouse(this)), zoomstarted(dispatch);\n      mousewheelTimer = setTimeout(function() {\n        mousewheelTimer = null;\n        zoomended(dispatch);\n      }, 50);\n      d3_eventPreventDefault();\n      scaleTo(Math.pow(2, d3_behavior_zoomDelta() * .002) * view.k);\n      translateTo(center0, translate0);\n      zoomed(dispatch);\n    }\n    function dblclicked() {\n      var p = d3.mouse(this), k = Math.log(view.k) / Math.LN2;\n      zoomTo(this, p, location(p), d3.event.shiftKey ? Math.ceil(k) - 1 : Math.floor(k) + 1);\n    }\n    return d3.rebind(zoom, event, \"on\");\n  };\n  var d3_behavior_zoomInfinity = [ 0, Infinity ], d3_behavior_zoomDelta, d3_behavior_zoomWheel;\n  d3.color = d3_color;\n  function d3_color() {}\n  d3_color.prototype.toString = function() {\n    return this.rgb() + \"\";\n  };\n  d3.hsl = d3_hsl;\n  function d3_hsl(h, s, l) {\n    return this instanceof d3_hsl ? void (this.h = +h, this.s = +s, this.l = +l) : arguments.length < 2 ? h instanceof d3_hsl ? new d3_hsl(h.h, h.s, h.l) : d3_rgb_parse(\"\" + h, d3_rgb_hsl, d3_hsl) : new d3_hsl(h, s, l);\n  }\n  var d3_hslPrototype = d3_hsl.prototype = new d3_color();\n  d3_hslPrototype.brighter = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_hsl(this.h, this.s, this.l / k);\n  };\n  d3_hslPrototype.darker = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_hsl(this.h, this.s, k * this.l);\n  };\n  d3_hslPrototype.rgb = function() {\n    return d3_hsl_rgb(this.h, this.s, this.l);\n  };\n  function d3_hsl_rgb(h, s, l) {\n    var m1, m2;\n    h = isNaN(h) ? 0 : (h %= 360) < 0 ? h + 360 : h;\n    s = isNaN(s) ? 0 : s < 0 ? 0 : s > 1 ? 1 : s;\n    l = l < 0 ? 0 : l > 1 ? 1 : l;\n    m2 = l <= .5 ? l * (1 + s) : l + s - l * s;\n    m1 = 2 * l - m2;\n    function v(h) {\n      if (h > 360) h -= 360; else if (h < 0) h += 360;\n      if (h < 60) return m1 + (m2 - m1) * h / 60;\n      if (h < 180) return m2;\n      if (h < 240) return m1 + (m2 - m1) * (240 - h) / 60;\n      return m1;\n    }\n    function vv(h) {\n      return Math.round(v(h) * 255);\n    }\n    return new d3_rgb(vv(h + 120), vv(h), vv(h - 120));\n  }\n  d3.hcl = d3_hcl;\n  function d3_hcl(h, c, l) {\n    return this instanceof d3_hcl ? void (this.h = +h, this.c = +c, this.l = +l) : arguments.length < 2 ? h instanceof d3_hcl ? new d3_hcl(h.h, h.c, h.l) : h instanceof d3_lab ? d3_lab_hcl(h.l, h.a, h.b) : d3_lab_hcl((h = d3_rgb_lab((h = d3.rgb(h)).r, h.g, h.b)).l, h.a, h.b) : new d3_hcl(h, c, l);\n  }\n  var d3_hclPrototype = d3_hcl.prototype = new d3_color();\n  d3_hclPrototype.brighter = function(k) {\n    return new d3_hcl(this.h, this.c, Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)));\n  };\n  d3_hclPrototype.darker = function(k) {\n    return new d3_hcl(this.h, this.c, Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)));\n  };\n  d3_hclPrototype.rgb = function() {\n    return d3_hcl_lab(this.h, this.c, this.l).rgb();\n  };\n  function d3_hcl_lab(h, c, l) {\n    if (isNaN(h)) h = 0;\n    if (isNaN(c)) c = 0;\n    return new d3_lab(l, Math.cos(h *= d3_radians) * c, Math.sin(h) * c);\n  }\n  d3.lab = d3_lab;\n  function d3_lab(l, a, b) {\n    return this instanceof d3_lab ? void (this.l = +l, this.a = +a, this.b = +b) : arguments.length < 2 ? l instanceof d3_lab ? new d3_lab(l.l, l.a, l.b) : l instanceof d3_hcl ? d3_hcl_lab(l.h, l.c, l.l) : d3_rgb_lab((l = d3_rgb(l)).r, l.g, l.b) : new d3_lab(l, a, b);\n  }\n  var d3_lab_K = 18;\n  var d3_lab_X = .95047, d3_lab_Y = 1, d3_lab_Z = 1.08883;\n  var d3_labPrototype = d3_lab.prototype = new d3_color();\n  d3_labPrototype.brighter = function(k) {\n    return new d3_lab(Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n  d3_labPrototype.darker = function(k) {\n    return new d3_lab(Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n  d3_labPrototype.rgb = function() {\n    return d3_lab_rgb(this.l, this.a, this.b);\n  };\n  function d3_lab_rgb(l, a, b) {\n    var y = (l + 16) / 116, x = y + a / 500, z = y - b / 200;\n    x = d3_lab_xyz(x) * d3_lab_X;\n    y = d3_lab_xyz(y) * d3_lab_Y;\n    z = d3_lab_xyz(z) * d3_lab_Z;\n    return new d3_rgb(d3_xyz_rgb(3.2404542 * x - 1.5371385 * y - .4985314 * z), d3_xyz_rgb(-.969266 * x + 1.8760108 * y + .041556 * z), d3_xyz_rgb(.0556434 * x - .2040259 * y + 1.0572252 * z));\n  }\n  function d3_lab_hcl(l, a, b) {\n    return l > 0 ? new d3_hcl(Math.atan2(b, a) * d3_degrees, Math.sqrt(a * a + b * b), l) : new d3_hcl(NaN, NaN, l);\n  }\n  function d3_lab_xyz(x) {\n    return x > .206893034 ? x * x * x : (x - 4 / 29) / 7.787037;\n  }\n  function d3_xyz_lab(x) {\n    return x > .008856 ? Math.pow(x, 1 / 3) : 7.787037 * x + 4 / 29;\n  }\n  function d3_xyz_rgb(r) {\n    return Math.round(255 * (r <= .00304 ? 12.92 * r : 1.055 * Math.pow(r, 1 / 2.4) - .055));\n  }\n  d3.rgb = d3_rgb;\n  function d3_rgb(r, g, b) {\n    return this instanceof d3_rgb ? void (this.r = ~~r, this.g = ~~g, this.b = ~~b) : arguments.length < 2 ? r instanceof d3_rgb ? new d3_rgb(r.r, r.g, r.b) : d3_rgb_parse(\"\" + r, d3_rgb, d3_hsl_rgb) : new d3_rgb(r, g, b);\n  }\n  function d3_rgbNumber(value) {\n    return new d3_rgb(value >> 16, value >> 8 & 255, value & 255);\n  }\n  function d3_rgbString(value) {\n    return d3_rgbNumber(value) + \"\";\n  }\n  var d3_rgbPrototype = d3_rgb.prototype = new d3_color();\n  d3_rgbPrototype.brighter = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    var r = this.r, g = this.g, b = this.b, i = 30;\n    if (!r && !g && !b) return new d3_rgb(i, i, i);\n    if (r && r < i) r = i;\n    if (g && g < i) g = i;\n    if (b && b < i) b = i;\n    return new d3_rgb(Math.min(255, r / k), Math.min(255, g / k), Math.min(255, b / k));\n  };\n  d3_rgbPrototype.darker = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_rgb(k * this.r, k * this.g, k * this.b);\n  };\n  d3_rgbPrototype.hsl = function() {\n    return d3_rgb_hsl(this.r, this.g, this.b);\n  };\n  d3_rgbPrototype.toString = function() {\n    return \"#\" + d3_rgb_hex(this.r) + d3_rgb_hex(this.g) + d3_rgb_hex(this.b);\n  };\n  function d3_rgb_hex(v) {\n    return v < 16 ? \"0\" + Math.max(0, v).toString(16) : Math.min(255, v).toString(16);\n  }\n  function d3_rgb_parse(format, rgb, hsl) {\n    var r = 0, g = 0, b = 0, m1, m2, color;\n    m1 = /([a-z]+)\\((.*)\\)/.exec(format = format.toLowerCase());\n    if (m1) {\n      m2 = m1[2].split(\",\");\n      switch (m1[1]) {\n       case \"hsl\":\n        {\n          return hsl(parseFloat(m2[0]), parseFloat(m2[1]) / 100, parseFloat(m2[2]) / 100);\n        }\n\n       case \"rgb\":\n        {\n          return rgb(d3_rgb_parseNumber(m2[0]), d3_rgb_parseNumber(m2[1]), d3_rgb_parseNumber(m2[2]));\n        }\n      }\n    }\n    if (color = d3_rgb_names.get(format)) {\n      return rgb(color.r, color.g, color.b);\n    }\n    if (format != null && format.charAt(0) === \"#\" && !isNaN(color = parseInt(format.slice(1), 16))) {\n      if (format.length === 4) {\n        r = (color & 3840) >> 4;\n        r = r >> 4 | r;\n        g = color & 240;\n        g = g >> 4 | g;\n        b = color & 15;\n        b = b << 4 | b;\n      } else if (format.length === 7) {\n        r = (color & 16711680) >> 16;\n        g = (color & 65280) >> 8;\n        b = color & 255;\n      }\n    }\n    return rgb(r, g, b);\n  }\n  function d3_rgb_hsl(r, g, b) {\n    var min = Math.min(r /= 255, g /= 255, b /= 255), max = Math.max(r, g, b), d = max - min, h, s, l = (max + min) / 2;\n    if (d) {\n      s = l < .5 ? d / (max + min) : d / (2 - max - min);\n      if (r == max) h = (g - b) / d + (g < b ? 6 : 0); else if (g == max) h = (b - r) / d + 2; else h = (r - g) / d + 4;\n      h *= 60;\n    } else {\n      h = NaN;\n      s = l > 0 && l < 1 ? 0 : h;\n    }\n    return new d3_hsl(h, s, l);\n  }\n  function d3_rgb_lab(r, g, b) {\n    r = d3_rgb_xyz(r);\n    g = d3_rgb_xyz(g);\n    b = d3_rgb_xyz(b);\n    var x = d3_xyz_lab((.4124564 * r + .3575761 * g + .1804375 * b) / d3_lab_X), y = d3_xyz_lab((.2126729 * r + .7151522 * g + .072175 * b) / d3_lab_Y), z = d3_xyz_lab((.0193339 * r + .119192 * g + .9503041 * b) / d3_lab_Z);\n    return d3_lab(116 * y - 16, 500 * (x - y), 200 * (y - z));\n  }\n  function d3_rgb_xyz(r) {\n    return (r /= 255) <= .04045 ? r / 12.92 : Math.pow((r + .055) / 1.055, 2.4);\n  }\n  function d3_rgb_parseNumber(c) {\n    var f = parseFloat(c);\n    return c.charAt(c.length - 1) === \"%\" ? Math.round(f * 2.55) : f;\n  }\n  var d3_rgb_names = d3.map({\n    aliceblue: 15792383,\n    antiquewhite: 16444375,\n    aqua: 65535,\n    aquamarine: 8388564,\n    azure: 15794175,\n    beige: 16119260,\n    bisque: 16770244,\n    black: 0,\n    blanchedalmond: 16772045,\n    blue: 255,\n    blueviolet: 9055202,\n    brown: 10824234,\n    burlywood: 14596231,\n    cadetblue: 6266528,\n    chartreuse: 8388352,\n    chocolate: 13789470,\n    coral: 16744272,\n    cornflowerblue: 6591981,\n    cornsilk: 16775388,\n    crimson: 14423100,\n    cyan: 65535,\n    darkblue: 139,\n    darkcyan: 35723,\n    darkgoldenrod: 12092939,\n    darkgray: 11119017,\n    darkgreen: 25600,\n    darkgrey: 11119017,\n    darkkhaki: 12433259,\n    darkmagenta: 9109643,\n    darkolivegreen: 5597999,\n    darkorange: 16747520,\n    darkorchid: 10040012,\n    darkred: 9109504,\n    darksalmon: 15308410,\n    darkseagreen: 9419919,\n    darkslateblue: 4734347,\n    darkslategray: 3100495,\n    darkslategrey: 3100495,\n    darkturquoise: 52945,\n    darkviolet: 9699539,\n    deeppink: 16716947,\n    deepskyblue: 49151,\n    dimgray: 6908265,\n    dimgrey: 6908265,\n    dodgerblue: 2003199,\n    firebrick: 11674146,\n    floralwhite: 16775920,\n    forestgreen: 2263842,\n    fuchsia: 16711935,\n    gainsboro: 14474460,\n    ghostwhite: 16316671,\n    gold: 16766720,\n    goldenrod: 14329120,\n    gray: 8421504,\n    green: 32768,\n    greenyellow: 11403055,\n    grey: 8421504,\n    honeydew: 15794160,\n    hotpink: 16738740,\n    indianred: 13458524,\n    indigo: 4915330,\n    ivory: 16777200,\n    khaki: 15787660,\n    lavender: 15132410,\n    lavenderblush: 16773365,\n    lawngreen: 8190976,\n    lemonchiffon: 16775885,\n    lightblue: 11393254,\n    lightcoral: 15761536,\n    lightcyan: 14745599,\n    lightgoldenrodyellow: 16448210,\n    lightgray: 13882323,\n    lightgreen: 9498256,\n    lightgrey: 13882323,\n    lightpink: 16758465,\n    lightsalmon: 16752762,\n    lightseagreen: 2142890,\n    lightskyblue: 8900346,\n    lightslategray: 7833753,\n    lightslategrey: 7833753,\n    lightsteelblue: 11584734,\n    lightyellow: 16777184,\n    lime: 65280,\n    limegreen: 3329330,\n    linen: 16445670,\n    magenta: 16711935,\n    maroon: 8388608,\n    mediumaquamarine: 6737322,\n    mediumblue: 205,\n    mediumorchid: 12211667,\n    mediumpurple: 9662683,\n    mediumseagreen: 3978097,\n    mediumslateblue: 8087790,\n    mediumspringgreen: 64154,\n    mediumturquoise: 4772300,\n    mediumvioletred: 13047173,\n    midnightblue: 1644912,\n    mintcream: 16121850,\n    mistyrose: 16770273,\n    moccasin: 16770229,\n    navajowhite: 16768685,\n    navy: 128,\n    oldlace: 16643558,\n    olive: 8421376,\n    olivedrab: 7048739,\n    orange: 16753920,\n    orangered: 16729344,\n    orchid: 14315734,\n    palegoldenrod: 15657130,\n    palegreen: 10025880,\n    paleturquoise: 11529966,\n    palevioletred: 14381203,\n    papayawhip: 16773077,\n    peachpuff: 16767673,\n    peru: 13468991,\n    pink: 16761035,\n    plum: 14524637,\n    powderblue: 11591910,\n    purple: 8388736,\n    rebeccapurple: 6697881,\n    red: 16711680,\n    rosybrown: 12357519,\n    royalblue: 4286945,\n    saddlebrown: 9127187,\n    salmon: 16416882,\n    sandybrown: 16032864,\n    seagreen: 3050327,\n    seashell: 16774638,\n    sienna: 10506797,\n    silver: 12632256,\n    skyblue: 8900331,\n    slateblue: 6970061,\n    slategray: 7372944,\n    slategrey: 7372944,\n    snow: 16775930,\n    springgreen: 65407,\n    steelblue: 4620980,\n    tan: 13808780,\n    teal: 32896,\n    thistle: 14204888,\n    tomato: 16737095,\n    turquoise: 4251856,\n    violet: 15631086,\n    wheat: 16113331,\n    white: 16777215,\n    whitesmoke: 16119285,\n    yellow: 16776960,\n    yellowgreen: 10145074\n  });\n  d3_rgb_names.forEach(function(key, value) {\n    d3_rgb_names.set(key, d3_rgbNumber(value));\n  });\n  function d3_functor(v) {\n    return typeof v === \"function\" ? v : function() {\n      return v;\n    };\n  }\n  d3.functor = d3_functor;\n  d3.xhr = d3_xhrType(d3_identity);\n  function d3_xhrType(response) {\n    return function(url, mimeType, callback) {\n      if (arguments.length === 2 && typeof mimeType === \"function\") callback = mimeType, \n      mimeType = null;\n      return d3_xhr(url, mimeType, response, callback);\n    };\n  }\n  function d3_xhr(url, mimeType, response, callback) {\n    var xhr = {}, dispatch = d3.dispatch(\"beforesend\", \"progress\", \"load\", \"error\"), headers = {}, request = new XMLHttpRequest(), responseType = null;\n    if (this.XDomainRequest && !(\"withCredentials\" in request) && /^(http(s)?:)?\\/\\//.test(url)) request = new XDomainRequest();\n    \"onload\" in request ? request.onload = request.onerror = respond : request.onreadystatechange = function() {\n      request.readyState > 3 && respond();\n    };\n    function respond() {\n      var status = request.status, result;\n      if (!status && d3_xhrHasResponse(request) || status >= 200 && status < 300 || status === 304) {\n        try {\n          result = response.call(xhr, request);\n        } catch (e) {\n          dispatch.error.call(xhr, e);\n          return;\n        }\n        dispatch.load.call(xhr, result);\n      } else {\n        dispatch.error.call(xhr, request);\n      }\n    }\n    request.onprogress = function(event) {\n      var o = d3.event;\n      d3.event = event;\n      try {\n        dispatch.progress.call(xhr, request);\n      } finally {\n        d3.event = o;\n      }\n    };\n    xhr.header = function(name, value) {\n      name = (name + \"\").toLowerCase();\n      if (arguments.length < 2) return headers[name];\n      if (value == null) delete headers[name]; else headers[name] = value + \"\";\n      return xhr;\n    };\n    xhr.mimeType = function(value) {\n      if (!arguments.length) return mimeType;\n      mimeType = value == null ? null : value + \"\";\n      return xhr;\n    };\n    xhr.responseType = function(value) {\n      if (!arguments.length) return responseType;\n      responseType = value;\n      return xhr;\n    };\n    xhr.response = function(value) {\n      response = value;\n      return xhr;\n    };\n    [ \"get\", \"post\" ].forEach(function(method) {\n      xhr[method] = function() {\n        return xhr.send.apply(xhr, [ method ].concat(d3_array(arguments)));\n      };\n    });\n    xhr.send = function(method, data, callback) {\n      if (arguments.length === 2 && typeof data === \"function\") callback = data, data = null;\n      request.open(method, url, true);\n      if (mimeType != null && !(\"accept\" in headers)) headers[\"accept\"] = mimeType + \",*/*\";\n      if (request.setRequestHeader) for (var name in headers) request.setRequestHeader(name, headers[name]);\n      if (mimeType != null && request.overrideMimeType) request.overrideMimeType(mimeType);\n      if (responseType != null) request.responseType = responseType;\n      if (callback != null) xhr.on(\"error\", callback).on(\"load\", function(request) {\n        callback(null, request);\n      });\n      dispatch.beforesend.call(xhr, request);\n      request.send(data == null ? null : data);\n      return xhr;\n    };\n    xhr.abort = function() {\n      request.abort();\n      return xhr;\n    };\n    d3.rebind(xhr, dispatch, \"on\");\n    return callback == null ? xhr : xhr.get(d3_xhr_fixCallback(callback));\n  }\n  function d3_xhr_fixCallback(callback) {\n    return callback.length === 1 ? function(error, request) {\n      callback(error == null ? request : null);\n    } : callback;\n  }\n  function d3_xhrHasResponse(request) {\n    var type = request.responseType;\n    return type && type !== \"text\" ? request.response : request.responseText;\n  }\n  d3.dsv = function(delimiter, mimeType) {\n    var reFormat = new RegExp('[\"' + delimiter + \"\\n]\"), delimiterCode = delimiter.charCodeAt(0);\n    function dsv(url, row, callback) {\n      if (arguments.length < 3) callback = row, row = null;\n      var xhr = d3_xhr(url, mimeType, row == null ? response : typedResponse(row), callback);\n      xhr.row = function(_) {\n        return arguments.length ? xhr.response((row = _) == null ? response : typedResponse(_)) : row;\n      };\n      return xhr;\n    }\n    function response(request) {\n      return dsv.parse(request.responseText);\n    }\n    function typedResponse(f) {\n      return function(request) {\n        return dsv.parse(request.responseText, f);\n      };\n    }\n    dsv.parse = function(text, f) {\n      var o;\n      return dsv.parseRows(text, function(row, i) {\n        if (o) return o(row, i - 1);\n        var a = new Function(\"d\", \"return {\" + row.map(function(name, i) {\n          return JSON.stringify(name) + \": d[\" + i + \"]\";\n        }).join(\",\") + \"}\");\n        o = f ? function(row, i) {\n          return f(a(row), i);\n        } : a;\n      });\n    };\n    dsv.parseRows = function(text, f) {\n      var EOL = {}, EOF = {}, rows = [], N = text.length, I = 0, n = 0, t, eol;\n      function token() {\n        if (I >= N) return EOF;\n        if (eol) return eol = false, EOL;\n        var j = I;\n        if (text.charCodeAt(j) === 34) {\n          var i = j;\n          while (i++ < N) {\n            if (text.charCodeAt(i) === 34) {\n              if (text.charCodeAt(i + 1) !== 34) break;\n              ++i;\n            }\n          }\n          I = i + 2;\n          var c = text.charCodeAt(i + 1);\n          if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(i + 2) === 10) ++I;\n          } else if (c === 10) {\n            eol = true;\n          }\n          return text.slice(j + 1, i).replace(/\"\"/g, '\"');\n        }\n        while (I < N) {\n          var c = text.charCodeAt(I++), k = 1;\n          if (c === 10) eol = true; else if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(I) === 10) ++I, ++k;\n          } else if (c !== delimiterCode) continue;\n          return text.slice(j, I - k);\n        }\n        return text.slice(j);\n      }\n      while ((t = token()) !== EOF) {\n        var a = [];\n        while (t !== EOL && t !== EOF) {\n          a.push(t);\n          t = token();\n        }\n        if (f && (a = f(a, n++)) == null) continue;\n        rows.push(a);\n      }\n      return rows;\n    };\n    dsv.format = function(rows) {\n      if (Array.isArray(rows[0])) return dsv.formatRows(rows);\n      var fieldSet = new d3_Set(), fields = [];\n      rows.forEach(function(row) {\n        for (var field in row) {\n          if (!fieldSet.has(field)) {\n            fields.push(fieldSet.add(field));\n          }\n        }\n      });\n      return [ fields.map(formatValue).join(delimiter) ].concat(rows.map(function(row) {\n        return fields.map(function(field) {\n          return formatValue(row[field]);\n        }).join(delimiter);\n      })).join(\"\\n\");\n    };\n    dsv.formatRows = function(rows) {\n      return rows.map(formatRow).join(\"\\n\");\n    };\n    function formatRow(row) {\n      return row.map(formatValue).join(delimiter);\n    }\n    function formatValue(text) {\n      return reFormat.test(text) ? '\"' + text.replace(/\\\"/g, '\"\"') + '\"' : text;\n    }\n    return dsv;\n  };\n  d3.csv = d3.dsv(\",\", \"text/csv\");\n  d3.tsv = d3.dsv(\"\t\", \"text/tab-separated-values\");\n  var d3_timer_queueHead, d3_timer_queueTail, d3_timer_interval, d3_timer_timeout, d3_timer_frame = this[d3_vendorSymbol(this, \"requestAnimationFrame\")] || function(callback) {\n    setTimeout(callback, 17);\n  };\n  d3.timer = function() {\n    d3_timer.apply(this, arguments);\n  };\n  function d3_timer(callback, delay, then) {\n    var n = arguments.length;\n    if (n < 2) delay = 0;\n    if (n < 3) then = Date.now();\n    var time = then + delay, timer = {\n      c: callback,\n      t: time,\n      n: null\n    };\n    if (d3_timer_queueTail) d3_timer_queueTail.n = timer; else d3_timer_queueHead = timer;\n    d3_timer_queueTail = timer;\n    if (!d3_timer_interval) {\n      d3_timer_timeout = clearTimeout(d3_timer_timeout);\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n    return timer;\n  }\n  function d3_timer_step() {\n    var now = d3_timer_mark(), delay = d3_timer_sweep() - now;\n    if (delay > 24) {\n      if (isFinite(delay)) {\n        clearTimeout(d3_timer_timeout);\n        d3_timer_timeout = setTimeout(d3_timer_step, delay);\n      }\n      d3_timer_interval = 0;\n    } else {\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n  }\n  d3.timer.flush = function() {\n    d3_timer_mark();\n    d3_timer_sweep();\n  };\n  function d3_timer_mark() {\n    var now = Date.now(), timer = d3_timer_queueHead;\n    while (timer) {\n      if (now >= timer.t && timer.c(now - timer.t)) timer.c = null;\n      timer = timer.n;\n    }\n    return now;\n  }\n  function d3_timer_sweep() {\n    var t0, t1 = d3_timer_queueHead, time = Infinity;\n    while (t1) {\n      if (t1.c) {\n        if (t1.t < time) time = t1.t;\n        t1 = (t0 = t1).n;\n      } else {\n        t1 = t0 ? t0.n = t1.n : d3_timer_queueHead = t1.n;\n      }\n    }\n    d3_timer_queueTail = t0;\n    return time;\n  }\n  function d3_format_precision(x, p) {\n    return p - (x ? Math.ceil(Math.log(x) / Math.LN10) : 1);\n  }\n  d3.round = function(x, n) {\n    return n ? Math.round(x * (n = Math.pow(10, n))) / n : Math.round(x);\n  };\n  var d3_formatPrefixes = [ \"y\", \"z\", \"a\", \"f\", \"p\", \"n\", \"µ\", \"m\", \"\", \"k\", \"M\", \"G\", \"T\", \"P\", \"E\", \"Z\", \"Y\" ].map(d3_formatPrefix);\n  d3.formatPrefix = function(value, precision) {\n    var i = 0;\n    if (value = +value) {\n      if (value < 0) value *= -1;\n      if (precision) value = d3.round(value, d3_format_precision(value, precision));\n      i = 1 + Math.floor(1e-12 + Math.log(value) / Math.LN10);\n      i = Math.max(-24, Math.min(24, Math.floor((i - 1) / 3) * 3));\n    }\n    return d3_formatPrefixes[8 + i / 3];\n  };\n  function d3_formatPrefix(d, i) {\n    var k = Math.pow(10, abs(8 - i) * 3);\n    return {\n      scale: i > 8 ? function(d) {\n        return d / k;\n      } : function(d) {\n        return d * k;\n      },\n      symbol: d\n    };\n  }\n  function d3_locale_numberFormat(locale) {\n    var locale_decimal = locale.decimal, locale_thousands = locale.thousands, locale_grouping = locale.grouping, locale_currency = locale.currency, formatGroup = locale_grouping && locale_thousands ? function(value, width) {\n      var i = value.length, t = [], j = 0, g = locale_grouping[0], length = 0;\n      while (i > 0 && g > 0) {\n        if (length + g + 1 > width) g = Math.max(1, width - length);\n        t.push(value.substring(i -= g, i + g));\n        if ((length += g + 1) > width) break;\n        g = locale_grouping[j = (j + 1) % locale_grouping.length];\n      }\n      return t.reverse().join(locale_thousands);\n    } : d3_identity;\n    return function(specifier) {\n      var match = d3_format_re.exec(specifier), fill = match[1] || \" \", align = match[2] || \">\", sign = match[3] || \"-\", symbol = match[4] || \"\", zfill = match[5], width = +match[6], comma = match[7], precision = match[8], type = match[9], scale = 1, prefix = \"\", suffix = \"\", integer = false, exponent = true;\n      if (precision) precision = +precision.substring(1);\n      if (zfill || fill === \"0\" && align === \"=\") {\n        zfill = fill = \"0\";\n        align = \"=\";\n      }\n      switch (type) {\n       case \"n\":\n        comma = true;\n        type = \"g\";\n        break;\n\n       case \"%\":\n        scale = 100;\n        suffix = \"%\";\n        type = \"f\";\n        break;\n\n       case \"p\":\n        scale = 100;\n        suffix = \"%\";\n        type = \"r\";\n        break;\n\n       case \"b\":\n       case \"o\":\n       case \"x\":\n       case \"X\":\n        if (symbol === \"#\") prefix = \"0\" + type.toLowerCase();\n\n       case \"c\":\n        exponent = false;\n\n       case \"d\":\n        integer = true;\n        precision = 0;\n        break;\n\n       case \"s\":\n        scale = -1;\n        type = \"r\";\n        break;\n      }\n      if (symbol === \"$\") prefix = locale_currency[0], suffix = locale_currency[1];\n      if (type == \"r\" && !precision) type = \"g\";\n      if (precision != null) {\n        if (type == \"g\") precision = Math.max(1, Math.min(21, precision)); else if (type == \"e\" || type == \"f\") precision = Math.max(0, Math.min(20, precision));\n      }\n      type = d3_format_types.get(type) || d3_format_typeDefault;\n      var zcomma = zfill && comma;\n      return function(value) {\n        var fullSuffix = suffix;\n        if (integer && value % 1) return \"\";\n        var negative = value < 0 || value === 0 && 1 / value < 0 ? (value = -value, \"-\") : sign === \"-\" ? \"\" : sign;\n        if (scale < 0) {\n          var unit = d3.formatPrefix(value, precision);\n          value = unit.scale(value);\n          fullSuffix = unit.symbol + suffix;\n        } else {\n          value *= scale;\n        }\n        value = type(value, precision);\n        var i = value.lastIndexOf(\".\"), before, after;\n        if (i < 0) {\n          var j = exponent ? value.lastIndexOf(\"e\") : -1;\n          if (j < 0) before = value, after = \"\"; else before = value.substring(0, j), after = value.substring(j);\n        } else {\n          before = value.substring(0, i);\n          after = locale_decimal + value.substring(i + 1);\n        }\n        if (!zfill && comma) before = formatGroup(before, Infinity);\n        var length = prefix.length + before.length + after.length + (zcomma ? 0 : negative.length), padding = length < width ? new Array(length = width - length + 1).join(fill) : \"\";\n        if (zcomma) before = formatGroup(padding + before, padding.length ? width - after.length : Infinity);\n        negative += prefix;\n        value = before + after;\n        return (align === \"<\" ? negative + value + padding : align === \">\" ? padding + negative + value : align === \"^\" ? padding.substring(0, length >>= 1) + negative + value + padding.substring(length) : negative + (zcomma ? value : padding + value)) + fullSuffix;\n      };\n    };\n  }\n  var d3_format_re = /(?:([^{])?([<>=^]))?([+\\- ])?([$#])?(0)?(\\d+)?(,)?(\\.-?\\d+)?([a-z%])?/i;\n  var d3_format_types = d3.map({\n    b: function(x) {\n      return x.toString(2);\n    },\n    c: function(x) {\n      return String.fromCharCode(x);\n    },\n    o: function(x) {\n      return x.toString(8);\n    },\n    x: function(x) {\n      return x.toString(16);\n    },\n    X: function(x) {\n      return x.toString(16).toUpperCase();\n    },\n    g: function(x, p) {\n      return x.toPrecision(p);\n    },\n    e: function(x, p) {\n      return x.toExponential(p);\n    },\n    f: function(x, p) {\n      return x.toFixed(p);\n    },\n    r: function(x, p) {\n      return (x = d3.round(x, d3_format_precision(x, p))).toFixed(Math.max(0, Math.min(20, d3_format_precision(x * (1 + 1e-15), p))));\n    }\n  });\n  function d3_format_typeDefault(x) {\n    return x + \"\";\n  }\n  var d3_time = d3.time = {}, d3_date = Date;\n  function d3_date_utc() {\n    this._ = new Date(arguments.length > 1 ? Date.UTC.apply(this, arguments) : arguments[0]);\n  }\n  d3_date_utc.prototype = {\n    getDate: function() {\n      return this._.getUTCDate();\n    },\n    getDay: function() {\n      return this._.getUTCDay();\n    },\n    getFullYear: function() {\n      return this._.getUTCFullYear();\n    },\n    getHours: function() {\n      return this._.getUTCHours();\n    },\n    getMilliseconds: function() {\n      return this._.getUTCMilliseconds();\n    },\n    getMinutes: function() {\n      return this._.getUTCMinutes();\n    },\n    getMonth: function() {\n      return this._.getUTCMonth();\n    },\n    getSeconds: function() {\n      return this._.getUTCSeconds();\n    },\n    getTime: function() {\n      return this._.getTime();\n    },\n    getTimezoneOffset: function() {\n      return 0;\n    },\n    valueOf: function() {\n      return this._.valueOf();\n    },\n    setDate: function() {\n      d3_time_prototype.setUTCDate.apply(this._, arguments);\n    },\n    setDay: function() {\n      d3_time_prototype.setUTCDay.apply(this._, arguments);\n    },\n    setFullYear: function() {\n      d3_time_prototype.setUTCFullYear.apply(this._, arguments);\n    },\n    setHours: function() {\n      d3_time_prototype.setUTCHours.apply(this._, arguments);\n    },\n    setMilliseconds: function() {\n      d3_time_prototype.setUTCMilliseconds.apply(this._, arguments);\n    },\n    setMinutes: function() {\n      d3_time_prototype.setUTCMinutes.apply(this._, arguments);\n    },\n    setMonth: function() {\n      d3_time_prototype.setUTCMonth.apply(this._, arguments);\n    },\n    setSeconds: function() {\n      d3_time_prototype.setUTCSeconds.apply(this._, arguments);\n    },\n    setTime: function() {\n      d3_time_prototype.setTime.apply(this._, arguments);\n    }\n  };\n  var d3_time_prototype = Date.prototype;\n  function d3_time_interval(local, step, number) {\n    function round(date) {\n      var d0 = local(date), d1 = offset(d0, 1);\n      return date - d0 < d1 - date ? d0 : d1;\n    }\n    function ceil(date) {\n      step(date = local(new d3_date(date - 1)), 1);\n      return date;\n    }\n    function offset(date, k) {\n      step(date = new d3_date(+date), k);\n      return date;\n    }\n    function range(t0, t1, dt) {\n      var time = ceil(t0), times = [];\n      if (dt > 1) {\n        while (time < t1) {\n          if (!(number(time) % dt)) times.push(new Date(+time));\n          step(time, 1);\n        }\n      } else {\n        while (time < t1) times.push(new Date(+time)), step(time, 1);\n      }\n      return times;\n    }\n    function range_utc(t0, t1, dt) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = t0;\n        return range(utc, t1, dt);\n      } finally {\n        d3_date = Date;\n      }\n    }\n    local.floor = local;\n    local.round = round;\n    local.ceil = ceil;\n    local.offset = offset;\n    local.range = range;\n    var utc = local.utc = d3_time_interval_utc(local);\n    utc.floor = utc;\n    utc.round = d3_time_interval_utc(round);\n    utc.ceil = d3_time_interval_utc(ceil);\n    utc.offset = d3_time_interval_utc(offset);\n    utc.range = range_utc;\n    return local;\n  }\n  function d3_time_interval_utc(method) {\n    return function(date, k) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = date;\n        return method(utc, k)._;\n      } finally {\n        d3_date = Date;\n      }\n    };\n  }\n  d3_time.year = d3_time_interval(function(date) {\n    date = d3_time.day(date);\n    date.setMonth(0, 1);\n    return date;\n  }, function(date, offset) {\n    date.setFullYear(date.getFullYear() + offset);\n  }, function(date) {\n    return date.getFullYear();\n  });\n  d3_time.years = d3_time.year.range;\n  d3_time.years.utc = d3_time.year.utc.range;\n  d3_time.day = d3_time_interval(function(date) {\n    var day = new d3_date(2e3, 0);\n    day.setFullYear(date.getFullYear(), date.getMonth(), date.getDate());\n    return day;\n  }, function(date, offset) {\n    date.setDate(date.getDate() + offset);\n  }, function(date) {\n    return date.getDate() - 1;\n  });\n  d3_time.days = d3_time.day.range;\n  d3_time.days.utc = d3_time.day.utc.range;\n  d3_time.dayOfYear = function(date) {\n    var year = d3_time.year(date);\n    return Math.floor((date - year - (date.getTimezoneOffset() - year.getTimezoneOffset()) * 6e4) / 864e5);\n  };\n  [ \"sunday\", \"monday\", \"tuesday\", \"wednesday\", \"thursday\", \"friday\", \"saturday\" ].forEach(function(day, i) {\n    i = 7 - i;\n    var interval = d3_time[day] = d3_time_interval(function(date) {\n      (date = d3_time.day(date)).setDate(date.getDate() - (date.getDay() + i) % 7);\n      return date;\n    }, function(date, offset) {\n      date.setDate(date.getDate() + Math.floor(offset) * 7);\n    }, function(date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7) - (day !== i);\n    });\n    d3_time[day + \"s\"] = interval.range;\n    d3_time[day + \"s\"].utc = interval.utc.range;\n    d3_time[day + \"OfYear\"] = function(date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7);\n    };\n  });\n  d3_time.week = d3_time.sunday;\n  d3_time.weeks = d3_time.sunday.range;\n  d3_time.weeks.utc = d3_time.sunday.utc.range;\n  d3_time.weekOfYear = d3_time.sundayOfYear;\n  function d3_locale_timeFormat(locale) {\n    var locale_dateTime = locale.dateTime, locale_date = locale.date, locale_time = locale.time, locale_periods = locale.periods, locale_days = locale.days, locale_shortDays = locale.shortDays, locale_months = locale.months, locale_shortMonths = locale.shortMonths;\n    function d3_time_format(template) {\n      var n = template.length;\n      function format(date) {\n        var string = [], i = -1, j = 0, c, p, f;\n        while (++i < n) {\n          if (template.charCodeAt(i) === 37) {\n            string.push(template.slice(j, i));\n            if ((p = d3_time_formatPads[c = template.charAt(++i)]) != null) c = template.charAt(++i);\n            if (f = d3_time_formats[c]) c = f(date, p == null ? c === \"e\" ? \" \" : \"0\" : p);\n            string.push(c);\n            j = i + 1;\n          }\n        }\n        string.push(template.slice(j, i));\n        return string.join(\"\");\n      }\n      format.parse = function(string) {\n        var d = {\n          y: 1900,\n          m: 0,\n          d: 1,\n          H: 0,\n          M: 0,\n          S: 0,\n          L: 0,\n          Z: null\n        }, i = d3_time_parse(d, template, string, 0);\n        if (i != string.length) return null;\n        if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n        var localZ = d.Z != null && d3_date !== d3_date_utc, date = new (localZ ? d3_date_utc : d3_date)();\n        if (\"j\" in d) date.setFullYear(d.y, 0, d.j); else if (\"W\" in d || \"U\" in d) {\n          if (!(\"w\" in d)) d.w = \"W\" in d ? 1 : 0;\n          date.setFullYear(d.y, 0, 1);\n          date.setFullYear(d.y, 0, \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (date.getDay() + 5) % 7 : d.w + d.U * 7 - (date.getDay() + 6) % 7);\n        } else date.setFullYear(d.y, d.m, d.d);\n        date.setHours(d.H + (d.Z / 100 | 0), d.M + d.Z % 100, d.S, d.L);\n        return localZ ? date._ : date;\n      };\n      format.toString = function() {\n        return template;\n      };\n      return format;\n    }\n    function d3_time_parse(date, template, string, j) {\n      var c, p, t, i = 0, n = template.length, m = string.length;\n      while (i < n) {\n        if (j >= m) return -1;\n        c = template.charCodeAt(i++);\n        if (c === 37) {\n          t = template.charAt(i++);\n          p = d3_time_parsers[t in d3_time_formatPads ? template.charAt(i++) : t];\n          if (!p || (j = p(date, string, j)) < 0) return -1;\n        } else if (c != string.charCodeAt(j++)) {\n          return -1;\n        }\n      }\n      return j;\n    }\n    d3_time_format.utc = function(template) {\n      var local = d3_time_format(template);\n      function format(date) {\n        try {\n          d3_date = d3_date_utc;\n          var utc = new d3_date();\n          utc._ = date;\n          return local(utc);\n        } finally {\n          d3_date = Date;\n        }\n      }\n      format.parse = function(string) {\n        try {\n          d3_date = d3_date_utc;\n          var date = local.parse(string);\n          return date && date._;\n        } finally {\n          d3_date = Date;\n        }\n      };\n      format.toString = local.toString;\n      return format;\n    };\n    d3_time_format.multi = d3_time_format.utc.multi = d3_time_formatMulti;\n    var d3_time_periodLookup = d3.map(), d3_time_dayRe = d3_time_formatRe(locale_days), d3_time_dayLookup = d3_time_formatLookup(locale_days), d3_time_dayAbbrevRe = d3_time_formatRe(locale_shortDays), d3_time_dayAbbrevLookup = d3_time_formatLookup(locale_shortDays), d3_time_monthRe = d3_time_formatRe(locale_months), d3_time_monthLookup = d3_time_formatLookup(locale_months), d3_time_monthAbbrevRe = d3_time_formatRe(locale_shortMonths), d3_time_monthAbbrevLookup = d3_time_formatLookup(locale_shortMonths);\n    locale_periods.forEach(function(p, i) {\n      d3_time_periodLookup.set(p.toLowerCase(), i);\n    });\n    var d3_time_formats = {\n      a: function(d) {\n        return locale_shortDays[d.getDay()];\n      },\n      A: function(d) {\n        return locale_days[d.getDay()];\n      },\n      b: function(d) {\n        return locale_shortMonths[d.getMonth()];\n      },\n      B: function(d) {\n        return locale_months[d.getMonth()];\n      },\n      c: d3_time_format(locale_dateTime),\n      d: function(d, p) {\n        return d3_time_formatPad(d.getDate(), p, 2);\n      },\n      e: function(d, p) {\n        return d3_time_formatPad(d.getDate(), p, 2);\n      },\n      H: function(d, p) {\n        return d3_time_formatPad(d.getHours(), p, 2);\n      },\n      I: function(d, p) {\n        return d3_time_formatPad(d.getHours() % 12 || 12, p, 2);\n      },\n      j: function(d, p) {\n        return d3_time_formatPad(1 + d3_time.dayOfYear(d), p, 3);\n      },\n      L: function(d, p) {\n        return d3_time_formatPad(d.getMilliseconds(), p, 3);\n      },\n      m: function(d, p) {\n        return d3_time_formatPad(d.getMonth() + 1, p, 2);\n      },\n      M: function(d, p) {\n        return d3_time_formatPad(d.getMinutes(), p, 2);\n      },\n      p: function(d) {\n        return locale_periods[+(d.getHours() >= 12)];\n      },\n      S: function(d, p) {\n        return d3_time_formatPad(d.getSeconds(), p, 2);\n      },\n      U: function(d, p) {\n        return d3_time_formatPad(d3_time.sundayOfYear(d), p, 2);\n      },\n      w: function(d) {\n        return d.getDay();\n      },\n      W: function(d, p) {\n        return d3_time_formatPad(d3_time.mondayOfYear(d), p, 2);\n      },\n      x: d3_time_format(locale_date),\n      X: d3_time_format(locale_time),\n      y: function(d, p) {\n        return d3_time_formatPad(d.getFullYear() % 100, p, 2);\n      },\n      Y: function(d, p) {\n        return d3_time_formatPad(d.getFullYear() % 1e4, p, 4);\n      },\n      Z: d3_time_zone,\n      \"%\": function() {\n        return \"%\";\n      }\n    };\n    var d3_time_parsers = {\n      a: d3_time_parseWeekdayAbbrev,\n      A: d3_time_parseWeekday,\n      b: d3_time_parseMonthAbbrev,\n      B: d3_time_parseMonth,\n      c: d3_time_parseLocaleFull,\n      d: d3_time_parseDay,\n      e: d3_time_parseDay,\n      H: d3_time_parseHour24,\n      I: d3_time_parseHour24,\n      j: d3_time_parseDayOfYear,\n      L: d3_time_parseMilliseconds,\n      m: d3_time_parseMonthNumber,\n      M: d3_time_parseMinutes,\n      p: d3_time_parseAmPm,\n      S: d3_time_parseSeconds,\n      U: d3_time_parseWeekNumberSunday,\n      w: d3_time_parseWeekdayNumber,\n      W: d3_time_parseWeekNumberMonday,\n      x: d3_time_parseLocaleDate,\n      X: d3_time_parseLocaleTime,\n      y: d3_time_parseYear,\n      Y: d3_time_parseFullYear,\n      Z: d3_time_parseZone,\n      \"%\": d3_time_parseLiteralPercent\n    };\n    function d3_time_parseWeekdayAbbrev(date, string, i) {\n      d3_time_dayAbbrevRe.lastIndex = 0;\n      var n = d3_time_dayAbbrevRe.exec(string.slice(i));\n      return n ? (date.w = d3_time_dayAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseWeekday(date, string, i) {\n      d3_time_dayRe.lastIndex = 0;\n      var n = d3_time_dayRe.exec(string.slice(i));\n      return n ? (date.w = d3_time_dayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseMonthAbbrev(date, string, i) {\n      d3_time_monthAbbrevRe.lastIndex = 0;\n      var n = d3_time_monthAbbrevRe.exec(string.slice(i));\n      return n ? (date.m = d3_time_monthAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseMonth(date, string, i) {\n      d3_time_monthRe.lastIndex = 0;\n      var n = d3_time_monthRe.exec(string.slice(i));\n      return n ? (date.m = d3_time_monthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseLocaleFull(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.c.toString(), string, i);\n    }\n    function d3_time_parseLocaleDate(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.x.toString(), string, i);\n    }\n    function d3_time_parseLocaleTime(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.X.toString(), string, i);\n    }\n    function d3_time_parseAmPm(date, string, i) {\n      var n = d3_time_periodLookup.get(string.slice(i, i += 2).toLowerCase());\n      return n == null ? -1 : (date.p = n, i);\n    }\n    return d3_time_format;\n  }\n  var d3_time_formatPads = {\n    \"-\": \"\",\n    _: \" \",\n    \"0\": \"0\"\n  }, d3_time_numberRe = /^\\s*\\d+/, d3_time_percentRe = /^%/;\n  function d3_time_formatPad(value, fill, width) {\n    var sign = value < 0 ? \"-\" : \"\", string = (sign ? -value : value) + \"\", length = string.length;\n    return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n  }\n  function d3_time_formatRe(names) {\n    return new RegExp(\"^(?:\" + names.map(d3.requote).join(\"|\") + \")\", \"i\");\n  }\n  function d3_time_formatLookup(names) {\n    var map = new d3_Map(), i = -1, n = names.length;\n    while (++i < n) map.set(names[i].toLowerCase(), i);\n    return map;\n  }\n  function d3_time_parseWeekdayNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 1));\n    return n ? (date.w = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseWeekNumberSunday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i));\n    return n ? (date.U = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseWeekNumberMonday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i));\n    return n ? (date.W = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseFullYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 4));\n    return n ? (date.y = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.y = d3_time_expandYear(+n[0]), i + n[0].length) : -1;\n  }\n  function d3_time_parseZone(date, string, i) {\n    return /^[+-]\\d{4}$/.test(string = string.slice(i, i + 5)) ? (date.Z = -string, \n    i + 5) : -1;\n  }\n  function d3_time_expandYear(d) {\n    return d + (d > 68 ? 1900 : 2e3);\n  }\n  function d3_time_parseMonthNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.m = n[0] - 1, i + n[0].length) : -1;\n  }\n  function d3_time_parseDay(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.d = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseDayOfYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n    return n ? (date.j = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseHour24(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.H = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseMinutes(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.M = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseSeconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.S = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseMilliseconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n    return n ? (date.L = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_zone(d) {\n    var z = d.getTimezoneOffset(), zs = z > 0 ? \"-\" : \"+\", zh = abs(z) / 60 | 0, zm = abs(z) % 60;\n    return zs + d3_time_formatPad(zh, \"0\", 2) + d3_time_formatPad(zm, \"0\", 2);\n  }\n  function d3_time_parseLiteralPercent(date, string, i) {\n    d3_time_percentRe.lastIndex = 0;\n    var n = d3_time_percentRe.exec(string.slice(i, i + 1));\n    return n ? i + n[0].length : -1;\n  }\n  function d3_time_formatMulti(formats) {\n    var n = formats.length, i = -1;\n    while (++i < n) formats[i][0] = this(formats[i][0]);\n    return function(date) {\n      var i = 0, f = formats[i];\n      while (!f[1](date)) f = formats[++i];\n      return f[0](date);\n    };\n  }\n  d3.locale = function(locale) {\n    return {\n      numberFormat: d3_locale_numberFormat(locale),\n      timeFormat: d3_locale_timeFormat(locale)\n    };\n  };\n  var d3_locale_enUS = d3.locale({\n    decimal: \".\",\n    thousands: \",\",\n    grouping: [ 3 ],\n    currency: [ \"$\", \"\" ],\n    dateTime: \"%a %b %e %X %Y\",\n    date: \"%m/%d/%Y\",\n    time: \"%H:%M:%S\",\n    periods: [ \"AM\", \"PM\" ],\n    days: [ \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\" ],\n    shortDays: [ \"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\" ],\n    months: [ \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\" ],\n    shortMonths: [ \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\" ]\n  });\n  d3.format = d3_locale_enUS.numberFormat;\n  d3.geo = {};\n  function d3_adder() {}\n  d3_adder.prototype = {\n    s: 0,\n    t: 0,\n    add: function(y) {\n      d3_adderSum(y, this.t, d3_adderTemp);\n      d3_adderSum(d3_adderTemp.s, this.s, this);\n      if (this.s) this.t += d3_adderTemp.t; else this.s = d3_adderTemp.t;\n    },\n    reset: function() {\n      this.s = this.t = 0;\n    },\n    valueOf: function() {\n      return this.s;\n    }\n  };\n  var d3_adderTemp = new d3_adder();\n  function d3_adderSum(a, b, o) {\n    var x = o.s = a + b, bv = x - a, av = x - bv;\n    o.t = a - av + (b - bv);\n  }\n  d3.geo.stream = function(object, listener) {\n    if (object && d3_geo_streamObjectType.hasOwnProperty(object.type)) {\n      d3_geo_streamObjectType[object.type](object, listener);\n    } else {\n      d3_geo_streamGeometry(object, listener);\n    }\n  };\n  function d3_geo_streamGeometry(geometry, listener) {\n    if (geometry && d3_geo_streamGeometryType.hasOwnProperty(geometry.type)) {\n      d3_geo_streamGeometryType[geometry.type](geometry, listener);\n    }\n  }\n  var d3_geo_streamObjectType = {\n    Feature: function(feature, listener) {\n      d3_geo_streamGeometry(feature.geometry, listener);\n    },\n    FeatureCollection: function(object, listener) {\n      var features = object.features, i = -1, n = features.length;\n      while (++i < n) d3_geo_streamGeometry(features[i].geometry, listener);\n    }\n  };\n  var d3_geo_streamGeometryType = {\n    Sphere: function(object, listener) {\n      listener.sphere();\n    },\n    Point: function(object, listener) {\n      object = object.coordinates;\n      listener.point(object[0], object[1], object[2]);\n    },\n    MultiPoint: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) object = coordinates[i], listener.point(object[0], object[1], object[2]);\n    },\n    LineString: function(object, listener) {\n      d3_geo_streamLine(object.coordinates, listener, 0);\n    },\n    MultiLineString: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) d3_geo_streamLine(coordinates[i], listener, 0);\n    },\n    Polygon: function(object, listener) {\n      d3_geo_streamPolygon(object.coordinates, listener);\n    },\n    MultiPolygon: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) d3_geo_streamPolygon(coordinates[i], listener);\n    },\n    GeometryCollection: function(object, listener) {\n      var geometries = object.geometries, i = -1, n = geometries.length;\n      while (++i < n) d3_geo_streamGeometry(geometries[i], listener);\n    }\n  };\n  function d3_geo_streamLine(coordinates, listener, closed) {\n    var i = -1, n = coordinates.length - closed, coordinate;\n    listener.lineStart();\n    while (++i < n) coordinate = coordinates[i], listener.point(coordinate[0], coordinate[1], coordinate[2]);\n    listener.lineEnd();\n  }\n  function d3_geo_streamPolygon(coordinates, listener) {\n    var i = -1, n = coordinates.length;\n    listener.polygonStart();\n    while (++i < n) d3_geo_streamLine(coordinates[i], listener, 1);\n    listener.polygonEnd();\n  }\n  d3.geo.area = function(object) {\n    d3_geo_areaSum = 0;\n    d3.geo.stream(object, d3_geo_area);\n    return d3_geo_areaSum;\n  };\n  var d3_geo_areaSum, d3_geo_areaRingSum = new d3_adder();\n  var d3_geo_area = {\n    sphere: function() {\n      d3_geo_areaSum += 4 * π;\n    },\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function() {\n      d3_geo_areaRingSum.reset();\n      d3_geo_area.lineStart = d3_geo_areaRingStart;\n    },\n    polygonEnd: function() {\n      var area = 2 * d3_geo_areaRingSum;\n      d3_geo_areaSum += area < 0 ? 4 * π + area : area;\n      d3_geo_area.lineStart = d3_geo_area.lineEnd = d3_geo_area.point = d3_noop;\n    }\n  };\n  function d3_geo_areaRingStart() {\n    var λ00, φ00, λ0, cosφ0, sinφ0;\n    d3_geo_area.point = function(λ, φ) {\n      d3_geo_area.point = nextPoint;\n      λ0 = (λ00 = λ) * d3_radians, cosφ0 = Math.cos(φ = (φ00 = φ) * d3_radians / 2 + π / 4), \n      sinφ0 = Math.sin(φ);\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      φ = φ * d3_radians / 2 + π / 4;\n      var dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, cosφ = Math.cos(φ), sinφ = Math.sin(φ), k = sinφ0 * sinφ, u = cosφ0 * cosφ + k * Math.cos(adλ), v = k * sdλ * Math.sin(adλ);\n      d3_geo_areaRingSum.add(Math.atan2(v, u));\n      λ0 = λ, cosφ0 = cosφ, sinφ0 = sinφ;\n    }\n    d3_geo_area.lineEnd = function() {\n      nextPoint(λ00, φ00);\n    };\n  }\n  function d3_geo_cartesian(spherical) {\n    var λ = spherical[0], φ = spherical[1], cosφ = Math.cos(φ);\n    return [ cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ) ];\n  }\n  function d3_geo_cartesianDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n  }\n  function d3_geo_cartesianCross(a, b) {\n    return [ a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0] ];\n  }\n  function d3_geo_cartesianAdd(a, b) {\n    a[0] += b[0];\n    a[1] += b[1];\n    a[2] += b[2];\n  }\n  function d3_geo_cartesianScale(vector, k) {\n    return [ vector[0] * k, vector[1] * k, vector[2] * k ];\n  }\n  function d3_geo_cartesianNormalize(d) {\n    var l = Math.sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n    d[0] /= l;\n    d[1] /= l;\n    d[2] /= l;\n  }\n  function d3_geo_spherical(cartesian) {\n    return [ Math.atan2(cartesian[1], cartesian[0]), d3_asin(cartesian[2]) ];\n  }\n  function d3_geo_sphericalEqual(a, b) {\n    return abs(a[0] - b[0]) < ε && abs(a[1] - b[1]) < ε;\n  }\n  d3.geo.bounds = function() {\n    var λ0, φ0, λ1, φ1, λ_, λ__, φ__, p0, dλSum, ranges, range;\n    var bound = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        bound.point = ringPoint;\n        bound.lineStart = ringStart;\n        bound.lineEnd = ringEnd;\n        dλSum = 0;\n        d3_geo_area.polygonStart();\n      },\n      polygonEnd: function() {\n        d3_geo_area.polygonEnd();\n        bound.point = point;\n        bound.lineStart = lineStart;\n        bound.lineEnd = lineEnd;\n        if (d3_geo_areaRingSum < 0) λ0 = -(λ1 = 180), φ0 = -(φ1 = 90); else if (dλSum > ε) φ1 = 90; else if (dλSum < -ε) φ0 = -90;\n        range[0] = λ0, range[1] = λ1;\n      }\n    };\n    function point(λ, φ) {\n      ranges.push(range = [ λ0 = λ, λ1 = λ ]);\n      if (φ < φ0) φ0 = φ;\n      if (φ > φ1) φ1 = φ;\n    }\n    function linePoint(λ, φ) {\n      var p = d3_geo_cartesian([ λ * d3_radians, φ * d3_radians ]);\n      if (p0) {\n        var normal = d3_geo_cartesianCross(p0, p), equatorial = [ normal[1], -normal[0], 0 ], inflection = d3_geo_cartesianCross(equatorial, normal);\n        d3_geo_cartesianNormalize(inflection);\n        inflection = d3_geo_spherical(inflection);\n        var dλ = λ - λ_, s = dλ > 0 ? 1 : -1, λi = inflection[0] * d3_degrees * s, antimeridian = abs(dλ) > 180;\n        if (antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = inflection[1] * d3_degrees;\n          if (φi > φ1) φ1 = φi;\n        } else if (λi = (λi + 360) % 360 - 180, antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = -inflection[1] * d3_degrees;\n          if (φi < φ0) φ0 = φi;\n        } else {\n          if (φ < φ0) φ0 = φ;\n          if (φ > φ1) φ1 = φ;\n        }\n        if (antimeridian) {\n          if (λ < λ_) {\n            if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n          } else {\n            if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n          }\n        } else {\n          if (λ1 >= λ0) {\n            if (λ < λ0) λ0 = λ;\n            if (λ > λ1) λ1 = λ;\n          } else {\n            if (λ > λ_) {\n              if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n            } else {\n              if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n            }\n          }\n        }\n      } else {\n        point(λ, φ);\n      }\n      p0 = p, λ_ = λ;\n    }\n    function lineStart() {\n      bound.point = linePoint;\n    }\n    function lineEnd() {\n      range[0] = λ0, range[1] = λ1;\n      bound.point = point;\n      p0 = null;\n    }\n    function ringPoint(λ, φ) {\n      if (p0) {\n        var dλ = λ - λ_;\n        dλSum += abs(dλ) > 180 ? dλ + (dλ > 0 ? 360 : -360) : dλ;\n      } else λ__ = λ, φ__ = φ;\n      d3_geo_area.point(λ, φ);\n      linePoint(λ, φ);\n    }\n    function ringStart() {\n      d3_geo_area.lineStart();\n    }\n    function ringEnd() {\n      ringPoint(λ__, φ__);\n      d3_geo_area.lineEnd();\n      if (abs(dλSum) > ε) λ0 = -(λ1 = 180);\n      range[0] = λ0, range[1] = λ1;\n      p0 = null;\n    }\n    function angle(λ0, λ1) {\n      return (λ1 -= λ0) < 0 ? λ1 + 360 : λ1;\n    }\n    function compareRanges(a, b) {\n      return a[0] - b[0];\n    }\n    function withinRange(x, range) {\n      return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n    }\n    return function(feature) {\n      φ1 = λ1 = -(λ0 = φ0 = Infinity);\n      ranges = [];\n      d3.geo.stream(feature, bound);\n      var n = ranges.length;\n      if (n) {\n        ranges.sort(compareRanges);\n        for (var i = 1, a = ranges[0], b, merged = [ a ]; i < n; ++i) {\n          b = ranges[i];\n          if (withinRange(b[0], a) || withinRange(b[1], a)) {\n            if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n            if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n          } else {\n            merged.push(a = b);\n          }\n        }\n        var best = -Infinity, dλ;\n        for (var n = merged.length - 1, i = 0, a = merged[n], b; i <= n; a = b, ++i) {\n          b = merged[i];\n          if ((dλ = angle(a[1], b[0])) > best) best = dλ, λ0 = b[0], λ1 = a[1];\n        }\n      }\n      ranges = range = null;\n      return λ0 === Infinity || φ0 === Infinity ? [ [ NaN, NaN ], [ NaN, NaN ] ] : [ [ λ0, φ0 ], [ λ1, φ1 ] ];\n    };\n  }();\n  d3.geo.centroid = function(object) {\n    d3_geo_centroidW0 = d3_geo_centroidW1 = d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n    d3.geo.stream(object, d3_geo_centroid);\n    var x = d3_geo_centroidX2, y = d3_geo_centroidY2, z = d3_geo_centroidZ2, m = x * x + y * y + z * z;\n    if (m < ε2) {\n      x = d3_geo_centroidX1, y = d3_geo_centroidY1, z = d3_geo_centroidZ1;\n      if (d3_geo_centroidW1 < ε) x = d3_geo_centroidX0, y = d3_geo_centroidY0, z = d3_geo_centroidZ0;\n      m = x * x + y * y + z * z;\n      if (m < ε2) return [ NaN, NaN ];\n    }\n    return [ Math.atan2(y, x) * d3_degrees, d3_asin(z / Math.sqrt(m)) * d3_degrees ];\n  };\n  var d3_geo_centroidW0, d3_geo_centroidW1, d3_geo_centroidX0, d3_geo_centroidY0, d3_geo_centroidZ0, d3_geo_centroidX1, d3_geo_centroidY1, d3_geo_centroidZ1, d3_geo_centroidX2, d3_geo_centroidY2, d3_geo_centroidZ2;\n  var d3_geo_centroid = {\n    sphere: d3_noop,\n    point: d3_geo_centroidPoint,\n    lineStart: d3_geo_centroidLineStart,\n    lineEnd: d3_geo_centroidLineEnd,\n    polygonStart: function() {\n      d3_geo_centroid.lineStart = d3_geo_centroidRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_centroid.lineStart = d3_geo_centroidLineStart;\n    }\n  };\n  function d3_geo_centroidPoint(λ, φ) {\n    λ *= d3_radians;\n    var cosφ = Math.cos(φ *= d3_radians);\n    d3_geo_centroidPointXYZ(cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ));\n  }\n  function d3_geo_centroidPointXYZ(x, y, z) {\n    ++d3_geo_centroidW0;\n    d3_geo_centroidX0 += (x - d3_geo_centroidX0) / d3_geo_centroidW0;\n    d3_geo_centroidY0 += (y - d3_geo_centroidY0) / d3_geo_centroidW0;\n    d3_geo_centroidZ0 += (z - d3_geo_centroidZ0) / d3_geo_centroidW0;\n  }\n  function d3_geo_centroidLineStart() {\n    var x0, y0, z0;\n    d3_geo_centroid.point = function(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroid.point = nextPoint;\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), w = Math.atan2(Math.sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n  function d3_geo_centroidLineEnd() {\n    d3_geo_centroid.point = d3_geo_centroidPoint;\n  }\n  function d3_geo_centroidRingStart() {\n    var λ00, φ00, x0, y0, z0;\n    d3_geo_centroid.point = function(λ, φ) {\n      λ00 = λ, φ00 = φ;\n      d3_geo_centroid.point = nextPoint;\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n    d3_geo_centroid.lineEnd = function() {\n      nextPoint(λ00, φ00);\n      d3_geo_centroid.lineEnd = d3_geo_centroidLineEnd;\n      d3_geo_centroid.point = d3_geo_centroidPoint;\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), cx = y0 * z - z0 * y, cy = z0 * x - x0 * z, cz = x0 * y - y0 * x, m = Math.sqrt(cx * cx + cy * cy + cz * cz), u = x0 * x + y0 * y + z0 * z, v = m && -d3_acos(u) / m, w = Math.atan2(m, u);\n      d3_geo_centroidX2 += v * cx;\n      d3_geo_centroidY2 += v * cy;\n      d3_geo_centroidZ2 += v * cz;\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n  function d3_geo_compose(a, b) {\n    function compose(x, y) {\n      return x = a(x, y), b(x[0], x[1]);\n    }\n    if (a.invert && b.invert) compose.invert = function(x, y) {\n      return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n    };\n    return compose;\n  }\n  function d3_true() {\n    return true;\n  }\n  function d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener) {\n    var subject = [], clip = [];\n    segments.forEach(function(segment) {\n      if ((n = segment.length - 1) <= 0) return;\n      var n, p0 = segment[0], p1 = segment[n];\n      if (d3_geo_sphericalEqual(p0, p1)) {\n        listener.lineStart();\n        for (var i = 0; i < n; ++i) listener.point((p0 = segment[i])[0], p0[1]);\n        listener.lineEnd();\n        return;\n      }\n      var a = new d3_geo_clipPolygonIntersection(p0, segment, null, true), b = new d3_geo_clipPolygonIntersection(p0, null, a, false);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n      a = new d3_geo_clipPolygonIntersection(p1, segment, null, false);\n      b = new d3_geo_clipPolygonIntersection(p1, null, a, true);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n    });\n    clip.sort(compare);\n    d3_geo_clipPolygonLinkCircular(subject);\n    d3_geo_clipPolygonLinkCircular(clip);\n    if (!subject.length) return;\n    for (var i = 0, entry = clipStartInside, n = clip.length; i < n; ++i) {\n      clip[i].e = entry = !entry;\n    }\n    var start = subject[0], points, point;\n    while (1) {\n      var current = start, isSubject = true;\n      while (current.v) if ((current = current.n) === start) return;\n      points = current.z;\n      listener.lineStart();\n      do {\n        current.v = current.o.v = true;\n        if (current.e) {\n          if (isSubject) {\n            for (var i = 0, n = points.length; i < n; ++i) listener.point((point = points[i])[0], point[1]);\n          } else {\n            interpolate(current.x, current.n.x, 1, listener);\n          }\n          current = current.n;\n        } else {\n          if (isSubject) {\n            points = current.p.z;\n            for (var i = points.length - 1; i >= 0; --i) listener.point((point = points[i])[0], point[1]);\n          } else {\n            interpolate(current.x, current.p.x, -1, listener);\n          }\n          current = current.p;\n        }\n        current = current.o;\n        points = current.z;\n        isSubject = !isSubject;\n      } while (!current.v);\n      listener.lineEnd();\n    }\n  }\n  function d3_geo_clipPolygonLinkCircular(array) {\n    if (!(n = array.length)) return;\n    var n, i = 0, a = array[0], b;\n    while (++i < n) {\n      a.n = b = array[i];\n      b.p = a;\n      a = b;\n    }\n    a.n = b = array[0];\n    b.p = a;\n  }\n  function d3_geo_clipPolygonIntersection(point, points, other, entry) {\n    this.x = point;\n    this.z = points;\n    this.o = other;\n    this.e = entry;\n    this.v = false;\n    this.n = this.p = null;\n  }\n  function d3_geo_clip(pointVisible, clipLine, interpolate, clipStart) {\n    return function(rotate, listener) {\n      var line = clipLine(listener), rotatedClipStart = rotate.invert(clipStart[0], clipStart[1]);\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          clip.point = pointRing;\n          clip.lineStart = ringStart;\n          clip.lineEnd = ringEnd;\n          segments = [];\n          polygon = [];\n        },\n        polygonEnd: function() {\n          clip.point = point;\n          clip.lineStart = lineStart;\n          clip.lineEnd = lineEnd;\n          segments = d3.merge(segments);\n          var clipStartInside = d3_geo_pointInPolygon(rotatedClipStart, polygon);\n          if (segments.length) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            d3_geo_clipPolygon(segments, d3_geo_clipSort, clipStartInside, interpolate, listener);\n          } else if (clipStartInside) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            listener.lineStart();\n            interpolate(null, null, 1, listener);\n            listener.lineEnd();\n          }\n          if (polygonStarted) listener.polygonEnd(), polygonStarted = false;\n          segments = polygon = null;\n        },\n        sphere: function() {\n          listener.polygonStart();\n          listener.lineStart();\n          interpolate(null, null, 1, listener);\n          listener.lineEnd();\n          listener.polygonEnd();\n        }\n      };\n      function point(λ, φ) {\n        var point = rotate(λ, φ);\n        if (pointVisible(λ = point[0], φ = point[1])) listener.point(λ, φ);\n      }\n      function pointLine(λ, φ) {\n        var point = rotate(λ, φ);\n        line.point(point[0], point[1]);\n      }\n      function lineStart() {\n        clip.point = pointLine;\n        line.lineStart();\n      }\n      function lineEnd() {\n        clip.point = point;\n        line.lineEnd();\n      }\n      var segments;\n      var buffer = d3_geo_clipBufferListener(), ringListener = clipLine(buffer), polygonStarted = false, polygon, ring;\n      function pointRing(λ, φ) {\n        ring.push([ λ, φ ]);\n        var point = rotate(λ, φ);\n        ringListener.point(point[0], point[1]);\n      }\n      function ringStart() {\n        ringListener.lineStart();\n        ring = [];\n      }\n      function ringEnd() {\n        pointRing(ring[0][0], ring[0][1]);\n        ringListener.lineEnd();\n        var clean = ringListener.clean(), ringSegments = buffer.buffer(), segment, n = ringSegments.length;\n        ring.pop();\n        polygon.push(ring);\n        ring = null;\n        if (!n) return;\n        if (clean & 1) {\n          segment = ringSegments[0];\n          var n = segment.length - 1, i = -1, point;\n          if (n > 0) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            listener.lineStart();\n            while (++i < n) listener.point((point = segment[i])[0], point[1]);\n            listener.lineEnd();\n          }\n          return;\n        }\n        if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n        segments.push(ringSegments.filter(d3_geo_clipSegmentLength1));\n      }\n      return clip;\n    };\n  }\n  function d3_geo_clipSegmentLength1(segment) {\n    return segment.length > 1;\n  }\n  function d3_geo_clipBufferListener() {\n    var lines = [], line;\n    return {\n      lineStart: function() {\n        lines.push(line = []);\n      },\n      point: function(λ, φ) {\n        line.push([ λ, φ ]);\n      },\n      lineEnd: d3_noop,\n      buffer: function() {\n        var buffer = lines;\n        lines = [];\n        line = null;\n        return buffer;\n      },\n      rejoin: function() {\n        if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n      }\n    };\n  }\n  function d3_geo_clipSort(a, b) {\n    return ((a = a.x)[0] < 0 ? a[1] - halfπ - ε : halfπ - a[1]) - ((b = b.x)[0] < 0 ? b[1] - halfπ - ε : halfπ - b[1]);\n  }\n  var d3_geo_clipAntimeridian = d3_geo_clip(d3_true, d3_geo_clipAntimeridianLine, d3_geo_clipAntimeridianInterpolate, [ -π, -π / 2 ]);\n  function d3_geo_clipAntimeridianLine(listener) {\n    var λ0 = NaN, φ0 = NaN, sλ0 = NaN, clean;\n    return {\n      lineStart: function() {\n        listener.lineStart();\n        clean = 1;\n      },\n      point: function(λ1, φ1) {\n        var sλ1 = λ1 > 0 ? π : -π, dλ = abs(λ1 - λ0);\n        if (abs(dλ - π) < ε) {\n          listener.point(λ0, φ0 = (φ0 + φ1) / 2 > 0 ? halfπ : -halfπ);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          listener.point(λ1, φ0);\n          clean = 0;\n        } else if (sλ0 !== sλ1 && dλ >= π) {\n          if (abs(λ0 - sλ0) < ε) λ0 -= sλ0 * ε;\n          if (abs(λ1 - sλ1) < ε) λ1 -= sλ1 * ε;\n          φ0 = d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          clean = 0;\n        }\n        listener.point(λ0 = λ1, φ0 = φ1);\n        sλ0 = sλ1;\n      },\n      lineEnd: function() {\n        listener.lineEnd();\n        λ0 = φ0 = NaN;\n      },\n      clean: function() {\n        return 2 - clean;\n      }\n    };\n  }\n  function d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1) {\n    var cosφ0, cosφ1, sinλ0_λ1 = Math.sin(λ0 - λ1);\n    return abs(sinλ0_λ1) > ε ? Math.atan((Math.sin(φ0) * (cosφ1 = Math.cos(φ1)) * Math.sin(λ1) - Math.sin(φ1) * (cosφ0 = Math.cos(φ0)) * Math.sin(λ0)) / (cosφ0 * cosφ1 * sinλ0_λ1)) : (φ0 + φ1) / 2;\n  }\n  function d3_geo_clipAntimeridianInterpolate(from, to, direction, listener) {\n    var φ;\n    if (from == null) {\n      φ = direction * halfπ;\n      listener.point(-π, φ);\n      listener.point(0, φ);\n      listener.point(π, φ);\n      listener.point(π, 0);\n      listener.point(π, -φ);\n      listener.point(0, -φ);\n      listener.point(-π, -φ);\n      listener.point(-π, 0);\n      listener.point(-π, φ);\n    } else if (abs(from[0] - to[0]) > ε) {\n      var s = from[0] < to[0] ? π : -π;\n      φ = direction * s / 2;\n      listener.point(-s, φ);\n      listener.point(0, φ);\n      listener.point(s, φ);\n    } else {\n      listener.point(to[0], to[1]);\n    }\n  }\n  function d3_geo_pointInPolygon(point, polygon) {\n    var meridian = point[0], parallel = point[1], meridianNormal = [ Math.sin(meridian), -Math.cos(meridian), 0 ], polarAngle = 0, winding = 0;\n    d3_geo_areaRingSum.reset();\n    for (var i = 0, n = polygon.length; i < n; ++i) {\n      var ring = polygon[i], m = ring.length;\n      if (!m) continue;\n      var point0 = ring[0], λ0 = point0[0], φ0 = point0[1] / 2 + π / 4, sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), j = 1;\n      while (true) {\n        if (j === m) j = 0;\n        point = ring[j];\n        var λ = point[0], φ = point[1] / 2 + π / 4, sinφ = Math.sin(φ), cosφ = Math.cos(φ), dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, antimeridian = adλ > π, k = sinφ0 * sinφ;\n        d3_geo_areaRingSum.add(Math.atan2(k * sdλ * Math.sin(adλ), cosφ0 * cosφ + k * Math.cos(adλ)));\n        polarAngle += antimeridian ? dλ + sdλ * τ : dλ;\n        if (antimeridian ^ λ0 >= meridian ^ λ >= meridian) {\n          var arc = d3_geo_cartesianCross(d3_geo_cartesian(point0), d3_geo_cartesian(point));\n          d3_geo_cartesianNormalize(arc);\n          var intersection = d3_geo_cartesianCross(meridianNormal, arc);\n          d3_geo_cartesianNormalize(intersection);\n          var φarc = (antimeridian ^ dλ >= 0 ? -1 : 1) * d3_asin(intersection[2]);\n          if (parallel > φarc || parallel === φarc && (arc[0] || arc[1])) {\n            winding += antimeridian ^ dλ >= 0 ? 1 : -1;\n          }\n        }\n        if (!j++) break;\n        λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ, point0 = point;\n      }\n    }\n    return (polarAngle < -ε || polarAngle < ε && d3_geo_areaRingSum < -ε) ^ winding & 1;\n  }\n  function d3_geo_clipCircle(radius) {\n    var cr = Math.cos(radius), smallRadius = cr > 0, notHemisphere = abs(cr) > ε, interpolate = d3_geo_circleInterpolate(radius, 6 * d3_radians);\n    return d3_geo_clip(visible, clipLine, interpolate, smallRadius ? [ 0, -radius ] : [ -π, radius - π ]);\n    function visible(λ, φ) {\n      return Math.cos(λ) * Math.cos(φ) > cr;\n    }\n    function clipLine(listener) {\n      var point0, c0, v0, v00, clean;\n      return {\n        lineStart: function() {\n          v00 = v0 = false;\n          clean = 1;\n        },\n        point: function(λ, φ) {\n          var point1 = [ λ, φ ], point2, v = visible(λ, φ), c = smallRadius ? v ? 0 : code(λ, φ) : v ? code(λ + (λ < 0 ? π : -π), φ) : 0;\n          if (!point0 && (v00 = v0 = v)) listener.lineStart();\n          if (v !== v0) {\n            point2 = intersect(point0, point1);\n            if (d3_geo_sphericalEqual(point0, point2) || d3_geo_sphericalEqual(point1, point2)) {\n              point1[0] += ε;\n              point1[1] += ε;\n              v = visible(point1[0], point1[1]);\n            }\n          }\n          if (v !== v0) {\n            clean = 0;\n            if (v) {\n              listener.lineStart();\n              point2 = intersect(point1, point0);\n              listener.point(point2[0], point2[1]);\n            } else {\n              point2 = intersect(point0, point1);\n              listener.point(point2[0], point2[1]);\n              listener.lineEnd();\n            }\n            point0 = point2;\n          } else if (notHemisphere && point0 && smallRadius ^ v) {\n            var t;\n            if (!(c & c0) && (t = intersect(point1, point0, true))) {\n              clean = 0;\n              if (smallRadius) {\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n              } else {\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n              }\n            }\n          }\n          if (v && (!point0 || !d3_geo_sphericalEqual(point0, point1))) {\n            listener.point(point1[0], point1[1]);\n          }\n          point0 = point1, v0 = v, c0 = c;\n        },\n        lineEnd: function() {\n          if (v0) listener.lineEnd();\n          point0 = null;\n        },\n        clean: function() {\n          return clean | (v00 && v0) << 1;\n        }\n      };\n    }\n    function intersect(a, b, two) {\n      var pa = d3_geo_cartesian(a), pb = d3_geo_cartesian(b);\n      var n1 = [ 1, 0, 0 ], n2 = d3_geo_cartesianCross(pa, pb), n2n2 = d3_geo_cartesianDot(n2, n2), n1n2 = n2[0], determinant = n2n2 - n1n2 * n1n2;\n      if (!determinant) return !two && a;\n      var c1 = cr * n2n2 / determinant, c2 = -cr * n1n2 / determinant, n1xn2 = d3_geo_cartesianCross(n1, n2), A = d3_geo_cartesianScale(n1, c1), B = d3_geo_cartesianScale(n2, c2);\n      d3_geo_cartesianAdd(A, B);\n      var u = n1xn2, w = d3_geo_cartesianDot(A, u), uu = d3_geo_cartesianDot(u, u), t2 = w * w - uu * (d3_geo_cartesianDot(A, A) - 1);\n      if (t2 < 0) return;\n      var t = Math.sqrt(t2), q = d3_geo_cartesianScale(u, (-w - t) / uu);\n      d3_geo_cartesianAdd(q, A);\n      q = d3_geo_spherical(q);\n      if (!two) return q;\n      var λ0 = a[0], λ1 = b[0], φ0 = a[1], φ1 = b[1], z;\n      if (λ1 < λ0) z = λ0, λ0 = λ1, λ1 = z;\n      var δλ = λ1 - λ0, polar = abs(δλ - π) < ε, meridian = polar || δλ < ε;\n      if (!polar && φ1 < φ0) z = φ0, φ0 = φ1, φ1 = z;\n      if (meridian ? polar ? φ0 + φ1 > 0 ^ q[1] < (abs(q[0] - λ0) < ε ? φ0 : φ1) : φ0 <= q[1] && q[1] <= φ1 : δλ > π ^ (λ0 <= q[0] && q[0] <= λ1)) {\n        var q1 = d3_geo_cartesianScale(u, (-w + t) / uu);\n        d3_geo_cartesianAdd(q1, A);\n        return [ q, d3_geo_spherical(q1) ];\n      }\n    }\n    function code(λ, φ) {\n      var r = smallRadius ? radius : π - radius, code = 0;\n      if (λ < -r) code |= 1; else if (λ > r) code |= 2;\n      if (φ < -r) code |= 4; else if (φ > r) code |= 8;\n      return code;\n    }\n  }\n  function d3_geom_clipLine(x0, y0, x1, y1) {\n    return function(line) {\n      var a = line.a, b = line.b, ax = a.x, ay = a.y, bx = b.x, by = b.y, t0 = 0, t1 = 1, dx = bx - ax, dy = by - ay, r;\n      r = x0 - ax;\n      if (!dx && r > 0) return;\n      r /= dx;\n      if (dx < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dx > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n      r = x1 - ax;\n      if (!dx && r < 0) return;\n      r /= dx;\n      if (dx < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dx > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n      r = y0 - ay;\n      if (!dy && r > 0) return;\n      r /= dy;\n      if (dy < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dy > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n      r = y1 - ay;\n      if (!dy && r < 0) return;\n      r /= dy;\n      if (dy < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dy > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n      if (t0 > 0) line.a = {\n        x: ax + t0 * dx,\n        y: ay + t0 * dy\n      };\n      if (t1 < 1) line.b = {\n        x: ax + t1 * dx,\n        y: ay + t1 * dy\n      };\n      return line;\n    };\n  }\n  var d3_geo_clipExtentMAX = 1e9;\n  d3.geo.clipExtent = function() {\n    var x0, y0, x1, y1, stream, clip, clipExtent = {\n      stream: function(output) {\n        if (stream) stream.valid = false;\n        stream = clip(output);\n        stream.valid = true;\n        return stream;\n      },\n      extent: function(_) {\n        if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n        clip = d3_geo_clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]);\n        if (stream) stream.valid = false, stream = null;\n        return clipExtent;\n      }\n    };\n    return clipExtent.extent([ [ 0, 0 ], [ 960, 500 ] ]);\n  };\n  function d3_geo_clipExtent(x0, y0, x1, y1) {\n    return function(listener) {\n      var listener_ = listener, bufferListener = d3_geo_clipBufferListener(), clipLine = d3_geom_clipLine(x0, y0, x1, y1), segments, polygon, ring;\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          listener = bufferListener;\n          segments = [];\n          polygon = [];\n          clean = true;\n        },\n        polygonEnd: function() {\n          listener = listener_;\n          segments = d3.merge(segments);\n          var clipStartInside = insidePolygon([ x0, y1 ]), inside = clean && clipStartInside, visible = segments.length;\n          if (inside || visible) {\n            listener.polygonStart();\n            if (inside) {\n              listener.lineStart();\n              interpolate(null, null, 1, listener);\n              listener.lineEnd();\n            }\n            if (visible) {\n              d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener);\n            }\n            listener.polygonEnd();\n          }\n          segments = polygon = ring = null;\n        }\n      };\n      function insidePolygon(p) {\n        var wn = 0, n = polygon.length, y = p[1];\n        for (var i = 0; i < n; ++i) {\n          for (var j = 1, v = polygon[i], m = v.length, a = v[0], b; j < m; ++j) {\n            b = v[j];\n            if (a[1] <= y) {\n              if (b[1] > y && d3_cross2d(a, b, p) > 0) ++wn;\n            } else {\n              if (b[1] <= y && d3_cross2d(a, b, p) < 0) --wn;\n            }\n            a = b;\n          }\n        }\n        return wn !== 0;\n      }\n      function interpolate(from, to, direction, listener) {\n        var a = 0, a1 = 0;\n        if (from == null || (a = corner(from, direction)) !== (a1 = corner(to, direction)) || comparePoints(from, to) < 0 ^ direction > 0) {\n          do {\n            listener.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n          } while ((a = (a + direction + 4) % 4) !== a1);\n        } else {\n          listener.point(to[0], to[1]);\n        }\n      }\n      function pointVisible(x, y) {\n        return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n      }\n      function point(x, y) {\n        if (pointVisible(x, y)) listener.point(x, y);\n      }\n      var x__, y__, v__, x_, y_, v_, first, clean;\n      function lineStart() {\n        clip.point = linePoint;\n        if (polygon) polygon.push(ring = []);\n        first = true;\n        v_ = false;\n        x_ = y_ = NaN;\n      }\n      function lineEnd() {\n        if (segments) {\n          linePoint(x__, y__);\n          if (v__ && v_) bufferListener.rejoin();\n          segments.push(bufferListener.buffer());\n        }\n        clip.point = point;\n        if (v_) listener.lineEnd();\n      }\n      function linePoint(x, y) {\n        x = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, x));\n        y = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, y));\n        var v = pointVisible(x, y);\n        if (polygon) ring.push([ x, y ]);\n        if (first) {\n          x__ = x, y__ = y, v__ = v;\n          first = false;\n          if (v) {\n            listener.lineStart();\n            listener.point(x, y);\n          }\n        } else {\n          if (v && v_) listener.point(x, y); else {\n            var l = {\n              a: {\n                x: x_,\n                y: y_\n              },\n              b: {\n                x: x,\n                y: y\n              }\n            };\n            if (clipLine(l)) {\n              if (!v_) {\n                listener.lineStart();\n                listener.point(l.a.x, l.a.y);\n              }\n              listener.point(l.b.x, l.b.y);\n              if (!v) listener.lineEnd();\n              clean = false;\n            } else if (v) {\n              listener.lineStart();\n              listener.point(x, y);\n              clean = false;\n            }\n          }\n        }\n        x_ = x, y_ = y, v_ = v;\n      }\n      return clip;\n    };\n    function corner(p, direction) {\n      return abs(p[0] - x0) < ε ? direction > 0 ? 0 : 3 : abs(p[0] - x1) < ε ? direction > 0 ? 2 : 1 : abs(p[1] - y0) < ε ? direction > 0 ? 1 : 0 : direction > 0 ? 3 : 2;\n    }\n    function compare(a, b) {\n      return comparePoints(a.x, b.x);\n    }\n    function comparePoints(a, b) {\n      var ca = corner(a, 1), cb = corner(b, 1);\n      return ca !== cb ? ca - cb : ca === 0 ? b[1] - a[1] : ca === 1 ? a[0] - b[0] : ca === 2 ? a[1] - b[1] : b[0] - a[0];\n    }\n  }\n  function d3_geo_conic(projectAt) {\n    var φ0 = 0, φ1 = π / 3, m = d3_geo_projectionMutator(projectAt), p = m(φ0, φ1);\n    p.parallels = function(_) {\n      if (!arguments.length) return [ φ0 / π * 180, φ1 / π * 180 ];\n      return m(φ0 = _[0] * π / 180, φ1 = _[1] * π / 180);\n    };\n    return p;\n  }\n  function d3_geo_conicEqualArea(φ0, φ1) {\n    var sinφ0 = Math.sin(φ0), n = (sinφ0 + Math.sin(φ1)) / 2, C = 1 + sinφ0 * (2 * n - sinφ0), ρ0 = Math.sqrt(C) / n;\n    function forward(λ, φ) {\n      var ρ = Math.sqrt(C - 2 * n * Math.sin(φ)) / n;\n      return [ ρ * Math.sin(λ *= n), ρ0 - ρ * Math.cos(λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = ρ0 - y;\n      return [ Math.atan2(x, ρ0_y) / n, d3_asin((C - (x * x + ρ0_y * ρ0_y) * n * n) / (2 * n)) ];\n    };\n    return forward;\n  }\n  (d3.geo.conicEqualArea = function() {\n    return d3_geo_conic(d3_geo_conicEqualArea);\n  }).raw = d3_geo_conicEqualArea;\n  d3.geo.albers = function() {\n    return d3.geo.conicEqualArea().rotate([ 96, 0 ]).center([ -.6, 38.7 ]).parallels([ 29.5, 45.5 ]).scale(1070);\n  };\n  d3.geo.albersUsa = function() {\n    var lower48 = d3.geo.albers();\n    var alaska = d3.geo.conicEqualArea().rotate([ 154, 0 ]).center([ -2, 58.5 ]).parallels([ 55, 65 ]);\n    var hawaii = d3.geo.conicEqualArea().rotate([ 157, 0 ]).center([ -3, 19.9 ]).parallels([ 8, 18 ]);\n    var point, pointStream = {\n      point: function(x, y) {\n        point = [ x, y ];\n      }\n    }, lower48Point, alaskaPoint, hawaiiPoint;\n    function albersUsa(coordinates) {\n      var x = coordinates[0], y = coordinates[1];\n      point = null;\n      (lower48Point(x, y), point) || (alaskaPoint(x, y), point) || hawaiiPoint(x, y);\n      return point;\n    }\n    albersUsa.invert = function(coordinates) {\n      var k = lower48.scale(), t = lower48.translate(), x = (coordinates[0] - t[0]) / k, y = (coordinates[1] - t[1]) / k;\n      return (y >= .12 && y < .234 && x >= -.425 && x < -.214 ? alaska : y >= .166 && y < .234 && x >= -.214 && x < -.115 ? hawaii : lower48).invert(coordinates);\n    };\n    albersUsa.stream = function(stream) {\n      var lower48Stream = lower48.stream(stream), alaskaStream = alaska.stream(stream), hawaiiStream = hawaii.stream(stream);\n      return {\n        point: function(x, y) {\n          lower48Stream.point(x, y);\n          alaskaStream.point(x, y);\n          hawaiiStream.point(x, y);\n        },\n        sphere: function() {\n          lower48Stream.sphere();\n          alaskaStream.sphere();\n          hawaiiStream.sphere();\n        },\n        lineStart: function() {\n          lower48Stream.lineStart();\n          alaskaStream.lineStart();\n          hawaiiStream.lineStart();\n        },\n        lineEnd: function() {\n          lower48Stream.lineEnd();\n          alaskaStream.lineEnd();\n          hawaiiStream.lineEnd();\n        },\n        polygonStart: function() {\n          lower48Stream.polygonStart();\n          alaskaStream.polygonStart();\n          hawaiiStream.polygonStart();\n        },\n        polygonEnd: function() {\n          lower48Stream.polygonEnd();\n          alaskaStream.polygonEnd();\n          hawaiiStream.polygonEnd();\n        }\n      };\n    };\n    albersUsa.precision = function(_) {\n      if (!arguments.length) return lower48.precision();\n      lower48.precision(_);\n      alaska.precision(_);\n      hawaii.precision(_);\n      return albersUsa;\n    };\n    albersUsa.scale = function(_) {\n      if (!arguments.length) return lower48.scale();\n      lower48.scale(_);\n      alaska.scale(_ * .35);\n      hawaii.scale(_);\n      return albersUsa.translate(lower48.translate());\n    };\n    albersUsa.translate = function(_) {\n      if (!arguments.length) return lower48.translate();\n      var k = lower48.scale(), x = +_[0], y = +_[1];\n      lower48Point = lower48.translate(_).clipExtent([ [ x - .455 * k, y - .238 * k ], [ x + .455 * k, y + .238 * k ] ]).stream(pointStream).point;\n      alaskaPoint = alaska.translate([ x - .307 * k, y + .201 * k ]).clipExtent([ [ x - .425 * k + ε, y + .12 * k + ε ], [ x - .214 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n      hawaiiPoint = hawaii.translate([ x - .205 * k, y + .212 * k ]).clipExtent([ [ x - .214 * k + ε, y + .166 * k + ε ], [ x - .115 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n      return albersUsa;\n    };\n    return albersUsa.scale(1070);\n  };\n  var d3_geo_pathAreaSum, d3_geo_pathAreaPolygon, d3_geo_pathArea = {\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function() {\n      d3_geo_pathAreaPolygon = 0;\n      d3_geo_pathArea.lineStart = d3_geo_pathAreaRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_pathArea.lineStart = d3_geo_pathArea.lineEnd = d3_geo_pathArea.point = d3_noop;\n      d3_geo_pathAreaSum += abs(d3_geo_pathAreaPolygon / 2);\n    }\n  };\n  function d3_geo_pathAreaRingStart() {\n    var x00, y00, x0, y0;\n    d3_geo_pathArea.point = function(x, y) {\n      d3_geo_pathArea.point = nextPoint;\n      x00 = x0 = x, y00 = y0 = y;\n    };\n    function nextPoint(x, y) {\n      d3_geo_pathAreaPolygon += y0 * x - x0 * y;\n      x0 = x, y0 = y;\n    }\n    d3_geo_pathArea.lineEnd = function() {\n      nextPoint(x00, y00);\n    };\n  }\n  var d3_geo_pathBoundsX0, d3_geo_pathBoundsY0, d3_geo_pathBoundsX1, d3_geo_pathBoundsY1;\n  var d3_geo_pathBounds = {\n    point: d3_geo_pathBoundsPoint,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n  function d3_geo_pathBoundsPoint(x, y) {\n    if (x < d3_geo_pathBoundsX0) d3_geo_pathBoundsX0 = x;\n    if (x > d3_geo_pathBoundsX1) d3_geo_pathBoundsX1 = x;\n    if (y < d3_geo_pathBoundsY0) d3_geo_pathBoundsY0 = y;\n    if (y > d3_geo_pathBoundsY1) d3_geo_pathBoundsY1 = y;\n  }\n  function d3_geo_pathBuffer() {\n    var pointCircle = d3_geo_pathBufferCircle(4.5), buffer = [];\n    var stream = {\n      point: point,\n      lineStart: function() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function(_) {\n        pointCircle = d3_geo_pathBufferCircle(_);\n        return stream;\n      },\n      result: function() {\n        if (buffer.length) {\n          var result = buffer.join(\"\");\n          buffer = [];\n          return result;\n        }\n      }\n    };\n    function point(x, y) {\n      buffer.push(\"M\", x, \",\", y, pointCircle);\n    }\n    function pointLineStart(x, y) {\n      buffer.push(\"M\", x, \",\", y);\n      stream.point = pointLine;\n    }\n    function pointLine(x, y) {\n      buffer.push(\"L\", x, \",\", y);\n    }\n    function lineEnd() {\n      stream.point = point;\n    }\n    function lineEndPolygon() {\n      buffer.push(\"Z\");\n    }\n    return stream;\n  }\n  function d3_geo_pathBufferCircle(radius) {\n    return \"m0,\" + radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius + \"z\";\n  }\n  var d3_geo_pathCentroid = {\n    point: d3_geo_pathCentroidPoint,\n    lineStart: d3_geo_pathCentroidLineStart,\n    lineEnd: d3_geo_pathCentroidLineEnd,\n    polygonStart: function() {\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidLineStart;\n      d3_geo_pathCentroid.lineEnd = d3_geo_pathCentroidLineEnd;\n    }\n  };\n  function d3_geo_pathCentroidPoint(x, y) {\n    d3_geo_centroidX0 += x;\n    d3_geo_centroidY0 += y;\n    ++d3_geo_centroidZ0;\n  }\n  function d3_geo_pathCentroidLineStart() {\n    var x0, y0;\n    d3_geo_pathCentroid.point = function(x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    };\n    function nextPoint(x, y) {\n      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n  }\n  function d3_geo_pathCentroidLineEnd() {\n    d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n  }\n  function d3_geo_pathCentroidRingStart() {\n    var x00, y00, x0, y0;\n    d3_geo_pathCentroid.point = function(x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x00 = x0 = x, y00 = y0 = y);\n    };\n    function nextPoint(x, y) {\n      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      z = y0 * x - x0 * y;\n      d3_geo_centroidX2 += z * (x0 + x);\n      d3_geo_centroidY2 += z * (y0 + y);\n      d3_geo_centroidZ2 += z * 3;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n    d3_geo_pathCentroid.lineEnd = function() {\n      nextPoint(x00, y00);\n    };\n  }\n  function d3_geo_pathContext(context) {\n    var pointRadius = 4.5;\n    var stream = {\n      point: point,\n      lineStart: function() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function(_) {\n        pointRadius = _;\n        return stream;\n      },\n      result: d3_noop\n    };\n    function point(x, y) {\n      context.moveTo(x + pointRadius, y);\n      context.arc(x, y, pointRadius, 0, τ);\n    }\n    function pointLineStart(x, y) {\n      context.moveTo(x, y);\n      stream.point = pointLine;\n    }\n    function pointLine(x, y) {\n      context.lineTo(x, y);\n    }\n    function lineEnd() {\n      stream.point = point;\n    }\n    function lineEndPolygon() {\n      context.closePath();\n    }\n    return stream;\n  }\n  function d3_geo_resample(project) {\n    var δ2 = .5, cosMinDistance = Math.cos(30 * d3_radians), maxDepth = 16;\n    function resample(stream) {\n      return (maxDepth ? resampleRecursive : resampleNone)(stream);\n    }\n    function resampleNone(stream) {\n      return d3_geo_transformPoint(stream, function(x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      });\n    }\n    function resampleRecursive(stream) {\n      var λ00, φ00, x00, y00, a00, b00, c00, λ0, x0, y0, a0, b0, c0;\n      var resample = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          stream.polygonStart();\n          resample.lineStart = ringStart;\n        },\n        polygonEnd: function() {\n          stream.polygonEnd();\n          resample.lineStart = lineStart;\n        }\n      };\n      function point(x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      }\n      function lineStart() {\n        x0 = NaN;\n        resample.point = linePoint;\n        stream.lineStart();\n      }\n      function linePoint(λ, φ) {\n        var c = d3_geo_cartesian([ λ, φ ]), p = project(λ, φ);\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x0 = p[0], y0 = p[1], λ0 = λ, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n        stream.point(x0, y0);\n      }\n      function lineEnd() {\n        resample.point = point;\n        stream.lineEnd();\n      }\n      function ringStart() {\n        lineStart();\n        resample.point = ringPoint;\n        resample.lineEnd = ringEnd;\n      }\n      function ringPoint(λ, φ) {\n        linePoint(λ00 = λ, φ00 = φ), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n        resample.point = linePoint;\n      }\n      function ringEnd() {\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x00, y00, λ00, a00, b00, c00, maxDepth, stream);\n        resample.lineEnd = lineEnd;\n        lineEnd();\n      }\n      return resample;\n    }\n    function resampleLineTo(x0, y0, λ0, a0, b0, c0, x1, y1, λ1, a1, b1, c1, depth, stream) {\n      var dx = x1 - x0, dy = y1 - y0, d2 = dx * dx + dy * dy;\n      if (d2 > 4 * δ2 && depth--) {\n        var a = a0 + a1, b = b0 + b1, c = c0 + c1, m = Math.sqrt(a * a + b * b + c * c), φ2 = Math.asin(c /= m), λ2 = abs(abs(c) - 1) < ε || abs(λ0 - λ1) < ε ? (λ0 + λ1) / 2 : Math.atan2(b, a), p = project(λ2, φ2), x2 = p[0], y2 = p[1], dx2 = x2 - x0, dy2 = y2 - y0, dz = dy * dx2 - dx * dy2;\n        if (dz * dz / d2 > δ2 || abs((dx * dx2 + dy * dy2) / d2 - .5) > .3 || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) {\n          resampleLineTo(x0, y0, λ0, a0, b0, c0, x2, y2, λ2, a /= m, b /= m, c, depth, stream);\n          stream.point(x2, y2);\n          resampleLineTo(x2, y2, λ2, a, b, c, x1, y1, λ1, a1, b1, c1, depth, stream);\n        }\n      }\n    }\n    resample.precision = function(_) {\n      if (!arguments.length) return Math.sqrt(δ2);\n      maxDepth = (δ2 = _ * _) > 0 && 16;\n      return resample;\n    };\n    return resample;\n  }\n  d3.geo.path = function() {\n    var pointRadius = 4.5, projection, context, projectStream, contextStream, cacheStream;\n    function path(object) {\n      if (object) {\n        if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n        if (!cacheStream || !cacheStream.valid) cacheStream = projectStream(contextStream);\n        d3.geo.stream(object, cacheStream);\n      }\n      return contextStream.result();\n    }\n    path.area = function(object) {\n      d3_geo_pathAreaSum = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathArea));\n      return d3_geo_pathAreaSum;\n    };\n    path.centroid = function(object) {\n      d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathCentroid));\n      return d3_geo_centroidZ2 ? [ d3_geo_centroidX2 / d3_geo_centroidZ2, d3_geo_centroidY2 / d3_geo_centroidZ2 ] : d3_geo_centroidZ1 ? [ d3_geo_centroidX1 / d3_geo_centroidZ1, d3_geo_centroidY1 / d3_geo_centroidZ1 ] : d3_geo_centroidZ0 ? [ d3_geo_centroidX0 / d3_geo_centroidZ0, d3_geo_centroidY0 / d3_geo_centroidZ0 ] : [ NaN, NaN ];\n    };\n    path.bounds = function(object) {\n      d3_geo_pathBoundsX1 = d3_geo_pathBoundsY1 = -(d3_geo_pathBoundsX0 = d3_geo_pathBoundsY0 = Infinity);\n      d3.geo.stream(object, projectStream(d3_geo_pathBounds));\n      return [ [ d3_geo_pathBoundsX0, d3_geo_pathBoundsY0 ], [ d3_geo_pathBoundsX1, d3_geo_pathBoundsY1 ] ];\n    };\n    path.projection = function(_) {\n      if (!arguments.length) return projection;\n      projectStream = (projection = _) ? _.stream || d3_geo_pathProjectStream(_) : d3_identity;\n      return reset();\n    };\n    path.context = function(_) {\n      if (!arguments.length) return context;\n      contextStream = (context = _) == null ? new d3_geo_pathBuffer() : new d3_geo_pathContext(_);\n      if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n      return reset();\n    };\n    path.pointRadius = function(_) {\n      if (!arguments.length) return pointRadius;\n      pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n      return path;\n    };\n    function reset() {\n      cacheStream = null;\n      return path;\n    }\n    return path.projection(d3.geo.albersUsa()).context(null);\n  };\n  function d3_geo_pathProjectStream(project) {\n    var resample = d3_geo_resample(function(x, y) {\n      return project([ x * d3_degrees, y * d3_degrees ]);\n    });\n    return function(stream) {\n      return d3_geo_projectionRadians(resample(stream));\n    };\n  }\n  d3.geo.transform = function(methods) {\n    return {\n      stream: function(stream) {\n        var transform = new d3_geo_transform(stream);\n        for (var k in methods) transform[k] = methods[k];\n        return transform;\n      }\n    };\n  };\n  function d3_geo_transform(stream) {\n    this.stream = stream;\n  }\n  d3_geo_transform.prototype = {\n    point: function(x, y) {\n      this.stream.point(x, y);\n    },\n    sphere: function() {\n      this.stream.sphere();\n    },\n    lineStart: function() {\n      this.stream.lineStart();\n    },\n    lineEnd: function() {\n      this.stream.lineEnd();\n    },\n    polygonStart: function() {\n      this.stream.polygonStart();\n    },\n    polygonEnd: function() {\n      this.stream.polygonEnd();\n    }\n  };\n  function d3_geo_transformPoint(stream, point) {\n    return {\n      point: point,\n      sphere: function() {\n        stream.sphere();\n      },\n      lineStart: function() {\n        stream.lineStart();\n      },\n      lineEnd: function() {\n        stream.lineEnd();\n      },\n      polygonStart: function() {\n        stream.polygonStart();\n      },\n      polygonEnd: function() {\n        stream.polygonEnd();\n      }\n    };\n  }\n  d3.geo.projection = d3_geo_projection;\n  d3.geo.projectionMutator = d3_geo_projectionMutator;\n  function d3_geo_projection(project) {\n    return d3_geo_projectionMutator(function() {\n      return project;\n    })();\n  }\n  function d3_geo_projectionMutator(projectAt) {\n    var project, rotate, projectRotate, projectResample = d3_geo_resample(function(x, y) {\n      x = project(x, y);\n      return [ x[0] * k + δx, δy - x[1] * k ];\n    }), k = 150, x = 480, y = 250, λ = 0, φ = 0, δλ = 0, δφ = 0, δγ = 0, δx, δy, preclip = d3_geo_clipAntimeridian, postclip = d3_identity, clipAngle = null, clipExtent = null, stream;\n    function projection(point) {\n      point = projectRotate(point[0] * d3_radians, point[1] * d3_radians);\n      return [ point[0] * k + δx, δy - point[1] * k ];\n    }\n    function invert(point) {\n      point = projectRotate.invert((point[0] - δx) / k, (δy - point[1]) / k);\n      return point && [ point[0] * d3_degrees, point[1] * d3_degrees ];\n    }\n    projection.stream = function(output) {\n      if (stream) stream.valid = false;\n      stream = d3_geo_projectionRadians(preclip(rotate, projectResample(postclip(output))));\n      stream.valid = true;\n      return stream;\n    };\n    projection.clipAngle = function(_) {\n      if (!arguments.length) return clipAngle;\n      preclip = _ == null ? (clipAngle = _, d3_geo_clipAntimeridian) : d3_geo_clipCircle((clipAngle = +_) * d3_radians);\n      return invalidate();\n    };\n    projection.clipExtent = function(_) {\n      if (!arguments.length) return clipExtent;\n      clipExtent = _;\n      postclip = _ ? d3_geo_clipExtent(_[0][0], _[0][1], _[1][0], _[1][1]) : d3_identity;\n      return invalidate();\n    };\n    projection.scale = function(_) {\n      if (!arguments.length) return k;\n      k = +_;\n      return reset();\n    };\n    projection.translate = function(_) {\n      if (!arguments.length) return [ x, y ];\n      x = +_[0];\n      y = +_[1];\n      return reset();\n    };\n    projection.center = function(_) {\n      if (!arguments.length) return [ λ * d3_degrees, φ * d3_degrees ];\n      λ = _[0] % 360 * d3_radians;\n      φ = _[1] % 360 * d3_radians;\n      return reset();\n    };\n    projection.rotate = function(_) {\n      if (!arguments.length) return [ δλ * d3_degrees, δφ * d3_degrees, δγ * d3_degrees ];\n      δλ = _[0] % 360 * d3_radians;\n      δφ = _[1] % 360 * d3_radians;\n      δγ = _.length > 2 ? _[2] % 360 * d3_radians : 0;\n      return reset();\n    };\n    d3.rebind(projection, projectResample, \"precision\");\n    function reset() {\n      projectRotate = d3_geo_compose(rotate = d3_geo_rotation(δλ, δφ, δγ), project);\n      var center = project(λ, φ);\n      δx = x - center[0] * k;\n      δy = y + center[1] * k;\n      return invalidate();\n    }\n    function invalidate() {\n      if (stream) stream.valid = false, stream = null;\n      return projection;\n    }\n    return function() {\n      project = projectAt.apply(this, arguments);\n      projection.invert = project.invert && invert;\n      return reset();\n    };\n  }\n  function d3_geo_projectionRadians(stream) {\n    return d3_geo_transformPoint(stream, function(x, y) {\n      stream.point(x * d3_radians, y * d3_radians);\n    });\n  }\n  function d3_geo_equirectangular(λ, φ) {\n    return [ λ, φ ];\n  }\n  (d3.geo.equirectangular = function() {\n    return d3_geo_projection(d3_geo_equirectangular);\n  }).raw = d3_geo_equirectangular.invert = d3_geo_equirectangular;\n  d3.geo.rotation = function(rotate) {\n    rotate = d3_geo_rotation(rotate[0] % 360 * d3_radians, rotate[1] * d3_radians, rotate.length > 2 ? rotate[2] * d3_radians : 0);\n    function forward(coordinates) {\n      coordinates = rotate(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    }\n    forward.invert = function(coordinates) {\n      coordinates = rotate.invert(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    };\n    return forward;\n  };\n  function d3_geo_identityRotation(λ, φ) {\n    return [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n  }\n  d3_geo_identityRotation.invert = d3_geo_equirectangular;\n  function d3_geo_rotation(δλ, δφ, δγ) {\n    return δλ ? δφ || δγ ? d3_geo_compose(d3_geo_rotationλ(δλ), d3_geo_rotationφγ(δφ, δγ)) : d3_geo_rotationλ(δλ) : δφ || δγ ? d3_geo_rotationφγ(δφ, δγ) : d3_geo_identityRotation;\n  }\n  function d3_geo_forwardRotationλ(δλ) {\n    return function(λ, φ) {\n      return λ += δλ, [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n    };\n  }\n  function d3_geo_rotationλ(δλ) {\n    var rotation = d3_geo_forwardRotationλ(δλ);\n    rotation.invert = d3_geo_forwardRotationλ(-δλ);\n    return rotation;\n  }\n  function d3_geo_rotationφγ(δφ, δγ) {\n    var cosδφ = Math.cos(δφ), sinδφ = Math.sin(δφ), cosδγ = Math.cos(δγ), sinδγ = Math.sin(δγ);\n    function rotation(λ, φ) {\n      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδφ + x * sinδφ;\n      return [ Math.atan2(y * cosδγ - k * sinδγ, x * cosδφ - z * sinδφ), d3_asin(k * cosδγ + y * sinδγ) ];\n    }\n    rotation.invert = function(λ, φ) {\n      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδγ - y * sinδγ;\n      return [ Math.atan2(y * cosδγ + z * sinδγ, x * cosδφ + k * sinδφ), d3_asin(k * cosδφ - x * sinδφ) ];\n    };\n    return rotation;\n  }\n  d3.geo.circle = function() {\n    var origin = [ 0, 0 ], angle, precision = 6, interpolate;\n    function circle() {\n      var center = typeof origin === \"function\" ? origin.apply(this, arguments) : origin, rotate = d3_geo_rotation(-center[0] * d3_radians, -center[1] * d3_radians, 0).invert, ring = [];\n      interpolate(null, null, 1, {\n        point: function(x, y) {\n          ring.push(x = rotate(x, y));\n          x[0] *= d3_degrees, x[1] *= d3_degrees;\n        }\n      });\n      return {\n        type: \"Polygon\",\n        coordinates: [ ring ]\n      };\n    }\n    circle.origin = function(x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return circle;\n    };\n    circle.angle = function(x) {\n      if (!arguments.length) return angle;\n      interpolate = d3_geo_circleInterpolate((angle = +x) * d3_radians, precision * d3_radians);\n      return circle;\n    };\n    circle.precision = function(_) {\n      if (!arguments.length) return precision;\n      interpolate = d3_geo_circleInterpolate(angle * d3_radians, (precision = +_) * d3_radians);\n      return circle;\n    };\n    return circle.angle(90);\n  };\n  function d3_geo_circleInterpolate(radius, precision) {\n    var cr = Math.cos(radius), sr = Math.sin(radius);\n    return function(from, to, direction, listener) {\n      var step = direction * precision;\n      if (from != null) {\n        from = d3_geo_circleAngle(cr, from);\n        to = d3_geo_circleAngle(cr, to);\n        if (direction > 0 ? from < to : from > to) from += direction * τ;\n      } else {\n        from = radius + direction * τ;\n        to = radius - .5 * step;\n      }\n      for (var point, t = from; direction > 0 ? t > to : t < to; t -= step) {\n        listener.point((point = d3_geo_spherical([ cr, -sr * Math.cos(t), -sr * Math.sin(t) ]))[0], point[1]);\n      }\n    };\n  }\n  function d3_geo_circleAngle(cr, point) {\n    var a = d3_geo_cartesian(point);\n    a[0] -= cr;\n    d3_geo_cartesianNormalize(a);\n    var angle = d3_acos(-a[1]);\n    return ((-a[2] < 0 ? -angle : angle) + 2 * Math.PI - ε) % (2 * Math.PI);\n  }\n  d3.geo.distance = function(a, b) {\n    var Δλ = (b[0] - a[0]) * d3_radians, φ0 = a[1] * d3_radians, φ1 = b[1] * d3_radians, sinΔλ = Math.sin(Δλ), cosΔλ = Math.cos(Δλ), sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), sinφ1 = Math.sin(φ1), cosφ1 = Math.cos(φ1), t;\n    return Math.atan2(Math.sqrt((t = cosφ1 * sinΔλ) * t + (t = cosφ0 * sinφ1 - sinφ0 * cosφ1 * cosΔλ) * t), sinφ0 * sinφ1 + cosφ0 * cosφ1 * cosΔλ);\n  };\n  d3.geo.graticule = function() {\n    var x1, x0, X1, X0, y1, y0, Y1, Y0, dx = 10, dy = dx, DX = 90, DY = 360, x, y, X, Y, precision = 2.5;\n    function graticule() {\n      return {\n        type: \"MultiLineString\",\n        coordinates: lines()\n      };\n    }\n    function lines() {\n      return d3.range(Math.ceil(X0 / DX) * DX, X1, DX).map(X).concat(d3.range(Math.ceil(Y0 / DY) * DY, Y1, DY).map(Y)).concat(d3.range(Math.ceil(x0 / dx) * dx, x1, dx).filter(function(x) {\n        return abs(x % DX) > ε;\n      }).map(x)).concat(d3.range(Math.ceil(y0 / dy) * dy, y1, dy).filter(function(y) {\n        return abs(y % DY) > ε;\n      }).map(y));\n    }\n    graticule.lines = function() {\n      return lines().map(function(coordinates) {\n        return {\n          type: \"LineString\",\n          coordinates: coordinates\n        };\n      });\n    };\n    graticule.outline = function() {\n      return {\n        type: \"Polygon\",\n        coordinates: [ X(X0).concat(Y(Y1).slice(1), X(X1).reverse().slice(1), Y(Y0).reverse().slice(1)) ]\n      };\n    };\n    graticule.extent = function(_) {\n      if (!arguments.length) return graticule.minorExtent();\n      return graticule.majorExtent(_).minorExtent(_);\n    };\n    graticule.majorExtent = function(_) {\n      if (!arguments.length) return [ [ X0, Y0 ], [ X1, Y1 ] ];\n      X0 = +_[0][0], X1 = +_[1][0];\n      Y0 = +_[0][1], Y1 = +_[1][1];\n      if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n      if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n      return graticule.precision(precision);\n    };\n    graticule.minorExtent = function(_) {\n      if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n      x0 = +_[0][0], x1 = +_[1][0];\n      y0 = +_[0][1], y1 = +_[1][1];\n      if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n      if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n      return graticule.precision(precision);\n    };\n    graticule.step = function(_) {\n      if (!arguments.length) return graticule.minorStep();\n      return graticule.majorStep(_).minorStep(_);\n    };\n    graticule.majorStep = function(_) {\n      if (!arguments.length) return [ DX, DY ];\n      DX = +_[0], DY = +_[1];\n      return graticule;\n    };\n    graticule.minorStep = function(_) {\n      if (!arguments.length) return [ dx, dy ];\n      dx = +_[0], dy = +_[1];\n      return graticule;\n    };\n    graticule.precision = function(_) {\n      if (!arguments.length) return precision;\n      precision = +_;\n      x = d3_geo_graticuleX(y0, y1, 90);\n      y = d3_geo_graticuleY(x0, x1, precision);\n      X = d3_geo_graticuleX(Y0, Y1, 90);\n      Y = d3_geo_graticuleY(X0, X1, precision);\n      return graticule;\n    };\n    return graticule.majorExtent([ [ -180, -90 + ε ], [ 180, 90 - ε ] ]).minorExtent([ [ -180, -80 - ε ], [ 180, 80 + ε ] ]);\n  };\n  function d3_geo_graticuleX(y0, y1, dy) {\n    var y = d3.range(y0, y1 - ε, dy).concat(y1);\n    return function(x) {\n      return y.map(function(y) {\n        return [ x, y ];\n      });\n    };\n  }\n  function d3_geo_graticuleY(x0, x1, dx) {\n    var x = d3.range(x0, x1 - ε, dx).concat(x1);\n    return function(y) {\n      return x.map(function(x) {\n        return [ x, y ];\n      });\n    };\n  }\n  function d3_source(d) {\n    return d.source;\n  }\n  function d3_target(d) {\n    return d.target;\n  }\n  d3.geo.greatArc = function() {\n    var source = d3_source, source_, target = d3_target, target_;\n    function greatArc() {\n      return {\n        type: \"LineString\",\n        coordinates: [ source_ || source.apply(this, arguments), target_ || target.apply(this, arguments) ]\n      };\n    }\n    greatArc.distance = function() {\n      return d3.geo.distance(source_ || source.apply(this, arguments), target_ || target.apply(this, arguments));\n    };\n    greatArc.source = function(_) {\n      if (!arguments.length) return source;\n      source = _, source_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n    greatArc.target = function(_) {\n      if (!arguments.length) return target;\n      target = _, target_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n    greatArc.precision = function() {\n      return arguments.length ? greatArc : 0;\n    };\n    return greatArc;\n  };\n  d3.geo.interpolate = function(source, target) {\n    return d3_geo_interpolate(source[0] * d3_radians, source[1] * d3_radians, target[0] * d3_radians, target[1] * d3_radians);\n  };\n  function d3_geo_interpolate(x0, y0, x1, y1) {\n    var cy0 = Math.cos(y0), sy0 = Math.sin(y0), cy1 = Math.cos(y1), sy1 = Math.sin(y1), kx0 = cy0 * Math.cos(x0), ky0 = cy0 * Math.sin(x0), kx1 = cy1 * Math.cos(x1), ky1 = cy1 * Math.sin(x1), d = 2 * Math.asin(Math.sqrt(d3_haversin(y1 - y0) + cy0 * cy1 * d3_haversin(x1 - x0))), k = 1 / Math.sin(d);\n    var interpolate = d ? function(t) {\n      var B = Math.sin(t *= d) * k, A = Math.sin(d - t) * k, x = A * kx0 + B * kx1, y = A * ky0 + B * ky1, z = A * sy0 + B * sy1;\n      return [ Math.atan2(y, x) * d3_degrees, Math.atan2(z, Math.sqrt(x * x + y * y)) * d3_degrees ];\n    } : function() {\n      return [ x0 * d3_degrees, y0 * d3_degrees ];\n    };\n    interpolate.distance = d;\n    return interpolate;\n  }\n  d3.geo.length = function(object) {\n    d3_geo_lengthSum = 0;\n    d3.geo.stream(object, d3_geo_length);\n    return d3_geo_lengthSum;\n  };\n  var d3_geo_lengthSum;\n  var d3_geo_length = {\n    sphere: d3_noop,\n    point: d3_noop,\n    lineStart: d3_geo_lengthLineStart,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n  function d3_geo_lengthLineStart() {\n    var λ0, sinφ0, cosφ0;\n    d3_geo_length.point = function(λ, φ) {\n      λ0 = λ * d3_radians, sinφ0 = Math.sin(φ *= d3_radians), cosφ0 = Math.cos(φ);\n      d3_geo_length.point = nextPoint;\n    };\n    d3_geo_length.lineEnd = function() {\n      d3_geo_length.point = d3_geo_length.lineEnd = d3_noop;\n    };\n    function nextPoint(λ, φ) {\n      var sinφ = Math.sin(φ *= d3_radians), cosφ = Math.cos(φ), t = abs((λ *= d3_radians) - λ0), cosΔλ = Math.cos(t);\n      d3_geo_lengthSum += Math.atan2(Math.sqrt((t = cosφ * Math.sin(t)) * t + (t = cosφ0 * sinφ - sinφ0 * cosφ * cosΔλ) * t), sinφ0 * sinφ + cosφ0 * cosφ * cosΔλ);\n      λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ;\n    }\n  }\n  function d3_geo_azimuthal(scale, angle) {\n    function azimuthal(λ, φ) {\n      var cosλ = Math.cos(λ), cosφ = Math.cos(φ), k = scale(cosλ * cosφ);\n      return [ k * cosφ * Math.sin(λ), k * Math.sin(φ) ];\n    }\n    azimuthal.invert = function(x, y) {\n      var ρ = Math.sqrt(x * x + y * y), c = angle(ρ), sinc = Math.sin(c), cosc = Math.cos(c);\n      return [ Math.atan2(x * sinc, ρ * cosc), Math.asin(ρ && y * sinc / ρ) ];\n    };\n    return azimuthal;\n  }\n  var d3_geo_azimuthalEqualArea = d3_geo_azimuthal(function(cosλcosφ) {\n    return Math.sqrt(2 / (1 + cosλcosφ));\n  }, function(ρ) {\n    return 2 * Math.asin(ρ / 2);\n  });\n  (d3.geo.azimuthalEqualArea = function() {\n    return d3_geo_projection(d3_geo_azimuthalEqualArea);\n  }).raw = d3_geo_azimuthalEqualArea;\n  var d3_geo_azimuthalEquidistant = d3_geo_azimuthal(function(cosλcosφ) {\n    var c = Math.acos(cosλcosφ);\n    return c && c / Math.sin(c);\n  }, d3_identity);\n  (d3.geo.azimuthalEquidistant = function() {\n    return d3_geo_projection(d3_geo_azimuthalEquidistant);\n  }).raw = d3_geo_azimuthalEquidistant;\n  function d3_geo_conicConformal(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0), t = function(φ) {\n      return Math.tan(π / 4 + φ / 2);\n    }, n = φ0 === φ1 ? Math.sin(φ0) : Math.log(cosφ0 / Math.cos(φ1)) / Math.log(t(φ1) / t(φ0)), F = cosφ0 * Math.pow(t(φ0), n) / n;\n    if (!n) return d3_geo_mercator;\n    function forward(λ, φ) {\n      if (F > 0) {\n        if (φ < -halfπ + ε) φ = -halfπ + ε;\n      } else {\n        if (φ > halfπ - ε) φ = halfπ - ε;\n      }\n      var ρ = F / Math.pow(t(φ), n);\n      return [ ρ * Math.sin(n * λ), F - ρ * Math.cos(n * λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = F - y, ρ = d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y);\n      return [ Math.atan2(x, ρ0_y) / n, 2 * Math.atan(Math.pow(F / ρ, 1 / n)) - halfπ ];\n    };\n    return forward;\n  }\n  (d3.geo.conicConformal = function() {\n    return d3_geo_conic(d3_geo_conicConformal);\n  }).raw = d3_geo_conicConformal;\n  function d3_geo_conicEquidistant(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0), n = φ0 === φ1 ? Math.sin(φ0) : (cosφ0 - Math.cos(φ1)) / (φ1 - φ0), G = cosφ0 / n + φ0;\n    if (abs(n) < ε) return d3_geo_equirectangular;\n    function forward(λ, φ) {\n      var ρ = G - φ;\n      return [ ρ * Math.sin(n * λ), G - ρ * Math.cos(n * λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = G - y;\n      return [ Math.atan2(x, ρ0_y) / n, G - d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y) ];\n    };\n    return forward;\n  }\n  (d3.geo.conicEquidistant = function() {\n    return d3_geo_conic(d3_geo_conicEquidistant);\n  }).raw = d3_geo_conicEquidistant;\n  var d3_geo_gnomonic = d3_geo_azimuthal(function(cosλcosφ) {\n    return 1 / cosλcosφ;\n  }, Math.atan);\n  (d3.geo.gnomonic = function() {\n    return d3_geo_projection(d3_geo_gnomonic);\n  }).raw = d3_geo_gnomonic;\n  function d3_geo_mercator(λ, φ) {\n    return [ λ, Math.log(Math.tan(π / 4 + φ / 2)) ];\n  }\n  d3_geo_mercator.invert = function(x, y) {\n    return [ x, 2 * Math.atan(Math.exp(y)) - halfπ ];\n  };\n  function d3_geo_mercatorProjection(project) {\n    var m = d3_geo_projection(project), scale = m.scale, translate = m.translate, clipExtent = m.clipExtent, clipAuto;\n    m.scale = function() {\n      var v = scale.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n    m.translate = function() {\n      var v = translate.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n    m.clipExtent = function(_) {\n      var v = clipExtent.apply(m, arguments);\n      if (v === m) {\n        if (clipAuto = _ == null) {\n          var k = π * scale(), t = translate();\n          clipExtent([ [ t[0] - k, t[1] - k ], [ t[0] + k, t[1] + k ] ]);\n        }\n      } else if (clipAuto) {\n        v = null;\n      }\n      return v;\n    };\n    return m.clipExtent(null);\n  }\n  (d3.geo.mercator = function() {\n    return d3_geo_mercatorProjection(d3_geo_mercator);\n  }).raw = d3_geo_mercator;\n  var d3_geo_orthographic = d3_geo_azimuthal(function() {\n    return 1;\n  }, Math.asin);\n  (d3.geo.orthographic = function() {\n    return d3_geo_projection(d3_geo_orthographic);\n  }).raw = d3_geo_orthographic;\n  var d3_geo_stereographic = d3_geo_azimuthal(function(cosλcosφ) {\n    return 1 / (1 + cosλcosφ);\n  }, function(ρ) {\n    return 2 * Math.atan(ρ);\n  });\n  (d3.geo.stereographic = function() {\n    return d3_geo_projection(d3_geo_stereographic);\n  }).raw = d3_geo_stereographic;\n  function d3_geo_transverseMercator(λ, φ) {\n    return [ Math.log(Math.tan(π / 4 + φ / 2)), -λ ];\n  }\n  d3_geo_transverseMercator.invert = function(x, y) {\n    return [ -y, 2 * Math.atan(Math.exp(x)) - halfπ ];\n  };\n  (d3.geo.transverseMercator = function() {\n    var projection = d3_geo_mercatorProjection(d3_geo_transverseMercator), center = projection.center, rotate = projection.rotate;\n    projection.center = function(_) {\n      return _ ? center([ -_[1], _[0] ]) : (_ = center(), [ _[1], -_[0] ]);\n    };\n    projection.rotate = function(_) {\n      return _ ? rotate([ _[0], _[1], _.length > 2 ? _[2] + 90 : 90 ]) : (_ = rotate(), \n      [ _[0], _[1], _[2] - 90 ]);\n    };\n    return rotate([ 0, 0, 90 ]);\n  }).raw = d3_geo_transverseMercator;\n  d3.geom = {};\n  function d3_geom_pointX(d) {\n    return d[0];\n  }\n  function d3_geom_pointY(d) {\n    return d[1];\n  }\n  d3.geom.hull = function(vertices) {\n    var x = d3_geom_pointX, y = d3_geom_pointY;\n    if (arguments.length) return hull(vertices);\n    function hull(data) {\n      if (data.length < 3) return [];\n      var fx = d3_functor(x), fy = d3_functor(y), i, n = data.length, points = [], flippedPoints = [];\n      for (i = 0; i < n; i++) {\n        points.push([ +fx.call(this, data[i], i), +fy.call(this, data[i], i), i ]);\n      }\n      points.sort(d3_geom_hullOrder);\n      for (i = 0; i < n; i++) flippedPoints.push([ points[i][0], -points[i][1] ]);\n      var upper = d3_geom_hullUpper(points), lower = d3_geom_hullUpper(flippedPoints);\n      var skipLeft = lower[0] === upper[0], skipRight = lower[lower.length - 1] === upper[upper.length - 1], polygon = [];\n      for (i = upper.length - 1; i >= 0; --i) polygon.push(data[points[upper[i]][2]]);\n      for (i = +skipLeft; i < lower.length - skipRight; ++i) polygon.push(data[points[lower[i]][2]]);\n      return polygon;\n    }\n    hull.x = function(_) {\n      return arguments.length ? (x = _, hull) : x;\n    };\n    hull.y = function(_) {\n      return arguments.length ? (y = _, hull) : y;\n    };\n    return hull;\n  };\n  function d3_geom_hullUpper(points) {\n    var n = points.length, hull = [ 0, 1 ], hs = 2;\n    for (var i = 2; i < n; i++) {\n      while (hs > 1 && d3_cross2d(points[hull[hs - 2]], points[hull[hs - 1]], points[i]) <= 0) --hs;\n      hull[hs++] = i;\n    }\n    return hull.slice(0, hs);\n  }\n  function d3_geom_hullOrder(a, b) {\n    return a[0] - b[0] || a[1] - b[1];\n  }\n  d3.geom.polygon = function(coordinates) {\n    d3_subclass(coordinates, d3_geom_polygonPrototype);\n    return coordinates;\n  };\n  var d3_geom_polygonPrototype = d3.geom.polygon.prototype = [];\n  d3_geom_polygonPrototype.area = function() {\n    var i = -1, n = this.length, a, b = this[n - 1], area = 0;\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      area += a[1] * b[0] - a[0] * b[1];\n    }\n    return area * .5;\n  };\n  d3_geom_polygonPrototype.centroid = function(k) {\n    var i = -1, n = this.length, x = 0, y = 0, a, b = this[n - 1], c;\n    if (!arguments.length) k = -1 / (6 * this.area());\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      c = a[0] * b[1] - b[0] * a[1];\n      x += (a[0] + b[0]) * c;\n      y += (a[1] + b[1]) * c;\n    }\n    return [ x * k, y * k ];\n  };\n  d3_geom_polygonPrototype.clip = function(subject) {\n    var input, closed = d3_geom_polygonClosed(subject), i = -1, n = this.length - d3_geom_polygonClosed(this), j, m, a = this[n - 1], b, c, d;\n    while (++i < n) {\n      input = subject.slice();\n      subject.length = 0;\n      b = this[i];\n      c = input[(m = input.length - closed) - 1];\n      j = -1;\n      while (++j < m) {\n        d = input[j];\n        if (d3_geom_polygonInside(d, a, b)) {\n          if (!d3_geom_polygonInside(c, a, b)) {\n            subject.push(d3_geom_polygonIntersect(c, d, a, b));\n          }\n          subject.push(d);\n        } else if (d3_geom_polygonInside(c, a, b)) {\n          subject.push(d3_geom_polygonIntersect(c, d, a, b));\n        }\n        c = d;\n      }\n      if (closed) subject.push(subject[0]);\n      a = b;\n    }\n    return subject;\n  };\n  function d3_geom_polygonInside(p, a, b) {\n    return (b[0] - a[0]) * (p[1] - a[1]) < (b[1] - a[1]) * (p[0] - a[0]);\n  }\n  function d3_geom_polygonIntersect(c, d, a, b) {\n    var x1 = c[0], x3 = a[0], x21 = d[0] - x1, x43 = b[0] - x3, y1 = c[1], y3 = a[1], y21 = d[1] - y1, y43 = b[1] - y3, ua = (x43 * (y1 - y3) - y43 * (x1 - x3)) / (y43 * x21 - x43 * y21);\n    return [ x1 + ua * x21, y1 + ua * y21 ];\n  }\n  function d3_geom_polygonClosed(coordinates) {\n    var a = coordinates[0], b = coordinates[coordinates.length - 1];\n    return !(a[0] - b[0] || a[1] - b[1]);\n  }\n  var d3_geom_voronoiEdges, d3_geom_voronoiCells, d3_geom_voronoiBeaches, d3_geom_voronoiBeachPool = [], d3_geom_voronoiFirstCircle, d3_geom_voronoiCircles, d3_geom_voronoiCirclePool = [];\n  function d3_geom_voronoiBeach() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.edge = this.site = this.circle = null;\n  }\n  function d3_geom_voronoiCreateBeach(site) {\n    var beach = d3_geom_voronoiBeachPool.pop() || new d3_geom_voronoiBeach();\n    beach.site = site;\n    return beach;\n  }\n  function d3_geom_voronoiDetachBeach(beach) {\n    d3_geom_voronoiDetachCircle(beach);\n    d3_geom_voronoiBeaches.remove(beach);\n    d3_geom_voronoiBeachPool.push(beach);\n    d3_geom_voronoiRedBlackNode(beach);\n  }\n  function d3_geom_voronoiRemoveBeach(beach) {\n    var circle = beach.circle, x = circle.x, y = circle.cy, vertex = {\n      x: x,\n      y: y\n    }, previous = beach.P, next = beach.N, disappearing = [ beach ];\n    d3_geom_voronoiDetachBeach(beach);\n    var lArc = previous;\n    while (lArc.circle && abs(x - lArc.circle.x) < ε && abs(y - lArc.circle.cy) < ε) {\n      previous = lArc.P;\n      disappearing.unshift(lArc);\n      d3_geom_voronoiDetachBeach(lArc);\n      lArc = previous;\n    }\n    disappearing.unshift(lArc);\n    d3_geom_voronoiDetachCircle(lArc);\n    var rArc = next;\n    while (rArc.circle && abs(x - rArc.circle.x) < ε && abs(y - rArc.circle.cy) < ε) {\n      next = rArc.N;\n      disappearing.push(rArc);\n      d3_geom_voronoiDetachBeach(rArc);\n      rArc = next;\n    }\n    disappearing.push(rArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var nArcs = disappearing.length, iArc;\n    for (iArc = 1; iArc < nArcs; ++iArc) {\n      rArc = disappearing[iArc];\n      lArc = disappearing[iArc - 1];\n      d3_geom_voronoiSetEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n    }\n    lArc = disappearing[0];\n    rArc = disappearing[nArcs - 1];\n    rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, rArc.site, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n  function d3_geom_voronoiAddBeach(site) {\n    var x = site.x, directrix = site.y, lArc, rArc, dxl, dxr, node = d3_geom_voronoiBeaches._;\n    while (node) {\n      dxl = d3_geom_voronoiLeftBreakPoint(node, directrix) - x;\n      if (dxl > ε) node = node.L; else {\n        dxr = x - d3_geom_voronoiRightBreakPoint(node, directrix);\n        if (dxr > ε) {\n          if (!node.R) {\n            lArc = node;\n            break;\n          }\n          node = node.R;\n        } else {\n          if (dxl > -ε) {\n            lArc = node.P;\n            rArc = node;\n          } else if (dxr > -ε) {\n            lArc = node;\n            rArc = node.N;\n          } else {\n            lArc = rArc = node;\n          }\n          break;\n        }\n      }\n    }\n    var newArc = d3_geom_voronoiCreateBeach(site);\n    d3_geom_voronoiBeaches.insert(lArc, newArc);\n    if (!lArc && !rArc) return;\n    if (lArc === rArc) {\n      d3_geom_voronoiDetachCircle(lArc);\n      rArc = d3_geom_voronoiCreateBeach(lArc.site);\n      d3_geom_voronoiBeaches.insert(newArc, rArc);\n      newArc.edge = rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      d3_geom_voronoiAttachCircle(lArc);\n      d3_geom_voronoiAttachCircle(rArc);\n      return;\n    }\n    if (!rArc) {\n      newArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      return;\n    }\n    d3_geom_voronoiDetachCircle(lArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var lSite = lArc.site, ax = lSite.x, ay = lSite.y, bx = site.x - ax, by = site.y - ay, rSite = rArc.site, cx = rSite.x - ax, cy = rSite.y - ay, d = 2 * (bx * cy - by * cx), hb = bx * bx + by * by, hc = cx * cx + cy * cy, vertex = {\n      x: (cy * hb - by * hc) / d + ax,\n      y: (bx * hc - cx * hb) / d + ay\n    };\n    d3_geom_voronoiSetEdgeEnd(rArc.edge, lSite, rSite, vertex);\n    newArc.edge = d3_geom_voronoiCreateEdge(lSite, site, null, vertex);\n    rArc.edge = d3_geom_voronoiCreateEdge(site, rSite, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n  function d3_geom_voronoiLeftBreakPoint(arc, directrix) {\n    var site = arc.site, rfocx = site.x, rfocy = site.y, pby2 = rfocy - directrix;\n    if (!pby2) return rfocx;\n    var lArc = arc.P;\n    if (!lArc) return -Infinity;\n    site = lArc.site;\n    var lfocx = site.x, lfocy = site.y, plby2 = lfocy - directrix;\n    if (!plby2) return lfocx;\n    var hl = lfocx - rfocx, aby2 = 1 / pby2 - 1 / plby2, b = hl / plby2;\n    if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n    return (rfocx + lfocx) / 2;\n  }\n  function d3_geom_voronoiRightBreakPoint(arc, directrix) {\n    var rArc = arc.N;\n    if (rArc) return d3_geom_voronoiLeftBreakPoint(rArc, directrix);\n    var site = arc.site;\n    return site.y === directrix ? site.x : Infinity;\n  }\n  function d3_geom_voronoiCell(site) {\n    this.site = site;\n    this.edges = [];\n  }\n  d3_geom_voronoiCell.prototype.prepare = function() {\n    var halfEdges = this.edges, iHalfEdge = halfEdges.length, edge;\n    while (iHalfEdge--) {\n      edge = halfEdges[iHalfEdge].edge;\n      if (!edge.b || !edge.a) halfEdges.splice(iHalfEdge, 1);\n    }\n    halfEdges.sort(d3_geom_voronoiHalfEdgeOrder);\n    return halfEdges.length;\n  };\n  function d3_geom_voronoiCloseCells(extent) {\n    var x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], x2, y2, x3, y3, cells = d3_geom_voronoiCells, iCell = cells.length, cell, iHalfEdge, halfEdges, nHalfEdges, start, end;\n    while (iCell--) {\n      cell = cells[iCell];\n      if (!cell || !cell.prepare()) continue;\n      halfEdges = cell.edges;\n      nHalfEdges = halfEdges.length;\n      iHalfEdge = 0;\n      while (iHalfEdge < nHalfEdges) {\n        end = halfEdges[iHalfEdge].end(), x3 = end.x, y3 = end.y;\n        start = halfEdges[++iHalfEdge % nHalfEdges].start(), x2 = start.x, y2 = start.y;\n        if (abs(x3 - x2) > ε || abs(y3 - y2) > ε) {\n          halfEdges.splice(iHalfEdge, 0, new d3_geom_voronoiHalfEdge(d3_geom_voronoiCreateBorderEdge(cell.site, end, abs(x3 - x0) < ε && y1 - y3 > ε ? {\n            x: x0,\n            y: abs(x2 - x0) < ε ? y2 : y1\n          } : abs(y3 - y1) < ε && x1 - x3 > ε ? {\n            x: abs(y2 - y1) < ε ? x2 : x1,\n            y: y1\n          } : abs(x3 - x1) < ε && y3 - y0 > ε ? {\n            x: x1,\n            y: abs(x2 - x1) < ε ? y2 : y0\n          } : abs(y3 - y0) < ε && x3 - x0 > ε ? {\n            x: abs(y2 - y0) < ε ? x2 : x0,\n            y: y0\n          } : null), cell.site, null));\n          ++nHalfEdges;\n        }\n      }\n    }\n  }\n  function d3_geom_voronoiHalfEdgeOrder(a, b) {\n    return b.angle - a.angle;\n  }\n  function d3_geom_voronoiCircle() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.x = this.y = this.arc = this.site = this.cy = null;\n  }\n  function d3_geom_voronoiAttachCircle(arc) {\n    var lArc = arc.P, rArc = arc.N;\n    if (!lArc || !rArc) return;\n    var lSite = lArc.site, cSite = arc.site, rSite = rArc.site;\n    if (lSite === rSite) return;\n    var bx = cSite.x, by = cSite.y, ax = lSite.x - bx, ay = lSite.y - by, cx = rSite.x - bx, cy = rSite.y - by;\n    var d = 2 * (ax * cy - ay * cx);\n    if (d >= -ε2) return;\n    var ha = ax * ax + ay * ay, hc = cx * cx + cy * cy, x = (cy * ha - ay * hc) / d, y = (ax * hc - cx * ha) / d, cy = y + by;\n    var circle = d3_geom_voronoiCirclePool.pop() || new d3_geom_voronoiCircle();\n    circle.arc = arc;\n    circle.site = cSite;\n    circle.x = x + bx;\n    circle.y = cy + Math.sqrt(x * x + y * y);\n    circle.cy = cy;\n    arc.circle = circle;\n    var before = null, node = d3_geom_voronoiCircles._;\n    while (node) {\n      if (circle.y < node.y || circle.y === node.y && circle.x <= node.x) {\n        if (node.L) node = node.L; else {\n          before = node.P;\n          break;\n        }\n      } else {\n        if (node.R) node = node.R; else {\n          before = node;\n          break;\n        }\n      }\n    }\n    d3_geom_voronoiCircles.insert(before, circle);\n    if (!before) d3_geom_voronoiFirstCircle = circle;\n  }\n  function d3_geom_voronoiDetachCircle(arc) {\n    var circle = arc.circle;\n    if (circle) {\n      if (!circle.P) d3_geom_voronoiFirstCircle = circle.N;\n      d3_geom_voronoiCircles.remove(circle);\n      d3_geom_voronoiCirclePool.push(circle);\n      d3_geom_voronoiRedBlackNode(circle);\n      arc.circle = null;\n    }\n  }\n  function d3_geom_voronoiClipEdges(extent) {\n    var edges = d3_geom_voronoiEdges, clip = d3_geom_clipLine(extent[0][0], extent[0][1], extent[1][0], extent[1][1]), i = edges.length, e;\n    while (i--) {\n      e = edges[i];\n      if (!d3_geom_voronoiConnectEdge(e, extent) || !clip(e) || abs(e.a.x - e.b.x) < ε && abs(e.a.y - e.b.y) < ε) {\n        e.a = e.b = null;\n        edges.splice(i, 1);\n      }\n    }\n  }\n  function d3_geom_voronoiConnectEdge(edge, extent) {\n    var vb = edge.b;\n    if (vb) return true;\n    var va = edge.a, x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], lSite = edge.l, rSite = edge.r, lx = lSite.x, ly = lSite.y, rx = rSite.x, ry = rSite.y, fx = (lx + rx) / 2, fy = (ly + ry) / 2, fm, fb;\n    if (ry === ly) {\n      if (fx < x0 || fx >= x1) return;\n      if (lx > rx) {\n        if (!va) va = {\n          x: fx,\n          y: y0\n        }; else if (va.y >= y1) return;\n        vb = {\n          x: fx,\n          y: y1\n        };\n      } else {\n        if (!va) va = {\n          x: fx,\n          y: y1\n        }; else if (va.y < y0) return;\n        vb = {\n          x: fx,\n          y: y0\n        };\n      }\n    } else {\n      fm = (lx - rx) / (ry - ly);\n      fb = fy - fm * fx;\n      if (fm < -1 || fm > 1) {\n        if (lx > rx) {\n          if (!va) va = {\n            x: (y0 - fb) / fm,\n            y: y0\n          }; else if (va.y >= y1) return;\n          vb = {\n            x: (y1 - fb) / fm,\n            y: y1\n          };\n        } else {\n          if (!va) va = {\n            x: (y1 - fb) / fm,\n            y: y1\n          }; else if (va.y < y0) return;\n          vb = {\n            x: (y0 - fb) / fm,\n            y: y0\n          };\n        }\n      } else {\n        if (ly < ry) {\n          if (!va) va = {\n            x: x0,\n            y: fm * x0 + fb\n          }; else if (va.x >= x1) return;\n          vb = {\n            x: x1,\n            y: fm * x1 + fb\n          };\n        } else {\n          if (!va) va = {\n            x: x1,\n            y: fm * x1 + fb\n          }; else if (va.x < x0) return;\n          vb = {\n            x: x0,\n            y: fm * x0 + fb\n          };\n        }\n      }\n    }\n    edge.a = va;\n    edge.b = vb;\n    return true;\n  }\n  function d3_geom_voronoiEdge(lSite, rSite) {\n    this.l = lSite;\n    this.r = rSite;\n    this.a = this.b = null;\n  }\n  function d3_geom_voronoiCreateEdge(lSite, rSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, rSite);\n    d3_geom_voronoiEdges.push(edge);\n    if (va) d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, va);\n    if (vb) d3_geom_voronoiSetEdgeEnd(edge, rSite, lSite, vb);\n    d3_geom_voronoiCells[lSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, lSite, rSite));\n    d3_geom_voronoiCells[rSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, rSite, lSite));\n    return edge;\n  }\n  function d3_geom_voronoiCreateBorderEdge(lSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, null);\n    edge.a = va;\n    edge.b = vb;\n    d3_geom_voronoiEdges.push(edge);\n    return edge;\n  }\n  function d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, vertex) {\n    if (!edge.a && !edge.b) {\n      edge.a = vertex;\n      edge.l = lSite;\n      edge.r = rSite;\n    } else if (edge.l === rSite) {\n      edge.b = vertex;\n    } else {\n      edge.a = vertex;\n    }\n  }\n  function d3_geom_voronoiHalfEdge(edge, lSite, rSite) {\n    var va = edge.a, vb = edge.b;\n    this.edge = edge;\n    this.site = lSite;\n    this.angle = rSite ? Math.atan2(rSite.y - lSite.y, rSite.x - lSite.x) : edge.l === lSite ? Math.atan2(vb.x - va.x, va.y - vb.y) : Math.atan2(va.x - vb.x, vb.y - va.y);\n  }\n  d3_geom_voronoiHalfEdge.prototype = {\n    start: function() {\n      return this.edge.l === this.site ? this.edge.a : this.edge.b;\n    },\n    end: function() {\n      return this.edge.l === this.site ? this.edge.b : this.edge.a;\n    }\n  };\n  function d3_geom_voronoiRedBlackTree() {\n    this._ = null;\n  }\n  function d3_geom_voronoiRedBlackNode(node) {\n    node.U = node.C = node.L = node.R = node.P = node.N = null;\n  }\n  d3_geom_voronoiRedBlackTree.prototype = {\n    insert: function(after, node) {\n      var parent, grandpa, uncle;\n      if (after) {\n        node.P = after;\n        node.N = after.N;\n        if (after.N) after.N.P = node;\n        after.N = node;\n        if (after.R) {\n          after = after.R;\n          while (after.L) after = after.L;\n          after.L = node;\n        } else {\n          after.R = node;\n        }\n        parent = after;\n      } else if (this._) {\n        after = d3_geom_voronoiRedBlackFirst(this._);\n        node.P = null;\n        node.N = after;\n        after.P = after.L = node;\n        parent = after;\n      } else {\n        node.P = node.N = null;\n        this._ = node;\n        parent = null;\n      }\n      node.L = node.R = null;\n      node.U = parent;\n      node.C = true;\n      after = node;\n      while (parent && parent.C) {\n        grandpa = parent.U;\n        if (parent === grandpa.L) {\n          uncle = grandpa.R;\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.R) {\n              d3_geom_voronoiRedBlackRotateLeft(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, grandpa);\n          }\n        } else {\n          uncle = grandpa.L;\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.L) {\n              d3_geom_voronoiRedBlackRotateRight(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, grandpa);\n          }\n        }\n        parent = after.U;\n      }\n      this._.C = false;\n    },\n    remove: function(node) {\n      if (node.N) node.N.P = node.P;\n      if (node.P) node.P.N = node.N;\n      node.N = node.P = null;\n      var parent = node.U, sibling, left = node.L, right = node.R, next, red;\n      if (!left) next = right; else if (!right) next = left; else next = d3_geom_voronoiRedBlackFirst(right);\n      if (parent) {\n        if (parent.L === node) parent.L = next; else parent.R = next;\n      } else {\n        this._ = next;\n      }\n      if (left && right) {\n        red = next.C;\n        next.C = node.C;\n        next.L = left;\n        left.U = next;\n        if (next !== right) {\n          parent = next.U;\n          next.U = node.U;\n          node = next.R;\n          parent.L = node;\n          next.R = right;\n          right.U = next;\n        } else {\n          next.U = parent;\n          parent = next;\n          node = next.R;\n        }\n      } else {\n        red = node.C;\n        node = next;\n      }\n      if (node) node.U = parent;\n      if (red) return;\n      if (node && node.C) {\n        node.C = false;\n        return;\n      }\n      do {\n        if (node === this._) break;\n        if (node === parent.L) {\n          sibling = parent.R;\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            sibling = parent.R;\n          }\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.R || !sibling.R.C) {\n              sibling.L.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateRight(this, sibling);\n              sibling = parent.R;\n            }\n            sibling.C = parent.C;\n            parent.C = sibling.R.C = false;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            node = this._;\n            break;\n          }\n        } else {\n          sibling = parent.L;\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            sibling = parent.L;\n          }\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.L || !sibling.L.C) {\n              sibling.R.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateLeft(this, sibling);\n              sibling = parent.L;\n            }\n            sibling.C = parent.C;\n            parent.C = sibling.L.C = false;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            node = this._;\n            break;\n          }\n        }\n        sibling.C = true;\n        node = parent;\n        parent = parent.U;\n      } while (!node.C);\n      if (node) node.C = false;\n    }\n  };\n  function d3_geom_voronoiRedBlackRotateLeft(tree, node) {\n    var p = node, q = node.R, parent = p.U;\n    if (parent) {\n      if (parent.L === p) parent.L = q; else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n    q.U = parent;\n    p.U = q;\n    p.R = q.L;\n    if (p.R) p.R.U = p;\n    q.L = p;\n  }\n  function d3_geom_voronoiRedBlackRotateRight(tree, node) {\n    var p = node, q = node.L, parent = p.U;\n    if (parent) {\n      if (parent.L === p) parent.L = q; else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n    q.U = parent;\n    p.U = q;\n    p.L = q.R;\n    if (p.L) p.L.U = p;\n    q.R = p;\n  }\n  function d3_geom_voronoiRedBlackFirst(node) {\n    while (node.L) node = node.L;\n    return node;\n  }\n  function d3_geom_voronoi(sites, bbox) {\n    var site = sites.sort(d3_geom_voronoiVertexOrder).pop(), x0, y0, circle;\n    d3_geom_voronoiEdges = [];\n    d3_geom_voronoiCells = new Array(sites.length);\n    d3_geom_voronoiBeaches = new d3_geom_voronoiRedBlackTree();\n    d3_geom_voronoiCircles = new d3_geom_voronoiRedBlackTree();\n    while (true) {\n      circle = d3_geom_voronoiFirstCircle;\n      if (site && (!circle || site.y < circle.y || site.y === circle.y && site.x < circle.x)) {\n        if (site.x !== x0 || site.y !== y0) {\n          d3_geom_voronoiCells[site.i] = new d3_geom_voronoiCell(site);\n          d3_geom_voronoiAddBeach(site);\n          x0 = site.x, y0 = site.y;\n        }\n        site = sites.pop();\n      } else if (circle) {\n        d3_geom_voronoiRemoveBeach(circle.arc);\n      } else {\n        break;\n      }\n    }\n    if (bbox) d3_geom_voronoiClipEdges(bbox), d3_geom_voronoiCloseCells(bbox);\n    var diagram = {\n      cells: d3_geom_voronoiCells,\n      edges: d3_geom_voronoiEdges\n    };\n    d3_geom_voronoiBeaches = d3_geom_voronoiCircles = d3_geom_voronoiEdges = d3_geom_voronoiCells = null;\n    return diagram;\n  }\n  function d3_geom_voronoiVertexOrder(a, b) {\n    return b.y - a.y || b.x - a.x;\n  }\n  d3.geom.voronoi = function(points) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, fx = x, fy = y, clipExtent = d3_geom_voronoiClipExtent;\n    if (points) return voronoi(points);\n    function voronoi(data) {\n      var polygons = new Array(data.length), x0 = clipExtent[0][0], y0 = clipExtent[0][1], x1 = clipExtent[1][0], y1 = clipExtent[1][1];\n      d3_geom_voronoi(sites(data), clipExtent).cells.forEach(function(cell, i) {\n        var edges = cell.edges, site = cell.site, polygon = polygons[i] = edges.length ? edges.map(function(e) {\n          var s = e.start();\n          return [ s.x, s.y ];\n        }) : site.x >= x0 && site.x <= x1 && site.y >= y0 && site.y <= y1 ? [ [ x0, y1 ], [ x1, y1 ], [ x1, y0 ], [ x0, y0 ] ] : [];\n        polygon.point = data[i];\n      });\n      return polygons;\n    }\n    function sites(data) {\n      return data.map(function(d, i) {\n        return {\n          x: Math.round(fx(d, i) / ε) * ε,\n          y: Math.round(fy(d, i) / ε) * ε,\n          i: i\n        };\n      });\n    }\n    voronoi.links = function(data) {\n      return d3_geom_voronoi(sites(data)).edges.filter(function(edge) {\n        return edge.l && edge.r;\n      }).map(function(edge) {\n        return {\n          source: data[edge.l.i],\n          target: data[edge.r.i]\n        };\n      });\n    };\n    voronoi.triangles = function(data) {\n      var triangles = [];\n      d3_geom_voronoi(sites(data)).cells.forEach(function(cell, i) {\n        var site = cell.site, edges = cell.edges.sort(d3_geom_voronoiHalfEdgeOrder), j = -1, m = edges.length, e0, s0, e1 = edges[m - 1].edge, s1 = e1.l === site ? e1.r : e1.l;\n        while (++j < m) {\n          e0 = e1;\n          s0 = s1;\n          e1 = edges[j].edge;\n          s1 = e1.l === site ? e1.r : e1.l;\n          if (i < s0.i && i < s1.i && d3_geom_voronoiTriangleArea(site, s0, s1) < 0) {\n            triangles.push([ data[i], data[s0.i], data[s1.i] ]);\n          }\n        }\n      });\n      return triangles;\n    };\n    voronoi.x = function(_) {\n      return arguments.length ? (fx = d3_functor(x = _), voronoi) : x;\n    };\n    voronoi.y = function(_) {\n      return arguments.length ? (fy = d3_functor(y = _), voronoi) : y;\n    };\n    voronoi.clipExtent = function(_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent;\n      clipExtent = _ == null ? d3_geom_voronoiClipExtent : _;\n      return voronoi;\n    };\n    voronoi.size = function(_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent && clipExtent[1];\n      return voronoi.clipExtent(_ && [ [ 0, 0 ], _ ]);\n    };\n    return voronoi;\n  };\n  var d3_geom_voronoiClipExtent = [ [ -1e6, -1e6 ], [ 1e6, 1e6 ] ];\n  function d3_geom_voronoiTriangleArea(a, b, c) {\n    return (a.x - c.x) * (b.y - a.y) - (a.x - b.x) * (c.y - a.y);\n  }\n  d3.geom.delaunay = function(vertices) {\n    return d3.geom.voronoi().triangles(vertices);\n  };\n  d3.geom.quadtree = function(points, x1, y1, x2, y2) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, compat;\n    if (compat = arguments.length) {\n      x = d3_geom_quadtreeCompatX;\n      y = d3_geom_quadtreeCompatY;\n      if (compat === 3) {\n        y2 = y1;\n        x2 = x1;\n        y1 = x1 = 0;\n      }\n      return quadtree(points);\n    }\n    function quadtree(data) {\n      var d, fx = d3_functor(x), fy = d3_functor(y), xs, ys, i, n, x1_, y1_, x2_, y2_;\n      if (x1 != null) {\n        x1_ = x1, y1_ = y1, x2_ = x2, y2_ = y2;\n      } else {\n        x2_ = y2_ = -(x1_ = y1_ = Infinity);\n        xs = [], ys = [];\n        n = data.length;\n        if (compat) for (i = 0; i < n; ++i) {\n          d = data[i];\n          if (d.x < x1_) x1_ = d.x;\n          if (d.y < y1_) y1_ = d.y;\n          if (d.x > x2_) x2_ = d.x;\n          if (d.y > y2_) y2_ = d.y;\n          xs.push(d.x);\n          ys.push(d.y);\n        } else for (i = 0; i < n; ++i) {\n          var x_ = +fx(d = data[i], i), y_ = +fy(d, i);\n          if (x_ < x1_) x1_ = x_;\n          if (y_ < y1_) y1_ = y_;\n          if (x_ > x2_) x2_ = x_;\n          if (y_ > y2_) y2_ = y_;\n          xs.push(x_);\n          ys.push(y_);\n        }\n      }\n      var dx = x2_ - x1_, dy = y2_ - y1_;\n      if (dx > dy) y2_ = y1_ + dx; else x2_ = x1_ + dy;\n      function insert(n, d, x, y, x1, y1, x2, y2) {\n        if (isNaN(x) || isNaN(y)) return;\n        if (n.leaf) {\n          var nx = n.x, ny = n.y;\n          if (nx != null) {\n            if (abs(nx - x) + abs(ny - y) < .01) {\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            } else {\n              var nPoint = n.point;\n              n.x = n.y = n.point = null;\n              insertChild(n, nPoint, nx, ny, x1, y1, x2, y2);\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            }\n          } else {\n            n.x = x, n.y = y, n.point = d;\n          }\n        } else {\n          insertChild(n, d, x, y, x1, y1, x2, y2);\n        }\n      }\n      function insertChild(n, d, x, y, x1, y1, x2, y2) {\n        var xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym, i = below << 1 | right;\n        n.leaf = false;\n        n = n.nodes[i] || (n.nodes[i] = d3_geom_quadtreeNode());\n        if (right) x1 = xm; else x2 = xm;\n        if (below) y1 = ym; else y2 = ym;\n        insert(n, d, x, y, x1, y1, x2, y2);\n      }\n      var root = d3_geom_quadtreeNode();\n      root.add = function(d) {\n        insert(root, d, +fx(d, ++i), +fy(d, i), x1_, y1_, x2_, y2_);\n      };\n      root.visit = function(f) {\n        d3_geom_quadtreeVisit(f, root, x1_, y1_, x2_, y2_);\n      };\n      root.find = function(point) {\n        return d3_geom_quadtreeFind(root, point[0], point[1], x1_, y1_, x2_, y2_);\n      };\n      i = -1;\n      if (x1 == null) {\n        while (++i < n) {\n          insert(root, data[i], xs[i], ys[i], x1_, y1_, x2_, y2_);\n        }\n        --i;\n      } else data.forEach(root.add);\n      xs = ys = data = d = null;\n      return root;\n    }\n    quadtree.x = function(_) {\n      return arguments.length ? (x = _, quadtree) : x;\n    };\n    quadtree.y = function(_) {\n      return arguments.length ? (y = _, quadtree) : y;\n    };\n    quadtree.extent = function(_) {\n      if (!arguments.length) return x1 == null ? null : [ [ x1, y1 ], [ x2, y2 ] ];\n      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = +_[0][0], y1 = +_[0][1], x2 = +_[1][0], \n      y2 = +_[1][1];\n      return quadtree;\n    };\n    quadtree.size = function(_) {\n      if (!arguments.length) return x1 == null ? null : [ x2 - x1, y2 - y1 ];\n      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = y1 = 0, x2 = +_[0], y2 = +_[1];\n      return quadtree;\n    };\n    return quadtree;\n  };\n  function d3_geom_quadtreeCompatX(d) {\n    return d.x;\n  }\n  function d3_geom_quadtreeCompatY(d) {\n    return d.y;\n  }\n  function d3_geom_quadtreeNode() {\n    return {\n      leaf: true,\n      nodes: [],\n      point: null,\n      x: null,\n      y: null\n    };\n  }\n  function d3_geom_quadtreeVisit(f, node, x1, y1, x2, y2) {\n    if (!f(node, x1, y1, x2, y2)) {\n      var sx = (x1 + x2) * .5, sy = (y1 + y2) * .5, children = node.nodes;\n      if (children[0]) d3_geom_quadtreeVisit(f, children[0], x1, y1, sx, sy);\n      if (children[1]) d3_geom_quadtreeVisit(f, children[1], sx, y1, x2, sy);\n      if (children[2]) d3_geom_quadtreeVisit(f, children[2], x1, sy, sx, y2);\n      if (children[3]) d3_geom_quadtreeVisit(f, children[3], sx, sy, x2, y2);\n    }\n  }\n  function d3_geom_quadtreeFind(root, x, y, x0, y0, x3, y3) {\n    var minDistance2 = Infinity, closestPoint;\n    (function find(node, x1, y1, x2, y2) {\n      if (x1 > x3 || y1 > y3 || x2 < x0 || y2 < y0) return;\n      if (point = node.point) {\n        var point, dx = x - node.x, dy = y - node.y, distance2 = dx * dx + dy * dy;\n        if (distance2 < minDistance2) {\n          var distance = Math.sqrt(minDistance2 = distance2);\n          x0 = x - distance, y0 = y - distance;\n          x3 = x + distance, y3 = y + distance;\n          closestPoint = point;\n        }\n      }\n      var children = node.nodes, xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym;\n      for (var i = below << 1 | right, j = i + 4; i < j; ++i) {\n        if (node = children[i & 3]) switch (i & 3) {\n         case 0:\n          find(node, x1, y1, xm, ym);\n          break;\n\n         case 1:\n          find(node, xm, y1, x2, ym);\n          break;\n\n         case 2:\n          find(node, x1, ym, xm, y2);\n          break;\n\n         case 3:\n          find(node, xm, ym, x2, y2);\n          break;\n        }\n      }\n    })(root, x0, y0, x3, y3);\n    return closestPoint;\n  }\n  d3.interpolateRgb = d3_interpolateRgb;\n  function d3_interpolateRgb(a, b) {\n    a = d3.rgb(a);\n    b = d3.rgb(b);\n    var ar = a.r, ag = a.g, ab = a.b, br = b.r - ar, bg = b.g - ag, bb = b.b - ab;\n    return function(t) {\n      return \"#\" + d3_rgb_hex(Math.round(ar + br * t)) + d3_rgb_hex(Math.round(ag + bg * t)) + d3_rgb_hex(Math.round(ab + bb * t));\n    };\n  }\n  d3.interpolateObject = d3_interpolateObject;\n  function d3_interpolateObject(a, b) {\n    var i = {}, c = {}, k;\n    for (k in a) {\n      if (k in b) {\n        i[k] = d3_interpolate(a[k], b[k]);\n      } else {\n        c[k] = a[k];\n      }\n    }\n    for (k in b) {\n      if (!(k in a)) {\n        c[k] = b[k];\n      }\n    }\n    return function(t) {\n      for (k in i) c[k] = i[k](t);\n      return c;\n    };\n  }\n  d3.interpolateNumber = d3_interpolateNumber;\n  function d3_interpolateNumber(a, b) {\n    a = +a, b = +b;\n    return function(t) {\n      return a * (1 - t) + b * t;\n    };\n  }\n  d3.interpolateString = d3_interpolateString;\n  function d3_interpolateString(a, b) {\n    var bi = d3_interpolate_numberA.lastIndex = d3_interpolate_numberB.lastIndex = 0, am, bm, bs, i = -1, s = [], q = [];\n    a = a + \"\", b = b + \"\";\n    while ((am = d3_interpolate_numberA.exec(a)) && (bm = d3_interpolate_numberB.exec(b))) {\n      if ((bs = bm.index) > bi) {\n        bs = b.slice(bi, bs);\n        if (s[i]) s[i] += bs; else s[++i] = bs;\n      }\n      if ((am = am[0]) === (bm = bm[0])) {\n        if (s[i]) s[i] += bm; else s[++i] = bm;\n      } else {\n        s[++i] = null;\n        q.push({\n          i: i,\n          x: d3_interpolateNumber(am, bm)\n        });\n      }\n      bi = d3_interpolate_numberB.lastIndex;\n    }\n    if (bi < b.length) {\n      bs = b.slice(bi);\n      if (s[i]) s[i] += bs; else s[++i] = bs;\n    }\n    return s.length < 2 ? q[0] ? (b = q[0].x, function(t) {\n      return b(t) + \"\";\n    }) : function() {\n      return b;\n    } : (b = q.length, function(t) {\n      for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    });\n  }\n  var d3_interpolate_numberA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g, d3_interpolate_numberB = new RegExp(d3_interpolate_numberA.source, \"g\");\n  d3.interpolate = d3_interpolate;\n  function d3_interpolate(a, b) {\n    var i = d3.interpolators.length, f;\n    while (--i >= 0 && !(f = d3.interpolators[i](a, b))) ;\n    return f;\n  }\n  d3.interpolators = [ function(a, b) {\n    var t = typeof b;\n    return (t === \"string\" ? d3_rgb_names.has(b.toLowerCase()) || /^(#|rgb\\(|hsl\\()/i.test(b) ? d3_interpolateRgb : d3_interpolateString : b instanceof d3_color ? d3_interpolateRgb : Array.isArray(b) ? d3_interpolateArray : t === \"object\" && isNaN(b) ? d3_interpolateObject : d3_interpolateNumber)(a, b);\n  } ];\n  d3.interpolateArray = d3_interpolateArray;\n  function d3_interpolateArray(a, b) {\n    var x = [], c = [], na = a.length, nb = b.length, n0 = Math.min(a.length, b.length), i;\n    for (i = 0; i < n0; ++i) x.push(d3_interpolate(a[i], b[i]));\n    for (;i < na; ++i) c[i] = a[i];\n    for (;i < nb; ++i) c[i] = b[i];\n    return function(t) {\n      for (i = 0; i < n0; ++i) c[i] = x[i](t);\n      return c;\n    };\n  }\n  var d3_ease_default = function() {\n    return d3_identity;\n  };\n  var d3_ease = d3.map({\n    linear: d3_ease_default,\n    poly: d3_ease_poly,\n    quad: function() {\n      return d3_ease_quad;\n    },\n    cubic: function() {\n      return d3_ease_cubic;\n    },\n    sin: function() {\n      return d3_ease_sin;\n    },\n    exp: function() {\n      return d3_ease_exp;\n    },\n    circle: function() {\n      return d3_ease_circle;\n    },\n    elastic: d3_ease_elastic,\n    back: d3_ease_back,\n    bounce: function() {\n      return d3_ease_bounce;\n    }\n  });\n  var d3_ease_mode = d3.map({\n    \"in\": d3_identity,\n    out: d3_ease_reverse,\n    \"in-out\": d3_ease_reflect,\n    \"out-in\": function(f) {\n      return d3_ease_reflect(d3_ease_reverse(f));\n    }\n  });\n  d3.ease = function(name) {\n    var i = name.indexOf(\"-\"), t = i >= 0 ? name.slice(0, i) : name, m = i >= 0 ? name.slice(i + 1) : \"in\";\n    t = d3_ease.get(t) || d3_ease_default;\n    m = d3_ease_mode.get(m) || d3_identity;\n    return d3_ease_clamp(m(t.apply(null, d3_arraySlice.call(arguments, 1))));\n  };\n  function d3_ease_clamp(f) {\n    return function(t) {\n      return t <= 0 ? 0 : t >= 1 ? 1 : f(t);\n    };\n  }\n  function d3_ease_reverse(f) {\n    return function(t) {\n      return 1 - f(1 - t);\n    };\n  }\n  function d3_ease_reflect(f) {\n    return function(t) {\n      return .5 * (t < .5 ? f(2 * t) : 2 - f(2 - 2 * t));\n    };\n  }\n  function d3_ease_quad(t) {\n    return t * t;\n  }\n  function d3_ease_cubic(t) {\n    return t * t * t;\n  }\n  function d3_ease_cubicInOut(t) {\n    if (t <= 0) return 0;\n    if (t >= 1) return 1;\n    var t2 = t * t, t3 = t2 * t;\n    return 4 * (t < .5 ? t3 : 3 * (t - t2) + t3 - .75);\n  }\n  function d3_ease_poly(e) {\n    return function(t) {\n      return Math.pow(t, e);\n    };\n  }\n  function d3_ease_sin(t) {\n    return 1 - Math.cos(t * halfπ);\n  }\n  function d3_ease_exp(t) {\n    return Math.pow(2, 10 * (t - 1));\n  }\n  function d3_ease_circle(t) {\n    return 1 - Math.sqrt(1 - t * t);\n  }\n  function d3_ease_elastic(a, p) {\n    var s;\n    if (arguments.length < 2) p = .45;\n    if (arguments.length) s = p / τ * Math.asin(1 / a); else a = 1, s = p / 4;\n    return function(t) {\n      return 1 + a * Math.pow(2, -10 * t) * Math.sin((t - s) * τ / p);\n    };\n  }\n  function d3_ease_back(s) {\n    if (!s) s = 1.70158;\n    return function(t) {\n      return t * t * ((s + 1) * t - s);\n    };\n  }\n  function d3_ease_bounce(t) {\n    return t < 1 / 2.75 ? 7.5625 * t * t : t < 2 / 2.75 ? 7.5625 * (t -= 1.5 / 2.75) * t + .75 : t < 2.5 / 2.75 ? 7.5625 * (t -= 2.25 / 2.75) * t + .9375 : 7.5625 * (t -= 2.625 / 2.75) * t + .984375;\n  }\n  d3.interpolateHcl = d3_interpolateHcl;\n  function d3_interpolateHcl(a, b) {\n    a = d3.hcl(a);\n    b = d3.hcl(b);\n    var ah = a.h, ac = a.c, al = a.l, bh = b.h - ah, bc = b.c - ac, bl = b.l - al;\n    if (isNaN(bc)) bc = 0, ac = isNaN(ac) ? b.c : ac;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n    return function(t) {\n      return d3_hcl_lab(ah + bh * t, ac + bc * t, al + bl * t) + \"\";\n    };\n  }\n  d3.interpolateHsl = d3_interpolateHsl;\n  function d3_interpolateHsl(a, b) {\n    a = d3.hsl(a);\n    b = d3.hsl(b);\n    var ah = a.h, as = a.s, al = a.l, bh = b.h - ah, bs = b.s - as, bl = b.l - al;\n    if (isNaN(bs)) bs = 0, as = isNaN(as) ? b.s : as;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n    return function(t) {\n      return d3_hsl_rgb(ah + bh * t, as + bs * t, al + bl * t) + \"\";\n    };\n  }\n  d3.interpolateLab = d3_interpolateLab;\n  function d3_interpolateLab(a, b) {\n    a = d3.lab(a);\n    b = d3.lab(b);\n    var al = a.l, aa = a.a, ab = a.b, bl = b.l - al, ba = b.a - aa, bb = b.b - ab;\n    return function(t) {\n      return d3_lab_rgb(al + bl * t, aa + ba * t, ab + bb * t) + \"\";\n    };\n  }\n  d3.interpolateRound = d3_interpolateRound;\n  function d3_interpolateRound(a, b) {\n    b -= a;\n    return function(t) {\n      return Math.round(a + b * t);\n    };\n  }\n  d3.transform = function(string) {\n    var g = d3_document.createElementNS(d3.ns.prefix.svg, \"g\");\n    return (d3.transform = function(string) {\n      if (string != null) {\n        g.setAttribute(\"transform\", string);\n        var t = g.transform.baseVal.consolidate();\n      }\n      return new d3_transform(t ? t.matrix : d3_transformIdentity);\n    })(string);\n  };\n  function d3_transform(m) {\n    var r0 = [ m.a, m.b ], r1 = [ m.c, m.d ], kx = d3_transformNormalize(r0), kz = d3_transformDot(r0, r1), ky = d3_transformNormalize(d3_transformCombine(r1, r0, -kz)) || 0;\n    if (r0[0] * r1[1] < r1[0] * r0[1]) {\n      r0[0] *= -1;\n      r0[1] *= -1;\n      kx *= -1;\n      kz *= -1;\n    }\n    this.rotate = (kx ? Math.atan2(r0[1], r0[0]) : Math.atan2(-r1[0], r1[1])) * d3_degrees;\n    this.translate = [ m.e, m.f ];\n    this.scale = [ kx, ky ];\n    this.skew = ky ? Math.atan2(kz, ky) * d3_degrees : 0;\n  }\n  d3_transform.prototype.toString = function() {\n    return \"translate(\" + this.translate + \")rotate(\" + this.rotate + \")skewX(\" + this.skew + \")scale(\" + this.scale + \")\";\n  };\n  function d3_transformDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1];\n  }\n  function d3_transformNormalize(a) {\n    var k = Math.sqrt(d3_transformDot(a, a));\n    if (k) {\n      a[0] /= k;\n      a[1] /= k;\n    }\n    return k;\n  }\n  function d3_transformCombine(a, b, k) {\n    a[0] += k * b[0];\n    a[1] += k * b[1];\n    return a;\n  }\n  var d3_transformIdentity = {\n    a: 1,\n    b: 0,\n    c: 0,\n    d: 1,\n    e: 0,\n    f: 0\n  };\n  d3.interpolateTransform = d3_interpolateTransform;\n  function d3_interpolateTransformPop(s) {\n    return s.length ? s.pop() + \",\" : \"\";\n  }\n  function d3_interpolateTranslate(ta, tb, s, q) {\n    if (ta[0] !== tb[0] || ta[1] !== tb[1]) {\n      var i = s.push(\"translate(\", null, \",\", null, \")\");\n      q.push({\n        i: i - 4,\n        x: d3_interpolateNumber(ta[0], tb[0])\n      }, {\n        i: i - 2,\n        x: d3_interpolateNumber(ta[1], tb[1])\n      });\n    } else if (tb[0] || tb[1]) {\n      s.push(\"translate(\" + tb + \")\");\n    }\n  }\n  function d3_interpolateRotate(ra, rb, s, q) {\n    if (ra !== rb) {\n      if (ra - rb > 180) rb += 360; else if (rb - ra > 180) ra += 360;\n      q.push({\n        i: s.push(d3_interpolateTransformPop(s) + \"rotate(\", null, \")\") - 2,\n        x: d3_interpolateNumber(ra, rb)\n      });\n    } else if (rb) {\n      s.push(d3_interpolateTransformPop(s) + \"rotate(\" + rb + \")\");\n    }\n  }\n  function d3_interpolateSkew(wa, wb, s, q) {\n    if (wa !== wb) {\n      q.push({\n        i: s.push(d3_interpolateTransformPop(s) + \"skewX(\", null, \")\") - 2,\n        x: d3_interpolateNumber(wa, wb)\n      });\n    } else if (wb) {\n      s.push(d3_interpolateTransformPop(s) + \"skewX(\" + wb + \")\");\n    }\n  }\n  function d3_interpolateScale(ka, kb, s, q) {\n    if (ka[0] !== kb[0] || ka[1] !== kb[1]) {\n      var i = s.push(d3_interpolateTransformPop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({\n        i: i - 4,\n        x: d3_interpolateNumber(ka[0], kb[0])\n      }, {\n        i: i - 2,\n        x: d3_interpolateNumber(ka[1], kb[1])\n      });\n    } else if (kb[0] !== 1 || kb[1] !== 1) {\n      s.push(d3_interpolateTransformPop(s) + \"scale(\" + kb + \")\");\n    }\n  }\n  function d3_interpolateTransform(a, b) {\n    var s = [], q = [];\n    a = d3.transform(a), b = d3.transform(b);\n    d3_interpolateTranslate(a.translate, b.translate, s, q);\n    d3_interpolateRotate(a.rotate, b.rotate, s, q);\n    d3_interpolateSkew(a.skew, b.skew, s, q);\n    d3_interpolateScale(a.scale, b.scale, s, q);\n    a = b = null;\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  }\n  function d3_uninterpolateNumber(a, b) {\n    b = (b -= a = +a) || 1 / b;\n    return function(x) {\n      return (x - a) / b;\n    };\n  }\n  function d3_uninterpolateClamp(a, b) {\n    b = (b -= a = +a) || 1 / b;\n    return function(x) {\n      return Math.max(0, Math.min(1, (x - a) / b));\n    };\n  }\n  d3.layout = {};\n  d3.layout.bundle = function() {\n    return function(links) {\n      var paths = [], i = -1, n = links.length;\n      while (++i < n) paths.push(d3_layout_bundlePath(links[i]));\n      return paths;\n    };\n  };\n  function d3_layout_bundlePath(link) {\n    var start = link.source, end = link.target, lca = d3_layout_bundleLeastCommonAncestor(start, end), points = [ start ];\n    while (start !== lca) {\n      start = start.parent;\n      points.push(start);\n    }\n    var k = points.length;\n    while (end !== lca) {\n      points.splice(k, 0, end);\n      end = end.parent;\n    }\n    return points;\n  }\n  function d3_layout_bundleAncestors(node) {\n    var ancestors = [], parent = node.parent;\n    while (parent != null) {\n      ancestors.push(node);\n      node = parent;\n      parent = parent.parent;\n    }\n    ancestors.push(node);\n    return ancestors;\n  }\n  function d3_layout_bundleLeastCommonAncestor(a, b) {\n    if (a === b) return a;\n    var aNodes = d3_layout_bundleAncestors(a), bNodes = d3_layout_bundleAncestors(b), aNode = aNodes.pop(), bNode = bNodes.pop(), sharedNode = null;\n    while (aNode === bNode) {\n      sharedNode = aNode;\n      aNode = aNodes.pop();\n      bNode = bNodes.pop();\n    }\n    return sharedNode;\n  }\n  d3.layout.chord = function() {\n    var chord = {}, chords, groups, matrix, n, padding = 0, sortGroups, sortSubgroups, sortChords;\n    function relayout() {\n      var subgroups = {}, groupSums = [], groupIndex = d3.range(n), subgroupIndex = [], k, x, x0, i, j;\n      chords = [];\n      groups = [];\n      k = 0, i = -1;\n      while (++i < n) {\n        x = 0, j = -1;\n        while (++j < n) {\n          x += matrix[i][j];\n        }\n        groupSums.push(x);\n        subgroupIndex.push(d3.range(n));\n        k += x;\n      }\n      if (sortGroups) {\n        groupIndex.sort(function(a, b) {\n          return sortGroups(groupSums[a], groupSums[b]);\n        });\n      }\n      if (sortSubgroups) {\n        subgroupIndex.forEach(function(d, i) {\n          d.sort(function(a, b) {\n            return sortSubgroups(matrix[i][a], matrix[i][b]);\n          });\n        });\n      }\n      k = (τ - padding * n) / k;\n      x = 0, i = -1;\n      while (++i < n) {\n        x0 = x, j = -1;\n        while (++j < n) {\n          var di = groupIndex[i], dj = subgroupIndex[di][j], v = matrix[di][dj], a0 = x, a1 = x += v * k;\n          subgroups[di + \"-\" + dj] = {\n            index: di,\n            subindex: dj,\n            startAngle: a0,\n            endAngle: a1,\n            value: v\n          };\n        }\n        groups[di] = {\n          index: di,\n          startAngle: x0,\n          endAngle: x,\n          value: groupSums[di]\n        };\n        x += padding;\n      }\n      i = -1;\n      while (++i < n) {\n        j = i - 1;\n        while (++j < n) {\n          var source = subgroups[i + \"-\" + j], target = subgroups[j + \"-\" + i];\n          if (source.value || target.value) {\n            chords.push(source.value < target.value ? {\n              source: target,\n              target: source\n            } : {\n              source: source,\n              target: target\n            });\n          }\n        }\n      }\n      if (sortChords) resort();\n    }\n    function resort() {\n      chords.sort(function(a, b) {\n        return sortChords((a.source.value + a.target.value) / 2, (b.source.value + b.target.value) / 2);\n      });\n    }\n    chord.matrix = function(x) {\n      if (!arguments.length) return matrix;\n      n = (matrix = x) && matrix.length;\n      chords = groups = null;\n      return chord;\n    };\n    chord.padding = function(x) {\n      if (!arguments.length) return padding;\n      padding = x;\n      chords = groups = null;\n      return chord;\n    };\n    chord.sortGroups = function(x) {\n      if (!arguments.length) return sortGroups;\n      sortGroups = x;\n      chords = groups = null;\n      return chord;\n    };\n    chord.sortSubgroups = function(x) {\n      if (!arguments.length) return sortSubgroups;\n      sortSubgroups = x;\n      chords = null;\n      return chord;\n    };\n    chord.sortChords = function(x) {\n      if (!arguments.length) return sortChords;\n      sortChords = x;\n      if (chords) resort();\n      return chord;\n    };\n    chord.chords = function() {\n      if (!chords) relayout();\n      return chords;\n    };\n    chord.groups = function() {\n      if (!groups) relayout();\n      return groups;\n    };\n    return chord;\n  };\n  d3.layout.force = function() {\n    var force = {}, event = d3.dispatch(\"start\", \"tick\", \"end\"), timer, size = [ 1, 1 ], drag, alpha, friction = .9, linkDistance = d3_layout_forceLinkDistance, linkStrength = d3_layout_forceLinkStrength, charge = -30, chargeDistance2 = d3_layout_forceChargeDistance2, gravity = .1, theta2 = .64, nodes = [], links = [], distances, strengths, charges;\n    function repulse(node) {\n      return function(quad, x1, _, x2) {\n        if (quad.point !== node) {\n          var dx = quad.cx - node.x, dy = quad.cy - node.y, dw = x2 - x1, dn = dx * dx + dy * dy;\n          if (dw * dw / theta2 < dn) {\n            if (dn < chargeDistance2) {\n              var k = quad.charge / dn;\n              node.px -= dx * k;\n              node.py -= dy * k;\n            }\n            return true;\n          }\n          if (quad.point && dn && dn < chargeDistance2) {\n            var k = quad.pointCharge / dn;\n            node.px -= dx * k;\n            node.py -= dy * k;\n          }\n        }\n        return !quad.charge;\n      };\n    }\n    force.tick = function() {\n      if ((alpha *= .99) < .005) {\n        timer = null;\n        event.end({\n          type: \"end\",\n          alpha: alpha = 0\n        });\n        return true;\n      }\n      var n = nodes.length, m = links.length, q, i, o, s, t, l, k, x, y;\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        s = o.source;\n        t = o.target;\n        x = t.x - s.x;\n        y = t.y - s.y;\n        if (l = x * x + y * y) {\n          l = alpha * strengths[i] * ((l = Math.sqrt(l)) - distances[i]) / l;\n          x *= l;\n          y *= l;\n          t.x -= x * (k = s.weight + t.weight ? s.weight / (s.weight + t.weight) : .5);\n          t.y -= y * k;\n          s.x += x * (k = 1 - k);\n          s.y += y * k;\n        }\n      }\n      if (k = alpha * gravity) {\n        x = size[0] / 2;\n        y = size[1] / 2;\n        i = -1;\n        if (k) while (++i < n) {\n          o = nodes[i];\n          o.x += (x - o.x) * k;\n          o.y += (y - o.y) * k;\n        }\n      }\n      if (charge) {\n        d3_layout_forceAccumulate(q = d3.geom.quadtree(nodes), alpha, charges);\n        i = -1;\n        while (++i < n) {\n          if (!(o = nodes[i]).fixed) {\n            q.visit(repulse(o));\n          }\n        }\n      }\n      i = -1;\n      while (++i < n) {\n        o = nodes[i];\n        if (o.fixed) {\n          o.x = o.px;\n          o.y = o.py;\n        } else {\n          o.x -= (o.px - (o.px = o.x)) * friction;\n          o.y -= (o.py - (o.py = o.y)) * friction;\n        }\n      }\n      event.tick({\n        type: \"tick\",\n        alpha: alpha\n      });\n    };\n    force.nodes = function(x) {\n      if (!arguments.length) return nodes;\n      nodes = x;\n      return force;\n    };\n    force.links = function(x) {\n      if (!arguments.length) return links;\n      links = x;\n      return force;\n    };\n    force.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return force;\n    };\n    force.linkDistance = function(x) {\n      if (!arguments.length) return linkDistance;\n      linkDistance = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.distance = force.linkDistance;\n    force.linkStrength = function(x) {\n      if (!arguments.length) return linkStrength;\n      linkStrength = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.friction = function(x) {\n      if (!arguments.length) return friction;\n      friction = +x;\n      return force;\n    };\n    force.charge = function(x) {\n      if (!arguments.length) return charge;\n      charge = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.chargeDistance = function(x) {\n      if (!arguments.length) return Math.sqrt(chargeDistance2);\n      chargeDistance2 = x * x;\n      return force;\n    };\n    force.gravity = function(x) {\n      if (!arguments.length) return gravity;\n      gravity = +x;\n      return force;\n    };\n    force.theta = function(x) {\n      if (!arguments.length) return Math.sqrt(theta2);\n      theta2 = x * x;\n      return force;\n    };\n    force.alpha = function(x) {\n      if (!arguments.length) return alpha;\n      x = +x;\n      if (alpha) {\n        if (x > 0) {\n          alpha = x;\n        } else {\n          timer.c = null, timer.t = NaN, timer = null;\n          event.end({\n            type: \"end\",\n            alpha: alpha = 0\n          });\n        }\n      } else if (x > 0) {\n        event.start({\n          type: \"start\",\n          alpha: alpha = x\n        });\n        timer = d3_timer(force.tick);\n      }\n      return force;\n    };\n    force.start = function() {\n      var i, n = nodes.length, m = links.length, w = size[0], h = size[1], neighbors, o;\n      for (i = 0; i < n; ++i) {\n        (o = nodes[i]).index = i;\n        o.weight = 0;\n      }\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        if (typeof o.source == \"number\") o.source = nodes[o.source];\n        if (typeof o.target == \"number\") o.target = nodes[o.target];\n        ++o.source.weight;\n        ++o.target.weight;\n      }\n      for (i = 0; i < n; ++i) {\n        o = nodes[i];\n        if (isNaN(o.x)) o.x = position(\"x\", w);\n        if (isNaN(o.y)) o.y = position(\"y\", h);\n        if (isNaN(o.px)) o.px = o.x;\n        if (isNaN(o.py)) o.py = o.y;\n      }\n      distances = [];\n      if (typeof linkDistance === \"function\") for (i = 0; i < m; ++i) distances[i] = +linkDistance.call(this, links[i], i); else for (i = 0; i < m; ++i) distances[i] = linkDistance;\n      strengths = [];\n      if (typeof linkStrength === \"function\") for (i = 0; i < m; ++i) strengths[i] = +linkStrength.call(this, links[i], i); else for (i = 0; i < m; ++i) strengths[i] = linkStrength;\n      charges = [];\n      if (typeof charge === \"function\") for (i = 0; i < n; ++i) charges[i] = +charge.call(this, nodes[i], i); else for (i = 0; i < n; ++i) charges[i] = charge;\n      function position(dimension, size) {\n        if (!neighbors) {\n          neighbors = new Array(n);\n          for (j = 0; j < n; ++j) {\n            neighbors[j] = [];\n          }\n          for (j = 0; j < m; ++j) {\n            var o = links[j];\n            neighbors[o.source.index].push(o.target);\n            neighbors[o.target.index].push(o.source);\n          }\n        }\n        var candidates = neighbors[i], j = -1, l = candidates.length, x;\n        while (++j < l) if (!isNaN(x = candidates[j][dimension])) return x;\n        return Math.random() * size;\n      }\n      return force.resume();\n    };\n    force.resume = function() {\n      return force.alpha(.1);\n    };\n    force.stop = function() {\n      return force.alpha(0);\n    };\n    force.drag = function() {\n      if (!drag) drag = d3.behavior.drag().origin(d3_identity).on(\"dragstart.force\", d3_layout_forceDragstart).on(\"drag.force\", dragmove).on(\"dragend.force\", d3_layout_forceDragend);\n      if (!arguments.length) return drag;\n      this.on(\"mouseover.force\", d3_layout_forceMouseover).on(\"mouseout.force\", d3_layout_forceMouseout).call(drag);\n    };\n    function dragmove(d) {\n      d.px = d3.event.x, d.py = d3.event.y;\n      force.resume();\n    }\n    return d3.rebind(force, event, \"on\");\n  };\n  function d3_layout_forceDragstart(d) {\n    d.fixed |= 2;\n  }\n  function d3_layout_forceDragend(d) {\n    d.fixed &= ~6;\n  }\n  function d3_layout_forceMouseover(d) {\n    d.fixed |= 4;\n    d.px = d.x, d.py = d.y;\n  }\n  function d3_layout_forceMouseout(d) {\n    d.fixed &= ~4;\n  }\n  function d3_layout_forceAccumulate(quad, alpha, charges) {\n    var cx = 0, cy = 0;\n    quad.charge = 0;\n    if (!quad.leaf) {\n      var nodes = quad.nodes, n = nodes.length, i = -1, c;\n      while (++i < n) {\n        c = nodes[i];\n        if (c == null) continue;\n        d3_layout_forceAccumulate(c, alpha, charges);\n        quad.charge += c.charge;\n        cx += c.charge * c.cx;\n        cy += c.charge * c.cy;\n      }\n    }\n    if (quad.point) {\n      if (!quad.leaf) {\n        quad.point.x += Math.random() - .5;\n        quad.point.y += Math.random() - .5;\n      }\n      var k = alpha * charges[quad.point.index];\n      quad.charge += quad.pointCharge = k;\n      cx += k * quad.point.x;\n      cy += k * quad.point.y;\n    }\n    quad.cx = cx / quad.charge;\n    quad.cy = cy / quad.charge;\n  }\n  var d3_layout_forceLinkDistance = 20, d3_layout_forceLinkStrength = 1, d3_layout_forceChargeDistance2 = Infinity;\n  d3.layout.hierarchy = function() {\n    var sort = d3_layout_hierarchySort, children = d3_layout_hierarchyChildren, value = d3_layout_hierarchyValue;\n    function hierarchy(root) {\n      var stack = [ root ], nodes = [], node;\n      root.depth = 0;\n      while ((node = stack.pop()) != null) {\n        nodes.push(node);\n        if ((childs = children.call(hierarchy, node, node.depth)) && (n = childs.length)) {\n          var n, childs, child;\n          while (--n >= 0) {\n            stack.push(child = childs[n]);\n            child.parent = node;\n            child.depth = node.depth + 1;\n          }\n          if (value) node.value = 0;\n          node.children = childs;\n        } else {\n          if (value) node.value = +value.call(hierarchy, node, node.depth) || 0;\n          delete node.children;\n        }\n      }\n      d3_layout_hierarchyVisitAfter(root, function(node) {\n        var childs, parent;\n        if (sort && (childs = node.children)) childs.sort(sort);\n        if (value && (parent = node.parent)) parent.value += node.value;\n      });\n      return nodes;\n    }\n    hierarchy.sort = function(x) {\n      if (!arguments.length) return sort;\n      sort = x;\n      return hierarchy;\n    };\n    hierarchy.children = function(x) {\n      if (!arguments.length) return children;\n      children = x;\n      return hierarchy;\n    };\n    hierarchy.value = function(x) {\n      if (!arguments.length) return value;\n      value = x;\n      return hierarchy;\n    };\n    hierarchy.revalue = function(root) {\n      if (value) {\n        d3_layout_hierarchyVisitBefore(root, function(node) {\n          if (node.children) node.value = 0;\n        });\n        d3_layout_hierarchyVisitAfter(root, function(node) {\n          var parent;\n          if (!node.children) node.value = +value.call(hierarchy, node, node.depth) || 0;\n          if (parent = node.parent) parent.value += node.value;\n        });\n      }\n      return root;\n    };\n    return hierarchy;\n  };\n  function d3_layout_hierarchyRebind(object, hierarchy) {\n    d3.rebind(object, hierarchy, \"sort\", \"children\", \"value\");\n    object.nodes = object;\n    object.links = d3_layout_hierarchyLinks;\n    return object;\n  }\n  function d3_layout_hierarchyVisitBefore(node, callback) {\n    var nodes = [ node ];\n    while ((node = nodes.pop()) != null) {\n      callback(node);\n      if ((children = node.children) && (n = children.length)) {\n        var n, children;\n        while (--n >= 0) nodes.push(children[n]);\n      }\n    }\n  }\n  function d3_layout_hierarchyVisitAfter(node, callback) {\n    var nodes = [ node ], nodes2 = [];\n    while ((node = nodes.pop()) != null) {\n      nodes2.push(node);\n      if ((children = node.children) && (n = children.length)) {\n        var i = -1, n, children;\n        while (++i < n) nodes.push(children[i]);\n      }\n    }\n    while ((node = nodes2.pop()) != null) {\n      callback(node);\n    }\n  }\n  function d3_layout_hierarchyChildren(d) {\n    return d.children;\n  }\n  function d3_layout_hierarchyValue(d) {\n    return d.value;\n  }\n  function d3_layout_hierarchySort(a, b) {\n    return b.value - a.value;\n  }\n  function d3_layout_hierarchyLinks(nodes) {\n    return d3.merge(nodes.map(function(parent) {\n      return (parent.children || []).map(function(child) {\n        return {\n          source: parent,\n          target: child\n        };\n      });\n    }));\n  }\n  d3.layout.partition = function() {\n    var hierarchy = d3.layout.hierarchy(), size = [ 1, 1 ];\n    function position(node, x, dx, dy) {\n      var children = node.children;\n      node.x = x;\n      node.y = node.depth * dy;\n      node.dx = dx;\n      node.dy = dy;\n      if (children && (n = children.length)) {\n        var i = -1, n, c, d;\n        dx = node.value ? dx / node.value : 0;\n        while (++i < n) {\n          position(c = children[i], x, d = c.value * dx, dy);\n          x += d;\n        }\n      }\n    }\n    function depth(node) {\n      var children = node.children, d = 0;\n      if (children && (n = children.length)) {\n        var i = -1, n;\n        while (++i < n) d = Math.max(d, depth(children[i]));\n      }\n      return 1 + d;\n    }\n    function partition(d, i) {\n      var nodes = hierarchy.call(this, d, i);\n      position(nodes[0], 0, size[0], size[1] / depth(nodes[0]));\n      return nodes;\n    }\n    partition.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return partition;\n    };\n    return d3_layout_hierarchyRebind(partition, hierarchy);\n  };\n  d3.layout.pie = function() {\n    var value = Number, sort = d3_layout_pieSortByValue, startAngle = 0, endAngle = τ, padAngle = 0;\n    function pie(data) {\n      var n = data.length, values = data.map(function(d, i) {\n        return +value.call(pie, d, i);\n      }), a = +(typeof startAngle === \"function\" ? startAngle.apply(this, arguments) : startAngle), da = (typeof endAngle === \"function\" ? endAngle.apply(this, arguments) : endAngle) - a, p = Math.min(Math.abs(da) / n, +(typeof padAngle === \"function\" ? padAngle.apply(this, arguments) : padAngle)), pa = p * (da < 0 ? -1 : 1), sum = d3.sum(values), k = sum ? (da - n * pa) / sum : 0, index = d3.range(n), arcs = [], v;\n      if (sort != null) index.sort(sort === d3_layout_pieSortByValue ? function(i, j) {\n        return values[j] - values[i];\n      } : function(i, j) {\n        return sort(data[i], data[j]);\n      });\n      index.forEach(function(i) {\n        arcs[i] = {\n          data: data[i],\n          value: v = values[i],\n          startAngle: a,\n          endAngle: a += v * k + pa,\n          padAngle: p\n        };\n      });\n      return arcs;\n    }\n    pie.value = function(_) {\n      if (!arguments.length) return value;\n      value = _;\n      return pie;\n    };\n    pie.sort = function(_) {\n      if (!arguments.length) return sort;\n      sort = _;\n      return pie;\n    };\n    pie.startAngle = function(_) {\n      if (!arguments.length) return startAngle;\n      startAngle = _;\n      return pie;\n    };\n    pie.endAngle = function(_) {\n      if (!arguments.length) return endAngle;\n      endAngle = _;\n      return pie;\n    };\n    pie.padAngle = function(_) {\n      if (!arguments.length) return padAngle;\n      padAngle = _;\n      return pie;\n    };\n    return pie;\n  };\n  var d3_layout_pieSortByValue = {};\n  d3.layout.stack = function() {\n    var values = d3_identity, order = d3_layout_stackOrderDefault, offset = d3_layout_stackOffsetZero, out = d3_layout_stackOut, x = d3_layout_stackX, y = d3_layout_stackY;\n    function stack(data, index) {\n      if (!(n = data.length)) return data;\n      var series = data.map(function(d, i) {\n        return values.call(stack, d, i);\n      });\n      var points = series.map(function(d) {\n        return d.map(function(v, i) {\n          return [ x.call(stack, v, i), y.call(stack, v, i) ];\n        });\n      });\n      var orders = order.call(stack, points, index);\n      series = d3.permute(series, orders);\n      points = d3.permute(points, orders);\n      var offsets = offset.call(stack, points, index);\n      var m = series[0].length, n, i, j, o;\n      for (j = 0; j < m; ++j) {\n        out.call(stack, series[0][j], o = offsets[j], points[0][j][1]);\n        for (i = 1; i < n; ++i) {\n          out.call(stack, series[i][j], o += points[i - 1][j][1], points[i][j][1]);\n        }\n      }\n      return data;\n    }\n    stack.values = function(x) {\n      if (!arguments.length) return values;\n      values = x;\n      return stack;\n    };\n    stack.order = function(x) {\n      if (!arguments.length) return order;\n      order = typeof x === \"function\" ? x : d3_layout_stackOrders.get(x) || d3_layout_stackOrderDefault;\n      return stack;\n    };\n    stack.offset = function(x) {\n      if (!arguments.length) return offset;\n      offset = typeof x === \"function\" ? x : d3_layout_stackOffsets.get(x) || d3_layout_stackOffsetZero;\n      return stack;\n    };\n    stack.x = function(z) {\n      if (!arguments.length) return x;\n      x = z;\n      return stack;\n    };\n    stack.y = function(z) {\n      if (!arguments.length) return y;\n      y = z;\n      return stack;\n    };\n    stack.out = function(z) {\n      if (!arguments.length) return out;\n      out = z;\n      return stack;\n    };\n    return stack;\n  };\n  function d3_layout_stackX(d) {\n    return d.x;\n  }\n  function d3_layout_stackY(d) {\n    return d.y;\n  }\n  function d3_layout_stackOut(d, y0, y) {\n    d.y0 = y0;\n    d.y = y;\n  }\n  var d3_layout_stackOrders = d3.map({\n    \"inside-out\": function(data) {\n      var n = data.length, i, j, max = data.map(d3_layout_stackMaxIndex), sums = data.map(d3_layout_stackReduceSum), index = d3.range(n).sort(function(a, b) {\n        return max[a] - max[b];\n      }), top = 0, bottom = 0, tops = [], bottoms = [];\n      for (i = 0; i < n; ++i) {\n        j = index[i];\n        if (top < bottom) {\n          top += sums[j];\n          tops.push(j);\n        } else {\n          bottom += sums[j];\n          bottoms.push(j);\n        }\n      }\n      return bottoms.reverse().concat(tops);\n    },\n    reverse: function(data) {\n      return d3.range(data.length).reverse();\n    },\n    \"default\": d3_layout_stackOrderDefault\n  });\n  var d3_layout_stackOffsets = d3.map({\n    silhouette: function(data) {\n      var n = data.length, m = data[0].length, sums = [], max = 0, i, j, o, y0 = [];\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n        if (o > max) max = o;\n        sums.push(o);\n      }\n      for (j = 0; j < m; ++j) {\n        y0[j] = (max - sums[j]) / 2;\n      }\n      return y0;\n    },\n    wiggle: function(data) {\n      var n = data.length, x = data[0], m = x.length, i, j, k, s1, s2, s3, dx, o, o0, y0 = [];\n      y0[0] = o = o0 = 0;\n      for (j = 1; j < m; ++j) {\n        for (i = 0, s1 = 0; i < n; ++i) s1 += data[i][j][1];\n        for (i = 0, s2 = 0, dx = x[j][0] - x[j - 1][0]; i < n; ++i) {\n          for (k = 0, s3 = (data[i][j][1] - data[i][j - 1][1]) / (2 * dx); k < i; ++k) {\n            s3 += (data[k][j][1] - data[k][j - 1][1]) / dx;\n          }\n          s2 += s3 * data[i][j][1];\n        }\n        y0[j] = o -= s1 ? s2 / s1 * dx : 0;\n        if (o < o0) o0 = o;\n      }\n      for (j = 0; j < m; ++j) y0[j] -= o0;\n      return y0;\n    },\n    expand: function(data) {\n      var n = data.length, m = data[0].length, k = 1 / n, i, j, o, y0 = [];\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n        if (o) for (i = 0; i < n; i++) data[i][j][1] /= o; else for (i = 0; i < n; i++) data[i][j][1] = k;\n      }\n      for (j = 0; j < m; ++j) y0[j] = 0;\n      return y0;\n    },\n    zero: d3_layout_stackOffsetZero\n  });\n  function d3_layout_stackOrderDefault(data) {\n    return d3.range(data.length);\n  }\n  function d3_layout_stackOffsetZero(data) {\n    var j = -1, m = data[0].length, y0 = [];\n    while (++j < m) y0[j] = 0;\n    return y0;\n  }\n  function d3_layout_stackMaxIndex(array) {\n    var i = 1, j = 0, v = array[0][1], k, n = array.length;\n    for (;i < n; ++i) {\n      if ((k = array[i][1]) > v) {\n        j = i;\n        v = k;\n      }\n    }\n    return j;\n  }\n  function d3_layout_stackReduceSum(d) {\n    return d.reduce(d3_layout_stackSum, 0);\n  }\n  function d3_layout_stackSum(p, d) {\n    return p + d[1];\n  }\n  d3.layout.histogram = function() {\n    var frequency = true, valuer = Number, ranger = d3_layout_histogramRange, binner = d3_layout_histogramBinSturges;\n    function histogram(data, i) {\n      var bins = [], values = data.map(valuer, this), range = ranger.call(this, values, i), thresholds = binner.call(this, range, values, i), bin, i = -1, n = values.length, m = thresholds.length - 1, k = frequency ? 1 : 1 / n, x;\n      while (++i < m) {\n        bin = bins[i] = [];\n        bin.dx = thresholds[i + 1] - (bin.x = thresholds[i]);\n        bin.y = 0;\n      }\n      if (m > 0) {\n        i = -1;\n        while (++i < n) {\n          x = values[i];\n          if (x >= range[0] && x <= range[1]) {\n            bin = bins[d3.bisect(thresholds, x, 1, m) - 1];\n            bin.y += k;\n            bin.push(data[i]);\n          }\n        }\n      }\n      return bins;\n    }\n    histogram.value = function(x) {\n      if (!arguments.length) return valuer;\n      valuer = x;\n      return histogram;\n    };\n    histogram.range = function(x) {\n      if (!arguments.length) return ranger;\n      ranger = d3_functor(x);\n      return histogram;\n    };\n    histogram.bins = function(x) {\n      if (!arguments.length) return binner;\n      binner = typeof x === \"number\" ? function(range) {\n        return d3_layout_histogramBinFixed(range, x);\n      } : d3_functor(x);\n      return histogram;\n    };\n    histogram.frequency = function(x) {\n      if (!arguments.length) return frequency;\n      frequency = !!x;\n      return histogram;\n    };\n    return histogram;\n  };\n  function d3_layout_histogramBinSturges(range, values) {\n    return d3_layout_histogramBinFixed(range, Math.ceil(Math.log(values.length) / Math.LN2 + 1));\n  }\n  function d3_layout_histogramBinFixed(range, n) {\n    var x = -1, b = +range[0], m = (range[1] - b) / n, f = [];\n    while (++x <= n) f[x] = m * x + b;\n    return f;\n  }\n  function d3_layout_histogramRange(values) {\n    return [ d3.min(values), d3.max(values) ];\n  }\n  d3.layout.pack = function() {\n    var hierarchy = d3.layout.hierarchy().sort(d3_layout_packSort), padding = 0, size = [ 1, 1 ], radius;\n    function pack(d, i) {\n      var nodes = hierarchy.call(this, d, i), root = nodes[0], w = size[0], h = size[1], r = radius == null ? Math.sqrt : typeof radius === \"function\" ? radius : function() {\n        return radius;\n      };\n      root.x = root.y = 0;\n      d3_layout_hierarchyVisitAfter(root, function(d) {\n        d.r = +r(d.value);\n      });\n      d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n      if (padding) {\n        var dr = padding * (radius ? 1 : Math.max(2 * root.r / w, 2 * root.r / h)) / 2;\n        d3_layout_hierarchyVisitAfter(root, function(d) {\n          d.r += dr;\n        });\n        d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n        d3_layout_hierarchyVisitAfter(root, function(d) {\n          d.r -= dr;\n        });\n      }\n      d3_layout_packTransform(root, w / 2, h / 2, radius ? 1 : 1 / Math.max(2 * root.r / w, 2 * root.r / h));\n      return nodes;\n    }\n    pack.size = function(_) {\n      if (!arguments.length) return size;\n      size = _;\n      return pack;\n    };\n    pack.radius = function(_) {\n      if (!arguments.length) return radius;\n      radius = _ == null || typeof _ === \"function\" ? _ : +_;\n      return pack;\n    };\n    pack.padding = function(_) {\n      if (!arguments.length) return padding;\n      padding = +_;\n      return pack;\n    };\n    return d3_layout_hierarchyRebind(pack, hierarchy);\n  };\n  function d3_layout_packSort(a, b) {\n    return a.value - b.value;\n  }\n  function d3_layout_packInsert(a, b) {\n    var c = a._pack_next;\n    a._pack_next = b;\n    b._pack_prev = a;\n    b._pack_next = c;\n    c._pack_prev = b;\n  }\n  function d3_layout_packSplice(a, b) {\n    a._pack_next = b;\n    b._pack_prev = a;\n  }\n  function d3_layout_packIntersects(a, b) {\n    var dx = b.x - a.x, dy = b.y - a.y, dr = a.r + b.r;\n    return .999 * dr * dr > dx * dx + dy * dy;\n  }\n  function d3_layout_packSiblings(node) {\n    if (!(nodes = node.children) || !(n = nodes.length)) return;\n    var nodes, xMin = Infinity, xMax = -Infinity, yMin = Infinity, yMax = -Infinity, a, b, c, i, j, k, n;\n    function bound(node) {\n      xMin = Math.min(node.x - node.r, xMin);\n      xMax = Math.max(node.x + node.r, xMax);\n      yMin = Math.min(node.y - node.r, yMin);\n      yMax = Math.max(node.y + node.r, yMax);\n    }\n    nodes.forEach(d3_layout_packLink);\n    a = nodes[0];\n    a.x = -a.r;\n    a.y = 0;\n    bound(a);\n    if (n > 1) {\n      b = nodes[1];\n      b.x = b.r;\n      b.y = 0;\n      bound(b);\n      if (n > 2) {\n        c = nodes[2];\n        d3_layout_packPlace(a, b, c);\n        bound(c);\n        d3_layout_packInsert(a, c);\n        a._pack_prev = c;\n        d3_layout_packInsert(c, b);\n        b = a._pack_next;\n        for (i = 3; i < n; i++) {\n          d3_layout_packPlace(a, b, c = nodes[i]);\n          var isect = 0, s1 = 1, s2 = 1;\n          for (j = b._pack_next; j !== b; j = j._pack_next, s1++) {\n            if (d3_layout_packIntersects(j, c)) {\n              isect = 1;\n              break;\n            }\n          }\n          if (isect == 1) {\n            for (k = a._pack_prev; k !== j._pack_prev; k = k._pack_prev, s2++) {\n              if (d3_layout_packIntersects(k, c)) {\n                break;\n              }\n            }\n          }\n          if (isect) {\n            if (s1 < s2 || s1 == s2 && b.r < a.r) d3_layout_packSplice(a, b = j); else d3_layout_packSplice(a = k, b);\n            i--;\n          } else {\n            d3_layout_packInsert(a, c);\n            b = c;\n            bound(c);\n          }\n        }\n      }\n    }\n    var cx = (xMin + xMax) / 2, cy = (yMin + yMax) / 2, cr = 0;\n    for (i = 0; i < n; i++) {\n      c = nodes[i];\n      c.x -= cx;\n      c.y -= cy;\n      cr = Math.max(cr, c.r + Math.sqrt(c.x * c.x + c.y * c.y));\n    }\n    node.r = cr;\n    nodes.forEach(d3_layout_packUnlink);\n  }\n  function d3_layout_packLink(node) {\n    node._pack_next = node._pack_prev = node;\n  }\n  function d3_layout_packUnlink(node) {\n    delete node._pack_next;\n    delete node._pack_prev;\n  }\n  function d3_layout_packTransform(node, x, y, k) {\n    var children = node.children;\n    node.x = x += k * node.x;\n    node.y = y += k * node.y;\n    node.r *= k;\n    if (children) {\n      var i = -1, n = children.length;\n      while (++i < n) d3_layout_packTransform(children[i], x, y, k);\n    }\n  }\n  function d3_layout_packPlace(a, b, c) {\n    var db = a.r + c.r, dx = b.x - a.x, dy = b.y - a.y;\n    if (db && (dx || dy)) {\n      var da = b.r + c.r, dc = dx * dx + dy * dy;\n      da *= da;\n      db *= db;\n      var x = .5 + (db - da) / (2 * dc), y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n      c.x = a.x + x * dx + y * dy;\n      c.y = a.y + x * dy - y * dx;\n    } else {\n      c.x = a.x + db;\n      c.y = a.y;\n    }\n  }\n  d3.layout.tree = function() {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = null;\n    function tree(d, i) {\n      var nodes = hierarchy.call(this, d, i), root0 = nodes[0], root1 = wrapTree(root0);\n      d3_layout_hierarchyVisitAfter(root1, firstWalk), root1.parent.m = -root1.z;\n      d3_layout_hierarchyVisitBefore(root1, secondWalk);\n      if (nodeSize) d3_layout_hierarchyVisitBefore(root0, sizeNode); else {\n        var left = root0, right = root0, bottom = root0;\n        d3_layout_hierarchyVisitBefore(root0, function(node) {\n          if (node.x < left.x) left = node;\n          if (node.x > right.x) right = node;\n          if (node.depth > bottom.depth) bottom = node;\n        });\n        var tx = separation(left, right) / 2 - left.x, kx = size[0] / (right.x + separation(right, left) / 2 + tx), ky = size[1] / (bottom.depth || 1);\n        d3_layout_hierarchyVisitBefore(root0, function(node) {\n          node.x = (node.x + tx) * kx;\n          node.y = node.depth * ky;\n        });\n      }\n      return nodes;\n    }\n    function wrapTree(root0) {\n      var root1 = {\n        A: null,\n        children: [ root0 ]\n      }, queue = [ root1 ], node1;\n      while ((node1 = queue.pop()) != null) {\n        for (var children = node1.children, child, i = 0, n = children.length; i < n; ++i) {\n          queue.push((children[i] = child = {\n            _: children[i],\n            parent: node1,\n            children: (child = children[i].children) && child.slice() || [],\n            A: null,\n            a: null,\n            z: 0,\n            m: 0,\n            c: 0,\n            s: 0,\n            t: null,\n            i: i\n          }).a = child);\n        }\n      }\n      return root1.children[0];\n    }\n    function firstWalk(v) {\n      var children = v.children, siblings = v.parent.children, w = v.i ? siblings[v.i - 1] : null;\n      if (children.length) {\n        d3_layout_treeShift(v);\n        var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n        if (w) {\n          v.z = w.z + separation(v._, w._);\n          v.m = v.z - midpoint;\n        } else {\n          v.z = midpoint;\n        }\n      } else if (w) {\n        v.z = w.z + separation(v._, w._);\n      }\n      v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n    }\n    function secondWalk(v) {\n      v._.x = v.z + v.parent.m;\n      v.m += v.parent.m;\n    }\n    function apportion(v, w, ancestor) {\n      if (w) {\n        var vip = v, vop = v, vim = w, vom = vip.parent.children[0], sip = vip.m, sop = vop.m, sim = vim.m, som = vom.m, shift;\n        while (vim = d3_layout_treeRight(vim), vip = d3_layout_treeLeft(vip), vim && vip) {\n          vom = d3_layout_treeLeft(vom);\n          vop = d3_layout_treeRight(vop);\n          vop.a = v;\n          shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n          if (shift > 0) {\n            d3_layout_treeMove(d3_layout_treeAncestor(vim, v, ancestor), v, shift);\n            sip += shift;\n            sop += shift;\n          }\n          sim += vim.m;\n          sip += vip.m;\n          som += vom.m;\n          sop += vop.m;\n        }\n        if (vim && !d3_layout_treeRight(vop)) {\n          vop.t = vim;\n          vop.m += sim - sop;\n        }\n        if (vip && !d3_layout_treeLeft(vom)) {\n          vom.t = vip;\n          vom.m += sip - som;\n          ancestor = v;\n        }\n      }\n      return ancestor;\n    }\n    function sizeNode(node) {\n      node.x *= size[0];\n      node.y = node.depth * size[1];\n    }\n    tree.separation = function(x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return tree;\n    };\n    tree.size = function(x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null ? sizeNode : null;\n      return tree;\n    };\n    tree.nodeSize = function(x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) == null ? null : sizeNode;\n      return tree;\n    };\n    return d3_layout_hierarchyRebind(tree, hierarchy);\n  };\n  function d3_layout_treeSeparation(a, b) {\n    return a.parent == b.parent ? 1 : 2;\n  }\n  function d3_layout_treeLeft(v) {\n    var children = v.children;\n    return children.length ? children[0] : v.t;\n  }\n  function d3_layout_treeRight(v) {\n    var children = v.children, n;\n    return (n = children.length) ? children[n - 1] : v.t;\n  }\n  function d3_layout_treeMove(wm, wp, shift) {\n    var change = shift / (wp.i - wm.i);\n    wp.c -= change;\n    wp.s += shift;\n    wm.c += change;\n    wp.z += shift;\n    wp.m += shift;\n  }\n  function d3_layout_treeShift(v) {\n    var shift = 0, change = 0, children = v.children, i = children.length, w;\n    while (--i >= 0) {\n      w = children[i];\n      w.z += shift;\n      w.m += shift;\n      shift += w.s + (change += w.c);\n    }\n  }\n  function d3_layout_treeAncestor(vim, v, ancestor) {\n    return vim.a.parent === v.parent ? vim.a : ancestor;\n  }\n  d3.layout.cluster = function() {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = false;\n    function cluster(d, i) {\n      var nodes = hierarchy.call(this, d, i), root = nodes[0], previousNode, x = 0;\n      d3_layout_hierarchyVisitAfter(root, function(node) {\n        var children = node.children;\n        if (children && children.length) {\n          node.x = d3_layout_clusterX(children);\n          node.y = d3_layout_clusterY(children);\n        } else {\n          node.x = previousNode ? x += separation(node, previousNode) : 0;\n          node.y = 0;\n          previousNode = node;\n        }\n      });\n      var left = d3_layout_clusterLeft(root), right = d3_layout_clusterRight(root), x0 = left.x - separation(left, right) / 2, x1 = right.x + separation(right, left) / 2;\n      d3_layout_hierarchyVisitAfter(root, nodeSize ? function(node) {\n        node.x = (node.x - root.x) * size[0];\n        node.y = (root.y - node.y) * size[1];\n      } : function(node) {\n        node.x = (node.x - x0) / (x1 - x0) * size[0];\n        node.y = (1 - (root.y ? node.y / root.y : 1)) * size[1];\n      });\n      return nodes;\n    }\n    cluster.separation = function(x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return cluster;\n    };\n    cluster.size = function(x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null;\n      return cluster;\n    };\n    cluster.nodeSize = function(x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) != null;\n      return cluster;\n    };\n    return d3_layout_hierarchyRebind(cluster, hierarchy);\n  };\n  function d3_layout_clusterY(children) {\n    return 1 + d3.max(children, function(child) {\n      return child.y;\n    });\n  }\n  function d3_layout_clusterX(children) {\n    return children.reduce(function(x, child) {\n      return x + child.x;\n    }, 0) / children.length;\n  }\n  function d3_layout_clusterLeft(node) {\n    var children = node.children;\n    return children && children.length ? d3_layout_clusterLeft(children[0]) : node;\n  }\n  function d3_layout_clusterRight(node) {\n    var children = node.children, n;\n    return children && (n = children.length) ? d3_layout_clusterRight(children[n - 1]) : node;\n  }\n  d3.layout.treemap = function() {\n    var hierarchy = d3.layout.hierarchy(), round = Math.round, size = [ 1, 1 ], padding = null, pad = d3_layout_treemapPadNull, sticky = false, stickies, mode = \"squarify\", ratio = .5 * (1 + Math.sqrt(5));\n    function scale(children, k) {\n      var i = -1, n = children.length, child, area;\n      while (++i < n) {\n        area = (child = children[i]).value * (k < 0 ? 0 : k);\n        child.area = isNaN(area) || area <= 0 ? 0 : area;\n      }\n    }\n    function squarify(node) {\n      var children = node.children;\n      if (children && children.length) {\n        var rect = pad(node), row = [], remaining = children.slice(), child, best = Infinity, score, u = mode === \"slice\" ? rect.dx : mode === \"dice\" ? rect.dy : mode === \"slice-dice\" ? node.depth & 1 ? rect.dy : rect.dx : Math.min(rect.dx, rect.dy), n;\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n        while ((n = remaining.length) > 0) {\n          row.push(child = remaining[n - 1]);\n          row.area += child.area;\n          if (mode !== \"squarify\" || (score = worst(row, u)) <= best) {\n            remaining.pop();\n            best = score;\n          } else {\n            row.area -= row.pop().area;\n            position(row, u, rect, false);\n            u = Math.min(rect.dx, rect.dy);\n            row.length = row.area = 0;\n            best = Infinity;\n          }\n        }\n        if (row.length) {\n          position(row, u, rect, true);\n          row.length = row.area = 0;\n        }\n        children.forEach(squarify);\n      }\n    }\n    function stickify(node) {\n      var children = node.children;\n      if (children && children.length) {\n        var rect = pad(node), remaining = children.slice(), child, row = [];\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n        while (child = remaining.pop()) {\n          row.push(child);\n          row.area += child.area;\n          if (child.z != null) {\n            position(row, child.z ? rect.dx : rect.dy, rect, !remaining.length);\n            row.length = row.area = 0;\n          }\n        }\n        children.forEach(stickify);\n      }\n    }\n    function worst(row, u) {\n      var s = row.area, r, rmax = 0, rmin = Infinity, i = -1, n = row.length;\n      while (++i < n) {\n        if (!(r = row[i].area)) continue;\n        if (r < rmin) rmin = r;\n        if (r > rmax) rmax = r;\n      }\n      s *= s;\n      u *= u;\n      return s ? Math.max(u * rmax * ratio / s, s / (u * rmin * ratio)) : Infinity;\n    }\n    function position(row, u, rect, flush) {\n      var i = -1, n = row.length, x = rect.x, y = rect.y, v = u ? round(row.area / u) : 0, o;\n      if (u == rect.dx) {\n        if (flush || v > rect.dy) v = rect.dy;\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dy = v;\n          x += o.dx = Math.min(rect.x + rect.dx - x, v ? round(o.area / v) : 0);\n        }\n        o.z = true;\n        o.dx += rect.x + rect.dx - x;\n        rect.y += v;\n        rect.dy -= v;\n      } else {\n        if (flush || v > rect.dx) v = rect.dx;\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dx = v;\n          y += o.dy = Math.min(rect.y + rect.dy - y, v ? round(o.area / v) : 0);\n        }\n        o.z = false;\n        o.dy += rect.y + rect.dy - y;\n        rect.x += v;\n        rect.dx -= v;\n      }\n    }\n    function treemap(d) {\n      var nodes = stickies || hierarchy(d), root = nodes[0];\n      root.x = root.y = 0;\n      if (root.value) root.dx = size[0], root.dy = size[1]; else root.dx = root.dy = 0;\n      if (stickies) hierarchy.revalue(root);\n      scale([ root ], root.dx * root.dy / root.value);\n      (stickies ? stickify : squarify)(root);\n      if (sticky) stickies = nodes;\n      return nodes;\n    }\n    treemap.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return treemap;\n    };\n    treemap.padding = function(x) {\n      if (!arguments.length) return padding;\n      function padFunction(node) {\n        var p = x.call(treemap, node, node.depth);\n        return p == null ? d3_layout_treemapPadNull(node) : d3_layout_treemapPad(node, typeof p === \"number\" ? [ p, p, p, p ] : p);\n      }\n      function padConstant(node) {\n        return d3_layout_treemapPad(node, x);\n      }\n      var type;\n      pad = (padding = x) == null ? d3_layout_treemapPadNull : (type = typeof x) === \"function\" ? padFunction : type === \"number\" ? (x = [ x, x, x, x ], \n      padConstant) : padConstant;\n      return treemap;\n    };\n    treemap.round = function(x) {\n      if (!arguments.length) return round != Number;\n      round = x ? Math.round : Number;\n      return treemap;\n    };\n    treemap.sticky = function(x) {\n      if (!arguments.length) return sticky;\n      sticky = x;\n      stickies = null;\n      return treemap;\n    };\n    treemap.ratio = function(x) {\n      if (!arguments.length) return ratio;\n      ratio = x;\n      return treemap;\n    };\n    treemap.mode = function(x) {\n      if (!arguments.length) return mode;\n      mode = x + \"\";\n      return treemap;\n    };\n    return d3_layout_hierarchyRebind(treemap, hierarchy);\n  };\n  function d3_layout_treemapPadNull(node) {\n    return {\n      x: node.x,\n      y: node.y,\n      dx: node.dx,\n      dy: node.dy\n    };\n  }\n  function d3_layout_treemapPad(node, padding) {\n    var x = node.x + padding[3], y = node.y + padding[0], dx = node.dx - padding[1] - padding[3], dy = node.dy - padding[0] - padding[2];\n    if (dx < 0) {\n      x += dx / 2;\n      dx = 0;\n    }\n    if (dy < 0) {\n      y += dy / 2;\n      dy = 0;\n    }\n    return {\n      x: x,\n      y: y,\n      dx: dx,\n      dy: dy\n    };\n  }\n  d3.random = {\n    normal: function(µ, σ) {\n      var n = arguments.length;\n      if (n < 2) σ = 1;\n      if (n < 1) µ = 0;\n      return function() {\n        var x, y, r;\n        do {\n          x = Math.random() * 2 - 1;\n          y = Math.random() * 2 - 1;\n          r = x * x + y * y;\n        } while (!r || r > 1);\n        return µ + σ * x * Math.sqrt(-2 * Math.log(r) / r);\n      };\n    },\n    logNormal: function() {\n      var random = d3.random.normal.apply(d3, arguments);\n      return function() {\n        return Math.exp(random());\n      };\n    },\n    bates: function(m) {\n      var random = d3.random.irwinHall(m);\n      return function() {\n        return random() / m;\n      };\n    },\n    irwinHall: function(m) {\n      return function() {\n        for (var s = 0, j = 0; j < m; j++) s += Math.random();\n        return s;\n      };\n    }\n  };\n  d3.scale = {};\n  function d3_scaleExtent(domain) {\n    var start = domain[0], stop = domain[domain.length - 1];\n    return start < stop ? [ start, stop ] : [ stop, start ];\n  }\n  function d3_scaleRange(scale) {\n    return scale.rangeExtent ? scale.rangeExtent() : d3_scaleExtent(scale.range());\n  }\n  function d3_scale_bilinear(domain, range, uninterpolate, interpolate) {\n    var u = uninterpolate(domain[0], domain[1]), i = interpolate(range[0], range[1]);\n    return function(x) {\n      return i(u(x));\n    };\n  }\n  function d3_scale_nice(domain, nice) {\n    var i0 = 0, i1 = domain.length - 1, x0 = domain[i0], x1 = domain[i1], dx;\n    if (x1 < x0) {\n      dx = i0, i0 = i1, i1 = dx;\n      dx = x0, x0 = x1, x1 = dx;\n    }\n    domain[i0] = nice.floor(x0);\n    domain[i1] = nice.ceil(x1);\n    return domain;\n  }\n  function d3_scale_niceStep(step) {\n    return step ? {\n      floor: function(x) {\n        return Math.floor(x / step) * step;\n      },\n      ceil: function(x) {\n        return Math.ceil(x / step) * step;\n      }\n    } : d3_scale_niceIdentity;\n  }\n  var d3_scale_niceIdentity = {\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n  function d3_scale_polylinear(domain, range, uninterpolate, interpolate) {\n    var u = [], i = [], j = 0, k = Math.min(domain.length, range.length) - 1;\n    if (domain[k] < domain[0]) {\n      domain = domain.slice().reverse();\n      range = range.slice().reverse();\n    }\n    while (++j <= k) {\n      u.push(uninterpolate(domain[j - 1], domain[j]));\n      i.push(interpolate(range[j - 1], range[j]));\n    }\n    return function(x) {\n      var j = d3.bisect(domain, x, 1, k) - 1;\n      return i[j](u[j](x));\n    };\n  }\n  d3.scale.linear = function() {\n    return d3_scale_linear([ 0, 1 ], [ 0, 1 ], d3_interpolate, false);\n  };\n  function d3_scale_linear(domain, range, interpolate, clamp) {\n    var output, input;\n    function rescale() {\n      var linear = Math.min(domain.length, range.length) > 2 ? d3_scale_polylinear : d3_scale_bilinear, uninterpolate = clamp ? d3_uninterpolateClamp : d3_uninterpolateNumber;\n      output = linear(domain, range, uninterpolate, interpolate);\n      input = linear(range, domain, uninterpolate, d3_interpolate);\n      return scale;\n    }\n    function scale(x) {\n      return output(x);\n    }\n    scale.invert = function(y) {\n      return input(y);\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(Number);\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.rangeRound = function(x) {\n      return scale.range(x).interpolate(d3_interpolateRound);\n    };\n    scale.clamp = function(x) {\n      if (!arguments.length) return clamp;\n      clamp = x;\n      return rescale();\n    };\n    scale.interpolate = function(x) {\n      if (!arguments.length) return interpolate;\n      interpolate = x;\n      return rescale();\n    };\n    scale.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    scale.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    scale.nice = function(m) {\n      d3_scale_linearNice(domain, m);\n      return rescale();\n    };\n    scale.copy = function() {\n      return d3_scale_linear(domain, range, interpolate, clamp);\n    };\n    return rescale();\n  }\n  function d3_scale_linearRebind(scale, linear) {\n    return d3.rebind(scale, linear, \"range\", \"rangeRound\", \"interpolate\", \"clamp\");\n  }\n  function d3_scale_linearNice(domain, m) {\n    d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n    d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n    return domain;\n  }\n  function d3_scale_linearTickRange(domain, m) {\n    if (m == null) m = 10;\n    var extent = d3_scaleExtent(domain), span = extent[1] - extent[0], step = Math.pow(10, Math.floor(Math.log(span / m) / Math.LN10)), err = m / span * step;\n    if (err <= .15) step *= 10; else if (err <= .35) step *= 5; else if (err <= .75) step *= 2;\n    extent[0] = Math.ceil(extent[0] / step) * step;\n    extent[1] = Math.floor(extent[1] / step) * step + step * .5;\n    extent[2] = step;\n    return extent;\n  }\n  function d3_scale_linearTicks(domain, m) {\n    return d3.range.apply(d3, d3_scale_linearTickRange(domain, m));\n  }\n  function d3_scale_linearTickFormat(domain, m, format) {\n    var range = d3_scale_linearTickRange(domain, m);\n    if (format) {\n      var match = d3_format_re.exec(format);\n      match.shift();\n      if (match[8] === \"s\") {\n        var prefix = d3.formatPrefix(Math.max(abs(range[0]), abs(range[1])));\n        if (!match[7]) match[7] = \".\" + d3_scale_linearPrecision(prefix.scale(range[2]));\n        match[8] = \"f\";\n        format = d3.format(match.join(\"\"));\n        return function(d) {\n          return format(prefix.scale(d)) + prefix.symbol;\n        };\n      }\n      if (!match[7]) match[7] = \".\" + d3_scale_linearFormatPrecision(match[8], range);\n      format = match.join(\"\");\n    } else {\n      format = \",.\" + d3_scale_linearPrecision(range[2]) + \"f\";\n    }\n    return d3.format(format);\n  }\n  var d3_scale_linearFormatSignificant = {\n    s: 1,\n    g: 1,\n    p: 1,\n    r: 1,\n    e: 1\n  };\n  function d3_scale_linearPrecision(value) {\n    return -Math.floor(Math.log(value) / Math.LN10 + .01);\n  }\n  function d3_scale_linearFormatPrecision(type, range) {\n    var p = d3_scale_linearPrecision(range[2]);\n    return type in d3_scale_linearFormatSignificant ? Math.abs(p - d3_scale_linearPrecision(Math.max(abs(range[0]), abs(range[1])))) + +(type !== \"e\") : p - (type === \"%\") * 2;\n  }\n  d3.scale.log = function() {\n    return d3_scale_log(d3.scale.linear().domain([ 0, 1 ]), 10, true, [ 1, 10 ]);\n  };\n  function d3_scale_log(linear, base, positive, domain) {\n    function log(x) {\n      return (positive ? Math.log(x < 0 ? 0 : x) : -Math.log(x > 0 ? 0 : -x)) / Math.log(base);\n    }\n    function pow(x) {\n      return positive ? Math.pow(base, x) : -Math.pow(base, -x);\n    }\n    function scale(x) {\n      return linear(log(x));\n    }\n    scale.invert = function(x) {\n      return pow(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      positive = x[0] >= 0;\n      linear.domain((domain = x.map(Number)).map(log));\n      return scale;\n    };\n    scale.base = function(_) {\n      if (!arguments.length) return base;\n      base = +_;\n      linear.domain(domain.map(log));\n      return scale;\n    };\n    scale.nice = function() {\n      var niced = d3_scale_nice(domain.map(log), positive ? Math : d3_scale_logNiceNegative);\n      linear.domain(niced);\n      domain = niced.map(pow);\n      return scale;\n    };\n    scale.ticks = function() {\n      var extent = d3_scaleExtent(domain), ticks = [], u = extent[0], v = extent[1], i = Math.floor(log(u)), j = Math.ceil(log(v)), n = base % 1 ? 2 : base;\n      if (isFinite(j - i)) {\n        if (positive) {\n          for (;i < j; i++) for (var k = 1; k < n; k++) ticks.push(pow(i) * k);\n          ticks.push(pow(i));\n        } else {\n          ticks.push(pow(i));\n          for (;i++ < j; ) for (var k = n - 1; k > 0; k--) ticks.push(pow(i) * k);\n        }\n        for (i = 0; ticks[i] < u; i++) {}\n        for (j = ticks.length; ticks[j - 1] > v; j--) {}\n        ticks = ticks.slice(i, j);\n      }\n      return ticks;\n    };\n    scale.tickFormat = function(n, format) {\n      if (!arguments.length) return d3_scale_logFormat;\n      if (arguments.length < 2) format = d3_scale_logFormat; else if (typeof format !== \"function\") format = d3.format(format);\n      var k = Math.max(1, base * n / scale.ticks().length);\n      return function(d) {\n        var i = d / pow(Math.round(log(d)));\n        if (i * base < base - .5) i *= base;\n        return i <= k ? format(d) : \"\";\n      };\n    };\n    scale.copy = function() {\n      return d3_scale_log(linear.copy(), base, positive, domain);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  var d3_scale_logFormat = d3.format(\".0e\"), d3_scale_logNiceNegative = {\n    floor: function(x) {\n      return -Math.ceil(-x);\n    },\n    ceil: function(x) {\n      return -Math.floor(-x);\n    }\n  };\n  d3.scale.pow = function() {\n    return d3_scale_pow(d3.scale.linear(), 1, [ 0, 1 ]);\n  };\n  function d3_scale_pow(linear, exponent, domain) {\n    var powp = d3_scale_powPow(exponent), powb = d3_scale_powPow(1 / exponent);\n    function scale(x) {\n      return linear(powp(x));\n    }\n    scale.invert = function(x) {\n      return powb(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      linear.domain((domain = x.map(Number)).map(powp));\n      return scale;\n    };\n    scale.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    scale.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    scale.nice = function(m) {\n      return scale.domain(d3_scale_linearNice(domain, m));\n    };\n    scale.exponent = function(x) {\n      if (!arguments.length) return exponent;\n      powp = d3_scale_powPow(exponent = x);\n      powb = d3_scale_powPow(1 / exponent);\n      linear.domain(domain.map(powp));\n      return scale;\n    };\n    scale.copy = function() {\n      return d3_scale_pow(linear.copy(), exponent, domain);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  function d3_scale_powPow(e) {\n    return function(x) {\n      return x < 0 ? -Math.pow(-x, e) : Math.pow(x, e);\n    };\n  }\n  d3.scale.sqrt = function() {\n    return d3.scale.pow().exponent(.5);\n  };\n  d3.scale.ordinal = function() {\n    return d3_scale_ordinal([], {\n      t: \"range\",\n      a: [ [] ]\n    });\n  };\n  function d3_scale_ordinal(domain, ranger) {\n    var index, range, rangeBand;\n    function scale(x) {\n      return range[((index.get(x) || (ranger.t === \"range\" ? index.set(x, domain.push(x)) : NaN)) - 1) % range.length];\n    }\n    function steps(start, step) {\n      return d3.range(domain.length).map(function(i) {\n        return start + step * i;\n      });\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = [];\n      index = new d3_Map();\n      var i = -1, n = x.length, xi;\n      while (++i < n) if (!index.has(xi = x[i])) index.set(xi, domain.push(xi));\n      return scale[ranger.t].apply(scale, ranger.a);\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      rangeBand = 0;\n      ranger = {\n        t: \"range\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangePoints = function(x, padding) {\n      if (arguments.length < 2) padding = 0;\n      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = (start + stop) / 2, \n      0) : (stop - start) / (domain.length - 1 + padding);\n      range = steps(start + step * padding / 2, step);\n      rangeBand = 0;\n      ranger = {\n        t: \"rangePoints\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeRoundPoints = function(x, padding) {\n      if (arguments.length < 2) padding = 0;\n      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = stop = Math.round((start + stop) / 2), \n      0) : (stop - start) / (domain.length - 1 + padding) | 0;\n      range = steps(start + Math.round(step * padding / 2 + (stop - start - (domain.length - 1 + padding) * step) / 2), step);\n      rangeBand = 0;\n      ranger = {\n        t: \"rangeRoundPoints\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeBands = function(x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = (stop - start) / (domain.length - padding + 2 * outerPadding);\n      range = steps(start + step * outerPadding, step);\n      if (reverse) range.reverse();\n      rangeBand = step * (1 - padding);\n      ranger = {\n        t: \"rangeBands\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeRoundBands = function(x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = Math.floor((stop - start) / (domain.length - padding + 2 * outerPadding));\n      range = steps(start + Math.round((stop - start - (domain.length - padding) * step) / 2), step);\n      if (reverse) range.reverse();\n      rangeBand = Math.round(step * (1 - padding));\n      ranger = {\n        t: \"rangeRoundBands\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeBand = function() {\n      return rangeBand;\n    };\n    scale.rangeExtent = function() {\n      return d3_scaleExtent(ranger.a[0]);\n    };\n    scale.copy = function() {\n      return d3_scale_ordinal(domain, ranger);\n    };\n    return scale.domain(domain);\n  }\n  d3.scale.category10 = function() {\n    return d3.scale.ordinal().range(d3_category10);\n  };\n  d3.scale.category20 = function() {\n    return d3.scale.ordinal().range(d3_category20);\n  };\n  d3.scale.category20b = function() {\n    return d3.scale.ordinal().range(d3_category20b);\n  };\n  d3.scale.category20c = function() {\n    return d3.scale.ordinal().range(d3_category20c);\n  };\n  var d3_category10 = [ 2062260, 16744206, 2924588, 14034728, 9725885, 9197131, 14907330, 8355711, 12369186, 1556175 ].map(d3_rgbString);\n  var d3_category20 = [ 2062260, 11454440, 16744206, 16759672, 2924588, 10018698, 14034728, 16750742, 9725885, 12955861, 9197131, 12885140, 14907330, 16234194, 8355711, 13092807, 12369186, 14408589, 1556175, 10410725 ].map(d3_rgbString);\n  var d3_category20b = [ 3750777, 5395619, 7040719, 10264286, 6519097, 9216594, 11915115, 13556636, 9202993, 12426809, 15186514, 15190932, 8666169, 11356490, 14049643, 15177372, 8077683, 10834324, 13528509, 14589654 ].map(d3_rgbString);\n  var d3_category20c = [ 3244733, 7057110, 10406625, 13032431, 15095053, 16616764, 16625259, 16634018, 3253076, 7652470, 10607003, 13101504, 7695281, 10394312, 12369372, 14342891, 6513507, 9868950, 12434877, 14277081 ].map(d3_rgbString);\n  d3.scale.quantile = function() {\n    return d3_scale_quantile([], []);\n  };\n  function d3_scale_quantile(domain, range) {\n    var thresholds;\n    function rescale() {\n      var k = 0, q = range.length;\n      thresholds = [];\n      while (++k < q) thresholds[k - 1] = d3.quantile(domain, k / q);\n      return scale;\n    }\n    function scale(x) {\n      if (!isNaN(x = +x)) return range[d3.bisect(thresholds, x)];\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(d3_number).filter(d3_numeric).sort(d3_ascending);\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.quantiles = function() {\n      return thresholds;\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      return y < 0 ? [ NaN, NaN ] : [ y > 0 ? thresholds[y - 1] : domain[0], y < thresholds.length ? thresholds[y] : domain[domain.length - 1] ];\n    };\n    scale.copy = function() {\n      return d3_scale_quantile(domain, range);\n    };\n    return rescale();\n  }\n  d3.scale.quantize = function() {\n    return d3_scale_quantize(0, 1, [ 0, 1 ]);\n  };\n  function d3_scale_quantize(x0, x1, range) {\n    var kx, i;\n    function scale(x) {\n      return range[Math.max(0, Math.min(i, Math.floor(kx * (x - x0))))];\n    }\n    function rescale() {\n      kx = range.length / (x1 - x0);\n      i = range.length - 1;\n      return scale;\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return [ x0, x1 ];\n      x0 = +x[0];\n      x1 = +x[x.length - 1];\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      y = y < 0 ? NaN : y / kx + x0;\n      return [ y, y + 1 / kx ];\n    };\n    scale.copy = function() {\n      return d3_scale_quantize(x0, x1, range);\n    };\n    return rescale();\n  }\n  d3.scale.threshold = function() {\n    return d3_scale_threshold([ .5 ], [ 0, 1 ]);\n  };\n  function d3_scale_threshold(domain, range) {\n    function scale(x) {\n      if (x <= x) return range[d3.bisect(domain, x)];\n    }\n    scale.domain = function(_) {\n      if (!arguments.length) return domain;\n      domain = _;\n      return scale;\n    };\n    scale.range = function(_) {\n      if (!arguments.length) return range;\n      range = _;\n      return scale;\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      return [ domain[y - 1], domain[y] ];\n    };\n    scale.copy = function() {\n      return d3_scale_threshold(domain, range);\n    };\n    return scale;\n  }\n  d3.scale.identity = function() {\n    return d3_scale_identity([ 0, 1 ]);\n  };\n  function d3_scale_identity(domain) {\n    function identity(x) {\n      return +x;\n    }\n    identity.invert = identity;\n    identity.domain = identity.range = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(identity);\n      return identity;\n    };\n    identity.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    identity.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    identity.copy = function() {\n      return d3_scale_identity(domain);\n    };\n    return identity;\n  }\n  d3.svg = {};\n  function d3_zero() {\n    return 0;\n  }\n  d3.svg.arc = function() {\n    var innerRadius = d3_svg_arcInnerRadius, outerRadius = d3_svg_arcOuterRadius, cornerRadius = d3_zero, padRadius = d3_svg_arcAuto, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle, padAngle = d3_svg_arcPadAngle;\n    function arc() {\n      var r0 = Math.max(0, +innerRadius.apply(this, arguments)), r1 = Math.max(0, +outerRadius.apply(this, arguments)), a0 = startAngle.apply(this, arguments) - halfπ, a1 = endAngle.apply(this, arguments) - halfπ, da = Math.abs(a1 - a0), cw = a0 > a1 ? 0 : 1;\n      if (r1 < r0) rc = r1, r1 = r0, r0 = rc;\n      if (da >= τε) return circleSegment(r1, cw) + (r0 ? circleSegment(r0, 1 - cw) : \"\") + \"Z\";\n      var rc, cr, rp, ap, p0 = 0, p1 = 0, x0, y0, x1, y1, x2, y2, x3, y3, path = [];\n      if (ap = (+padAngle.apply(this, arguments) || 0) / 2) {\n        rp = padRadius === d3_svg_arcAuto ? Math.sqrt(r0 * r0 + r1 * r1) : +padRadius.apply(this, arguments);\n        if (!cw) p1 *= -1;\n        if (r1) p1 = d3_asin(rp / r1 * Math.sin(ap));\n        if (r0) p0 = d3_asin(rp / r0 * Math.sin(ap));\n      }\n      if (r1) {\n        x0 = r1 * Math.cos(a0 + p1);\n        y0 = r1 * Math.sin(a0 + p1);\n        x1 = r1 * Math.cos(a1 - p1);\n        y1 = r1 * Math.sin(a1 - p1);\n        var l1 = Math.abs(a1 - a0 - 2 * p1) <= π ? 0 : 1;\n        if (p1 && d3_svg_arcSweep(x0, y0, x1, y1) === cw ^ l1) {\n          var h1 = (a0 + a1) / 2;\n          x0 = r1 * Math.cos(h1);\n          y0 = r1 * Math.sin(h1);\n          x1 = y1 = null;\n        }\n      } else {\n        x0 = y0 = 0;\n      }\n      if (r0) {\n        x2 = r0 * Math.cos(a1 - p0);\n        y2 = r0 * Math.sin(a1 - p0);\n        x3 = r0 * Math.cos(a0 + p0);\n        y3 = r0 * Math.sin(a0 + p0);\n        var l0 = Math.abs(a0 - a1 + 2 * p0) <= π ? 0 : 1;\n        if (p0 && d3_svg_arcSweep(x2, y2, x3, y3) === 1 - cw ^ l0) {\n          var h0 = (a0 + a1) / 2;\n          x2 = r0 * Math.cos(h0);\n          y2 = r0 * Math.sin(h0);\n          x3 = y3 = null;\n        }\n      } else {\n        x2 = y2 = 0;\n      }\n      if (da > ε && (rc = Math.min(Math.abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments))) > .001) {\n        cr = r0 < r1 ^ cw ? 0 : 1;\n        var rc1 = rc, rc0 = rc;\n        if (da < π) {\n          var oc = x3 == null ? [ x2, y2 ] : x1 == null ? [ x0, y0 ] : d3_geom_polygonIntersect([ x0, y0 ], [ x3, y3 ], [ x1, y1 ], [ x2, y2 ]), ax = x0 - oc[0], ay = y0 - oc[1], bx = x1 - oc[0], by = y1 - oc[1], kc = 1 / Math.sin(Math.acos((ax * bx + ay * by) / (Math.sqrt(ax * ax + ay * ay) * Math.sqrt(bx * bx + by * by))) / 2), lc = Math.sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = Math.min(rc, (r0 - lc) / (kc - 1));\n          rc1 = Math.min(rc, (r1 - lc) / (kc + 1));\n        }\n        if (x1 != null) {\n          var t30 = d3_svg_arcCornerTangents(x3 == null ? [ x2, y2 ] : [ x3, y3 ], [ x0, y0 ], r1, rc1, cw), t12 = d3_svg_arcCornerTangents([ x1, y1 ], [ x2, y2 ], r1, rc1, cw);\n          if (rc === rc1) {\n            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t30[1], \"A\", r1, \",\", r1, \" 0 \", 1 - cw ^ d3_svg_arcSweep(t30[1][0], t30[1][1], t12[1][0], t12[1][1]), \",\", cw, \" \", t12[1], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t12[0]);\n          } else {\n            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 1,\", cr, \" \", t12[0]);\n          }\n        } else {\n          path.push(\"M\", x0, \",\", y0);\n        }\n        if (x3 != null) {\n          var t03 = d3_svg_arcCornerTangents([ x0, y0 ], [ x3, y3 ], r0, -rc0, cw), t21 = d3_svg_arcCornerTangents([ x2, y2 ], x1 == null ? [ x0, y0 ] : [ x1, y1 ], r0, -rc0, cw);\n          if (rc === rc0) {\n            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t21[1], \"A\", r0, \",\", r0, \" 0 \", cw ^ d3_svg_arcSweep(t21[1][0], t21[1][1], t03[1][0], t03[1][1]), \",\", 1 - cw, \" \", t03[1], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n          } else {\n            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n          }\n        } else {\n          path.push(\"L\", x2, \",\", y2);\n        }\n      } else {\n        path.push(\"M\", x0, \",\", y0);\n        if (x1 != null) path.push(\"A\", r1, \",\", r1, \" 0 \", l1, \",\", cw, \" \", x1, \",\", y1);\n        path.push(\"L\", x2, \",\", y2);\n        if (x3 != null) path.push(\"A\", r0, \",\", r0, \" 0 \", l0, \",\", 1 - cw, \" \", x3, \",\", y3);\n      }\n      path.push(\"Z\");\n      return path.join(\"\");\n    }\n    function circleSegment(r1, cw) {\n      return \"M0,\" + r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + -r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + r1;\n    }\n    arc.innerRadius = function(v) {\n      if (!arguments.length) return innerRadius;\n      innerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.outerRadius = function(v) {\n      if (!arguments.length) return outerRadius;\n      outerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.cornerRadius = function(v) {\n      if (!arguments.length) return cornerRadius;\n      cornerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.padRadius = function(v) {\n      if (!arguments.length) return padRadius;\n      padRadius = v == d3_svg_arcAuto ? d3_svg_arcAuto : d3_functor(v);\n      return arc;\n    };\n    arc.startAngle = function(v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return arc;\n    };\n    arc.endAngle = function(v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return arc;\n    };\n    arc.padAngle = function(v) {\n      if (!arguments.length) return padAngle;\n      padAngle = d3_functor(v);\n      return arc;\n    };\n    arc.centroid = function() {\n      var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2, a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - halfπ;\n      return [ Math.cos(a) * r, Math.sin(a) * r ];\n    };\n    return arc;\n  };\n  var d3_svg_arcAuto = \"auto\";\n  function d3_svg_arcInnerRadius(d) {\n    return d.innerRadius;\n  }\n  function d3_svg_arcOuterRadius(d) {\n    return d.outerRadius;\n  }\n  function d3_svg_arcStartAngle(d) {\n    return d.startAngle;\n  }\n  function d3_svg_arcEndAngle(d) {\n    return d.endAngle;\n  }\n  function d3_svg_arcPadAngle(d) {\n    return d && d.padAngle;\n  }\n  function d3_svg_arcSweep(x0, y0, x1, y1) {\n    return (x0 - x1) * y0 - (y0 - y1) * x0 > 0 ? 0 : 1;\n  }\n  function d3_svg_arcCornerTangents(p0, p1, r1, rc, cw) {\n    var x01 = p0[0] - p1[0], y01 = p0[1] - p1[1], lo = (cw ? rc : -rc) / Math.sqrt(x01 * x01 + y01 * y01), ox = lo * y01, oy = -lo * x01, x1 = p0[0] + ox, y1 = p0[1] + oy, x2 = p1[0] + ox, y2 = p1[1] + oy, x3 = (x1 + x2) / 2, y3 = (y1 + y2) / 2, dx = x2 - x1, dy = y2 - y1, d2 = dx * dx + dy * dy, r = r1 - rc, D = x1 * y2 - x2 * y1, d = (dy < 0 ? -1 : 1) * Math.sqrt(Math.max(0, r * r * d2 - D * D)), cx0 = (D * dy - dx * d) / d2, cy0 = (-D * dx - dy * d) / d2, cx1 = (D * dy + dx * d) / d2, cy1 = (-D * dx + dy * d) / d2, dx0 = cx0 - x3, dy0 = cy0 - y3, dx1 = cx1 - x3, dy1 = cy1 - y3;\n    if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n    return [ [ cx0 - ox, cy0 - oy ], [ cx0 * r1 / r, cy0 * r1 / r ] ];\n  }\n  function d3_svg_line(projection) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, tension = .7;\n    function line(data) {\n      var segments = [], points = [], i = -1, n = data.length, d, fx = d3_functor(x), fy = d3_functor(y);\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points), tension));\n      }\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points.push([ +fx.call(this, d, i), +fy.call(this, d, i) ]);\n        } else if (points.length) {\n          segment();\n          points = [];\n        }\n      }\n      if (points.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n    line.x = function(_) {\n      if (!arguments.length) return x;\n      x = _;\n      return line;\n    };\n    line.y = function(_) {\n      if (!arguments.length) return y;\n      y = _;\n      return line;\n    };\n    line.defined = function(_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return line;\n    };\n    line.interpolate = function(_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      return line;\n    };\n    line.tension = function(_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return line;\n    };\n    return line;\n  }\n  d3.svg.line = function() {\n    return d3_svg_line(d3_identity);\n  };\n  var d3_svg_lineInterpolators = d3.map({\n    linear: d3_svg_lineLinear,\n    \"linear-closed\": d3_svg_lineLinearClosed,\n    step: d3_svg_lineStep,\n    \"step-before\": d3_svg_lineStepBefore,\n    \"step-after\": d3_svg_lineStepAfter,\n    basis: d3_svg_lineBasis,\n    \"basis-open\": d3_svg_lineBasisOpen,\n    \"basis-closed\": d3_svg_lineBasisClosed,\n    bundle: d3_svg_lineBundle,\n    cardinal: d3_svg_lineCardinal,\n    \"cardinal-open\": d3_svg_lineCardinalOpen,\n    \"cardinal-closed\": d3_svg_lineCardinalClosed,\n    monotone: d3_svg_lineMonotone\n  });\n  d3_svg_lineInterpolators.forEach(function(key, value) {\n    value.key = key;\n    value.closed = /-closed$/.test(key);\n  });\n  function d3_svg_lineLinear(points) {\n    return points.length > 1 ? points.join(\"L\") : points + \"Z\";\n  }\n  function d3_svg_lineLinearClosed(points) {\n    return points.join(\"L\") + \"Z\";\n  }\n  function d3_svg_lineStep(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"H\", (p[0] + (p = points[i])[0]) / 2, \"V\", p[1]);\n    if (n > 1) path.push(\"H\", p[0]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineStepBefore(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"V\", (p = points[i])[1], \"H\", p[0]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineStepAfter(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"H\", (p = points[i])[0], \"V\", p[1]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineCardinalOpen(points, tension) {\n    return points.length < 4 ? d3_svg_lineLinear(points) : points[1] + d3_svg_lineHermite(points.slice(1, -1), d3_svg_lineCardinalTangents(points, tension));\n  }\n  function d3_svg_lineCardinalClosed(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinearClosed(points) : points[0] + d3_svg_lineHermite((points.push(points[0]), \n    points), d3_svg_lineCardinalTangents([ points[points.length - 2] ].concat(points, [ points[1] ]), tension));\n  }\n  function d3_svg_lineCardinal(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineCardinalTangents(points, tension));\n  }\n  function d3_svg_lineHermite(points, tangents) {\n    if (tangents.length < 1 || points.length != tangents.length && points.length != tangents.length + 2) {\n      return d3_svg_lineLinear(points);\n    }\n    var quad = points.length != tangents.length, path = \"\", p0 = points[0], p = points[1], t0 = tangents[0], t = t0, pi = 1;\n    if (quad) {\n      path += \"Q\" + (p[0] - t0[0] * 2 / 3) + \",\" + (p[1] - t0[1] * 2 / 3) + \",\" + p[0] + \",\" + p[1];\n      p0 = points[1];\n      pi = 2;\n    }\n    if (tangents.length > 1) {\n      t = tangents[1];\n      p = points[pi];\n      pi++;\n      path += \"C\" + (p0[0] + t0[0]) + \",\" + (p0[1] + t0[1]) + \",\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n      for (var i = 2; i < tangents.length; i++, pi++) {\n        p = points[pi];\n        t = tangents[i];\n        path += \"S\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n      }\n    }\n    if (quad) {\n      var lp = points[pi];\n      path += \"Q\" + (p[0] + t[0] * 2 / 3) + \",\" + (p[1] + t[1] * 2 / 3) + \",\" + lp[0] + \",\" + lp[1];\n    }\n    return path;\n  }\n  function d3_svg_lineCardinalTangents(points, tension) {\n    var tangents = [], a = (1 - tension) / 2, p0, p1 = points[0], p2 = points[1], i = 1, n = points.length;\n    while (++i < n) {\n      p0 = p1;\n      p1 = p2;\n      p2 = points[i];\n      tangents.push([ a * (p2[0] - p0[0]), a * (p2[1] - p0[1]) ]);\n    }\n    return tangents;\n  }\n  function d3_svg_lineBasis(points) {\n    if (points.length < 3) return d3_svg_lineLinear(points);\n    var i = 1, n = points.length, pi = points[0], x0 = pi[0], y0 = pi[1], px = [ x0, x0, x0, (pi = points[1])[0] ], py = [ y0, y0, y0, pi[1] ], path = [ x0, \",\", y0, \"L\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n    points.push(points[n - 1]);\n    while (++i <= n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    points.pop();\n    path.push(\"L\", pi);\n    return path.join(\"\");\n  }\n  function d3_svg_lineBasisOpen(points) {\n    if (points.length < 4) return d3_svg_lineLinear(points);\n    var path = [], i = -1, n = points.length, pi, px = [ 0 ], py = [ 0 ];\n    while (++i < 3) {\n      pi = points[i];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n    path.push(d3_svg_lineDot4(d3_svg_lineBasisBezier3, px) + \",\" + d3_svg_lineDot4(d3_svg_lineBasisBezier3, py));\n    --i;\n    while (++i < n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    return path.join(\"\");\n  }\n  function d3_svg_lineBasisClosed(points) {\n    var path, i = -1, n = points.length, m = n + 4, pi, px = [], py = [];\n    while (++i < 4) {\n      pi = points[i % n];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n    path = [ d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n    --i;\n    while (++i < m) {\n      pi = points[i % n];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    return path.join(\"\");\n  }\n  function d3_svg_lineBundle(points, tension) {\n    var n = points.length - 1;\n    if (n) {\n      var x0 = points[0][0], y0 = points[0][1], dx = points[n][0] - x0, dy = points[n][1] - y0, i = -1, p, t;\n      while (++i <= n) {\n        p = points[i];\n        t = i / n;\n        p[0] = tension * p[0] + (1 - tension) * (x0 + t * dx);\n        p[1] = tension * p[1] + (1 - tension) * (y0 + t * dy);\n      }\n    }\n    return d3_svg_lineBasis(points);\n  }\n  function d3_svg_lineDot4(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n  }\n  var d3_svg_lineBasisBezier1 = [ 0, 2 / 3, 1 / 3, 0 ], d3_svg_lineBasisBezier2 = [ 0, 1 / 3, 2 / 3, 0 ], d3_svg_lineBasisBezier3 = [ 0, 1 / 6, 2 / 3, 1 / 6 ];\n  function d3_svg_lineBasisBezier(path, x, y) {\n    path.push(\"C\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, y));\n  }\n  function d3_svg_lineSlope(p0, p1) {\n    return (p1[1] - p0[1]) / (p1[0] - p0[0]);\n  }\n  function d3_svg_lineFiniteDifferences(points) {\n    var i = 0, j = points.length - 1, m = [], p0 = points[0], p1 = points[1], d = m[0] = d3_svg_lineSlope(p0, p1);\n    while (++i < j) {\n      m[i] = (d + (d = d3_svg_lineSlope(p0 = p1, p1 = points[i + 1]))) / 2;\n    }\n    m[i] = d;\n    return m;\n  }\n  function d3_svg_lineMonotoneTangents(points) {\n    var tangents = [], d, a, b, s, m = d3_svg_lineFiniteDifferences(points), i = -1, j = points.length - 1;\n    while (++i < j) {\n      d = d3_svg_lineSlope(points[i], points[i + 1]);\n      if (abs(d) < ε) {\n        m[i] = m[i + 1] = 0;\n      } else {\n        a = m[i] / d;\n        b = m[i + 1] / d;\n        s = a * a + b * b;\n        if (s > 9) {\n          s = d * 3 / Math.sqrt(s);\n          m[i] = s * a;\n          m[i + 1] = s * b;\n        }\n      }\n    }\n    i = -1;\n    while (++i <= j) {\n      s = (points[Math.min(j, i + 1)][0] - points[Math.max(0, i - 1)][0]) / (6 * (1 + m[i] * m[i]));\n      tangents.push([ s || 0, m[i] * s || 0 ]);\n    }\n    return tangents;\n  }\n  function d3_svg_lineMonotone(points) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineMonotoneTangents(points));\n  }\n  d3.svg.line.radial = function() {\n    var line = d3_svg_line(d3_svg_lineRadial);\n    line.radius = line.x, delete line.x;\n    line.angle = line.y, delete line.y;\n    return line;\n  };\n  function d3_svg_lineRadial(points) {\n    var point, i = -1, n = points.length, r, a;\n    while (++i < n) {\n      point = points[i];\n      r = point[0];\n      a = point[1] - halfπ;\n      point[0] = r * Math.cos(a);\n      point[1] = r * Math.sin(a);\n    }\n    return points;\n  }\n  function d3_svg_area(projection) {\n    var x0 = d3_geom_pointX, x1 = d3_geom_pointX, y0 = 0, y1 = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, interpolateReverse = interpolate, L = \"L\", tension = .7;\n    function area(data) {\n      var segments = [], points0 = [], points1 = [], i = -1, n = data.length, d, fx0 = d3_functor(x0), fy0 = d3_functor(y0), fx1 = x0 === x1 ? function() {\n        return x;\n      } : d3_functor(x1), fy1 = y0 === y1 ? function() {\n        return y;\n      } : d3_functor(y1), x, y;\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points1), tension), L, interpolateReverse(projection(points0.reverse()), tension), \"Z\");\n      }\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points0.push([ x = +fx0.call(this, d, i), y = +fy0.call(this, d, i) ]);\n          points1.push([ +fx1.call(this, d, i), +fy1.call(this, d, i) ]);\n        } else if (points0.length) {\n          segment();\n          points0 = [];\n          points1 = [];\n        }\n      }\n      if (points0.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n    area.x = function(_) {\n      if (!arguments.length) return x1;\n      x0 = x1 = _;\n      return area;\n    };\n    area.x0 = function(_) {\n      if (!arguments.length) return x0;\n      x0 = _;\n      return area;\n    };\n    area.x1 = function(_) {\n      if (!arguments.length) return x1;\n      x1 = _;\n      return area;\n    };\n    area.y = function(_) {\n      if (!arguments.length) return y1;\n      y0 = y1 = _;\n      return area;\n    };\n    area.y0 = function(_) {\n      if (!arguments.length) return y0;\n      y0 = _;\n      return area;\n    };\n    area.y1 = function(_) {\n      if (!arguments.length) return y1;\n      y1 = _;\n      return area;\n    };\n    area.defined = function(_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return area;\n    };\n    area.interpolate = function(_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      interpolateReverse = interpolate.reverse || interpolate;\n      L = interpolate.closed ? \"M\" : \"L\";\n      return area;\n    };\n    area.tension = function(_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return area;\n    };\n    return area;\n  }\n  d3_svg_lineStepBefore.reverse = d3_svg_lineStepAfter;\n  d3_svg_lineStepAfter.reverse = d3_svg_lineStepBefore;\n  d3.svg.area = function() {\n    return d3_svg_area(d3_identity);\n  };\n  d3.svg.area.radial = function() {\n    var area = d3_svg_area(d3_svg_lineRadial);\n    area.radius = area.x, delete area.x;\n    area.innerRadius = area.x0, delete area.x0;\n    area.outerRadius = area.x1, delete area.x1;\n    area.angle = area.y, delete area.y;\n    area.startAngle = area.y0, delete area.y0;\n    area.endAngle = area.y1, delete area.y1;\n    return area;\n  };\n  d3.svg.chord = function() {\n    var source = d3_source, target = d3_target, radius = d3_svg_chordRadius, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle;\n    function chord(d, i) {\n      var s = subgroup(this, source, d, i), t = subgroup(this, target, d, i);\n      return \"M\" + s.p0 + arc(s.r, s.p1, s.a1 - s.a0) + (equals(s, t) ? curve(s.r, s.p1, s.r, s.p0) : curve(s.r, s.p1, t.r, t.p0) + arc(t.r, t.p1, t.a1 - t.a0) + curve(t.r, t.p1, s.r, s.p0)) + \"Z\";\n    }\n    function subgroup(self, f, d, i) {\n      var subgroup = f.call(self, d, i), r = radius.call(self, subgroup, i), a0 = startAngle.call(self, subgroup, i) - halfπ, a1 = endAngle.call(self, subgroup, i) - halfπ;\n      return {\n        r: r,\n        a0: a0,\n        a1: a1,\n        p0: [ r * Math.cos(a0), r * Math.sin(a0) ],\n        p1: [ r * Math.cos(a1), r * Math.sin(a1) ]\n      };\n    }\n    function equals(a, b) {\n      return a.a0 == b.a0 && a.a1 == b.a1;\n    }\n    function arc(r, p, a) {\n      return \"A\" + r + \",\" + r + \" 0 \" + +(a > π) + \",1 \" + p;\n    }\n    function curve(r0, p0, r1, p1) {\n      return \"Q 0,0 \" + p1;\n    }\n    chord.radius = function(v) {\n      if (!arguments.length) return radius;\n      radius = d3_functor(v);\n      return chord;\n    };\n    chord.source = function(v) {\n      if (!arguments.length) return source;\n      source = d3_functor(v);\n      return chord;\n    };\n    chord.target = function(v) {\n      if (!arguments.length) return target;\n      target = d3_functor(v);\n      return chord;\n    };\n    chord.startAngle = function(v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return chord;\n    };\n    chord.endAngle = function(v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return chord;\n    };\n    return chord;\n  };\n  function d3_svg_chordRadius(d) {\n    return d.radius;\n  }\n  d3.svg.diagonal = function() {\n    var source = d3_source, target = d3_target, projection = d3_svg_diagonalProjection;\n    function diagonal(d, i) {\n      var p0 = source.call(this, d, i), p3 = target.call(this, d, i), m = (p0.y + p3.y) / 2, p = [ p0, {\n        x: p0.x,\n        y: m\n      }, {\n        x: p3.x,\n        y: m\n      }, p3 ];\n      p = p.map(projection);\n      return \"M\" + p[0] + \"C\" + p[1] + \" \" + p[2] + \" \" + p[3];\n    }\n    diagonal.source = function(x) {\n      if (!arguments.length) return source;\n      source = d3_functor(x);\n      return diagonal;\n    };\n    diagonal.target = function(x) {\n      if (!arguments.length) return target;\n      target = d3_functor(x);\n      return diagonal;\n    };\n    diagonal.projection = function(x) {\n      if (!arguments.length) return projection;\n      projection = x;\n      return diagonal;\n    };\n    return diagonal;\n  };\n  function d3_svg_diagonalProjection(d) {\n    return [ d.x, d.y ];\n  }\n  d3.svg.diagonal.radial = function() {\n    var diagonal = d3.svg.diagonal(), projection = d3_svg_diagonalProjection, projection_ = diagonal.projection;\n    diagonal.projection = function(x) {\n      return arguments.length ? projection_(d3_svg_diagonalRadialProjection(projection = x)) : projection;\n    };\n    return diagonal;\n  };\n  function d3_svg_diagonalRadialProjection(projection) {\n    return function() {\n      var d = projection.apply(this, arguments), r = d[0], a = d[1] - halfπ;\n      return [ r * Math.cos(a), r * Math.sin(a) ];\n    };\n  }\n  d3.svg.symbol = function() {\n    var type = d3_svg_symbolType, size = d3_svg_symbolSize;\n    function symbol(d, i) {\n      return (d3_svg_symbols.get(type.call(this, d, i)) || d3_svg_symbolCircle)(size.call(this, d, i));\n    }\n    symbol.type = function(x) {\n      if (!arguments.length) return type;\n      type = d3_functor(x);\n      return symbol;\n    };\n    symbol.size = function(x) {\n      if (!arguments.length) return size;\n      size = d3_functor(x);\n      return symbol;\n    };\n    return symbol;\n  };\n  function d3_svg_symbolSize() {\n    return 64;\n  }\n  function d3_svg_symbolType() {\n    return \"circle\";\n  }\n  function d3_svg_symbolCircle(size) {\n    var r = Math.sqrt(size / π);\n    return \"M0,\" + r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + -r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + r + \"Z\";\n  }\n  var d3_svg_symbols = d3.map({\n    circle: d3_svg_symbolCircle,\n    cross: function(size) {\n      var r = Math.sqrt(size / 5) / 2;\n      return \"M\" + -3 * r + \",\" + -r + \"H\" + -r + \"V\" + -3 * r + \"H\" + r + \"V\" + -r + \"H\" + 3 * r + \"V\" + r + \"H\" + r + \"V\" + 3 * r + \"H\" + -r + \"V\" + r + \"H\" + -3 * r + \"Z\";\n    },\n    diamond: function(size) {\n      var ry = Math.sqrt(size / (2 * d3_svg_symbolTan30)), rx = ry * d3_svg_symbolTan30;\n      return \"M0,\" + -ry + \"L\" + rx + \",0\" + \" 0,\" + ry + \" \" + -rx + \",0\" + \"Z\";\n    },\n    square: function(size) {\n      var r = Math.sqrt(size) / 2;\n      return \"M\" + -r + \",\" + -r + \"L\" + r + \",\" + -r + \" \" + r + \",\" + r + \" \" + -r + \",\" + r + \"Z\";\n    },\n    \"triangle-down\": function(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + ry + \"L\" + rx + \",\" + -ry + \" \" + -rx + \",\" + -ry + \"Z\";\n    },\n    \"triangle-up\": function(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + -ry + \"L\" + rx + \",\" + ry + \" \" + -rx + \",\" + ry + \"Z\";\n    }\n  });\n  d3.svg.symbolTypes = d3_svg_symbols.keys();\n  var d3_svg_symbolSqrt3 = Math.sqrt(3), d3_svg_symbolTan30 = Math.tan(30 * d3_radians);\n  d3_selectionPrototype.transition = function(name) {\n    var id = d3_transitionInheritId || ++d3_transitionId, ns = d3_transitionNamespace(name), subgroups = [], subgroup, node, transition = d3_transitionInherit || {\n      time: Date.now(),\n      ease: d3_ease_cubicInOut,\n      delay: 0,\n      duration: 250\n    };\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) d3_transitionNode(node, i, ns, id, transition);\n        subgroup.push(node);\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_selectionPrototype.interrupt = function(name) {\n    return this.each(name == null ? d3_selection_interrupt : d3_selection_interruptNS(d3_transitionNamespace(name)));\n  };\n  var d3_selection_interrupt = d3_selection_interruptNS(d3_transitionNamespace());\n  function d3_selection_interruptNS(ns) {\n    return function() {\n      var lock, activeId, active;\n      if ((lock = this[ns]) && (active = lock[activeId = lock.active])) {\n        active.timer.c = null;\n        active.timer.t = NaN;\n        if (--lock.count) delete lock[activeId]; else delete this[ns];\n        lock.active += .5;\n        active.event && active.event.interrupt.call(this, this.__data__, active.index);\n      }\n    };\n  }\n  function d3_transition(groups, ns, id) {\n    d3_subclass(groups, d3_transitionPrototype);\n    groups.namespace = ns;\n    groups.id = id;\n    return groups;\n  }\n  var d3_transitionPrototype = [], d3_transitionId = 0, d3_transitionInheritId, d3_transitionInherit;\n  d3_transitionPrototype.call = d3_selectionPrototype.call;\n  d3_transitionPrototype.empty = d3_selectionPrototype.empty;\n  d3_transitionPrototype.node = d3_selectionPrototype.node;\n  d3_transitionPrototype.size = d3_selectionPrototype.size;\n  d3.transition = function(selection, name) {\n    return selection && selection.transition ? d3_transitionInheritId ? selection.transition(name) : selection : d3.selection().transition(selection);\n  };\n  d3.transition.prototype = d3_transitionPrototype;\n  d3_transitionPrototype.select = function(selector) {\n    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnode, node;\n    selector = d3_selection_selector(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if ((node = group[i]) && (subnode = selector.call(node, node.__data__, i, j))) {\n          if (\"__data__\" in node) subnode.__data__ = node.__data__;\n          d3_transitionNode(subnode, i, ns, id, node[ns][id]);\n          subgroup.push(subnode);\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_transitionPrototype.selectAll = function(selector) {\n    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnodes, node, subnode, transition;\n    selector = d3_selection_selectorAll(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          transition = node[ns][id];\n          subnodes = selector.call(node, node.__data__, i, j);\n          subgroups.push(subgroup = []);\n          for (var k = -1, o = subnodes.length; ++k < o; ) {\n            if (subnode = subnodes[k]) d3_transitionNode(subnode, k, ns, id, transition);\n            subgroup.push(subnode);\n          }\n        }\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_transitionPrototype.filter = function(filter) {\n    var subgroups = [], subgroup, group, node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n    return d3_transition(subgroups, this.namespace, this.id);\n  };\n  d3_transitionPrototype.tween = function(name, tween) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 2) return this.node()[ns][id].tween.get(name);\n    return d3_selection_each(this, tween == null ? function(node) {\n      node[ns][id].tween.remove(name);\n    } : function(node) {\n      node[ns][id].tween.set(name, tween);\n    });\n  };\n  function d3_transition_tween(groups, name, value, tween) {\n    var id = groups.id, ns = groups.namespace;\n    return d3_selection_each(groups, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].tween.set(name, tween(value.call(node, node.__data__, i, j)));\n    } : (value = tween(value), function(node) {\n      node[ns][id].tween.set(name, value);\n    }));\n  }\n  d3_transitionPrototype.attr = function(nameNS, value) {\n    if (arguments.length < 2) {\n      for (value in nameNS) this.attr(value, nameNS[value]);\n      return this;\n    }\n    var interpolate = nameNS == \"transform\" ? d3_interpolateTransform : d3_interpolate, name = d3.ns.qualify(nameNS);\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n    function attrTween(b) {\n      return b == null ? attrNull : (b += \"\", function() {\n        var a = this.getAttribute(name), i;\n        return a !== b && (i = interpolate(a, b), function(t) {\n          this.setAttribute(name, i(t));\n        });\n      });\n    }\n    function attrTweenNS(b) {\n      return b == null ? attrNullNS : (b += \"\", function() {\n        var a = this.getAttributeNS(name.space, name.local), i;\n        return a !== b && (i = interpolate(a, b), function(t) {\n          this.setAttributeNS(name.space, name.local, i(t));\n        });\n      });\n    }\n    return d3_transition_tween(this, \"attr.\" + nameNS, value, name.local ? attrTweenNS : attrTween);\n  };\n  d3_transitionPrototype.attrTween = function(nameNS, tween) {\n    var name = d3.ns.qualify(nameNS);\n    function attrTween(d, i) {\n      var f = tween.call(this, d, i, this.getAttribute(name));\n      return f && function(t) {\n        this.setAttribute(name, f(t));\n      };\n    }\n    function attrTweenNS(d, i) {\n      var f = tween.call(this, d, i, this.getAttributeNS(name.space, name.local));\n      return f && function(t) {\n        this.setAttributeNS(name.space, name.local, f(t));\n      };\n    }\n    return this.tween(\"attr.\" + nameNS, name.local ? attrTweenNS : attrTween);\n  };\n  d3_transitionPrototype.style = function(name, value, priority) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n        for (priority in name) this.style(priority, name[priority], value);\n        return this;\n      }\n      priority = \"\";\n    }\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n    function styleString(b) {\n      return b == null ? styleNull : (b += \"\", function() {\n        var a = d3_window(this).getComputedStyle(this, null).getPropertyValue(name), i;\n        return a !== b && (i = d3_interpolate(a, b), function(t) {\n          this.style.setProperty(name, i(t), priority);\n        });\n      });\n    }\n    return d3_transition_tween(this, \"style.\" + name, value, styleString);\n  };\n  d3_transitionPrototype.styleTween = function(name, tween, priority) {\n    if (arguments.length < 3) priority = \"\";\n    function styleTween(d, i) {\n      var f = tween.call(this, d, i, d3_window(this).getComputedStyle(this, null).getPropertyValue(name));\n      return f && function(t) {\n        this.style.setProperty(name, f(t), priority);\n      };\n    }\n    return this.tween(\"style.\" + name, styleTween);\n  };\n  d3_transitionPrototype.text = function(value) {\n    return d3_transition_tween(this, \"text\", value, d3_transition_text);\n  };\n  function d3_transition_text(b) {\n    if (b == null) b = \"\";\n    return function() {\n      this.textContent = b;\n    };\n  }\n  d3_transitionPrototype.remove = function() {\n    var ns = this.namespace;\n    return this.each(\"end.transition\", function() {\n      var p;\n      if (this[ns].count < 2 && (p = this.parentNode)) p.removeChild(this);\n    });\n  };\n  d3_transitionPrototype.ease = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].ease;\n    if (typeof value !== \"function\") value = d3.ease.apply(d3, arguments);\n    return d3_selection_each(this, function(node) {\n      node[ns][id].ease = value;\n    });\n  };\n  d3_transitionPrototype.delay = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].delay;\n    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].delay = +value.call(node, node.__data__, i, j);\n    } : (value = +value, function(node) {\n      node[ns][id].delay = value;\n    }));\n  };\n  d3_transitionPrototype.duration = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].duration;\n    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].duration = Math.max(1, value.call(node, node.__data__, i, j));\n    } : (value = Math.max(1, value), function(node) {\n      node[ns][id].duration = value;\n    }));\n  };\n  d3_transitionPrototype.each = function(type, listener) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 2) {\n      var inherit = d3_transitionInherit, inheritId = d3_transitionInheritId;\n      try {\n        d3_transitionInheritId = id;\n        d3_selection_each(this, function(node, i, j) {\n          d3_transitionInherit = node[ns][id];\n          type.call(node, node.__data__, i, j);\n        });\n      } finally {\n        d3_transitionInherit = inherit;\n        d3_transitionInheritId = inheritId;\n      }\n    } else {\n      d3_selection_each(this, function(node) {\n        var transition = node[ns][id];\n        (transition.event || (transition.event = d3.dispatch(\"start\", \"end\", \"interrupt\"))).on(type, listener);\n      });\n    }\n    return this;\n  };\n  d3_transitionPrototype.transition = function() {\n    var id0 = this.id, id1 = ++d3_transitionId, ns = this.namespace, subgroups = [], subgroup, group, node, transition;\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if (node = group[i]) {\n          transition = node[ns][id0];\n          d3_transitionNode(node, i, ns, id1, {\n            time: transition.time,\n            ease: transition.ease,\n            delay: transition.delay + transition.duration,\n            duration: transition.duration\n          });\n        }\n        subgroup.push(node);\n      }\n    }\n    return d3_transition(subgroups, ns, id1);\n  };\n  function d3_transitionNamespace(name) {\n    return name == null ? \"__transition__\" : \"__transition_\" + name + \"__\";\n  }\n  function d3_transitionNode(node, i, ns, id, inherit) {\n    var lock = node[ns] || (node[ns] = {\n      active: 0,\n      count: 0\n    }), transition = lock[id], time, timer, duration, ease, tweens;\n    function schedule(elapsed) {\n      var delay = transition.delay;\n      timer.t = delay + time;\n      if (delay <= elapsed) return start(elapsed - delay);\n      timer.c = start;\n    }\n    function start(elapsed) {\n      var activeId = lock.active, active = lock[activeId];\n      if (active) {\n        active.timer.c = null;\n        active.timer.t = NaN;\n        --lock.count;\n        delete lock[activeId];\n        active.event && active.event.interrupt.call(node, node.__data__, active.index);\n      }\n      for (var cancelId in lock) {\n        if (+cancelId < id) {\n          var cancel = lock[cancelId];\n          cancel.timer.c = null;\n          cancel.timer.t = NaN;\n          --lock.count;\n          delete lock[cancelId];\n        }\n      }\n      timer.c = tick;\n      d3_timer(function() {\n        if (timer.c && tick(elapsed || 1)) {\n          timer.c = null;\n          timer.t = NaN;\n        }\n        return 1;\n      }, 0, time);\n      lock.active = id;\n      transition.event && transition.event.start.call(node, node.__data__, i);\n      tweens = [];\n      transition.tween.forEach(function(key, value) {\n        if (value = value.call(node, node.__data__, i)) {\n          tweens.push(value);\n        }\n      });\n      ease = transition.ease;\n      duration = transition.duration;\n    }\n    function tick(elapsed) {\n      var t = elapsed / duration, e = ease(t), n = tweens.length;\n      while (n > 0) {\n        tweens[--n].call(node, e);\n      }\n      if (t >= 1) {\n        transition.event && transition.event.end.call(node, node.__data__, i);\n        if (--lock.count) delete lock[id]; else delete node[ns];\n        return 1;\n      }\n    }\n    if (!transition) {\n      time = inherit.time;\n      timer = d3_timer(schedule, 0, time);\n      transition = lock[id] = {\n        tween: new d3_Map(),\n        time: time,\n        timer: timer,\n        delay: inherit.delay,\n        duration: inherit.duration,\n        ease: inherit.ease,\n        index: i\n      };\n      inherit = null;\n      ++lock.count;\n    }\n  }\n  d3.svg.axis = function() {\n    var scale = d3.scale.linear(), orient = d3_svg_axisDefaultOrient, innerTickSize = 6, outerTickSize = 6, tickPadding = 3, tickArguments_ = [ 10 ], tickValues = null, tickFormat_;\n    function axis(g) {\n      g.each(function() {\n        var g = d3.select(this);\n        var scale0 = this.__chart__ || scale, scale1 = this.__chart__ = scale.copy();\n        var ticks = tickValues == null ? scale1.ticks ? scale1.ticks.apply(scale1, tickArguments_) : scale1.domain() : tickValues, tickFormat = tickFormat_ == null ? scale1.tickFormat ? scale1.tickFormat.apply(scale1, tickArguments_) : d3_identity : tickFormat_, tick = g.selectAll(\".tick\").data(ticks, scale1), tickEnter = tick.enter().insert(\"g\", \".domain\").attr(\"class\", \"tick\").style(\"opacity\", ε), tickExit = d3.transition(tick.exit()).style(\"opacity\", ε).remove(), tickUpdate = d3.transition(tick.order()).style(\"opacity\", 1), tickSpacing = Math.max(innerTickSize, 0) + tickPadding, tickTransform;\n        var range = d3_scaleRange(scale1), path = g.selectAll(\".domain\").data([ 0 ]), pathUpdate = (path.enter().append(\"path\").attr(\"class\", \"domain\"), \n        d3.transition(path));\n        tickEnter.append(\"line\");\n        tickEnter.append(\"text\");\n        var lineEnter = tickEnter.select(\"line\"), lineUpdate = tickUpdate.select(\"line\"), text = tick.select(\"text\").text(tickFormat), textEnter = tickEnter.select(\"text\"), textUpdate = tickUpdate.select(\"text\"), sign = orient === \"top\" || orient === \"left\" ? -1 : 1, x1, x2, y1, y2;\n        if (orient === \"bottom\" || orient === \"top\") {\n          tickTransform = d3_svg_axisX, x1 = \"x\", y1 = \"y\", x2 = \"x2\", y2 = \"y2\";\n          text.attr(\"dy\", sign < 0 ? \"0em\" : \".71em\").style(\"text-anchor\", \"middle\");\n          pathUpdate.attr(\"d\", \"M\" + range[0] + \",\" + sign * outerTickSize + \"V0H\" + range[1] + \"V\" + sign * outerTickSize);\n        } else {\n          tickTransform = d3_svg_axisY, x1 = \"y\", y1 = \"x\", x2 = \"y2\", y2 = \"x2\";\n          text.attr(\"dy\", \".32em\").style(\"text-anchor\", sign < 0 ? \"end\" : \"start\");\n          pathUpdate.attr(\"d\", \"M\" + sign * outerTickSize + \",\" + range[0] + \"H0V\" + range[1] + \"H\" + sign * outerTickSize);\n        }\n        lineEnter.attr(y2, sign * innerTickSize);\n        textEnter.attr(y1, sign * tickSpacing);\n        lineUpdate.attr(x2, 0).attr(y2, sign * innerTickSize);\n        textUpdate.attr(x1, 0).attr(y1, sign * tickSpacing);\n        if (scale1.rangeBand) {\n          var x = scale1, dx = x.rangeBand() / 2;\n          scale0 = scale1 = function(d) {\n            return x(d) + dx;\n          };\n        } else if (scale0.rangeBand) {\n          scale0 = scale1;\n        } else {\n          tickExit.call(tickTransform, scale1, scale0);\n        }\n        tickEnter.call(tickTransform, scale0, scale1);\n        tickUpdate.call(tickTransform, scale1, scale1);\n      });\n    }\n    axis.scale = function(x) {\n      if (!arguments.length) return scale;\n      scale = x;\n      return axis;\n    };\n    axis.orient = function(x) {\n      if (!arguments.length) return orient;\n      orient = x in d3_svg_axisOrients ? x + \"\" : d3_svg_axisDefaultOrient;\n      return axis;\n    };\n    axis.ticks = function() {\n      if (!arguments.length) return tickArguments_;\n      tickArguments_ = d3_array(arguments);\n      return axis;\n    };\n    axis.tickValues = function(x) {\n      if (!arguments.length) return tickValues;\n      tickValues = x;\n      return axis;\n    };\n    axis.tickFormat = function(x) {\n      if (!arguments.length) return tickFormat_;\n      tickFormat_ = x;\n      return axis;\n    };\n    axis.tickSize = function(x) {\n      var n = arguments.length;\n      if (!n) return innerTickSize;\n      innerTickSize = +x;\n      outerTickSize = +arguments[n - 1];\n      return axis;\n    };\n    axis.innerTickSize = function(x) {\n      if (!arguments.length) return innerTickSize;\n      innerTickSize = +x;\n      return axis;\n    };\n    axis.outerTickSize = function(x) {\n      if (!arguments.length) return outerTickSize;\n      outerTickSize = +x;\n      return axis;\n    };\n    axis.tickPadding = function(x) {\n      if (!arguments.length) return tickPadding;\n      tickPadding = +x;\n      return axis;\n    };\n    axis.tickSubdivide = function() {\n      return arguments.length && axis;\n    };\n    return axis;\n  };\n  var d3_svg_axisDefaultOrient = \"bottom\", d3_svg_axisOrients = {\n    top: 1,\n    right: 1,\n    bottom: 1,\n    left: 1\n  };\n  function d3_svg_axisX(selection, x0, x1) {\n    selection.attr(\"transform\", function(d) {\n      var v0 = x0(d);\n      return \"translate(\" + (isFinite(v0) ? v0 : x1(d)) + \",0)\";\n    });\n  }\n  function d3_svg_axisY(selection, y0, y1) {\n    selection.attr(\"transform\", function(d) {\n      var v0 = y0(d);\n      return \"translate(0,\" + (isFinite(v0) ? v0 : y1(d)) + \")\";\n    });\n  }\n  d3.svg.brush = function() {\n    var event = d3_eventDispatch(brush, \"brushstart\", \"brush\", \"brushend\"), x = null, y = null, xExtent = [ 0, 0 ], yExtent = [ 0, 0 ], xExtentDomain, yExtentDomain, xClamp = true, yClamp = true, resizes = d3_svg_brushResizes[0];\n    function brush(g) {\n      g.each(function() {\n        var g = d3.select(this).style(\"pointer-events\", \"all\").style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\").on(\"mousedown.brush\", brushstart).on(\"touchstart.brush\", brushstart);\n        var background = g.selectAll(\".background\").data([ 0 ]);\n        background.enter().append(\"rect\").attr(\"class\", \"background\").style(\"visibility\", \"hidden\").style(\"cursor\", \"crosshair\");\n        g.selectAll(\".extent\").data([ 0 ]).enter().append(\"rect\").attr(\"class\", \"extent\").style(\"cursor\", \"move\");\n        var resize = g.selectAll(\".resize\").data(resizes, d3_identity);\n        resize.exit().remove();\n        resize.enter().append(\"g\").attr(\"class\", function(d) {\n          return \"resize \" + d;\n        }).style(\"cursor\", function(d) {\n          return d3_svg_brushCursor[d];\n        }).append(\"rect\").attr(\"x\", function(d) {\n          return /[ew]$/.test(d) ? -3 : null;\n        }).attr(\"y\", function(d) {\n          return /^[ns]/.test(d) ? -3 : null;\n        }).attr(\"width\", 6).attr(\"height\", 6).style(\"visibility\", \"hidden\");\n        resize.style(\"display\", brush.empty() ? \"none\" : null);\n        var gUpdate = d3.transition(g), backgroundUpdate = d3.transition(background), range;\n        if (x) {\n          range = d3_scaleRange(x);\n          backgroundUpdate.attr(\"x\", range[0]).attr(\"width\", range[1] - range[0]);\n          redrawX(gUpdate);\n        }\n        if (y) {\n          range = d3_scaleRange(y);\n          backgroundUpdate.attr(\"y\", range[0]).attr(\"height\", range[1] - range[0]);\n          redrawY(gUpdate);\n        }\n        redraw(gUpdate);\n      });\n    }\n    brush.event = function(g) {\n      g.each(function() {\n        var event_ = event.of(this, arguments), extent1 = {\n          x: xExtent,\n          y: yExtent,\n          i: xExtentDomain,\n          j: yExtentDomain\n        }, extent0 = this.__chart__ || extent1;\n        this.__chart__ = extent1;\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.brush\", function() {\n            xExtentDomain = extent0.i;\n            yExtentDomain = extent0.j;\n            xExtent = extent0.x;\n            yExtent = extent0.y;\n            event_({\n              type: \"brushstart\"\n            });\n          }).tween(\"brush:brush\", function() {\n            var xi = d3_interpolateArray(xExtent, extent1.x), yi = d3_interpolateArray(yExtent, extent1.y);\n            xExtentDomain = yExtentDomain = null;\n            return function(t) {\n              xExtent = extent1.x = xi(t);\n              yExtent = extent1.y = yi(t);\n              event_({\n                type: \"brush\",\n                mode: \"resize\"\n              });\n            };\n          }).each(\"end.brush\", function() {\n            xExtentDomain = extent1.i;\n            yExtentDomain = extent1.j;\n            event_({\n              type: \"brush\",\n              mode: \"resize\"\n            });\n            event_({\n              type: \"brushend\"\n            });\n          });\n        } else {\n          event_({\n            type: \"brushstart\"\n          });\n          event_({\n            type: \"brush\",\n            mode: \"resize\"\n          });\n          event_({\n            type: \"brushend\"\n          });\n        }\n      });\n    };\n    function redraw(g) {\n      g.selectAll(\".resize\").attr(\"transform\", function(d) {\n        return \"translate(\" + xExtent[+/e$/.test(d)] + \",\" + yExtent[+/^s/.test(d)] + \")\";\n      });\n    }\n    function redrawX(g) {\n      g.select(\".extent\").attr(\"x\", xExtent[0]);\n      g.selectAll(\".extent,.n>rect,.s>rect\").attr(\"width\", xExtent[1] - xExtent[0]);\n    }\n    function redrawY(g) {\n      g.select(\".extent\").attr(\"y\", yExtent[0]);\n      g.selectAll(\".extent,.e>rect,.w>rect\").attr(\"height\", yExtent[1] - yExtent[0]);\n    }\n    function brushstart() {\n      var target = this, eventTarget = d3.select(d3.event.target), event_ = event.of(target, arguments), g = d3.select(target), resizing = eventTarget.datum(), resizingX = !/^(n|s)$/.test(resizing) && x, resizingY = !/^(e|w)$/.test(resizing) && y, dragging = eventTarget.classed(\"extent\"), dragRestore = d3_event_dragSuppress(target), center, origin = d3.mouse(target), offset;\n      var w = d3.select(d3_window(target)).on(\"keydown.brush\", keydown).on(\"keyup.brush\", keyup);\n      if (d3.event.changedTouches) {\n        w.on(\"touchmove.brush\", brushmove).on(\"touchend.brush\", brushend);\n      } else {\n        w.on(\"mousemove.brush\", brushmove).on(\"mouseup.brush\", brushend);\n      }\n      g.interrupt().selectAll(\"*\").interrupt();\n      if (dragging) {\n        origin[0] = xExtent[0] - origin[0];\n        origin[1] = yExtent[0] - origin[1];\n      } else if (resizing) {\n        var ex = +/w$/.test(resizing), ey = +/^n/.test(resizing);\n        offset = [ xExtent[1 - ex] - origin[0], yExtent[1 - ey] - origin[1] ];\n        origin[0] = xExtent[ex];\n        origin[1] = yExtent[ey];\n      } else if (d3.event.altKey) center = origin.slice();\n      g.style(\"pointer-events\", \"none\").selectAll(\".resize\").style(\"display\", null);\n      d3.select(\"body\").style(\"cursor\", eventTarget.style(\"cursor\"));\n      event_({\n        type: \"brushstart\"\n      });\n      brushmove();\n      function keydown() {\n        if (d3.event.keyCode == 32) {\n          if (!dragging) {\n            center = null;\n            origin[0] -= xExtent[1];\n            origin[1] -= yExtent[1];\n            dragging = 2;\n          }\n          d3_eventPreventDefault();\n        }\n      }\n      function keyup() {\n        if (d3.event.keyCode == 32 && dragging == 2) {\n          origin[0] += xExtent[1];\n          origin[1] += yExtent[1];\n          dragging = 0;\n          d3_eventPreventDefault();\n        }\n      }\n      function brushmove() {\n        var point = d3.mouse(target), moved = false;\n        if (offset) {\n          point[0] += offset[0];\n          point[1] += offset[1];\n        }\n        if (!dragging) {\n          if (d3.event.altKey) {\n            if (!center) center = [ (xExtent[0] + xExtent[1]) / 2, (yExtent[0] + yExtent[1]) / 2 ];\n            origin[0] = xExtent[+(point[0] < center[0])];\n            origin[1] = yExtent[+(point[1] < center[1])];\n          } else center = null;\n        }\n        if (resizingX && move1(point, x, 0)) {\n          redrawX(g);\n          moved = true;\n        }\n        if (resizingY && move1(point, y, 1)) {\n          redrawY(g);\n          moved = true;\n        }\n        if (moved) {\n          redraw(g);\n          event_({\n            type: \"brush\",\n            mode: dragging ? \"move\" : \"resize\"\n          });\n        }\n      }\n      function move1(point, scale, i) {\n        var range = d3_scaleRange(scale), r0 = range[0], r1 = range[1], position = origin[i], extent = i ? yExtent : xExtent, size = extent[1] - extent[0], min, max;\n        if (dragging) {\n          r0 -= position;\n          r1 -= size + position;\n        }\n        min = (i ? yClamp : xClamp) ? Math.max(r0, Math.min(r1, point[i])) : point[i];\n        if (dragging) {\n          max = (min += position) + size;\n        } else {\n          if (center) position = Math.max(r0, Math.min(r1, 2 * center[i] - min));\n          if (position < min) {\n            max = min;\n            min = position;\n          } else {\n            max = position;\n          }\n        }\n        if (extent[0] != min || extent[1] != max) {\n          if (i) yExtentDomain = null; else xExtentDomain = null;\n          extent[0] = min;\n          extent[1] = max;\n          return true;\n        }\n      }\n      function brushend() {\n        brushmove();\n        g.style(\"pointer-events\", \"all\").selectAll(\".resize\").style(\"display\", brush.empty() ? \"none\" : null);\n        d3.select(\"body\").style(\"cursor\", null);\n        w.on(\"mousemove.brush\", null).on(\"mouseup.brush\", null).on(\"touchmove.brush\", null).on(\"touchend.brush\", null).on(\"keydown.brush\", null).on(\"keyup.brush\", null);\n        dragRestore();\n        event_({\n          type: \"brushend\"\n        });\n      }\n    }\n    brush.x = function(z) {\n      if (!arguments.length) return x;\n      x = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n    brush.y = function(z) {\n      if (!arguments.length) return y;\n      y = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n    brush.clamp = function(z) {\n      if (!arguments.length) return x && y ? [ xClamp, yClamp ] : x ? xClamp : y ? yClamp : null;\n      if (x && y) xClamp = !!z[0], yClamp = !!z[1]; else if (x) xClamp = !!z; else if (y) yClamp = !!z;\n      return brush;\n    };\n    brush.extent = function(z) {\n      var x0, x1, y0, y1, t;\n      if (!arguments.length) {\n        if (x) {\n          if (xExtentDomain) {\n            x0 = xExtentDomain[0], x1 = xExtentDomain[1];\n          } else {\n            x0 = xExtent[0], x1 = xExtent[1];\n            if (x.invert) x0 = x.invert(x0), x1 = x.invert(x1);\n            if (x1 < x0) t = x0, x0 = x1, x1 = t;\n          }\n        }\n        if (y) {\n          if (yExtentDomain) {\n            y0 = yExtentDomain[0], y1 = yExtentDomain[1];\n          } else {\n            y0 = yExtent[0], y1 = yExtent[1];\n            if (y.invert) y0 = y.invert(y0), y1 = y.invert(y1);\n            if (y1 < y0) t = y0, y0 = y1, y1 = t;\n          }\n        }\n        return x && y ? [ [ x0, y0 ], [ x1, y1 ] ] : x ? [ x0, x1 ] : y && [ y0, y1 ];\n      }\n      if (x) {\n        x0 = z[0], x1 = z[1];\n        if (y) x0 = x0[0], x1 = x1[0];\n        xExtentDomain = [ x0, x1 ];\n        if (x.invert) x0 = x(x0), x1 = x(x1);\n        if (x1 < x0) t = x0, x0 = x1, x1 = t;\n        if (x0 != xExtent[0] || x1 != xExtent[1]) xExtent = [ x0, x1 ];\n      }\n      if (y) {\n        y0 = z[0], y1 = z[1];\n        if (x) y0 = y0[1], y1 = y1[1];\n        yExtentDomain = [ y0, y1 ];\n        if (y.invert) y0 = y(y0), y1 = y(y1);\n        if (y1 < y0) t = y0, y0 = y1, y1 = t;\n        if (y0 != yExtent[0] || y1 != yExtent[1]) yExtent = [ y0, y1 ];\n      }\n      return brush;\n    };\n    brush.clear = function() {\n      if (!brush.empty()) {\n        xExtent = [ 0, 0 ], yExtent = [ 0, 0 ];\n        xExtentDomain = yExtentDomain = null;\n      }\n      return brush;\n    };\n    brush.empty = function() {\n      return !!x && xExtent[0] == xExtent[1] || !!y && yExtent[0] == yExtent[1];\n    };\n    return d3.rebind(brush, event, \"on\");\n  };\n  var d3_svg_brushCursor = {\n    n: \"ns-resize\",\n    e: \"ew-resize\",\n    s: \"ns-resize\",\n    w: \"ew-resize\",\n    nw: \"nwse-resize\",\n    ne: \"nesw-resize\",\n    se: \"nwse-resize\",\n    sw: \"nesw-resize\"\n  };\n  var d3_svg_brushResizes = [ [ \"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\" ], [ \"e\", \"w\" ], [ \"n\", \"s\" ], [] ];\n  var d3_time_format = d3_time.format = d3_locale_enUS.timeFormat;\n  var d3_time_formatUtc = d3_time_format.utc;\n  var d3_time_formatIso = d3_time_formatUtc(\"%Y-%m-%dT%H:%M:%S.%LZ\");\n  d3_time_format.iso = Date.prototype.toISOString && +new Date(\"2000-01-01T00:00:00.000Z\") ? d3_time_formatIsoNative : d3_time_formatIso;\n  function d3_time_formatIsoNative(date) {\n    return date.toISOString();\n  }\n  d3_time_formatIsoNative.parse = function(string) {\n    var date = new Date(string);\n    return isNaN(date) ? null : date;\n  };\n  d3_time_formatIsoNative.toString = d3_time_formatIso.toString;\n  d3_time.second = d3_time_interval(function(date) {\n    return new d3_date(Math.floor(date / 1e3) * 1e3);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 1e3);\n  }, function(date) {\n    return date.getSeconds();\n  });\n  d3_time.seconds = d3_time.second.range;\n  d3_time.seconds.utc = d3_time.second.utc.range;\n  d3_time.minute = d3_time_interval(function(date) {\n    return new d3_date(Math.floor(date / 6e4) * 6e4);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 6e4);\n  }, function(date) {\n    return date.getMinutes();\n  });\n  d3_time.minutes = d3_time.minute.range;\n  d3_time.minutes.utc = d3_time.minute.utc.range;\n  d3_time.hour = d3_time_interval(function(date) {\n    var timezone = date.getTimezoneOffset() / 60;\n    return new d3_date((Math.floor(date / 36e5 - timezone) + timezone) * 36e5);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 36e5);\n  }, function(date) {\n    return date.getHours();\n  });\n  d3_time.hours = d3_time.hour.range;\n  d3_time.hours.utc = d3_time.hour.utc.range;\n  d3_time.month = d3_time_interval(function(date) {\n    date = d3_time.day(date);\n    date.setDate(1);\n    return date;\n  }, function(date, offset) {\n    date.setMonth(date.getMonth() + offset);\n  }, function(date) {\n    return date.getMonth();\n  });\n  d3_time.months = d3_time.month.range;\n  d3_time.months.utc = d3_time.month.utc.range;\n  function d3_time_scale(linear, methods, format) {\n    function scale(x) {\n      return linear(x);\n    }\n    scale.invert = function(x) {\n      return d3_time_scaleDate(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return linear.domain().map(d3_time_scaleDate);\n      linear.domain(x);\n      return scale;\n    };\n    function tickMethod(extent, count) {\n      var span = extent[1] - extent[0], target = span / count, i = d3.bisect(d3_time_scaleSteps, target);\n      return i == d3_time_scaleSteps.length ? [ methods.year, d3_scale_linearTickRange(extent.map(function(d) {\n        return d / 31536e6;\n      }), count)[2] ] : !i ? [ d3_time_scaleMilliseconds, d3_scale_linearTickRange(extent, count)[2] ] : methods[target / d3_time_scaleSteps[i - 1] < d3_time_scaleSteps[i] / target ? i - 1 : i];\n    }\n    scale.nice = function(interval, skip) {\n      var domain = scale.domain(), extent = d3_scaleExtent(domain), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" && tickMethod(extent, interval);\n      if (method) interval = method[0], skip = method[1];\n      function skipped(date) {\n        return !isNaN(date) && !interval.range(date, d3_time_scaleDate(+date + 1), skip).length;\n      }\n      return scale.domain(d3_scale_nice(domain, skip > 1 ? {\n        floor: function(date) {\n          while (skipped(date = interval.floor(date))) date = d3_time_scaleDate(date - 1);\n          return date;\n        },\n        ceil: function(date) {\n          while (skipped(date = interval.ceil(date))) date = d3_time_scaleDate(+date + 1);\n          return date;\n        }\n      } : interval));\n    };\n    scale.ticks = function(interval, skip) {\n      var extent = d3_scaleExtent(scale.domain()), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" ? tickMethod(extent, interval) : !interval.range && [ {\n        range: interval\n      }, skip ];\n      if (method) interval = method[0], skip = method[1];\n      return interval.range(extent[0], d3_time_scaleDate(+extent[1] + 1), skip < 1 ? 1 : skip);\n    };\n    scale.tickFormat = function() {\n      return format;\n    };\n    scale.copy = function() {\n      return d3_time_scale(linear.copy(), methods, format);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  function d3_time_scaleDate(t) {\n    return new Date(t);\n  }\n  var d3_time_scaleSteps = [ 1e3, 5e3, 15e3, 3e4, 6e4, 3e5, 9e5, 18e5, 36e5, 108e5, 216e5, 432e5, 864e5, 1728e5, 6048e5, 2592e6, 7776e6, 31536e6 ];\n  var d3_time_scaleLocalMethods = [ [ d3_time.second, 1 ], [ d3_time.second, 5 ], [ d3_time.second, 15 ], [ d3_time.second, 30 ], [ d3_time.minute, 1 ], [ d3_time.minute, 5 ], [ d3_time.minute, 15 ], [ d3_time.minute, 30 ], [ d3_time.hour, 1 ], [ d3_time.hour, 3 ], [ d3_time.hour, 6 ], [ d3_time.hour, 12 ], [ d3_time.day, 1 ], [ d3_time.day, 2 ], [ d3_time.week, 1 ], [ d3_time.month, 1 ], [ d3_time.month, 3 ], [ d3_time.year, 1 ] ];\n  var d3_time_scaleLocalFormat = d3_time_format.multi([ [ \".%L\", function(d) {\n    return d.getMilliseconds();\n  } ], [ \":%S\", function(d) {\n    return d.getSeconds();\n  } ], [ \"%I:%M\", function(d) {\n    return d.getMinutes();\n  } ], [ \"%I %p\", function(d) {\n    return d.getHours();\n  } ], [ \"%a %d\", function(d) {\n    return d.getDay() && d.getDate() != 1;\n  } ], [ \"%b %d\", function(d) {\n    return d.getDate() != 1;\n  } ], [ \"%B\", function(d) {\n    return d.getMonth();\n  } ], [ \"%Y\", d3_true ] ]);\n  var d3_time_scaleMilliseconds = {\n    range: function(start, stop, step) {\n      return d3.range(Math.ceil(start / step) * step, +stop, step).map(d3_time_scaleDate);\n    },\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n  d3_time_scaleLocalMethods.year = d3_time.year;\n  d3_time.scale = function() {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleLocalMethods, d3_time_scaleLocalFormat);\n  };\n  var d3_time_scaleUtcMethods = d3_time_scaleLocalMethods.map(function(m) {\n    return [ m[0].utc, m[1] ];\n  });\n  var d3_time_scaleUtcFormat = d3_time_formatUtc.multi([ [ \".%L\", function(d) {\n    return d.getUTCMilliseconds();\n  } ], [ \":%S\", function(d) {\n    return d.getUTCSeconds();\n  } ], [ \"%I:%M\", function(d) {\n    return d.getUTCMinutes();\n  } ], [ \"%I %p\", function(d) {\n    return d.getUTCHours();\n  } ], [ \"%a %d\", function(d) {\n    return d.getUTCDay() && d.getUTCDate() != 1;\n  } ], [ \"%b %d\", function(d) {\n    return d.getUTCDate() != 1;\n  } ], [ \"%B\", function(d) {\n    return d.getUTCMonth();\n  } ], [ \"%Y\", d3_true ] ]);\n  d3_time_scaleUtcMethods.year = d3_time.year.utc;\n  d3_time.scale.utc = function() {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleUtcMethods, d3_time_scaleUtcFormat);\n  };\n  d3.text = d3_xhrType(function(request) {\n    return request.responseText;\n  });\n  d3.json = function(url, callback) {\n    return d3_xhr(url, \"application/json\", d3_json, callback);\n  };\n  function d3_json(request) {\n    return JSON.parse(request.responseText);\n  }\n  d3.html = function(url, callback) {\n    return d3_xhr(url, \"text/html\", d3_html, callback);\n  };\n  function d3_html(request) {\n    var range = d3_document.createRange();\n    range.selectNode(d3_document.body);\n    return range.createContextualFragment(request.responseText);\n  }\n  d3.xml = d3_xhrType(function(request) {\n    return request.responseXML;\n  });\n  if (typeof define === \"function\" && define.amd) this.d3 = d3, define(d3); else if (typeof module === \"object\" && module.exports) module.exports = d3; else this.d3 = d3;\n}();","export function testObject(input) {\n  if (input !== null && typeof input.getTime === 'function' && !isNaN(input.getTime())) {\n    return true;\n  }\n  return false;\n}\n\nexport function testString(input) {\n  const ISO_8601 = /^\\d{4}-\\d\\d-\\d\\dT\\d\\d:\\d\\d:\\d\\d(\\.\\d+)?(([+-]\\d\\d:\\d\\d)|Z)?$/i;\n  return ISO_8601.test(input);\n}\n\nexport default function (input) {\n  if (typeof input === 'object') {\n    return testObject(input);\n  } else if (typeof input === 'string') {\n    return testString(input);\n  }\n  return false;\n}\n","export default function (len) {\n  const list = [];\n  for (let i = 0; i < len; i++) {\n    list.push(null);\n  }\n  return list;\n}\n","import createNullList from '../utils/create-null-list';\nimport { each } from '../../utils/each';\n\nexport function appendColumn(str, input) {\n  const self = this;\n  const args = Array.prototype.slice.call(arguments, 2);\n  const label = (str !== undefined) ? str : null;\n\n  if (typeof input === 'function') {\n    self.matrix[0].push(label);\n    each(self.matrix, function(row, i) {\n      let cell;\n      if (i > 0) {\n        cell = input.call(self, row, i);\n        if (typeof cell === 'undefined') {\n          cell = null;\n        }\n        self.matrix[i].push(cell);\n      }\n    });\n  }\n\n  else if (!input || input instanceof Array) {\n    input = input || [];\n\n    if (input.length <= self.matrix.length - 1) {\n      input = input.concat(createNullList(self.matrix.length - 1 - input.length));\n    }\n    else {\n      // If this new column is longer than existing columns,\n      // we need to update the rest to match ...\n      each(input, function(value, i){\n        if (self.matrix.length -1 < input.length) {\n          appendRow.call(self, String(self.matrix.length));\n        }\n      });\n    }\n\n    self.matrix[0].push(label);\n    each(input, function(value, i){\n      self.matrix[i+1][self.matrix[0].length-1] = value;\n    });\n\n  }\n\n  return self;\n}\n\nexport function appendRow(str, input) {\n  const self = this;\n  const args = Array.prototype.slice.call(arguments, 2);\n  const label = (str !== undefined) ? str : null;\n  const newRow = [];\n\n  newRow.push(label);\n\n  if (typeof input === 'function') {\n    each(self.matrix[0], function(label, i){\n      let col;\n      let cell;\n      if (i > 0) {\n        col = self.selectColumn(i);\n        cell = input.call(self, col, i);\n        if (typeof cell === 'undefined') {\n          cell = null;\n        }\n        newRow.push(cell);\n      }\n    });\n    self.matrix.push(newRow);\n  }\n\n  else if (!input || input instanceof Array) {\n    input = input || [];\n\n    if (input.length <= self.matrix[0].length - 1) {\n      input = input.concat( createNullList( self.matrix[0].length - 1 - input.length ) );\n    }\n    else {\n      each(input, function(value, i){\n        if (self.matrix[0].length -1 < input.length) {\n          appendColumn.call(self, String( self.matrix[0].length));\n        }\n      });\n    }\n\n    self.matrix.push(newRow.concat(input));\n  }\n\n  return self;\n}\n","/**\n * Strip html tags from string\n *\n * @param  {string} string The string to strip\n * @return {string}\n * @public\n */\n\nexport function stripHtmlTags(inputString) {\n  return inputString.replace(/(<([^>]+)>)/ig, '');\n}\n","import { each } from '../../utils/each';\nimport { extend } from '../../utils/extend';\n\nconst helpers = {};\n\nfunction average(arr, start, end){\n  var set = arr.slice(start||0, (end ? end+1 : arr.length)),\n      sum = 0,\n      avg = null;\n\n  // Add numeric values\n  each(set, function(val, i){\n    if (typeof val === 'number' && !isNaN(parseFloat(val))) {\n      sum += parseFloat(val);\n    }\n  });\n  return sum / set.length;\n}\n\nfunction maximum(arr, start, end){\n  var set = arr.slice(start||0, (end ? end+1 : arr.length)),\n      nums = [];\n\n  // Pull numeric values\n  each(set, function(val, i){\n    if (typeof val === 'number' && !isNaN(parseFloat(val))) {\n      nums.push(parseFloat(val));\n    }\n  });\n  return Math.max.apply(Math, nums);\n}\n\nfunction minimum(arr, start, end){\n  var set = arr.slice(start||0, (end ? end+1 : arr.length)),\n      nums = [];\n\n  // Pull numeric values\n  each(set, function(val, i){\n    if (typeof val === 'number' && !isNaN(parseFloat(val))) {\n      nums.push(parseFloat(val));\n    }\n  });\n  return Math.min.apply(Math, nums);\n}\n\nfunction sum(arr, start, end){\n  // Copy set with given range\n  var set = arr.slice(start||0, (end ? end+1 : arr.length)),\n      sum = 0;\n\n  // Add numeric values\n  each(set, function(val, i){\n    if (typeof val === 'number' && !isNaN(parseFloat(val))) {\n      sum += parseFloat(val);\n    }\n  });\n  return sum;\n}\n\n\n// Convenience methods\n\neach(methods, function(method, name){\n  var capitalized = name.charAt(0).toUpperCase() + name.slice(1);\n  helpers['getColumn' + capitalized] = helpers['getRow' + capitalized] = function(arr){\n    return this[name](arr, 1);\n  };\n});\n\nhelpers['getColumnLabel'] = helpers['getRowIndex'] = function(arr){\n  return arr[0];\n};\n\nexport const methods = {\n  average,\n  maximum,\n  minimum,\n  sum,\n};\n\nextend(methods, helpers);\n\nexport default { methods };\n","// Modifiers\nimport * as append from './modifiers/append';\nimport * as del from './modifiers/delete';\nimport * as filter from './modifiers/filter';\nimport * as insert from './modifiers/insert';\nimport * as select from './modifiers/select';\nimport * as sort from './modifiers/sort';\nimport * as update from './modifiers/update';\n\n// Utils\nimport * as analyses from './utils/analyses';\nimport { extend } from '../utils/extend';\nimport parsers from './utils/parsers';\n\nexport const Dataset = function () {\n  if (this instanceof Dataset === false) {\n    return new Dataset();\n  }\n\n  this.matrix = [\n    ['Index']\n  ];\n  this.meta = {\n    type: undefined\n  };\n}\n\nDataset.prototype.data = function (arr) {\n  if (!arguments.length) return this.matrix;\n  this.matrix = (arr instanceof Array ? arr : null);\n  return this;\n};\n\nDataset.prototype.set = function (coords, value) {\n  if (arguments.length < 2 || coords.length < 2) {\n    throw Error('Incorrect arguments provided for #set method');\n  }\n\n  var colIndex = 'number' === typeof coords[0] ? coords[0] : this.matrix[0].indexOf(coords[0]),\n      rowIndex = 'number' === typeof coords[1] ? coords[1] : select.selectColumn.call(this, 0).indexOf(coords[1]);\n\n  var colResult = select.selectColumn.call(this, coords[0]),\n      rowResult = select.selectRow.call(this, coords[1]);\n\n  // Column doesn't exist, create and reset colIndex\n  if (colResult.length < 1) {\n    append.appendColumn.call(this, String(coords[0]));\n    colIndex = this.matrix[0].length - 1;\n  }\n\n  // Row doesn't exist, create and reset rowIndex\n  if (rowResult.length < 1) {\n    append.appendRow.call(this, String(coords[1]));\n    rowIndex = this.matrix.length - 1;\n  }\n\n  // Set provided value\n  this.matrix[ rowIndex ][ colIndex ] = value;\n  return this;\n};\n\nDataset.prototype.type = function(str){\n  if (!arguments.length) return this.meta['type'];\n  this.meta['type'] = (str ? String(str) : undefined);\n  return this;\n};\n\nextend(Dataset.prototype, append);\nextend(Dataset.prototype, del);\nextend(Dataset.prototype, filter);\nextend(Dataset.prototype, insert);\nextend(Dataset.prototype, select);\nextend(Dataset.prototype, sort);\nextend(Dataset.prototype, update);\n\nextend(Dataset.prototype, analyses);\nDataset.parser = parsers(Dataset);\n\nexport default Dataset;\n","export default {\n  render: function(){\n    var html = '',\n        artifacts = this.view._artifacts.spinner = {},\n        height = this.height() || 35,\n        offsetPadding = (height - 35) / 2,\n        prefixes = ['webkit', 'Moz', 'ms', 'O'],\n        radius = this.view._artifacts.radius = 0,\n        spinner;\n\n    // Build DOM element\n    html += '<div class=\"' + this.theme() + '\">';\n    html +=   '<div class=\"keen-spinner-container\" style=\"height: ' + height + 'px; padding-top: ' + offsetPadding + 'px;\">';\n    html +=     '<div class=\"keen-spinner-indicator\"></div>';\n    html +=   '</div>';\n    html += '</div>';\n    this.el().innerHTML = html;\n\n    spinner = this.el().querySelector('.keen-spinner-indicator');\n    if (spinner.style.animationName === undefined) {\n      radius = 0;\n      artifacts.interval = setInterval(function(){\n        radius = (radius === 350) ? 0 : radius + 10;\n        for (var i = 0; i < prefixes.length; i++) {\n          spinner.style[prefixes[i]] = 'rotate(' + artifacts.radius + 'deg)';\n        }\n      }, 15);\n    }\n  },\n  update: function(){\n    // no special update handling\n    this.render();\n  },\n  destroy: function(){\n    if (this.view._artifacts.spinner) {\n      if (this.view._artifacts.spinner.interval) {\n        clearInterval(this.view._artifacts.spinner.interval);\n      }\n      this.view._artifacts.spinner.radius = 0;\n      try {\n        delete this.view._artifacts.spinner;\n      }\n      catch (e) {\n        this.view._artifacts.spinner = undefined;\n      }\n    }\n    this.el().innerHTML = '';\n  }\n};\n","import { each } from '../../utils/each';\n\nconst defaults = {\n  height: undefined,\n  width: undefined,\n  stickyHeader: true,\n  stickyFooter: false\n};\n\nfunction _generateTableRows(dataset, colWidths, colAligns) {\n  var html = '';\n  for (var i = 0; i < dataset.length; i++) {\n    if (i > 0) {\n      html +=   '<tr>';\n      for (var j = 0; j < dataset[i].length; j++) {\n        html +=   '<td style=\"min-width: '+ (10 * colWidths[j]) +'px; text-align: ' + colAligns[j] + ';\">' + dataset[i][j] + '</td>';\n      }\n      html +=   '</tr>';\n    }\n  }\n  return html;\n}\n\nexport default {\n  render: function(){\n    var dataset = this.data(),\n        el = this.el(),\n        height = (this.height() || defaults.height) - this.el().offsetHeight,\n        theme = this.theme(),\n        width = this.width() || defaults.width;\n\n    var html = '',\n        colAligns = new Array(dataset[0].length),\n        colWidths = new Array(dataset[0].length),\n        fixedHeader;\n\n    var isEmpty = dataset.length === 1 && dataset[0].length === 0;\n    if (isEmpty) {\n      this.message('No data to display');\n      return;\n    }\n\n    // Calculate max column widths\n    each(dataset, function(row){\n      each(row, function(cell, i){\n        if (!colWidths[i]) {\n          colWidths[i] = 0;\n        }\n        colAligns[i] = (typeof cell === 'number') ? 'right' : 'left';\n        colWidths[i] = (String(cell).length > colWidths[i]) ? String(cell).length : colWidths[i];\n      });\n    });\n\n    // Open wrapper\n    html += '<div class=\"' + theme + '-table\" style=\"height: '+(height ? height+'px' : 'auto')+'; width: '+(width ? width+'px' : 'auto')+';\">';\n\n    // Static, scrollable table\n    html +=   '<table class=\"' + theme + '-table-dataset\">';\n    html +=     '<thead>';\n    html +=       '<tr>';\n    for (var i = 0; i < dataset[0].length; i++) {\n      html +=       '<th style=\"width: '+ (10 * colWidths[i]) +'px; text-align: ' + colAligns[i] + ';\">' + dataset[0][i] + '</th>';\n    }\n    html +=       '</tr>';\n    html +=     '</thead>';\n    // Table data\n    html +=     '<tbody>';\n    html +=     _generateTableRows.bind(this, dataset, colWidths, colAligns)();\n    html +=     '</tbody>';\n    html +=   '</table>';\n\n    // Fixed table (header)\n    html +=   '<table class=\"' + theme + '-table-fixed-header\">';\n    html +=     '<thead>';\n    html +=       '<tr>';\n    for (var i = 0; i < dataset[0].length; i++) {\n      html +=       '<th style=\"min-width: '+ (10 * colWidths[i]) +'px; text-align: ' + colAligns[i] + ';\">' + dataset[0][i] + '</th>';\n    }\n    html +=       '</tr>';\n    html +=     '</thead>';\n    html +=   '</table>';\n\n    // Close wrapper\n    html += '</div>';\n\n    // Inject HTML string\n    el.querySelector('.' + theme + '-rendering').innerHTML = html;\n\n    fixedHeader = el.querySelector('.' + theme + '-table-fixed-header');\n    el.querySelector('.' + theme + '-table').onscroll = function(e){\n      fixedHeader.style.top = e.target.scrollTop + 'px';\n    };\n  },\n  update: function(){\n    // no special update handling\n    this.render();\n  },\n  destroy: function(){\n    var el = this.el().querySelector('.' + this.theme() + '-table')\n    if (el && el.onscroll) {\n      el.onscroll = undefined;\n    }\n  }\n};\n","export function prettyNumber(input) {\n  // If it has 3 or fewer sig figs already, just return the number.\n  var input = Number(input),\n      sciNo = input.toPrecision(3),\n      prefix = '',\n      suffixes = ['', 'k', 'M', 'B', 'T'];\n\n  if (Number(sciNo) == input && String(input).length <= 4) {\n    return String(input);\n  }\n\n  if (Math.abs(input) >= 1000000000000000) {\n    return sciNo;\n  }\n\n  if (input >= 1 || input <= -1) {\n    if (input < 0){\n      //Pull off the negative side and stash that.\n      input = -input;\n      prefix = '-';\n    }\n    return prefix + recurse(input, 0);\n  }\n  else {\n    return input.toPrecision(3);\n  }\n\n  function recurse(input, iteration) {\n    var input = String(input);\n    var split = input.split('.');\n    // If there's a dot\n    if (split.length > 1) {\n      // Keep the left hand side only\n      input = split[0];\n      var rhs = split[1];\n      // If the left-hand side is too short, pad until it has 3 digits\n      if (input.length == 2 && rhs.length > 0) {\n        // Pad with right-hand side if possible\n        if (rhs.length > 0) {\n          input = input + '.' + rhs.charAt(0);\n        }\n        // Pad with zeroes if you must\n        else {\n          input += '0';\n        }\n      }\n      else if (input.length == 1 && rhs.length > 0) {\n        input = input + '.' + rhs.charAt(0);\n        // Pad with right-hand side if possible\n        if (rhs.length > 1) {\n          input += rhs.charAt(1);\n        }\n        // Pad with zeroes if you must\n        else {\n          input += '0';\n        }\n      }\n    }\n    var numNumerals = input.length;\n    // if it has a period, then numNumerals is 1 smaller than the string length:\n    if (input.split('.').length > 1) {\n      numNumerals--;\n    }\n    if (numNumerals <= 3) {\n      return String(input) + suffixes[iteration];\n    }\n    else {\n      return recurse(Number(input) / 1000, iteration + 1);\n    }\n  }\n}\n","import { prettyNumber } from '../../utils/pretty-number';\nimport { escapeHtml } from '../../utils/escape-html';\n\nexport default {\n  render: function(){\n    var color = this.colors()[0],\n        theme = this.theme(),\n        title = this.title(),\n        value = '-',\n        height = this.height() || 140,\n        width = this.width(),\n        opts = this.chartOptions(),\n        html = '',\n        prefix = '',\n        suffix = '',\n        formattedNum,\n        valueEl;\n\n    if (typeof this.data()[1][1] === 'number') {\n      value = this.data()[1][1];\n    }\n\n    formattedNum = value;\n    if ( (typeof opts['prettyNumber'] === 'undefined' || opts['prettyNumber'] === true)\n      && !isNaN(parseInt(value)) ) {\n        formattedNum = prettyNumber(value);\n    }\n\n    if (opts['prefix']) {\n      prefix = '<span class=\"' + theme + '-metric-prefix\">' + opts['prefix'] + '</span>';\n    }\n    if (opts['suffix']) {\n      suffix = '<span class=\"' + theme + '-metric-suffix\">' + opts['suffix'] + '</span>';\n    }\n\n    html += '<div class=\"' + theme + '\">';\n    html +=   '<div class=\"' + theme + '-metric\" style=\"background-color: ' + color + '; width: ' + (width ? width + 'px' : 'auto') + ';\" title=\"' + escapeHtml(value) + '\">';\n    html +=     '<span class=\"' + theme + '-metric-value\">' + prefix + escapeHtml(formattedNum) + suffix + '</span>';\n    if (title) {\n      html +=   '<span class=\"' + theme + '-metric-title\">' + escapeHtml(title) + '</span>';\n    }\n    html +=   '</div>';\n    html += '</div>';\n\n    this.el().innerHTML = html;\n    valueEl = this.el().querySelector('.' + theme + '-metric-value');\n    valueEl.style.paddingTop = ((height - this.el().offsetHeight) / 2) + 'px';\n    this.el().querySelector('.' + theme + '-metric').style.height = height + 'px';\n  },\n  update: function(){\n    // no special update handling\n    this.render();\n  },\n  destroy: function(){\n    // no special clean-up\n  }\n};\n","import { escapeHtml } from '../../utils/escape-html';\n\nexport default {\n  render: function(text){\n    var outer = document.createElement('div');\n    var inner = document.createElement('div');\n    var msg = document.createElement('span');\n    var height = this.height() || 140;\n\n    var titleContainer = document.createElement('div');\n    var notesContainer = document.createElement('div');\n\n    outer.className = this.theme();\n    inner.className = this.theme() + '-message';\n    inner.style.width = this.width() + 'px';\n\n    // Create title and notes for message\n    titleContainer.className = this.theme() + '-title';\n    titleContainer.innerHTML = escapeHtml(this.title() || '');\n    notesContainer.className = this.theme() + '-notes';\n    notesContainer.innerHTML = escapeHtml(this.notes() || '');\n\n    msg.innerHTML = escapeHtml(text) || '';\n    inner.appendChild(msg);\n    outer.appendChild(titleContainer);\n    outer.appendChild(inner);\n    outer.appendChild(notesContainer);\n\n    this.el().innerHTML = '';\n    this.el().appendChild(outer);\n\n    var actualInnerHeight = height - titleContainer.offsetHeight - notesContainer.offsetHeight;\n    inner.style.height = actualInnerHeight + 'px';\n    inner.style.paddingTop = (actualInnerHeight / 2 - 12) + 'px';\n  },\n  update: function(){\n    // no special update handling\n    this.render();\n  },\n  destroy: function(){\n    // no special clean-up\n  }\n};\n","import { escapeHtml } from '../../../utils/escape-html';\n\nexport default function (d, defaultTitleFormat, defaultValueFormat, color) {\n  var bgcolor,\n      name,\n      nameFormat,\n      text,\n      title,\n      titleFormat,\n      value,\n      valueFormat;\n\n  // Set config options or defaults\n  nameFormat = this.config.tooltip_format_name || function (name) { return name; };\n  titleFormat = this.config.tooltip_format_title || defaultTitleFormat;\n  valueFormat = this.config.tooltip_format_value || defaultValueFormat;\n\n  // Reverse list to match legend\n  for (var i = 0; i < d.length; i++) {\n    if (! (d[i] && (d[i].value || d[i].value === 0))) { continue; }\n    if (! text) {\n      title = titleFormat ? titleFormat(d[i].x) : d[i].x;\n      text = \"<table class='\" + this.CLASS.tooltip + \"'>\" + (title || title === 0 ? \"<tr><th colspan='2'>\" + escapeHtml(title) + \"</th></tr>\" : \"\");\n    }\n    name = nameFormat(d[i].name);\n    value = valueFormat(d[i].value, d[i].ratio, d[i].id, d[i].index);\n    bgcolor = this.levelColor ? this.levelColor(d[i].value) : color(d[i].id);\n    if (value) {\n      text += \"<tr class='\" + this.CLASS.tooltipName + \"-\" + d[i].id + \"'>\";\n      text +=   \"<td class='name'><span style='background-color:\" + bgcolor + \"'></span>\" + escapeHtml(name) + \"</td>\";\n      text +=   \"<td class='value'>\" + escapeHtml(value) + \"</td>\";\n      text += \"</tr>\";\n    }\n  }\n  return text + \"</table>\";\n}\n","import d3 from 'd3';\n\nimport isDateString from '../../../utils/assert-date-string';\n\nexport default function (cols) {\n  var self = this,\n      chart = this.view._artifacts.c3,\n      columns = [],\n      domNode = this.el().querySelector('.' + this.theme() + '-rendering'),\n      legendWidth = 120;\n\n  var pagination = this.view._artifacts.pagination = {\n    hidden: [],\n    labels: [],\n    position: 0,\n    range: Math.round((domNode.offsetHeight - 78) / 20),\n    total: 0\n  };\n\n  // Reduce threshold for donut/pie charts\n  if (this.type() === 'donut' || this.type() === 'pie') {\n    pagination.range = pagination.range >= 5 ? 5 : pagination.range;\n  }\n\n  for (var i = 0; i < cols.length; i++) {\n    if (cols[i][0] !== 'x' && !isDateString(cols[i][1])) {\n      columns.push(cols[i][0]);\n    }\n  }\n\n  var legendEl = d3.select(domNode)\n    .append('svg')\n    .attr({\n      'class': 'keen-c3-legend',\n      'height': domNode.offsetHeight - 10,\n      'width': legendWidth\n    })\n    .style({\n      'right': -legendWidth + 'px',\n      'top': '10px'\n    });\n\n  var legendItems = legendEl\n    .append('g')\n    .attr('class', 'keen-c3-legend-items');\n\n  var paginateElOffset = 20 * pagination.range;\n  var paginateEl = legendEl\n    .append('g')\n    .attr({\n      'class': 'keen-c3-legend-pagination',\n      'transform': function(){\n        return 'translate(2, ' + paginateElOffset + ')'\n      }\n    });\n\n  paginateData();\n\n  function paginateData(){\n    pagination.labels = columns.slice(pagination.position, pagination.position + pagination.range);\n    pagination.total = columns.length;\n    renderLegendComponent.call(self, pagination.labels);\n    if (pagination.total > pagination.range) {\n      renderPaginationComponent.call(self);\n    }\n    chart.resize();\n  }\n\n  function renderLegendComponent(){\n    legendItems\n      .selectAll('g')\n      .remove();\n\n    var legendItemList = legendItems\n      .selectAll('g')\n      .data(pagination.labels);\n\n    legendItemList.enter()\n        .append('g')\n        .attr('transform', function(id, i){\n          return 'translate(0, ' + (20 * i) + ')'\n        })\n      .attr('data-id', function (id) { return id; })\n      .style('opacity', function(id){\n        var isHidden = pagination.hidden.indexOf(id);\n        return isHidden < 0 ? 1 : .35;\n      })\n      .each(function (id) {\n        d3.select(this)\n          .append('text')\n          .attr({\n            'font-size': 12,\n            'pointer-events': 'none',\n            'x': 15,\n            'y': 9\n          })\n          .text(id)\n          .text(function(id){\n            if (d3.select(this).node().getBBox().width > 105) {\n              return id.length <= 15 ? id : id.substring(0, 12) + '...';\n            }\n            else {\n              return id;\n            }\n          });\n        d3.select(this)\n          .append('rect')\n          .attr({\n            'height': 14,\n            'width': 110,\n            'x': 0,\n            'y': 0\n          })\n          .style({\n            'cursor': 'pointer',\n            'fill-opacity': 0\n          });\n        d3.select(this)\n          .append('rect')\n          .attr({\n            'fill': chart.color(id),\n            'height': 10,\n            'pointer-events': 'none',\n            'rx': 5,\n            'ry': 5,\n            'width': 10,\n            'x': 0,\n            'y': 0\n          });\n      })\n      .on('mouseover', function (id, i) {\n          chart.focus(id);\n          // show a tooltip overlay w/ full value\n          if (id.length > 15) {\n            d3.select(domNode)\n              .append('div')\n              .attr('class', 'keen-c3-legend-label-overlay')\n              .style({\n                'max-width': '75%',\n                'right': -legendWidth + 'px',\n                'top': (5 + (i+1) * 20) + 'px'\n              })\n              .html(id)\n              .append('div')\n                .attr('class', 'keen-c3-legend-label-overlay-pointer');\n          }\n      })\n      .on('mouseout', function (id) {\n        chart.revert();\n        // clear out the tooltip overlay\n        d3.select(self.el().querySelector('.' + self.theme() + '-rendering .keen-c3-legend-label-overlay'))\n          .remove();\n      })\n      .on('click', function (id) {\n        d3.select(this).style('opacity', function(){\n          var isHidden = pagination.hidden.indexOf(id);\n          if (isHidden < 0) {\n            pagination.hidden.push(id);\n            return .35;\n          }\n          else {\n            pagination.hidden.splice(isHidden, 1);\n            return 1;\n          }\n        });\n        chart.toggle(id);\n      });\n\n    legendItemList.exit().remove();\n  }\n\n  function renderPaginationComponent(){\n    paginateEl\n      .selectAll('g')\n      .remove();\n\n    paginateEl\n        .selectAll('g')\n        .data([\n          { direction: 'reverse', path_d: 'M0 10 L10 0 L20 10 Z' },\n          { direction: 'forward', path_d: 'M0 0 L10 10 L20 0 Z' }\n        ])\n        .enter()\n        .append('g')\n        .attr('transform', function(id, i){\n          return 'translate(' + (i * 20) + ', 0)'\n        })\n        .each(function(id){\n          d3.select(this)\n            .append('path')\n            .attr('d', function(d){\n              return d.path_d;\n            })\n            .style({\n              'cursor': 'pointer',\n              'fill': '#D7D7D7',\n              'stroke': 'none'\n            })\n            .on('mouseover', function (id) {\n              d3.select(this).style('fill', '#4D4D4D');\n            })\n            .on('mouseout', function (id) {\n              d3.select(this).style('fill', '#D7D7D7');\n            })\n            .on('click', function (d) {\n              if (d.direction === 'forward') {\n                if (pagination.position + pagination.range < pagination.total) {\n                  pagination.position = pagination.position + pagination.range;\n                }\n              }\n              else {\n                if (pagination.position - pagination.range >= 0) {\n                  pagination.position = pagination.position - pagination.range;\n                }\n              }\n              paginateData();\n              clearSelectedText();\n            });\n        });\n  }\n\n  function clearSelectedText() {\n    var selection;\n    if (document.selection && document.selection.empty) {\n      selection = document.selection;\n      selection.empty();\n    }\n    else if (window.getSelection) {\n      selection = window.getSelection();\n      selection.removeAllRanges();\n    }\n  }\n}\n","export default function (startDate, endDate) {\n  var timeDiff = Math.abs(new Date(startDate).getTime() - new Date(endDate).getTime());\n  var months = [\n    'Jan',\n    'Feb',\n    'Mar',\n    'Apr',\n    'May',\n    'June',\n    'July',\n    'Aug',\n    'Sept',\n    'Oct',\n    'Nov',\n    'Dec'\n  ];\n\n  // Yearly (31536000000) + Monthly\n  if (timeDiff >= 2419200000) {\n    return function(ms){\n      var date = new Date(ms);\n      return months[date.getMonth()] + ' ' + date.getFullYear();\n    };\n  }\n  // Daily\n  else if (timeDiff >= 86400000) {\n    return function(ms){\n      var date = new Date(ms);\n      return months[date.getMonth()] + ' ' + date.getDate();\n    };\n  }\n  // Hourly\n  else if (timeDiff >= 3600000) {\n    return '%I:%M %p';\n  }\n  // Minutely\n  else {\n    return '%I:%M:%S %p';\n  }\n}\n","import { each } from './each';\n\nexport function extendDeep(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    each(arguments[i], function(prop, key){\n      if (( typeof target[key] !== 'undefined' && typeof prop !== 'undefined' ) &&\n          ( typeof target[key] === 'object'    && typeof prop === 'object' ) &&\n          ( target[key] !== null               && prop !== null )) {\n            extendDeep(target[key], prop);\n      }\n      else {\n        target[key] = prop;\n      }\n    });\n  }\n  return target;\n}\n","/* @license C3.js v0.4.23 | (c) C3 Team and other contributors | http://c3js.org/ */\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n    typeof define === 'function' && define.amd ? define(factory) :\n    (global.c3 = factory());\n}(this, (function () { 'use strict';\n\n    var CLASS = {\n        target: 'c3-target',\n        chart: 'c3-chart',\n        chartLine: 'c3-chart-line',\n        chartLines: 'c3-chart-lines',\n        chartBar: 'c3-chart-bar',\n        chartBars: 'c3-chart-bars',\n        chartText: 'c3-chart-text',\n        chartTexts: 'c3-chart-texts',\n        chartArc: 'c3-chart-arc',\n        chartArcs: 'c3-chart-arcs',\n        chartArcsTitle: 'c3-chart-arcs-title',\n        chartArcsBackground: 'c3-chart-arcs-background',\n        chartArcsGaugeUnit: 'c3-chart-arcs-gauge-unit',\n        chartArcsGaugeMax: 'c3-chart-arcs-gauge-max',\n        chartArcsGaugeMin: 'c3-chart-arcs-gauge-min',\n        selectedCircle: 'c3-selected-circle',\n        selectedCircles: 'c3-selected-circles',\n        eventRect: 'c3-event-rect',\n        eventRects: 'c3-event-rects',\n        eventRectsSingle: 'c3-event-rects-single',\n        eventRectsMultiple: 'c3-event-rects-multiple',\n        zoomRect: 'c3-zoom-rect',\n        brush: 'c3-brush',\n        focused: 'c3-focused',\n        defocused: 'c3-defocused',\n        region: 'c3-region',\n        regions: 'c3-regions',\n        title: 'c3-title',\n        tooltipContainer: 'c3-tooltip-container',\n        tooltip: 'c3-tooltip',\n        tooltipName: 'c3-tooltip-name',\n        shape: 'c3-shape',\n        shapes: 'c3-shapes',\n        line: 'c3-line',\n        lines: 'c3-lines',\n        bar: 'c3-bar',\n        bars: 'c3-bars',\n        circle: 'c3-circle',\n        circles: 'c3-circles',\n        arc: 'c3-arc',\n        arcLabelLine: 'c3-arc-label-line',\n        arcs: 'c3-arcs',\n        area: 'c3-area',\n        areas: 'c3-areas',\n        empty: 'c3-empty',\n        text: 'c3-text',\n        texts: 'c3-texts',\n        gaugeValue: 'c3-gauge-value',\n        grid: 'c3-grid',\n        gridLines: 'c3-grid-lines',\n        xgrid: 'c3-xgrid',\n        xgrids: 'c3-xgrids',\n        xgridLine: 'c3-xgrid-line',\n        xgridLines: 'c3-xgrid-lines',\n        xgridFocus: 'c3-xgrid-focus',\n        ygrid: 'c3-ygrid',\n        ygrids: 'c3-ygrids',\n        ygridLine: 'c3-ygrid-line',\n        ygridLines: 'c3-ygrid-lines',\n        axis: 'c3-axis',\n        axisX: 'c3-axis-x',\n        axisXLabel: 'c3-axis-x-label',\n        axisY: 'c3-axis-y',\n        axisYLabel: 'c3-axis-y-label',\n        axisY2: 'c3-axis-y2',\n        axisY2Label: 'c3-axis-y2-label',\n        legendBackground: 'c3-legend-background',\n        legendItem: 'c3-legend-item',\n        legendItemEvent: 'c3-legend-item-event',\n        legendItemTile: 'c3-legend-item-tile',\n        legendItemHidden: 'c3-legend-item-hidden',\n        legendItemFocused: 'c3-legend-item-focused',\n        dragarea: 'c3-dragarea',\n        EXPANDED: '_expanded_',\n        SELECTED: '_selected_',\n        INCLUDED: '_included_'\n    };\n\n    var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n      return typeof obj;\n    } : function (obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n\n    var classCallCheck = function (instance, Constructor) {\n      if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n      }\n    };\n\n    var inherits = function (subClass, superClass) {\n      if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n      }\n\n      subClass.prototype = Object.create(superClass && superClass.prototype, {\n        constructor: {\n          value: subClass,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      });\n      if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n    };\n\n    var possibleConstructorReturn = function (self, call) {\n      if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n      }\n\n      return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n    };\n\n    var isValue = function isValue(v) {\n        return v || v === 0;\n    };\n    var isFunction = function isFunction(o) {\n        return typeof o === 'function';\n    };\n    var isArray = function isArray(o) {\n        return Array.isArray(o);\n    };\n    var isString = function isString(o) {\n        return typeof o === 'string';\n    };\n    var isUndefined = function isUndefined(v) {\n        return typeof v === 'undefined';\n    };\n    var isDefined = function isDefined(v) {\n        return typeof v !== 'undefined';\n    };\n    var ceil10 = function ceil10(v) {\n        return Math.ceil(v / 10) * 10;\n    };\n    var asHalfPixel = function asHalfPixel(n) {\n        return Math.ceil(n) + 0.5;\n    };\n    var diffDomain = function diffDomain(d) {\n        return d[1] - d[0];\n    };\n    var isEmpty = function isEmpty(o) {\n        return typeof o === 'undefined' || o === null || isString(o) && o.length === 0 || (typeof o === 'undefined' ? 'undefined' : _typeof(o)) === 'object' && Object.keys(o).length === 0;\n    };\n    var notEmpty = function notEmpty(o) {\n        return !c3_chart_internal_fn.isEmpty(o);\n    };\n    var getOption = function getOption(options, key, defaultValue) {\n        return isDefined(options[key]) ? options[key] : defaultValue;\n    };\n    var hasValue = function hasValue(dict, value) {\n        var found = false;\n        Object.keys(dict).forEach(function (key) {\n            if (dict[key] === value) {\n                found = true;\n            }\n        });\n        return found;\n    };\n    var sanitise = function sanitise(str) {\n        return typeof str === 'string' ? str.replace(/</g, '&lt;').replace(/>/g, '&gt;') : str;\n    };\n    var getPathBox = function getPathBox(path) {\n        var box = path.getBoundingClientRect(),\n            items = [path.pathSegList.getItem(0), path.pathSegList.getItem(1)],\n            minX = items[0].x,\n            minY = Math.min(items[0].y, items[1].y);\n        return { x: minX, y: minY, width: box.width, height: box.height };\n    };\n\n    var c3_axis_fn;\n    var c3_axis_internal_fn;\n\n    function AxisInternal(component, params) {\n        var internal = this;\n        internal.component = component;\n        internal.params = params || {};\n\n        internal.d3 = component.d3;\n        internal.scale = internal.d3.scale.linear();\n        internal.range;\n        internal.orient = \"bottom\";\n        internal.innerTickSize = 6;\n        internal.outerTickSize = this.params.withOuterTick ? 6 : 0;\n        internal.tickPadding = 3;\n        internal.tickValues = null;\n        internal.tickFormat;\n        internal.tickArguments;\n\n        internal.tickOffset = 0;\n        internal.tickCulling = true;\n        internal.tickCentered;\n        internal.tickTextCharSize;\n        internal.tickTextRotate = internal.params.tickTextRotate;\n        internal.tickLength;\n\n        internal.axis = internal.generateAxis();\n    }\n    c3_axis_internal_fn = AxisInternal.prototype;\n\n    c3_axis_internal_fn.axisX = function (selection, x, tickOffset) {\n        selection.attr(\"transform\", function (d) {\n            return \"translate(\" + Math.ceil(x(d) + tickOffset) + \", 0)\";\n        });\n    };\n    c3_axis_internal_fn.axisY = function (selection, y) {\n        selection.attr(\"transform\", function (d) {\n            return \"translate(0,\" + Math.ceil(y(d)) + \")\";\n        });\n    };\n    c3_axis_internal_fn.scaleExtent = function (domain) {\n        var start = domain[0],\n            stop = domain[domain.length - 1];\n        return start < stop ? [start, stop] : [stop, start];\n    };\n    c3_axis_internal_fn.generateTicks = function (scale) {\n        var internal = this;\n        var i,\n            domain,\n            ticks = [];\n        if (scale.ticks) {\n            return scale.ticks.apply(scale, internal.tickArguments);\n        }\n        domain = scale.domain();\n        for (i = Math.ceil(domain[0]); i < domain[1]; i++) {\n            ticks.push(i);\n        }\n        if (ticks.length > 0 && ticks[0] > 0) {\n            ticks.unshift(ticks[0] - (ticks[1] - ticks[0]));\n        }\n        return ticks;\n    };\n    c3_axis_internal_fn.copyScale = function () {\n        var internal = this;\n        var newScale = internal.scale.copy(),\n            domain;\n        if (internal.params.isCategory) {\n            domain = internal.scale.domain();\n            newScale.domain([domain[0], domain[1] - 1]);\n        }\n        return newScale;\n    };\n    c3_axis_internal_fn.textFormatted = function (v) {\n        var internal = this,\n            formatted = internal.tickFormat ? internal.tickFormat(v) : v;\n        return typeof formatted !== 'undefined' ? formatted : '';\n    };\n    c3_axis_internal_fn.updateRange = function () {\n        var internal = this;\n        internal.range = internal.scale.rangeExtent ? internal.scale.rangeExtent() : internal.scaleExtent(internal.scale.range());\n        return internal.range;\n    };\n    c3_axis_internal_fn.updateTickTextCharSize = function (tick) {\n        var internal = this;\n        if (internal.tickTextCharSize) {\n            return internal.tickTextCharSize;\n        }\n        var size = {\n            h: 11.5,\n            w: 5.5\n        };\n        tick.select('text').text(function (d) {\n            return internal.textFormatted(d);\n        }).each(function (d) {\n            var box = this.getBoundingClientRect(),\n                text = internal.textFormatted(d),\n                h = box.height,\n                w = text ? box.width / text.length : undefined;\n            if (h && w) {\n                size.h = h;\n                size.w = w;\n            }\n        }).text('');\n        internal.tickTextCharSize = size;\n        return size;\n    };\n    c3_axis_internal_fn.transitionise = function (selection) {\n        return this.params.withoutTransition ? selection : this.d3.transition(selection);\n    };\n    c3_axis_internal_fn.isVertical = function () {\n        return this.orient === 'left' || this.orient === 'right';\n    };\n    c3_axis_internal_fn.tspanData = function (d, i, ticks, scale) {\n        var internal = this;\n        var splitted = internal.params.tickMultiline ? internal.splitTickText(d, ticks, scale) : [].concat(internal.textFormatted(d));\n\n        if (internal.params.tickMultiline && internal.params.tickMultilineMax > 0) {\n            splitted = internal.ellipsify(splitted, internal.params.tickMultilineMax);\n        }\n\n        return splitted.map(function (s) {\n            return { index: i, splitted: s, length: splitted.length };\n        });\n    };\n    c3_axis_internal_fn.splitTickText = function (d, ticks, scale) {\n        var internal = this,\n            tickText = internal.textFormatted(d),\n            maxWidth = internal.params.tickWidth,\n            subtext,\n            spaceIndex,\n            textWidth,\n            splitted = [];\n\n        if (Object.prototype.toString.call(tickText) === \"[object Array]\") {\n            return tickText;\n        }\n\n        if (!maxWidth || maxWidth <= 0) {\n            maxWidth = internal.isVertical() ? 95 : internal.params.isCategory ? Math.ceil(scale(ticks[1]) - scale(ticks[0])) - 12 : 110;\n        }\n\n        function split(splitted, text) {\n            spaceIndex = undefined;\n            for (var i = 1; i < text.length; i++) {\n                if (text.charAt(i) === ' ') {\n                    spaceIndex = i;\n                }\n                subtext = text.substr(0, i + 1);\n                textWidth = internal.tickTextCharSize.w * subtext.length;\n                // if text width gets over tick width, split by space index or crrent index\n                if (maxWidth < textWidth) {\n                    return split(splitted.concat(text.substr(0, spaceIndex ? spaceIndex : i)), text.slice(spaceIndex ? spaceIndex + 1 : i));\n                }\n            }\n            return splitted.concat(text);\n        }\n\n        return split(splitted, tickText + \"\");\n    };\n    c3_axis_internal_fn.ellipsify = function (splitted, max) {\n        if (splitted.length <= max) {\n            return splitted;\n        }\n\n        var ellipsified = splitted.slice(0, max);\n        var remaining = 3;\n        for (var i = max - 1; i >= 0; i--) {\n            var available = ellipsified[i].length;\n\n            ellipsified[i] = ellipsified[i].substr(0, available - remaining).padEnd(available, '.');\n\n            remaining -= available;\n\n            if (remaining <= 0) {\n                break;\n            }\n        }\n\n        return ellipsified;\n    };\n    c3_axis_internal_fn.updateTickLength = function () {\n        var internal = this;\n        internal.tickLength = Math.max(internal.innerTickSize, 0) + internal.tickPadding;\n    };\n    c3_axis_internal_fn.lineY2 = function (d) {\n        var internal = this,\n            tickPosition = internal.scale(d) + (internal.tickCentered ? 0 : internal.tickOffset);\n        return internal.range[0] < tickPosition && tickPosition < internal.range[1] ? internal.innerTickSize : 0;\n    };\n    c3_axis_internal_fn.textY = function () {\n        var internal = this,\n            rotate = internal.tickTextRotate;\n        return rotate ? 11.5 - 2.5 * (rotate / 15) * (rotate > 0 ? 1 : -1) : internal.tickLength;\n    };\n    c3_axis_internal_fn.textTransform = function () {\n        var internal = this,\n            rotate = internal.tickTextRotate;\n        return rotate ? \"rotate(\" + rotate + \")\" : \"\";\n    };\n    c3_axis_internal_fn.textTextAnchor = function () {\n        var internal = this,\n            rotate = internal.tickTextRotate;\n        return rotate ? rotate > 0 ? \"start\" : \"end\" : \"middle\";\n    };\n    c3_axis_internal_fn.tspanDx = function () {\n        var internal = this,\n            rotate = internal.tickTextRotate;\n        return rotate ? 8 * Math.sin(Math.PI * (rotate / 180)) : 0;\n    };\n    c3_axis_internal_fn.tspanDy = function (d, i) {\n        var internal = this,\n            dy = internal.tickTextCharSize.h;\n        if (i === 0) {\n            if (internal.isVertical()) {\n                dy = -((d.length - 1) * (internal.tickTextCharSize.h / 2) - 3);\n            } else {\n                dy = \".71em\";\n            }\n        }\n        return dy;\n    };\n\n    c3_axis_internal_fn.generateAxis = function () {\n        var internal = this,\n            d3 = internal.d3,\n            params = internal.params;\n        function axis(g) {\n            g.each(function () {\n                var g = axis.g = d3.select(this);\n\n                var scale0 = this.__chart__ || internal.scale,\n                    scale1 = this.__chart__ = internal.copyScale();\n\n                var ticks = internal.tickValues ? internal.tickValues : internal.generateTicks(scale1),\n                    tick = g.selectAll(\".tick\").data(ticks, scale1),\n                    tickEnter = tick.enter().insert(\"g\", \".domain\").attr(\"class\", \"tick\").style(\"opacity\", 1e-6),\n\n                // MEMO: No exit transition. The reason is this transition affects max tick width calculation because old tick will be included in the ticks.\n                tickExit = tick.exit().remove(),\n                    tickUpdate = internal.transitionise(tick).style(\"opacity\", 1),\n                    tickTransform,\n                    tickX,\n                    tickY;\n\n                if (params.isCategory) {\n                    internal.tickOffset = Math.ceil((scale1(1) - scale1(0)) / 2);\n                    tickX = internal.tickCentered ? 0 : internal.tickOffset;\n                    tickY = internal.tickCentered ? internal.tickOffset : 0;\n                } else {\n                    internal.tickOffset = tickX = 0;\n                }\n\n                tickEnter.append(\"line\");\n                tickEnter.append(\"text\");\n\n                internal.updateRange();\n                internal.updateTickLength();\n                internal.updateTickTextCharSize(g.select('.tick'));\n\n                var lineUpdate = tickUpdate.select(\"line\"),\n                    textUpdate = tickUpdate.select(\"text\"),\n                    tspanUpdate = tick.select(\"text\").selectAll('tspan').data(function (d, i) {\n                    return internal.tspanData(d, i, ticks, scale1);\n                });\n\n                tspanUpdate.enter().append('tspan');\n                tspanUpdate.exit().remove();\n                tspanUpdate.text(function (d) {\n                    return d.splitted;\n                });\n\n                var path = g.selectAll(\".domain\").data([0]),\n                    pathUpdate = (path.enter().append(\"path\").attr(\"class\", \"domain\"), internal.transitionise(path));\n\n                // TODO: each attr should be one function and change its behavior by internal.orient, probably\n                switch (internal.orient) {\n                    case \"bottom\":\n                        {\n                            tickTransform = internal.axisX;\n                            lineUpdate.attr(\"x1\", tickX).attr(\"x2\", tickX).attr(\"y2\", function (d, i) {\n                                return internal.lineY2(d, i);\n                            });\n                            textUpdate.attr(\"x\", 0).attr(\"y\", function (d, i) {\n                                return internal.textY(d, i);\n                            }).attr(\"transform\", function (d, i) {\n                                return internal.textTransform(d, i);\n                            }).style(\"text-anchor\", function (d, i) {\n                                return internal.textTextAnchor(d, i);\n                            });\n                            tspanUpdate.attr('x', 0).attr(\"dy\", function (d, i) {\n                                return internal.tspanDy(d, i);\n                            }).attr('dx', function (d, i) {\n                                return internal.tspanDx(d, i);\n                            });\n                            pathUpdate.attr(\"d\", \"M\" + internal.range[0] + \",\" + internal.outerTickSize + \"V0H\" + internal.range[1] + \"V\" + internal.outerTickSize);\n                            break;\n                        }\n                    case \"top\":\n                        {\n                            // TODO: rotated tick text\n                            tickTransform = internal.axisX;\n                            lineUpdate.attr(\"x1\", tickX).attr(\"x2\", tickX).attr(\"y2\", function (d, i) {\n                                return -1 * internal.lineY2(d, i);\n                            });\n                            textUpdate.attr(\"x\", 0).attr(\"y\", function (d, i) {\n                                return -1 * internal.textY(d, i) - (params.isCategory ? 2 : internal.tickLength - 2);\n                            }).attr(\"transform\", function (d, i) {\n                                return internal.textTransform(d, i);\n                            }).style(\"text-anchor\", function (d, i) {\n                                return internal.textTextAnchor(d, i);\n                            });\n                            tspanUpdate.attr('x', 0).attr(\"dy\", function (d, i) {\n                                return internal.tspanDy(d, i);\n                            }).attr('dx', function (d, i) {\n                                return internal.tspanDx(d, i);\n                            });\n                            pathUpdate.attr(\"d\", \"M\" + internal.range[0] + \",\" + -internal.outerTickSize + \"V0H\" + internal.range[1] + \"V\" + -internal.outerTickSize);\n                            break;\n                        }\n                    case \"left\":\n                        {\n                            tickTransform = internal.axisY;\n                            lineUpdate.attr(\"x2\", -internal.innerTickSize).attr(\"y1\", tickY).attr(\"y2\", tickY);\n                            textUpdate.attr(\"x\", -internal.tickLength).attr(\"y\", internal.tickOffset).style(\"text-anchor\", \"end\");\n                            tspanUpdate.attr('x', -internal.tickLength).attr(\"dy\", function (d, i) {\n                                return internal.tspanDy(d, i);\n                            });\n                            pathUpdate.attr(\"d\", \"M\" + -internal.outerTickSize + \",\" + internal.range[0] + \"H0V\" + internal.range[1] + \"H\" + -internal.outerTickSize);\n                            break;\n                        }\n                    case \"right\":\n                        {\n                            tickTransform = internal.axisY;\n                            lineUpdate.attr(\"x2\", internal.innerTickSize).attr(\"y1\", tickY).attr(\"y2\", tickY);\n                            textUpdate.attr(\"x\", internal.tickLength).attr(\"y\", internal.tickOffset).style(\"text-anchor\", \"start\");\n                            tspanUpdate.attr('x', internal.tickLength).attr(\"dy\", function (d, i) {\n                                return internal.tspanDy(d, i);\n                            });\n                            pathUpdate.attr(\"d\", \"M\" + internal.outerTickSize + \",\" + internal.range[0] + \"H0V\" + internal.range[1] + \"H\" + internal.outerTickSize);\n                            break;\n                        }\n                }\n                if (scale1.rangeBand) {\n                    var x = scale1,\n                        dx = x.rangeBand() / 2;\n                    scale0 = scale1 = function scale1(d) {\n                        return x(d) + dx;\n                    };\n                } else if (scale0.rangeBand) {\n                    scale0 = scale1;\n                } else {\n                    tickExit.call(tickTransform, scale1, internal.tickOffset);\n                }\n                tickEnter.call(tickTransform, scale0, internal.tickOffset);\n                tickUpdate.call(tickTransform, scale1, internal.tickOffset);\n            });\n        }\n        axis.scale = function (x) {\n            if (!arguments.length) {\n                return internal.scale;\n            }\n            internal.scale = x;\n            return axis;\n        };\n        axis.orient = function (x) {\n            if (!arguments.length) {\n                return internal.orient;\n            }\n            internal.orient = x in { top: 1, right: 1, bottom: 1, left: 1 } ? x + \"\" : \"bottom\";\n            return axis;\n        };\n        axis.tickFormat = function (format) {\n            if (!arguments.length) {\n                return internal.tickFormat;\n            }\n            internal.tickFormat = format;\n            return axis;\n        };\n        axis.tickCentered = function (isCentered) {\n            if (!arguments.length) {\n                return internal.tickCentered;\n            }\n            internal.tickCentered = isCentered;\n            return axis;\n        };\n        axis.tickOffset = function () {\n            return internal.tickOffset;\n        };\n        axis.tickInterval = function () {\n            var interval, length;\n            if (params.isCategory) {\n                interval = internal.tickOffset * 2;\n            } else {\n                length = axis.g.select('path.domain').node().getTotalLength() - internal.outerTickSize * 2;\n                interval = length / axis.g.selectAll('line').size();\n            }\n            return interval === Infinity ? 0 : interval;\n        };\n        axis.ticks = function () {\n            if (!arguments.length) {\n                return internal.tickArguments;\n            }\n            internal.tickArguments = arguments;\n            return axis;\n        };\n        axis.tickCulling = function (culling) {\n            if (!arguments.length) {\n                return internal.tickCulling;\n            }\n            internal.tickCulling = culling;\n            return axis;\n        };\n        axis.tickValues = function (x) {\n            if (typeof x === 'function') {\n                internal.tickValues = function () {\n                    return x(internal.scale.domain());\n                };\n            } else {\n                if (!arguments.length) {\n                    return internal.tickValues;\n                }\n                internal.tickValues = x;\n            }\n            return axis;\n        };\n        return axis;\n    };\n\n    var Axis = function (_Component) {\n        inherits(Axis, _Component);\n\n        function Axis(owner) {\n            classCallCheck(this, Axis);\n\n            var fn = {\n                fn: c3_axis_fn,\n                internal: {\n                    fn: c3_axis_internal_fn\n                }\n            };\n\n            var _this = possibleConstructorReturn(this, (Axis.__proto__ || Object.getPrototypeOf(Axis)).call(this, owner, 'axis', fn));\n\n            _this.d3 = owner.d3;\n            _this.internal = AxisInternal;\n            return _this;\n        }\n\n        return Axis;\n    }(Component);\n\n    c3_axis_fn = Axis.prototype;\n\n    c3_axis_fn.init = function init() {\n        var $$ = this.owner,\n            config = $$.config,\n            main = $$.main;\n        $$.axes.x = main.append(\"g\").attr(\"class\", CLASS.axis + ' ' + CLASS.axisX).attr(\"clip-path\", config.axis_x_inner ? \"\" : $$.clipPathForXAxis).attr(\"transform\", $$.getTranslate('x')).style(\"visibility\", config.axis_x_show ? 'visible' : 'hidden');\n        $$.axes.x.append(\"text\").attr(\"class\", CLASS.axisXLabel).attr(\"transform\", config.axis_rotated ? \"rotate(-90)\" : \"\").style(\"text-anchor\", this.textAnchorForXAxisLabel.bind(this));\n        $$.axes.y = main.append(\"g\").attr(\"class\", CLASS.axis + ' ' + CLASS.axisY).attr(\"clip-path\", config.axis_y_inner ? \"\" : $$.clipPathForYAxis).attr(\"transform\", $$.getTranslate('y')).style(\"visibility\", config.axis_y_show ? 'visible' : 'hidden');\n        $$.axes.y.append(\"text\").attr(\"class\", CLASS.axisYLabel).attr(\"transform\", config.axis_rotated ? \"\" : \"rotate(-90)\").style(\"text-anchor\", this.textAnchorForYAxisLabel.bind(this));\n\n        $$.axes.y2 = main.append(\"g\").attr(\"class\", CLASS.axis + ' ' + CLASS.axisY2)\n        // clip-path?\n        .attr(\"transform\", $$.getTranslate('y2')).style(\"visibility\", config.axis_y2_show ? 'visible' : 'hidden');\n        $$.axes.y2.append(\"text\").attr(\"class\", CLASS.axisY2Label).attr(\"transform\", config.axis_rotated ? \"\" : \"rotate(-90)\").style(\"text-anchor\", this.textAnchorForY2AxisLabel.bind(this));\n    };\n    c3_axis_fn.getXAxis = function getXAxis(scale, orient, tickFormat, tickValues, withOuterTick, withoutTransition, withoutRotateTickText) {\n        var $$ = this.owner,\n            config = $$.config,\n            axisParams = {\n            isCategory: $$.isCategorized(),\n            withOuterTick: withOuterTick,\n            tickMultiline: config.axis_x_tick_multiline,\n            tickMultilineMax: config.axis_x_tick_multiline ? Number(config.axis_x_tick_multilineMax) : 0,\n            tickWidth: config.axis_x_tick_width,\n            tickTextRotate: withoutRotateTickText ? 0 : config.axis_x_tick_rotate,\n            withoutTransition: withoutTransition\n        },\n            axis = new this.internal(this, axisParams).axis.scale(scale).orient(orient);\n\n        if ($$.isTimeSeries() && tickValues && typeof tickValues !== \"function\") {\n            tickValues = tickValues.map(function (v) {\n                return $$.parseDate(v);\n            });\n        }\n\n        // Set tick\n        axis.tickFormat(tickFormat).tickValues(tickValues);\n        if ($$.isCategorized()) {\n            axis.tickCentered(config.axis_x_tick_centered);\n            if (isEmpty(config.axis_x_tick_culling)) {\n                config.axis_x_tick_culling = false;\n            }\n        }\n\n        return axis;\n    };\n    c3_axis_fn.updateXAxisTickValues = function updateXAxisTickValues(targets, axis) {\n        var $$ = this.owner,\n            config = $$.config,\n            tickValues;\n        if (config.axis_x_tick_fit || config.axis_x_tick_count) {\n            tickValues = this.generateTickValues($$.mapTargetsToUniqueXs(targets), config.axis_x_tick_count, $$.isTimeSeries());\n        }\n        if (axis) {\n            axis.tickValues(tickValues);\n        } else {\n            $$.xAxis.tickValues(tickValues);\n            $$.subXAxis.tickValues(tickValues);\n        }\n        return tickValues;\n    };\n    c3_axis_fn.getYAxis = function getYAxis(scale, orient, tickFormat, tickValues, withOuterTick, withoutTransition, withoutRotateTickText) {\n        var $$ = this.owner,\n            config = $$.config,\n            axisParams = {\n            withOuterTick: withOuterTick,\n            withoutTransition: withoutTransition,\n            tickTextRotate: withoutRotateTickText ? 0 : config.axis_y_tick_rotate\n        },\n            axis = new this.internal(this, axisParams).axis.scale(scale).orient(orient).tickFormat(tickFormat);\n        if ($$.isTimeSeriesY()) {\n            axis.ticks($$.d3.time[config.axis_y_tick_time_value], config.axis_y_tick_time_interval);\n        } else {\n            axis.tickValues(tickValues);\n        }\n        return axis;\n    };\n    c3_axis_fn.getId = function getId(id) {\n        var config = this.owner.config;\n        return id in config.data_axes ? config.data_axes[id] : 'y';\n    };\n    c3_axis_fn.getXAxisTickFormat = function getXAxisTickFormat() {\n        var $$ = this.owner,\n            config = $$.config,\n            format = $$.isTimeSeries() ? $$.defaultAxisTimeFormat : $$.isCategorized() ? $$.categoryName : function (v) {\n            return v < 0 ? v.toFixed(0) : v;\n        };\n        if (config.axis_x_tick_format) {\n            if (isFunction(config.axis_x_tick_format)) {\n                format = config.axis_x_tick_format;\n            } else if ($$.isTimeSeries()) {\n                format = function format(date) {\n                    return date ? $$.axisTimeFormat(config.axis_x_tick_format)(date) : \"\";\n                };\n            }\n        }\n        return isFunction(format) ? function (v) {\n            return format.call($$, v);\n        } : format;\n    };\n    c3_axis_fn.getTickValues = function getTickValues(tickValues, axis) {\n        return tickValues ? tickValues : axis ? axis.tickValues() : undefined;\n    };\n    c3_axis_fn.getXAxisTickValues = function getXAxisTickValues() {\n        return this.getTickValues(this.owner.config.axis_x_tick_values, this.owner.xAxis);\n    };\n    c3_axis_fn.getYAxisTickValues = function getYAxisTickValues() {\n        return this.getTickValues(this.owner.config.axis_y_tick_values, this.owner.yAxis);\n    };\n    c3_axis_fn.getY2AxisTickValues = function getY2AxisTickValues() {\n        return this.getTickValues(this.owner.config.axis_y2_tick_values, this.owner.y2Axis);\n    };\n    c3_axis_fn.getLabelOptionByAxisId = function getLabelOptionByAxisId(axisId) {\n        var $$ = this.owner,\n            config = $$.config,\n            option;\n        if (axisId === 'y') {\n            option = config.axis_y_label;\n        } else if (axisId === 'y2') {\n            option = config.axis_y2_label;\n        } else if (axisId === 'x') {\n            option = config.axis_x_label;\n        }\n        return option;\n    };\n    c3_axis_fn.getLabelText = function getLabelText(axisId) {\n        var option = this.getLabelOptionByAxisId(axisId);\n        return isString(option) ? option : option ? option.text : null;\n    };\n    c3_axis_fn.setLabelText = function setLabelText(axisId, text) {\n        var $$ = this.owner,\n            config = $$.config,\n            option = this.getLabelOptionByAxisId(axisId);\n        if (isString(option)) {\n            if (axisId === 'y') {\n                config.axis_y_label = text;\n            } else if (axisId === 'y2') {\n                config.axis_y2_label = text;\n            } else if (axisId === 'x') {\n                config.axis_x_label = text;\n            }\n        } else if (option) {\n            option.text = text;\n        }\n    };\n    c3_axis_fn.getLabelPosition = function getLabelPosition(axisId, defaultPosition) {\n        var option = this.getLabelOptionByAxisId(axisId),\n            position = option && (typeof option === 'undefined' ? 'undefined' : _typeof(option)) === 'object' && option.position ? option.position : defaultPosition;\n        return {\n            isInner: position.indexOf('inner') >= 0,\n            isOuter: position.indexOf('outer') >= 0,\n            isLeft: position.indexOf('left') >= 0,\n            isCenter: position.indexOf('center') >= 0,\n            isRight: position.indexOf('right') >= 0,\n            isTop: position.indexOf('top') >= 0,\n            isMiddle: position.indexOf('middle') >= 0,\n            isBottom: position.indexOf('bottom') >= 0\n        };\n    };\n    c3_axis_fn.getXAxisLabelPosition = function getXAxisLabelPosition() {\n        return this.getLabelPosition('x', this.owner.config.axis_rotated ? 'inner-top' : 'inner-right');\n    };\n    c3_axis_fn.getYAxisLabelPosition = function getYAxisLabelPosition() {\n        return this.getLabelPosition('y', this.owner.config.axis_rotated ? 'inner-right' : 'inner-top');\n    };\n    c3_axis_fn.getY2AxisLabelPosition = function getY2AxisLabelPosition() {\n        return this.getLabelPosition('y2', this.owner.config.axis_rotated ? 'inner-right' : 'inner-top');\n    };\n    c3_axis_fn.getLabelPositionById = function getLabelPositionById(id) {\n        return id === 'y2' ? this.getY2AxisLabelPosition() : id === 'y' ? this.getYAxisLabelPosition() : this.getXAxisLabelPosition();\n    };\n    c3_axis_fn.textForXAxisLabel = function textForXAxisLabel() {\n        return this.getLabelText('x');\n    };\n    c3_axis_fn.textForYAxisLabel = function textForYAxisLabel() {\n        return this.getLabelText('y');\n    };\n    c3_axis_fn.textForY2AxisLabel = function textForY2AxisLabel() {\n        return this.getLabelText('y2');\n    };\n    c3_axis_fn.xForAxisLabel = function xForAxisLabel(forHorizontal, position) {\n        var $$ = this.owner;\n        if (forHorizontal) {\n            return position.isLeft ? 0 : position.isCenter ? $$.width / 2 : $$.width;\n        } else {\n            return position.isBottom ? -$$.height : position.isMiddle ? -$$.height / 2 : 0;\n        }\n    };\n    c3_axis_fn.dxForAxisLabel = function dxForAxisLabel(forHorizontal, position) {\n        if (forHorizontal) {\n            return position.isLeft ? \"0.5em\" : position.isRight ? \"-0.5em\" : \"0\";\n        } else {\n            return position.isTop ? \"-0.5em\" : position.isBottom ? \"0.5em\" : \"0\";\n        }\n    };\n    c3_axis_fn.textAnchorForAxisLabel = function textAnchorForAxisLabel(forHorizontal, position) {\n        if (forHorizontal) {\n            return position.isLeft ? 'start' : position.isCenter ? 'middle' : 'end';\n        } else {\n            return position.isBottom ? 'start' : position.isMiddle ? 'middle' : 'end';\n        }\n    };\n    c3_axis_fn.xForXAxisLabel = function xForXAxisLabel() {\n        return this.xForAxisLabel(!this.owner.config.axis_rotated, this.getXAxisLabelPosition());\n    };\n    c3_axis_fn.xForYAxisLabel = function xForYAxisLabel() {\n        return this.xForAxisLabel(this.owner.config.axis_rotated, this.getYAxisLabelPosition());\n    };\n    c3_axis_fn.xForY2AxisLabel = function xForY2AxisLabel() {\n        return this.xForAxisLabel(this.owner.config.axis_rotated, this.getY2AxisLabelPosition());\n    };\n    c3_axis_fn.dxForXAxisLabel = function dxForXAxisLabel() {\n        return this.dxForAxisLabel(!this.owner.config.axis_rotated, this.getXAxisLabelPosition());\n    };\n    c3_axis_fn.dxForYAxisLabel = function dxForYAxisLabel() {\n        return this.dxForAxisLabel(this.owner.config.axis_rotated, this.getYAxisLabelPosition());\n    };\n    c3_axis_fn.dxForY2AxisLabel = function dxForY2AxisLabel() {\n        return this.dxForAxisLabel(this.owner.config.axis_rotated, this.getY2AxisLabelPosition());\n    };\n    c3_axis_fn.dyForXAxisLabel = function dyForXAxisLabel() {\n        var $$ = this.owner,\n            config = $$.config,\n            position = this.getXAxisLabelPosition();\n        if (config.axis_rotated) {\n            return position.isInner ? \"1.2em\" : -25 - ($$.config.axis_x_inner ? 0 : this.getMaxTickWidth('x'));\n        } else {\n            return position.isInner ? \"-0.5em\" : config.axis_x_height ? config.axis_x_height - 10 : \"3em\";\n        }\n    };\n    c3_axis_fn.dyForYAxisLabel = function dyForYAxisLabel() {\n        var $$ = this.owner,\n            position = this.getYAxisLabelPosition();\n        if ($$.config.axis_rotated) {\n            return position.isInner ? \"-0.5em\" : \"3em\";\n        } else {\n            return position.isInner ? \"1.2em\" : -10 - ($$.config.axis_y_inner ? 0 : this.getMaxTickWidth('y') + 10);\n        }\n    };\n    c3_axis_fn.dyForY2AxisLabel = function dyForY2AxisLabel() {\n        var $$ = this.owner,\n            position = this.getY2AxisLabelPosition();\n        if ($$.config.axis_rotated) {\n            return position.isInner ? \"1.2em\" : \"-2.2em\";\n        } else {\n            return position.isInner ? \"-0.5em\" : 15 + ($$.config.axis_y2_inner ? 0 : this.getMaxTickWidth('y2') + 15);\n        }\n    };\n    c3_axis_fn.textAnchorForXAxisLabel = function textAnchorForXAxisLabel() {\n        var $$ = this.owner;\n        return this.textAnchorForAxisLabel(!$$.config.axis_rotated, this.getXAxisLabelPosition());\n    };\n    c3_axis_fn.textAnchorForYAxisLabel = function textAnchorForYAxisLabel() {\n        var $$ = this.owner;\n        return this.textAnchorForAxisLabel($$.config.axis_rotated, this.getYAxisLabelPosition());\n    };\n    c3_axis_fn.textAnchorForY2AxisLabel = function textAnchorForY2AxisLabel() {\n        var $$ = this.owner;\n        return this.textAnchorForAxisLabel($$.config.axis_rotated, this.getY2AxisLabelPosition());\n    };\n    c3_axis_fn.getMaxTickWidth = function getMaxTickWidth(id, withoutRecompute) {\n        var $$ = this.owner,\n            config = $$.config,\n            maxWidth = 0,\n            targetsToShow,\n            scale,\n            axis,\n            dummy,\n            svg;\n        if (withoutRecompute && $$.currentMaxTickWidths[id]) {\n            return $$.currentMaxTickWidths[id];\n        }\n        if ($$.svg) {\n            targetsToShow = $$.filterTargetsToShow($$.data.targets);\n            if (id === 'y') {\n                scale = $$.y.copy().domain($$.getYDomain(targetsToShow, 'y'));\n                axis = this.getYAxis(scale, $$.yOrient, config.axis_y_tick_format, $$.yAxisTickValues, false, true, true);\n            } else if (id === 'y2') {\n                scale = $$.y2.copy().domain($$.getYDomain(targetsToShow, 'y2'));\n                axis = this.getYAxis(scale, $$.y2Orient, config.axis_y2_tick_format, $$.y2AxisTickValues, false, true, true);\n            } else {\n                scale = $$.x.copy().domain($$.getXDomain(targetsToShow));\n                axis = this.getXAxis(scale, $$.xOrient, $$.xAxisTickFormat, $$.xAxisTickValues, false, true, true);\n                this.updateXAxisTickValues(targetsToShow, axis);\n            }\n            dummy = $$.d3.select('body').append('div').classed('c3', true);\n            svg = dummy.append(\"svg\").style('visibility', 'hidden').style('position', 'fixed').style('top', 0).style('left', 0), svg.append('g').call(axis).each(function () {\n                $$.d3.select(this).selectAll('text').each(function () {\n                    var box = this.getBoundingClientRect();\n                    if (maxWidth < box.width) {\n                        maxWidth = box.width;\n                    }\n                });\n                dummy.remove();\n            });\n        }\n        $$.currentMaxTickWidths[id] = maxWidth <= 0 ? $$.currentMaxTickWidths[id] : maxWidth;\n        return $$.currentMaxTickWidths[id];\n    };\n\n    c3_axis_fn.updateLabels = function updateLabels(withTransition) {\n        var $$ = this.owner;\n        var axisXLabel = $$.main.select('.' + CLASS.axisX + ' .' + CLASS.axisXLabel),\n            axisYLabel = $$.main.select('.' + CLASS.axisY + ' .' + CLASS.axisYLabel),\n            axisY2Label = $$.main.select('.' + CLASS.axisY2 + ' .' + CLASS.axisY2Label);\n        (withTransition ? axisXLabel.transition() : axisXLabel).attr(\"x\", this.xForXAxisLabel.bind(this)).attr(\"dx\", this.dxForXAxisLabel.bind(this)).attr(\"dy\", this.dyForXAxisLabel.bind(this)).text(this.textForXAxisLabel.bind(this));\n        (withTransition ? axisYLabel.transition() : axisYLabel).attr(\"x\", this.xForYAxisLabel.bind(this)).attr(\"dx\", this.dxForYAxisLabel.bind(this)).attr(\"dy\", this.dyForYAxisLabel.bind(this)).text(this.textForYAxisLabel.bind(this));\n        (withTransition ? axisY2Label.transition() : axisY2Label).attr(\"x\", this.xForY2AxisLabel.bind(this)).attr(\"dx\", this.dxForY2AxisLabel.bind(this)).attr(\"dy\", this.dyForY2AxisLabel.bind(this)).text(this.textForY2AxisLabel.bind(this));\n    };\n    c3_axis_fn.getPadding = function getPadding(padding, key, defaultValue, domainLength) {\n        var p = typeof padding === 'number' ? padding : padding[key];\n        if (!isValue(p)) {\n            return defaultValue;\n        }\n        if (padding.unit === 'ratio') {\n            return padding[key] * domainLength;\n        }\n        // assume padding is pixels if unit is not specified\n        return this.convertPixelsToAxisPadding(p, domainLength);\n    };\n    c3_axis_fn.convertPixelsToAxisPadding = function convertPixelsToAxisPadding(pixels, domainLength) {\n        var $$ = this.owner,\n            length = $$.config.axis_rotated ? $$.width : $$.height;\n        return domainLength * (pixels / length);\n    };\n    c3_axis_fn.generateTickValues = function generateTickValues(values, tickCount, forTimeSeries) {\n        var tickValues = values,\n            targetCount,\n            start,\n            end,\n            count,\n            interval,\n            i,\n            tickValue;\n        if (tickCount) {\n            targetCount = isFunction(tickCount) ? tickCount() : tickCount;\n            // compute ticks according to tickCount\n            if (targetCount === 1) {\n                tickValues = [values[0]];\n            } else if (targetCount === 2) {\n                tickValues = [values[0], values[values.length - 1]];\n            } else if (targetCount > 2) {\n                count = targetCount - 2;\n                start = values[0];\n                end = values[values.length - 1];\n                interval = (end - start) / (count + 1);\n                // re-construct unique values\n                tickValues = [start];\n                for (i = 0; i < count; i++) {\n                    tickValue = +start + interval * (i + 1);\n                    tickValues.push(forTimeSeries ? new Date(tickValue) : tickValue);\n                }\n                tickValues.push(end);\n            }\n        }\n        if (!forTimeSeries) {\n            tickValues = tickValues.sort(function (a, b) {\n                return a - b;\n            });\n        }\n        return tickValues;\n    };\n    c3_axis_fn.generateTransitions = function generateTransitions(duration) {\n        var $$ = this.owner,\n            axes = $$.axes;\n        return {\n            axisX: duration ? axes.x.transition().duration(duration) : axes.x,\n            axisY: duration ? axes.y.transition().duration(duration) : axes.y,\n            axisY2: duration ? axes.y2.transition().duration(duration) : axes.y2,\n            axisSubX: duration ? axes.subx.transition().duration(duration) : axes.subx\n        };\n    };\n    c3_axis_fn.redraw = function redraw(transitions, isHidden) {\n        var $$ = this.owner;\n        $$.axes.x.style(\"opacity\", isHidden ? 0 : 1);\n        $$.axes.y.style(\"opacity\", isHidden ? 0 : 1);\n        $$.axes.y2.style(\"opacity\", isHidden ? 0 : 1);\n        $$.axes.subx.style(\"opacity\", isHidden ? 0 : 1);\n        transitions.axisX.call($$.xAxis);\n        transitions.axisY.call($$.yAxis);\n        transitions.axisY2.call($$.y2Axis);\n        transitions.axisSubX.call($$.subXAxis);\n    };\n\n    var c3 = { version: \"0.4.23\" };\n\n    var c3_chart_fn;\n    var c3_chart_internal_fn;\n\n    function Component(owner, componentKey, fn) {\n        this.owner = owner;\n        c3.chart.internal[componentKey] = fn;\n    }\n\n    function Chart(config) {\n        var $$ = this.internal = new ChartInternal(this);\n        $$.loadConfig(config);\n\n        $$.beforeInit(config);\n        $$.init();\n        $$.afterInit(config);\n\n        // bind \"this\" to nested API\n        (function bindThis(fn, target, argThis) {\n            Object.keys(fn).forEach(function (key) {\n                target[key] = fn[key].bind(argThis);\n                if (Object.keys(fn[key]).length > 0) {\n                    bindThis(fn[key], target[key], argThis);\n                }\n            });\n        })(c3_chart_fn, this, this);\n    }\n\n    function ChartInternal(api) {\n        var $$ = this;\n        $$.d3 = window.d3 ? window.d3 : typeof require !== 'undefined' ? require(\"d3\") : undefined;\n        $$.api = api;\n        $$.config = $$.getDefaultConfig();\n        $$.data = {};\n        $$.cache = {};\n        $$.axes = {};\n    }\n\n    c3.generate = function (config) {\n        return new Chart(config);\n    };\n\n    c3.chart = {\n        fn: Chart.prototype,\n        internal: {\n            fn: ChartInternal.prototype\n        }\n    };\n    c3_chart_fn = c3.chart.fn;\n    c3_chart_internal_fn = c3.chart.internal.fn;\n\n    c3_chart_internal_fn.beforeInit = function () {\n        // can do something\n    };\n    c3_chart_internal_fn.afterInit = function () {\n        // can do something\n    };\n    c3_chart_internal_fn.init = function () {\n        var $$ = this,\n            config = $$.config;\n\n        $$.initParams();\n\n        if (config.data_url) {\n            $$.convertUrlToData(config.data_url, config.data_mimeType, config.data_headers, config.data_keys, $$.initWithData);\n        } else if (config.data_json) {\n            $$.initWithData($$.convertJsonToData(config.data_json, config.data_keys));\n        } else if (config.data_rows) {\n            $$.initWithData($$.convertRowsToData(config.data_rows));\n        } else if (config.data_columns) {\n            $$.initWithData($$.convertColumnsToData(config.data_columns));\n        } else {\n            throw Error('url or json or rows or columns is required.');\n        }\n    };\n\n    c3_chart_internal_fn.initParams = function () {\n        var $$ = this,\n            d3 = $$.d3,\n            config = $$.config;\n\n        // MEMO: clipId needs to be unique because it conflicts when multiple charts exist\n        $$.clipId = \"c3-\" + +new Date() + '-clip', $$.clipIdForXAxis = $$.clipId + '-xaxis', $$.clipIdForYAxis = $$.clipId + '-yaxis', $$.clipIdForGrid = $$.clipId + '-grid', $$.clipIdForSubchart = $$.clipId + '-subchart', $$.clipPath = $$.getClipPath($$.clipId), $$.clipPathForXAxis = $$.getClipPath($$.clipIdForXAxis), $$.clipPathForYAxis = $$.getClipPath($$.clipIdForYAxis);\n        $$.clipPathForGrid = $$.getClipPath($$.clipIdForGrid), $$.clipPathForSubchart = $$.getClipPath($$.clipIdForSubchart), $$.dragStart = null;\n        $$.dragging = false;\n        $$.flowing = false;\n        $$.cancelClick = false;\n        $$.mouseover = false;\n        $$.transiting = false;\n\n        $$.color = $$.generateColor();\n        $$.levelColor = $$.generateLevelColor();\n\n        $$.dataTimeFormat = config.data_xLocaltime ? d3.time.format : d3.time.format.utc;\n        $$.axisTimeFormat = config.axis_x_localtime ? d3.time.format : d3.time.format.utc;\n        $$.defaultAxisTimeFormat = $$.axisTimeFormat.multi([[\".%L\", function (d) {\n            return d.getMilliseconds();\n        }], [\":%S\", function (d) {\n            return d.getSeconds();\n        }], [\"%I:%M\", function (d) {\n            return d.getMinutes();\n        }], [\"%I %p\", function (d) {\n            return d.getHours();\n        }], [\"%-m/%-d\", function (d) {\n            return d.getDay() && d.getDate() !== 1;\n        }], [\"%-m/%-d\", function (d) {\n            return d.getDate() !== 1;\n        }], [\"%-m/%-d\", function (d) {\n            return d.getMonth();\n        }], [\"%Y/%-m/%-d\", function () {\n            return true;\n        }]]);\n\n        $$.hiddenTargetIds = [];\n        $$.hiddenLegendIds = [];\n        $$.focusedTargetIds = [];\n        $$.defocusedTargetIds = [];\n\n        $$.xOrient = config.axis_rotated ? config.axis_x_inner ? \"right\" : \"left\" : config.axis_x_inner ? \"top\" : \"bottom\";\n        $$.yOrient = config.axis_rotated ? config.axis_y_inner ? \"top\" : \"bottom\" : config.axis_y_inner ? \"right\" : \"left\";\n        $$.y2Orient = config.axis_rotated ? config.axis_y2_inner ? \"bottom\" : \"top\" : config.axis_y2_inner ? \"left\" : \"right\";\n        $$.subXOrient = config.axis_rotated ? \"left\" : \"bottom\";\n\n        $$.isLegendRight = config.legend_position === 'right';\n        $$.isLegendInset = config.legend_position === 'inset';\n        $$.isLegendTop = config.legend_inset_anchor === 'top-left' || config.legend_inset_anchor === 'top-right';\n        $$.isLegendLeft = config.legend_inset_anchor === 'top-left' || config.legend_inset_anchor === 'bottom-left';\n        $$.legendStep = 0;\n        $$.legendItemWidth = 0;\n        $$.legendItemHeight = 0;\n\n        $$.currentMaxTickWidths = {\n            x: 0,\n            y: 0,\n            y2: 0\n        };\n\n        $$.rotated_padding_left = 30;\n        $$.rotated_padding_right = config.axis_rotated && !config.axis_x_show ? 0 : 30;\n        $$.rotated_padding_top = 5;\n\n        $$.withoutFadeIn = {};\n\n        $$.intervalForObserveInserted = undefined;\n\n        $$.axes.subx = d3.selectAll([]); // needs when excluding subchart.js\n    };\n\n    c3_chart_internal_fn.initChartElements = function () {\n        if (this.initBar) {\n            this.initBar();\n        }\n        if (this.initLine) {\n            this.initLine();\n        }\n        if (this.initArc) {\n            this.initArc();\n        }\n        if (this.initGauge) {\n            this.initGauge();\n        }\n        if (this.initText) {\n            this.initText();\n        }\n    };\n\n    c3_chart_internal_fn.initWithData = function (data) {\n        var $$ = this,\n            d3 = $$.d3,\n            config = $$.config;\n        var defs,\n            main,\n            binding = true;\n\n        $$.axis = new Axis($$);\n\n        if ($$.initPie) {\n            $$.initPie();\n        }\n        if ($$.initBrush) {\n            $$.initBrush();\n        }\n        if ($$.initZoom) {\n            $$.initZoom();\n        }\n\n        if (!config.bindto) {\n            $$.selectChart = d3.selectAll([]);\n        } else if (typeof config.bindto.node === 'function') {\n            $$.selectChart = config.bindto;\n        } else {\n            $$.selectChart = d3.select(config.bindto);\n        }\n        if ($$.selectChart.empty()) {\n            $$.selectChart = d3.select(document.createElement('div')).style('opacity', 0);\n            $$.observeInserted($$.selectChart);\n            binding = false;\n        }\n        $$.selectChart.html(\"\").classed(\"c3\", true);\n\n        // Init data as targets\n        $$.data.xs = {};\n        $$.data.targets = $$.convertDataToTargets(data);\n\n        if (config.data_filter) {\n            $$.data.targets = $$.data.targets.filter(config.data_filter);\n        }\n\n        // Set targets to hide if needed\n        if (config.data_hide) {\n            $$.addHiddenTargetIds(config.data_hide === true ? $$.mapToIds($$.data.targets) : config.data_hide);\n        }\n        if (config.legend_hide) {\n            $$.addHiddenLegendIds(config.legend_hide === true ? $$.mapToIds($$.data.targets) : config.legend_hide);\n        }\n\n        // Init sizes and scales\n        $$.updateSizes();\n        $$.updateScales();\n\n        // Set domains for each scale\n        $$.x.domain(d3.extent($$.getXDomain($$.data.targets)));\n        $$.y.domain($$.getYDomain($$.data.targets, 'y'));\n        $$.y2.domain($$.getYDomain($$.data.targets, 'y2'));\n        $$.subX.domain($$.x.domain());\n        $$.subY.domain($$.y.domain());\n        $$.subY2.domain($$.y2.domain());\n\n        // Save original x domain for zoom update\n        $$.orgXDomain = $$.x.domain();\n\n        // Set initialized scales to brush and zoom\n        if ($$.brush) {\n            $$.brush.scale($$.subX);\n        }\n        if (config.zoom_enabled) {\n            $$.zoom.scale($$.x);\n        }\n\n        /*-- Basic Elements --*/\n\n        // Define svgs\n        $$.svg = $$.selectChart.append(\"svg\").style(\"overflow\", \"hidden\").on('mouseenter', function () {\n            return config.onmouseover.call($$);\n        }).on('mouseleave', function () {\n            return config.onmouseout.call($$);\n        });\n\n        if ($$.config.svg_classname) {\n            $$.svg.attr('class', $$.config.svg_classname);\n        }\n\n        // Define defs\n        defs = $$.svg.append(\"defs\");\n        $$.clipChart = $$.appendClip(defs, $$.clipId);\n        $$.clipXAxis = $$.appendClip(defs, $$.clipIdForXAxis);\n        $$.clipYAxis = $$.appendClip(defs, $$.clipIdForYAxis);\n        $$.clipGrid = $$.appendClip(defs, $$.clipIdForGrid);\n        $$.clipSubchart = $$.appendClip(defs, $$.clipIdForSubchart);\n        $$.updateSvgSize();\n\n        // Define regions\n        main = $$.main = $$.svg.append(\"g\").attr(\"transform\", $$.getTranslate('main'));\n\n        if ($$.initSubchart) {\n            $$.initSubchart();\n        }\n        if ($$.initTooltip) {\n            $$.initTooltip();\n        }\n        if ($$.initLegend) {\n            $$.initLegend();\n        }\n        if ($$.initTitle) {\n            $$.initTitle();\n        }\n\n        /*-- Main Region --*/\n\n        // text when empty\n        main.append(\"text\").attr(\"class\", CLASS.text + ' ' + CLASS.empty).attr(\"text-anchor\", \"middle\") // horizontal centering of text at x position in all browsers.\n        .attr(\"dominant-baseline\", \"middle\"); // vertical centering of text at y position in all browsers, except IE.\n\n        // Regions\n        $$.initRegion();\n\n        // Grids\n        $$.initGrid();\n\n        // Define g for chart area\n        main.append('g').attr(\"clip-path\", $$.clipPath).attr('class', CLASS.chart);\n\n        // Grid lines\n        if (config.grid_lines_front) {\n            $$.initGridLines();\n        }\n\n        // Cover whole with rects for events\n        $$.initEventRect();\n\n        // Define g for chart\n        $$.initChartElements();\n\n        // if zoom privileged, insert rect to forefront\n        // TODO: is this needed?\n        main.insert('rect', config.zoom_privileged ? null : 'g.' + CLASS.regions).attr('class', CLASS.zoomRect).attr('width', $$.width).attr('height', $$.height).style('opacity', 0).on(\"dblclick.zoom\", null);\n\n        // Set default extent if defined\n        if (config.axis_x_extent) {\n            $$.brush.extent($$.getDefaultExtent());\n        }\n\n        // Add Axis\n        $$.axis.init();\n\n        // Set targets\n        $$.updateTargets($$.data.targets);\n\n        // Draw with targets\n        if (binding) {\n            $$.updateDimension();\n            $$.config.oninit.call($$);\n            $$.redraw({\n                withTransition: false,\n                withTransform: true,\n                withUpdateXDomain: true,\n                withUpdateOrgXDomain: true,\n                withTransitionForAxis: false\n            });\n        }\n\n        // Bind resize event\n        $$.bindResize();\n\n        // export element of the chart\n        $$.api.element = $$.selectChart.node();\n    };\n\n    c3_chart_internal_fn.smoothLines = function (el, type) {\n        var $$ = this;\n        if (type === 'grid') {\n            el.each(function () {\n                var g = $$.d3.select(this),\n                    x1 = g.attr('x1'),\n                    x2 = g.attr('x2'),\n                    y1 = g.attr('y1'),\n                    y2 = g.attr('y2');\n                g.attr({\n                    'x1': Math.ceil(x1),\n                    'x2': Math.ceil(x2),\n                    'y1': Math.ceil(y1),\n                    'y2': Math.ceil(y2)\n                });\n            });\n        }\n    };\n\n    c3_chart_internal_fn.updateSizes = function () {\n        var $$ = this,\n            config = $$.config;\n        var legendHeight = $$.legend ? $$.getLegendHeight() : 0,\n            legendWidth = $$.legend ? $$.getLegendWidth() : 0,\n            legendHeightForBottom = $$.isLegendRight || $$.isLegendInset ? 0 : legendHeight,\n            hasArc = $$.hasArcType(),\n            xAxisHeight = config.axis_rotated || hasArc ? 0 : $$.getHorizontalAxisHeight('x'),\n            subchartHeight = config.subchart_show && !hasArc ? config.subchart_size_height + xAxisHeight : 0;\n\n        $$.currentWidth = $$.getCurrentWidth();\n        $$.currentHeight = $$.getCurrentHeight();\n\n        // for main\n        $$.margin = config.axis_rotated ? {\n            top: $$.getHorizontalAxisHeight('y2') + $$.getCurrentPaddingTop(),\n            right: hasArc ? 0 : $$.getCurrentPaddingRight(),\n            bottom: $$.getHorizontalAxisHeight('y') + legendHeightForBottom + $$.getCurrentPaddingBottom(),\n            left: subchartHeight + (hasArc ? 0 : $$.getCurrentPaddingLeft())\n        } : {\n            top: 4 + $$.getCurrentPaddingTop(), // for top tick text\n            right: hasArc ? 0 : $$.getCurrentPaddingRight(),\n            bottom: xAxisHeight + subchartHeight + legendHeightForBottom + $$.getCurrentPaddingBottom(),\n            left: hasArc ? 0 : $$.getCurrentPaddingLeft()\n        };\n\n        // for subchart\n        $$.margin2 = config.axis_rotated ? {\n            top: $$.margin.top,\n            right: NaN,\n            bottom: 20 + legendHeightForBottom,\n            left: $$.rotated_padding_left\n        } : {\n            top: $$.currentHeight - subchartHeight - legendHeightForBottom,\n            right: NaN,\n            bottom: xAxisHeight + legendHeightForBottom,\n            left: $$.margin.left\n        };\n\n        // for legend\n        $$.margin3 = {\n            top: 0,\n            right: NaN,\n            bottom: 0,\n            left: 0\n        };\n        if ($$.updateSizeForLegend) {\n            $$.updateSizeForLegend(legendHeight, legendWidth);\n        }\n\n        $$.width = $$.currentWidth - $$.margin.left - $$.margin.right;\n        $$.height = $$.currentHeight - $$.margin.top - $$.margin.bottom;\n        if ($$.width < 0) {\n            $$.width = 0;\n        }\n        if ($$.height < 0) {\n            $$.height = 0;\n        }\n\n        $$.width2 = config.axis_rotated ? $$.margin.left - $$.rotated_padding_left - $$.rotated_padding_right : $$.width;\n        $$.height2 = config.axis_rotated ? $$.height : $$.currentHeight - $$.margin2.top - $$.margin2.bottom;\n        if ($$.width2 < 0) {\n            $$.width2 = 0;\n        }\n        if ($$.height2 < 0) {\n            $$.height2 = 0;\n        }\n\n        // for arc\n        $$.arcWidth = $$.width - ($$.isLegendRight ? legendWidth + 10 : 0);\n        $$.arcHeight = $$.height - ($$.isLegendRight ? 0 : 10);\n        if ($$.hasType('gauge') && !config.gauge_fullCircle) {\n            $$.arcHeight += $$.height - $$.getGaugeLabelHeight();\n        }\n        if ($$.updateRadius) {\n            $$.updateRadius();\n        }\n\n        if ($$.isLegendRight && hasArc) {\n            $$.margin3.left = $$.arcWidth / 2 + $$.radiusExpanded * 1.1;\n        }\n    };\n\n    c3_chart_internal_fn.updateTargets = function (targets) {\n        var $$ = this;\n\n        /*-- Main --*/\n\n        //-- Text --//\n        $$.updateTargetsForText(targets);\n\n        //-- Bar --//\n        $$.updateTargetsForBar(targets);\n\n        //-- Line --//\n        $$.updateTargetsForLine(targets);\n\n        //-- Arc --//\n        if ($$.hasArcType() && $$.updateTargetsForArc) {\n            $$.updateTargetsForArc(targets);\n        }\n\n        /*-- Sub --*/\n\n        if ($$.updateTargetsForSubchart) {\n            $$.updateTargetsForSubchart(targets);\n        }\n\n        // Fade-in each chart\n        $$.showTargets();\n    };\n    c3_chart_internal_fn.showTargets = function () {\n        var $$ = this;\n        $$.svg.selectAll('.' + CLASS.target).filter(function (d) {\n            return $$.isTargetToShow(d.id);\n        }).transition().duration($$.config.transition_duration).style(\"opacity\", 1);\n    };\n\n    c3_chart_internal_fn.redraw = function (options, transitions) {\n        var $$ = this,\n            main = $$.main,\n            d3 = $$.d3,\n            config = $$.config;\n        var areaIndices = $$.getShapeIndices($$.isAreaType),\n            barIndices = $$.getShapeIndices($$.isBarType),\n            lineIndices = $$.getShapeIndices($$.isLineType);\n        var withY, withSubchart, withTransition, withTransitionForExit, withTransitionForAxis, withTransform, withUpdateXDomain, withUpdateOrgXDomain, withTrimXDomain, withLegend, withEventRect, withDimension, withUpdateXAxis;\n        var hideAxis = $$.hasArcType();\n        var drawArea, drawBar, drawLine, xForText, yForText;\n        var duration, durationForExit, durationForAxis;\n        var waitForDraw, flow;\n        var targetsToShow = $$.filterTargetsToShow($$.data.targets),\n            tickValues,\n            i,\n            intervalForCulling,\n            xDomainForZoom;\n        var xv = $$.xv.bind($$),\n            cx,\n            cy;\n\n        options = options || {};\n        withY = getOption(options, \"withY\", true);\n        withSubchart = getOption(options, \"withSubchart\", true);\n        withTransition = getOption(options, \"withTransition\", true);\n        withTransform = getOption(options, \"withTransform\", false);\n        withUpdateXDomain = getOption(options, \"withUpdateXDomain\", false);\n        withUpdateOrgXDomain = getOption(options, \"withUpdateOrgXDomain\", false);\n        withTrimXDomain = getOption(options, \"withTrimXDomain\", true);\n        withUpdateXAxis = getOption(options, \"withUpdateXAxis\", withUpdateXDomain);\n        withLegend = getOption(options, \"withLegend\", false);\n        withEventRect = getOption(options, \"withEventRect\", true);\n        withDimension = getOption(options, \"withDimension\", true);\n        withTransitionForExit = getOption(options, \"withTransitionForExit\", withTransition);\n        withTransitionForAxis = getOption(options, \"withTransitionForAxis\", withTransition);\n\n        duration = withTransition ? config.transition_duration : 0;\n        durationForExit = withTransitionForExit ? duration : 0;\n        durationForAxis = withTransitionForAxis ? duration : 0;\n\n        transitions = transitions || $$.axis.generateTransitions(durationForAxis);\n\n        // update legend and transform each g\n        if (withLegend && config.legend_show) {\n            $$.updateLegend($$.mapToIds($$.data.targets), options, transitions);\n        } else if (withDimension) {\n            // need to update dimension (e.g. axis.y.tick.values) because y tick values should change\n            // no need to update axis in it because they will be updated in redraw()\n            $$.updateDimension(true);\n        }\n\n        // MEMO: needed for grids calculation\n        if ($$.isCategorized() && targetsToShow.length === 0) {\n            $$.x.domain([0, $$.axes.x.selectAll('.tick').size()]);\n        }\n\n        if (targetsToShow.length) {\n            $$.updateXDomain(targetsToShow, withUpdateXDomain, withUpdateOrgXDomain, withTrimXDomain);\n            if (!config.axis_x_tick_values) {\n                tickValues = $$.axis.updateXAxisTickValues(targetsToShow);\n            }\n        } else {\n            $$.xAxis.tickValues([]);\n            $$.subXAxis.tickValues([]);\n        }\n\n        if (config.zoom_rescale && !options.flow) {\n            xDomainForZoom = $$.x.orgDomain();\n        }\n\n        $$.y.domain($$.getYDomain(targetsToShow, 'y', xDomainForZoom));\n        $$.y2.domain($$.getYDomain(targetsToShow, 'y2', xDomainForZoom));\n\n        if (!config.axis_y_tick_values && config.axis_y_tick_count) {\n            $$.yAxis.tickValues($$.axis.generateTickValues($$.y.domain(), config.axis_y_tick_count));\n        }\n        if (!config.axis_y2_tick_values && config.axis_y2_tick_count) {\n            $$.y2Axis.tickValues($$.axis.generateTickValues($$.y2.domain(), config.axis_y2_tick_count));\n        }\n\n        // axes\n        $$.axis.redraw(transitions, hideAxis);\n\n        // Update axis label\n        $$.axis.updateLabels(withTransition);\n\n        // show/hide if manual culling needed\n        if ((withUpdateXDomain || withUpdateXAxis) && targetsToShow.length) {\n            if (config.axis_x_tick_culling && tickValues) {\n                for (i = 1; i < tickValues.length; i++) {\n                    if (tickValues.length / i < config.axis_x_tick_culling_max) {\n                        intervalForCulling = i;\n                        break;\n                    }\n                }\n                $$.svg.selectAll('.' + CLASS.axisX + ' .tick text').each(function (e) {\n                    var index = tickValues.indexOf(e);\n                    if (index >= 0) {\n                        d3.select(this).style('display', index % intervalForCulling ? 'none' : 'block');\n                    }\n                });\n            } else {\n                $$.svg.selectAll('.' + CLASS.axisX + ' .tick text').style('display', 'block');\n            }\n        }\n\n        // setup drawer - MEMO: these must be called after axis updated\n        drawArea = $$.generateDrawArea ? $$.generateDrawArea(areaIndices, false) : undefined;\n        drawBar = $$.generateDrawBar ? $$.generateDrawBar(barIndices) : undefined;\n        drawLine = $$.generateDrawLine ? $$.generateDrawLine(lineIndices, false) : undefined;\n        xForText = $$.generateXYForText(areaIndices, barIndices, lineIndices, true);\n        yForText = $$.generateXYForText(areaIndices, barIndices, lineIndices, false);\n\n        // Update sub domain\n        if (withY) {\n            $$.subY.domain($$.getYDomain(targetsToShow, 'y'));\n            $$.subY2.domain($$.getYDomain(targetsToShow, 'y2'));\n        }\n\n        // xgrid focus\n        $$.updateXgridFocus();\n\n        // Data empty label positioning and text.\n        main.select(\"text.\" + CLASS.text + '.' + CLASS.empty).attr(\"x\", $$.width / 2).attr(\"y\", $$.height / 2).text(config.data_empty_label_text).transition().style('opacity', targetsToShow.length ? 0 : 1);\n\n        // grid\n        $$.updateGrid(duration);\n\n        // rect for regions\n        $$.updateRegion(duration);\n\n        // bars\n        $$.updateBar(durationForExit);\n\n        // lines, areas and cricles\n        $$.updateLine(durationForExit);\n        $$.updateArea(durationForExit);\n        $$.updateCircle();\n\n        // text\n        if ($$.hasDataLabel()) {\n            $$.updateText(durationForExit);\n        }\n\n        // title\n        if ($$.redrawTitle) {\n            $$.redrawTitle();\n        }\n\n        // arc\n        if ($$.redrawArc) {\n            $$.redrawArc(duration, durationForExit, withTransform);\n        }\n\n        // subchart\n        if ($$.redrawSubchart) {\n            $$.redrawSubchart(withSubchart, transitions, duration, durationForExit, areaIndices, barIndices, lineIndices);\n        }\n\n        // circles for select\n        main.selectAll('.' + CLASS.selectedCircles).filter($$.isBarType.bind($$)).selectAll('circle').remove();\n\n        // event rects will redrawn when flow called\n        if (config.interaction_enabled && !options.flow && withEventRect) {\n            $$.redrawEventRect();\n            if ($$.updateZoom) {\n                $$.updateZoom();\n            }\n        }\n\n        // update circleY based on updated parameters\n        $$.updateCircleY();\n\n        // generate circle x/y functions depending on updated params\n        cx = ($$.config.axis_rotated ? $$.circleY : $$.circleX).bind($$);\n        cy = ($$.config.axis_rotated ? $$.circleX : $$.circleY).bind($$);\n\n        if (options.flow) {\n            flow = $$.generateFlow({\n                targets: targetsToShow,\n                flow: options.flow,\n                duration: options.flow.duration,\n                drawBar: drawBar,\n                drawLine: drawLine,\n                drawArea: drawArea,\n                cx: cx,\n                cy: cy,\n                xv: xv,\n                xForText: xForText,\n                yForText: yForText\n            });\n        }\n\n        if ((duration || flow) && $$.isTabVisible()) {\n            // Only use transition if tab visible. See #938.\n            // transition should be derived from one transition\n            d3.transition().duration(duration).each(function () {\n                var transitionsToWait = [];\n\n                // redraw and gather transitions\n                [$$.redrawBar(drawBar, true), $$.redrawLine(drawLine, true), $$.redrawArea(drawArea, true), $$.redrawCircle(cx, cy, true), $$.redrawText(xForText, yForText, options.flow, true), $$.redrawRegion(true), $$.redrawGrid(true)].forEach(function (transitions) {\n                    transitions.forEach(function (transition) {\n                        transitionsToWait.push(transition);\n                    });\n                });\n\n                // Wait for end of transitions to call flow and onrendered callback\n                waitForDraw = $$.generateWait();\n                transitionsToWait.forEach(function (t) {\n                    waitForDraw.add(t);\n                });\n            }).call(waitForDraw, function () {\n                if (flow) {\n                    flow();\n                }\n                if (config.onrendered) {\n                    config.onrendered.call($$);\n                }\n            });\n        } else {\n            $$.redrawBar(drawBar);\n            $$.redrawLine(drawLine);\n            $$.redrawArea(drawArea);\n            $$.redrawCircle(cx, cy);\n            $$.redrawText(xForText, yForText, options.flow);\n            $$.redrawRegion();\n            $$.redrawGrid();\n            if (config.onrendered) {\n                config.onrendered.call($$);\n            }\n        }\n\n        // update fadein condition\n        $$.mapToIds($$.data.targets).forEach(function (id) {\n            $$.withoutFadeIn[id] = true;\n        });\n    };\n\n    c3_chart_internal_fn.updateAndRedraw = function (options) {\n        var $$ = this,\n            config = $$.config,\n            transitions;\n        options = options || {};\n        // same with redraw\n        options.withTransition = getOption(options, \"withTransition\", true);\n        options.withTransform = getOption(options, \"withTransform\", false);\n        options.withLegend = getOption(options, \"withLegend\", false);\n        // NOT same with redraw\n        options.withUpdateXDomain = true;\n        options.withUpdateOrgXDomain = true;\n        options.withTransitionForExit = false;\n        options.withTransitionForTransform = getOption(options, \"withTransitionForTransform\", options.withTransition);\n        // MEMO: this needs to be called before updateLegend and it means this ALWAYS needs to be called)\n        $$.updateSizes();\n        // MEMO: called in updateLegend in redraw if withLegend\n        if (!(options.withLegend && config.legend_show)) {\n            transitions = $$.axis.generateTransitions(options.withTransitionForAxis ? config.transition_duration : 0);\n            // Update scales\n            $$.updateScales();\n            $$.updateSvgSize();\n            // Update g positions\n            $$.transformAll(options.withTransitionForTransform, transitions);\n        }\n        // Draw with new sizes & scales\n        $$.redraw(options, transitions);\n    };\n    c3_chart_internal_fn.redrawWithoutRescale = function () {\n        this.redraw({\n            withY: false,\n            withSubchart: false,\n            withEventRect: false,\n            withTransitionForAxis: false\n        });\n    };\n\n    c3_chart_internal_fn.isTimeSeries = function () {\n        return this.config.axis_x_type === 'timeseries';\n    };\n    c3_chart_internal_fn.isCategorized = function () {\n        return this.config.axis_x_type.indexOf('categor') >= 0;\n    };\n    c3_chart_internal_fn.isCustomX = function () {\n        var $$ = this,\n            config = $$.config;\n        return !$$.isTimeSeries() && (config.data_x || notEmpty(config.data_xs));\n    };\n\n    c3_chart_internal_fn.isTimeSeriesY = function () {\n        return this.config.axis_y_type === 'timeseries';\n    };\n\n    c3_chart_internal_fn.getTranslate = function (target) {\n        var $$ = this,\n            config = $$.config,\n            x,\n            y;\n        if (target === 'main') {\n            x = asHalfPixel($$.margin.left);\n            y = asHalfPixel($$.margin.top);\n        } else if (target === 'context') {\n            x = asHalfPixel($$.margin2.left);\n            y = asHalfPixel($$.margin2.top);\n        } else if (target === 'legend') {\n            x = $$.margin3.left;\n            y = $$.margin3.top;\n        } else if (target === 'x') {\n            x = 0;\n            y = config.axis_rotated ? 0 : $$.height;\n        } else if (target === 'y') {\n            x = 0;\n            y = config.axis_rotated ? $$.height : 0;\n        } else if (target === 'y2') {\n            x = config.axis_rotated ? 0 : $$.width;\n            y = config.axis_rotated ? 1 : 0;\n        } else if (target === 'subx') {\n            x = 0;\n            y = config.axis_rotated ? 0 : $$.height2;\n        } else if (target === 'arc') {\n            x = $$.arcWidth / 2;\n            y = $$.arcHeight / 2 - ($$.hasType('gauge') ? 6 : 0); // to prevent wrong display of min and max label\n        }\n        return \"translate(\" + x + \",\" + y + \")\";\n    };\n    c3_chart_internal_fn.initialOpacity = function (d) {\n        return d.value !== null && this.withoutFadeIn[d.id] ? 1 : 0;\n    };\n    c3_chart_internal_fn.initialOpacityForCircle = function (d) {\n        return d.value !== null && this.withoutFadeIn[d.id] ? this.opacityForCircle(d) : 0;\n    };\n    c3_chart_internal_fn.opacityForCircle = function (d) {\n        var isPointShouldBeShown = isFunction(this.config.point_show) ? this.config.point_show(d) : this.config.point_show;\n        var opacity = isPointShouldBeShown ? 1 : 0;\n        return isValue(d.value) ? this.isScatterType(d) ? 0.5 : opacity : 0;\n    };\n    c3_chart_internal_fn.opacityForText = function () {\n        return this.hasDataLabel() ? 1 : 0;\n    };\n    c3_chart_internal_fn.xx = function (d) {\n        return d ? this.x(d.x) : null;\n    };\n    c3_chart_internal_fn.xv = function (d) {\n        var $$ = this,\n            value = d.value;\n        if ($$.isTimeSeries()) {\n            value = $$.parseDate(d.value);\n        } else if ($$.isCategorized() && typeof d.value === 'string') {\n            value = $$.config.axis_x_categories.indexOf(d.value);\n        }\n        return Math.ceil($$.x(value));\n    };\n    c3_chart_internal_fn.yv = function (d) {\n        var $$ = this,\n            yScale = d.axis && d.axis === 'y2' ? $$.y2 : $$.y;\n        return Math.ceil(yScale(d.value));\n    };\n    c3_chart_internal_fn.subxx = function (d) {\n        return d ? this.subX(d.x) : null;\n    };\n\n    c3_chart_internal_fn.transformMain = function (withTransition, transitions) {\n        var $$ = this,\n            xAxis,\n            yAxis,\n            y2Axis;\n        if (transitions && transitions.axisX) {\n            xAxis = transitions.axisX;\n        } else {\n            xAxis = $$.main.select('.' + CLASS.axisX);\n            if (withTransition) {\n                xAxis = xAxis.transition();\n            }\n        }\n        if (transitions && transitions.axisY) {\n            yAxis = transitions.axisY;\n        } else {\n            yAxis = $$.main.select('.' + CLASS.axisY);\n            if (withTransition) {\n                yAxis = yAxis.transition();\n            }\n        }\n        if (transitions && transitions.axisY2) {\n            y2Axis = transitions.axisY2;\n        } else {\n            y2Axis = $$.main.select('.' + CLASS.axisY2);\n            if (withTransition) {\n                y2Axis = y2Axis.transition();\n            }\n        }\n        (withTransition ? $$.main.transition() : $$.main).attr(\"transform\", $$.getTranslate('main'));\n        xAxis.attr(\"transform\", $$.getTranslate('x'));\n        yAxis.attr(\"transform\", $$.getTranslate('y'));\n        y2Axis.attr(\"transform\", $$.getTranslate('y2'));\n        $$.main.select('.' + CLASS.chartArcs).attr(\"transform\", $$.getTranslate('arc'));\n    };\n    c3_chart_internal_fn.transformAll = function (withTransition, transitions) {\n        var $$ = this;\n        $$.transformMain(withTransition, transitions);\n        if ($$.config.subchart_show) {\n            $$.transformContext(withTransition, transitions);\n        }\n        if ($$.legend) {\n            $$.transformLegend(withTransition);\n        }\n    };\n\n    c3_chart_internal_fn.updateSvgSize = function () {\n        var $$ = this,\n            brush = $$.svg.select(\".c3-brush .background\");\n        $$.svg.attr('width', $$.currentWidth).attr('height', $$.currentHeight);\n        $$.svg.selectAll(['#' + $$.clipId, '#' + $$.clipIdForGrid]).select('rect').attr('width', $$.width).attr('height', $$.height);\n        $$.svg.select('#' + $$.clipIdForXAxis).select('rect').attr('x', $$.getXAxisClipX.bind($$)).attr('y', $$.getXAxisClipY.bind($$)).attr('width', $$.getXAxisClipWidth.bind($$)).attr('height', $$.getXAxisClipHeight.bind($$));\n        $$.svg.select('#' + $$.clipIdForYAxis).select('rect').attr('x', $$.getYAxisClipX.bind($$)).attr('y', $$.getYAxisClipY.bind($$)).attr('width', $$.getYAxisClipWidth.bind($$)).attr('height', $$.getYAxisClipHeight.bind($$));\n        $$.svg.select('#' + $$.clipIdForSubchart).select('rect').attr('width', $$.width).attr('height', brush.size() ? brush.attr('height') : 0);\n        $$.svg.select('.' + CLASS.zoomRect).attr('width', $$.width).attr('height', $$.height);\n        // MEMO: parent div's height will be bigger than svg when <!DOCTYPE html>\n        $$.selectChart.style('max-height', $$.currentHeight + \"px\");\n    };\n\n    c3_chart_internal_fn.updateDimension = function (withoutAxis) {\n        var $$ = this;\n        if (!withoutAxis) {\n            if ($$.config.axis_rotated) {\n                $$.axes.x.call($$.xAxis);\n                $$.axes.subx.call($$.subXAxis);\n            } else {\n                $$.axes.y.call($$.yAxis);\n                $$.axes.y2.call($$.y2Axis);\n            }\n        }\n        $$.updateSizes();\n        $$.updateScales();\n        $$.updateSvgSize();\n        $$.transformAll(false);\n    };\n\n    c3_chart_internal_fn.observeInserted = function (selection) {\n        var $$ = this,\n            observer;\n        if (typeof MutationObserver === 'undefined') {\n            window.console.error(\"MutationObserver not defined.\");\n            return;\n        }\n        observer = new MutationObserver(function (mutations) {\n            mutations.forEach(function (mutation) {\n                if (mutation.type === 'childList' && mutation.previousSibling) {\n                    observer.disconnect();\n                    // need to wait for completion of load because size calculation requires the actual sizes determined after that completion\n                    $$.intervalForObserveInserted = window.setInterval(function () {\n                        // parentNode will NOT be null when completed\n                        if (selection.node().parentNode) {\n                            window.clearInterval($$.intervalForObserveInserted);\n                            $$.updateDimension();\n                            if ($$.brush) {\n                                $$.brush.update();\n                            }\n                            $$.config.oninit.call($$);\n                            $$.redraw({\n                                withTransform: true,\n                                withUpdateXDomain: true,\n                                withUpdateOrgXDomain: true,\n                                withTransition: false,\n                                withTransitionForTransform: false,\n                                withLegend: true\n                            });\n                            selection.transition().style('opacity', 1);\n                        }\n                    }, 10);\n                }\n            });\n        });\n        observer.observe(selection.node(), { attributes: true, childList: true, characterData: true });\n    };\n\n    c3_chart_internal_fn.bindResize = function () {\n        var $$ = this,\n            config = $$.config;\n\n        $$.resizeFunction = $$.generateResize(); // need to call .remove\n\n        $$.resizeFunction.add(function () {\n            config.onresize.call($$);\n        });\n        if (config.resize_auto) {\n            $$.resizeFunction.add(function () {\n                if ($$.resizeTimeout !== undefined) {\n                    window.clearTimeout($$.resizeTimeout);\n                }\n                $$.resizeTimeout = window.setTimeout(function () {\n                    delete $$.resizeTimeout;\n                    $$.api.flush();\n                }, 100);\n            });\n        }\n        $$.resizeFunction.add(function () {\n            config.onresized.call($$);\n        });\n\n        $$.resizeIfElementDisplayed = function () {\n            // if element not displayed skip it\n            if ($$.api == null || !$$.api.element.offsetParent) {\n                return;\n            }\n\n            $$.resizeFunction();\n        };\n\n        if (window.attachEvent) {\n            window.attachEvent('onresize', $$.resizeIfElementDisplayed);\n        } else if (window.addEventListener) {\n            window.addEventListener('resize', $$.resizeIfElementDisplayed, false);\n        } else {\n            // fallback to this, if this is a very old browser\n            var wrapper = window.onresize;\n            if (!wrapper) {\n                // create a wrapper that will call all charts\n                wrapper = $$.generateResize();\n            } else if (!wrapper.add || !wrapper.remove) {\n                // there is already a handler registered, make sure we call it too\n                wrapper = $$.generateResize();\n                wrapper.add(window.onresize);\n            }\n            // add this graph to the wrapper, we will be removed if the user calls destroy\n            wrapper.add($$.resizeFunction);\n            window.onresize = function () {\n                // if element not displayed skip it\n                if (!$$.api.element.offsetParent) {\n                    return;\n                }\n\n                wrapper();\n            };\n        }\n    };\n\n    c3_chart_internal_fn.generateResize = function () {\n        var resizeFunctions = [];\n        function callResizeFunctions() {\n            resizeFunctions.forEach(function (f) {\n                f();\n            });\n        }\n        callResizeFunctions.add = function (f) {\n            resizeFunctions.push(f);\n        };\n        callResizeFunctions.remove = function (f) {\n            for (var i = 0; i < resizeFunctions.length; i++) {\n                if (resizeFunctions[i] === f) {\n                    resizeFunctions.splice(i, 1);\n                    break;\n                }\n            }\n        };\n        return callResizeFunctions;\n    };\n\n    c3_chart_internal_fn.endall = function (transition, callback) {\n        var n = 0;\n        transition.each(function () {\n            ++n;\n        }).each(\"end\", function () {\n            if (! --n) {\n                callback.apply(this, arguments);\n            }\n        });\n    };\n    c3_chart_internal_fn.generateWait = function () {\n        var transitionsToWait = [],\n            f = function f(transition, callback) {\n            var timer = setInterval(function () {\n                var done = 0;\n                transitionsToWait.forEach(function (t) {\n                    if (t.empty()) {\n                        done += 1;\n                        return;\n                    }\n                    try {\n                        t.transition();\n                    } catch (e) {\n                        done += 1;\n                    }\n                });\n                if (done === transitionsToWait.length) {\n                    clearInterval(timer);\n                    if (callback) {\n                        callback();\n                    }\n                }\n            }, 10);\n        };\n        f.add = function (transition) {\n            transitionsToWait.push(transition);\n        };\n        return f;\n    };\n\n    c3_chart_internal_fn.parseDate = function (date) {\n        var $$ = this,\n            parsedDate;\n        if (date instanceof Date) {\n            parsedDate = date;\n        } else if (typeof date === 'string') {\n            parsedDate = $$.dataTimeFormat($$.config.data_xFormat).parse(date);\n        } else if ((typeof date === 'undefined' ? 'undefined' : _typeof(date)) === 'object') {\n            parsedDate = new Date(+date);\n        } else if (typeof date === 'number' && !isNaN(date)) {\n            parsedDate = new Date(+date);\n        }\n        if (!parsedDate || isNaN(+parsedDate)) {\n            window.console.error(\"Failed to parse x '\" + date + \"' to Date object\");\n        }\n        return parsedDate;\n    };\n\n    c3_chart_internal_fn.isTabVisible = function () {\n        var hidden;\n        if (typeof document.hidden !== \"undefined\") {\n            // Opera 12.10 and Firefox 18 and later support\n            hidden = \"hidden\";\n        } else if (typeof document.mozHidden !== \"undefined\") {\n            hidden = \"mozHidden\";\n        } else if (typeof document.msHidden !== \"undefined\") {\n            hidden = \"msHidden\";\n        } else if (typeof document.webkitHidden !== \"undefined\") {\n            hidden = \"webkitHidden\";\n        }\n\n        return document[hidden] ? false : true;\n    };\n\n    c3_chart_internal_fn.isValue = isValue;\n    c3_chart_internal_fn.isFunction = isFunction;\n    c3_chart_internal_fn.isString = isString;\n    c3_chart_internal_fn.isUndefined = isUndefined;\n    c3_chart_internal_fn.isDefined = isDefined;\n    c3_chart_internal_fn.ceil10 = ceil10;\n    c3_chart_internal_fn.asHalfPixel = asHalfPixel;\n    c3_chart_internal_fn.diffDomain = diffDomain;\n    c3_chart_internal_fn.isEmpty = isEmpty;\n    c3_chart_internal_fn.notEmpty = notEmpty;\n    c3_chart_internal_fn.notEmpty = notEmpty;\n    c3_chart_internal_fn.getOption = getOption;\n    c3_chart_internal_fn.hasValue = hasValue;\n    c3_chart_internal_fn.sanitise = sanitise;\n    c3_chart_internal_fn.getPathBox = getPathBox;\n    c3_chart_internal_fn.CLASS = CLASS;\n\n    /* jshint ignore:start */\n\n    // PhantomJS doesn't have support for Function.prototype.bind, which has caused confusion. Use\n    // this polyfill to avoid the confusion.\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/bind#Polyfill\n\n    if (!Function.prototype.bind) {\n        Function.prototype.bind = function (oThis) {\n            if (typeof this !== 'function') {\n                // closest thing possible to the ECMAScript 5\n                // internal IsCallable function\n                throw new TypeError('Function.prototype.bind - what is trying to be bound is not callable');\n            }\n\n            var aArgs = Array.prototype.slice.call(arguments, 1),\n                fToBind = this,\n                fNOP = function fNOP() {},\n                fBound = function fBound() {\n                return fToBind.apply(this instanceof fNOP ? this : oThis, aArgs.concat(Array.prototype.slice.call(arguments)));\n            };\n\n            fNOP.prototype = this.prototype;\n            fBound.prototype = new fNOP();\n\n            return fBound;\n        };\n    }\n\n    // SVGPathSeg API polyfill\n    // https://github.com/progers/pathseg\n    //\n    // This is a drop-in replacement for the SVGPathSeg and SVGPathSegList APIs that were removed from\n    // SVG2 (https://lists.w3.org/Archives/Public/www-svg/2015Jun/0044.html), including the latest spec\n    // changes which were implemented in Firefox 43 and Chrome 46.\n\n    (function () {\n\n        if (!(\"SVGPathSeg\" in window)) {\n            // Spec: http://www.w3.org/TR/SVG11/single-page.html#paths-InterfaceSVGPathSeg\n            window.SVGPathSeg = function (type, typeAsLetter, owningPathSegList) {\n                this.pathSegType = type;\n                this.pathSegTypeAsLetter = typeAsLetter;\n                this._owningPathSegList = owningPathSegList;\n            };\n\n            window.SVGPathSeg.prototype.classname = \"SVGPathSeg\";\n\n            window.SVGPathSeg.PATHSEG_UNKNOWN = 0;\n            window.SVGPathSeg.PATHSEG_CLOSEPATH = 1;\n            window.SVGPathSeg.PATHSEG_MOVETO_ABS = 2;\n            window.SVGPathSeg.PATHSEG_MOVETO_REL = 3;\n            window.SVGPathSeg.PATHSEG_LINETO_ABS = 4;\n            window.SVGPathSeg.PATHSEG_LINETO_REL = 5;\n            window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_ABS = 6;\n            window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_REL = 7;\n            window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_ABS = 8;\n            window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_REL = 9;\n            window.SVGPathSeg.PATHSEG_ARC_ABS = 10;\n            window.SVGPathSeg.PATHSEG_ARC_REL = 11;\n            window.SVGPathSeg.PATHSEG_LINETO_HORIZONTAL_ABS = 12;\n            window.SVGPathSeg.PATHSEG_LINETO_HORIZONTAL_REL = 13;\n            window.SVGPathSeg.PATHSEG_LINETO_VERTICAL_ABS = 14;\n            window.SVGPathSeg.PATHSEG_LINETO_VERTICAL_REL = 15;\n            window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_SMOOTH_ABS = 16;\n            window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_SMOOTH_REL = 17;\n            window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS = 18;\n            window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL = 19;\n\n            // Notify owning PathSegList on any changes so they can be synchronized back to the path element.\n            window.SVGPathSeg.prototype._segmentChanged = function () {\n                if (this._owningPathSegList) this._owningPathSegList.segmentChanged(this);\n            };\n\n            window.SVGPathSegClosePath = function (owningPathSegList) {\n                window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_CLOSEPATH, \"z\", owningPathSegList);\n            };\n            window.SVGPathSegClosePath.prototype = Object.create(window.SVGPathSeg.prototype);\n            window.SVGPathSegClosePath.prototype.toString = function () {\n                return \"[object SVGPathSegClosePath]\";\n            };\n            window.SVGPathSegClosePath.prototype._asPathString = function () {\n                return this.pathSegTypeAsLetter;\n            };\n            window.SVGPathSegClosePath.prototype.clone = function () {\n                return new window.SVGPathSegClosePath(undefined);\n            };\n\n            window.SVGPathSegMovetoAbs = function (owningPathSegList, x, y) {\n                window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_MOVETO_ABS, \"M\", owningPathSegList);\n                this._x = x;\n                this._y = y;\n            };\n            window.SVGPathSegMovetoAbs.prototype = Object.create(window.SVGPathSeg.prototype);\n            window.SVGPathSegMovetoAbs.prototype.toString = function () {\n                return \"[object SVGPathSegMovetoAbs]\";\n            };\n            window.SVGPathSegMovetoAbs.prototype._asPathString = function () {\n                return this.pathSegTypeAsLetter + \" \" + this._x + \" \" + this._y;\n            };\n            window.SVGPathSegMovetoAbs.prototype.clone = function () {\n                return new window.SVGPathSegMovetoAbs(undefined, this._x, this._y);\n            };\n            Object.defineProperty(window.SVGPathSegMovetoAbs.prototype, \"x\", { get: function get() {\n                    return this._x;\n                }, set: function set(x) {\n                    this._x = x;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegMovetoAbs.prototype, \"y\", { get: function get() {\n                    return this._y;\n                }, set: function set(y) {\n                    this._y = y;this._segmentChanged();\n                }, enumerable: true });\n\n            window.SVGPathSegMovetoRel = function (owningPathSegList, x, y) {\n                window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_MOVETO_REL, \"m\", owningPathSegList);\n                this._x = x;\n                this._y = y;\n            };\n            window.SVGPathSegMovetoRel.prototype = Object.create(window.SVGPathSeg.prototype);\n            window.SVGPathSegMovetoRel.prototype.toString = function () {\n                return \"[object SVGPathSegMovetoRel]\";\n            };\n            window.SVGPathSegMovetoRel.prototype._asPathString = function () {\n                return this.pathSegTypeAsLetter + \" \" + this._x + \" \" + this._y;\n            };\n            window.SVGPathSegMovetoRel.prototype.clone = function () {\n                return new window.SVGPathSegMovetoRel(undefined, this._x, this._y);\n            };\n            Object.defineProperty(window.SVGPathSegMovetoRel.prototype, \"x\", { get: function get() {\n                    return this._x;\n                }, set: function set(x) {\n                    this._x = x;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegMovetoRel.prototype, \"y\", { get: function get() {\n                    return this._y;\n                }, set: function set(y) {\n                    this._y = y;this._segmentChanged();\n                }, enumerable: true });\n\n            window.SVGPathSegLinetoAbs = function (owningPathSegList, x, y) {\n                window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_LINETO_ABS, \"L\", owningPathSegList);\n                this._x = x;\n                this._y = y;\n            };\n            window.SVGPathSegLinetoAbs.prototype = Object.create(window.SVGPathSeg.prototype);\n            window.SVGPathSegLinetoAbs.prototype.toString = function () {\n                return \"[object SVGPathSegLinetoAbs]\";\n            };\n            window.SVGPathSegLinetoAbs.prototype._asPathString = function () {\n                return this.pathSegTypeAsLetter + \" \" + this._x + \" \" + this._y;\n            };\n            window.SVGPathSegLinetoAbs.prototype.clone = function () {\n                return new window.SVGPathSegLinetoAbs(undefined, this._x, this._y);\n            };\n            Object.defineProperty(window.SVGPathSegLinetoAbs.prototype, \"x\", { get: function get() {\n                    return this._x;\n                }, set: function set(x) {\n                    this._x = x;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegLinetoAbs.prototype, \"y\", { get: function get() {\n                    return this._y;\n                }, set: function set(y) {\n                    this._y = y;this._segmentChanged();\n                }, enumerable: true });\n\n            window.SVGPathSegLinetoRel = function (owningPathSegList, x, y) {\n                window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_LINETO_REL, \"l\", owningPathSegList);\n                this._x = x;\n                this._y = y;\n            };\n            window.SVGPathSegLinetoRel.prototype = Object.create(window.SVGPathSeg.prototype);\n            window.SVGPathSegLinetoRel.prototype.toString = function () {\n                return \"[object SVGPathSegLinetoRel]\";\n            };\n            window.SVGPathSegLinetoRel.prototype._asPathString = function () {\n                return this.pathSegTypeAsLetter + \" \" + this._x + \" \" + this._y;\n            };\n            window.SVGPathSegLinetoRel.prototype.clone = function () {\n                return new window.SVGPathSegLinetoRel(undefined, this._x, this._y);\n            };\n            Object.defineProperty(window.SVGPathSegLinetoRel.prototype, \"x\", { get: function get() {\n                    return this._x;\n                }, set: function set(x) {\n                    this._x = x;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegLinetoRel.prototype, \"y\", { get: function get() {\n                    return this._y;\n                }, set: function set(y) {\n                    this._y = y;this._segmentChanged();\n                }, enumerable: true });\n\n            window.SVGPathSegCurvetoCubicAbs = function (owningPathSegList, x, y, x1, y1, x2, y2) {\n                window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_ABS, \"C\", owningPathSegList);\n                this._x = x;\n                this._y = y;\n                this._x1 = x1;\n                this._y1 = y1;\n                this._x2 = x2;\n                this._y2 = y2;\n            };\n            window.SVGPathSegCurvetoCubicAbs.prototype = Object.create(window.SVGPathSeg.prototype);\n            window.SVGPathSegCurvetoCubicAbs.prototype.toString = function () {\n                return \"[object SVGPathSegCurvetoCubicAbs]\";\n            };\n            window.SVGPathSegCurvetoCubicAbs.prototype._asPathString = function () {\n                return this.pathSegTypeAsLetter + \" \" + this._x1 + \" \" + this._y1 + \" \" + this._x2 + \" \" + this._y2 + \" \" + this._x + \" \" + this._y;\n            };\n            window.SVGPathSegCurvetoCubicAbs.prototype.clone = function () {\n                return new window.SVGPathSegCurvetoCubicAbs(undefined, this._x, this._y, this._x1, this._y1, this._x2, this._y2);\n            };\n            Object.defineProperty(window.SVGPathSegCurvetoCubicAbs.prototype, \"x\", { get: function get() {\n                    return this._x;\n                }, set: function set(x) {\n                    this._x = x;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegCurvetoCubicAbs.prototype, \"y\", { get: function get() {\n                    return this._y;\n                }, set: function set(y) {\n                    this._y = y;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegCurvetoCubicAbs.prototype, \"x1\", { get: function get() {\n                    return this._x1;\n                }, set: function set(x1) {\n                    this._x1 = x1;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegCurvetoCubicAbs.prototype, \"y1\", { get: function get() {\n                    return this._y1;\n                }, set: function set(y1) {\n                    this._y1 = y1;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegCurvetoCubicAbs.prototype, \"x2\", { get: function get() {\n                    return this._x2;\n                }, set: function set(x2) {\n                    this._x2 = x2;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegCurvetoCubicAbs.prototype, \"y2\", { get: function get() {\n                    return this._y2;\n                }, set: function set(y2) {\n                    this._y2 = y2;this._segmentChanged();\n                }, enumerable: true });\n\n            window.SVGPathSegCurvetoCubicRel = function (owningPathSegList, x, y, x1, y1, x2, y2) {\n                window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_REL, \"c\", owningPathSegList);\n                this._x = x;\n                this._y = y;\n                this._x1 = x1;\n                this._y1 = y1;\n                this._x2 = x2;\n                this._y2 = y2;\n            };\n            window.SVGPathSegCurvetoCubicRel.prototype = Object.create(window.SVGPathSeg.prototype);\n            window.SVGPathSegCurvetoCubicRel.prototype.toString = function () {\n                return \"[object SVGPathSegCurvetoCubicRel]\";\n            };\n            window.SVGPathSegCurvetoCubicRel.prototype._asPathString = function () {\n                return this.pathSegTypeAsLetter + \" \" + this._x1 + \" \" + this._y1 + \" \" + this._x2 + \" \" + this._y2 + \" \" + this._x + \" \" + this._y;\n            };\n            window.SVGPathSegCurvetoCubicRel.prototype.clone = function () {\n                return new window.SVGPathSegCurvetoCubicRel(undefined, this._x, this._y, this._x1, this._y1, this._x2, this._y2);\n            };\n            Object.defineProperty(window.SVGPathSegCurvetoCubicRel.prototype, \"x\", { get: function get() {\n                    return this._x;\n                }, set: function set(x) {\n                    this._x = x;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegCurvetoCubicRel.prototype, \"y\", { get: function get() {\n                    return this._y;\n                }, set: function set(y) {\n                    this._y = y;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegCurvetoCubicRel.prototype, \"x1\", { get: function get() {\n                    return this._x1;\n                }, set: function set(x1) {\n                    this._x1 = x1;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegCurvetoCubicRel.prototype, \"y1\", { get: function get() {\n                    return this._y1;\n                }, set: function set(y1) {\n                    this._y1 = y1;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegCurvetoCubicRel.prototype, \"x2\", { get: function get() {\n                    return this._x2;\n                }, set: function set(x2) {\n                    this._x2 = x2;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegCurvetoCubicRel.prototype, \"y2\", { get: function get() {\n                    return this._y2;\n                }, set: function set(y2) {\n                    this._y2 = y2;this._segmentChanged();\n                }, enumerable: true });\n\n            window.SVGPathSegCurvetoQuadraticAbs = function (owningPathSegList, x, y, x1, y1) {\n                window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_ABS, \"Q\", owningPathSegList);\n                this._x = x;\n                this._y = y;\n                this._x1 = x1;\n                this._y1 = y1;\n            };\n            window.SVGPathSegCurvetoQuadraticAbs.prototype = Object.create(window.SVGPathSeg.prototype);\n            window.SVGPathSegCurvetoQuadraticAbs.prototype.toString = function () {\n                return \"[object SVGPathSegCurvetoQuadraticAbs]\";\n            };\n            window.SVGPathSegCurvetoQuadraticAbs.prototype._asPathString = function () {\n                return this.pathSegTypeAsLetter + \" \" + this._x1 + \" \" + this._y1 + \" \" + this._x + \" \" + this._y;\n            };\n            window.SVGPathSegCurvetoQuadraticAbs.prototype.clone = function () {\n                return new window.SVGPathSegCurvetoQuadraticAbs(undefined, this._x, this._y, this._x1, this._y1);\n            };\n            Object.defineProperty(window.SVGPathSegCurvetoQuadraticAbs.prototype, \"x\", { get: function get() {\n                    return this._x;\n                }, set: function set(x) {\n                    this._x = x;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegCurvetoQuadraticAbs.prototype, \"y\", { get: function get() {\n                    return this._y;\n                }, set: function set(y) {\n                    this._y = y;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegCurvetoQuadraticAbs.prototype, \"x1\", { get: function get() {\n                    return this._x1;\n                }, set: function set(x1) {\n                    this._x1 = x1;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegCurvetoQuadraticAbs.prototype, \"y1\", { get: function get() {\n                    return this._y1;\n                }, set: function set(y1) {\n                    this._y1 = y1;this._segmentChanged();\n                }, enumerable: true });\n\n            window.SVGPathSegCurvetoQuadraticRel = function (owningPathSegList, x, y, x1, y1) {\n                window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_REL, \"q\", owningPathSegList);\n                this._x = x;\n                this._y = y;\n                this._x1 = x1;\n                this._y1 = y1;\n            };\n            window.SVGPathSegCurvetoQuadraticRel.prototype = Object.create(window.SVGPathSeg.prototype);\n            window.SVGPathSegCurvetoQuadraticRel.prototype.toString = function () {\n                return \"[object SVGPathSegCurvetoQuadraticRel]\";\n            };\n            window.SVGPathSegCurvetoQuadraticRel.prototype._asPathString = function () {\n                return this.pathSegTypeAsLetter + \" \" + this._x1 + \" \" + this._y1 + \" \" + this._x + \" \" + this._y;\n            };\n            window.SVGPathSegCurvetoQuadraticRel.prototype.clone = function () {\n                return new window.SVGPathSegCurvetoQuadraticRel(undefined, this._x, this._y, this._x1, this._y1);\n            };\n            Object.defineProperty(window.SVGPathSegCurvetoQuadraticRel.prototype, \"x\", { get: function get() {\n                    return this._x;\n                }, set: function set(x) {\n                    this._x = x;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegCurvetoQuadraticRel.prototype, \"y\", { get: function get() {\n                    return this._y;\n                }, set: function set(y) {\n                    this._y = y;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegCurvetoQuadraticRel.prototype, \"x1\", { get: function get() {\n                    return this._x1;\n                }, set: function set(x1) {\n                    this._x1 = x1;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegCurvetoQuadraticRel.prototype, \"y1\", { get: function get() {\n                    return this._y1;\n                }, set: function set(y1) {\n                    this._y1 = y1;this._segmentChanged();\n                }, enumerable: true });\n\n            window.SVGPathSegArcAbs = function (owningPathSegList, x, y, r1, r2, angle, largeArcFlag, sweepFlag) {\n                window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_ARC_ABS, \"A\", owningPathSegList);\n                this._x = x;\n                this._y = y;\n                this._r1 = r1;\n                this._r2 = r2;\n                this._angle = angle;\n                this._largeArcFlag = largeArcFlag;\n                this._sweepFlag = sweepFlag;\n            };\n            window.SVGPathSegArcAbs.prototype = Object.create(window.SVGPathSeg.prototype);\n            window.SVGPathSegArcAbs.prototype.toString = function () {\n                return \"[object SVGPathSegArcAbs]\";\n            };\n            window.SVGPathSegArcAbs.prototype._asPathString = function () {\n                return this.pathSegTypeAsLetter + \" \" + this._r1 + \" \" + this._r2 + \" \" + this._angle + \" \" + (this._largeArcFlag ? \"1\" : \"0\") + \" \" + (this._sweepFlag ? \"1\" : \"0\") + \" \" + this._x + \" \" + this._y;\n            };\n            window.SVGPathSegArcAbs.prototype.clone = function () {\n                return new window.SVGPathSegArcAbs(undefined, this._x, this._y, this._r1, this._r2, this._angle, this._largeArcFlag, this._sweepFlag);\n            };\n            Object.defineProperty(window.SVGPathSegArcAbs.prototype, \"x\", { get: function get() {\n                    return this._x;\n                }, set: function set(x) {\n                    this._x = x;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegArcAbs.prototype, \"y\", { get: function get() {\n                    return this._y;\n                }, set: function set(y) {\n                    this._y = y;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegArcAbs.prototype, \"r1\", { get: function get() {\n                    return this._r1;\n                }, set: function set(r1) {\n                    this._r1 = r1;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegArcAbs.prototype, \"r2\", { get: function get() {\n                    return this._r2;\n                }, set: function set(r2) {\n                    this._r2 = r2;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegArcAbs.prototype, \"angle\", { get: function get() {\n                    return this._angle;\n                }, set: function set(angle) {\n                    this._angle = angle;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegArcAbs.prototype, \"largeArcFlag\", { get: function get() {\n                    return this._largeArcFlag;\n                }, set: function set(largeArcFlag) {\n                    this._largeArcFlag = largeArcFlag;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegArcAbs.prototype, \"sweepFlag\", { get: function get() {\n                    return this._sweepFlag;\n                }, set: function set(sweepFlag) {\n                    this._sweepFlag = sweepFlag;this._segmentChanged();\n                }, enumerable: true });\n\n            window.SVGPathSegArcRel = function (owningPathSegList, x, y, r1, r2, angle, largeArcFlag, sweepFlag) {\n                window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_ARC_REL, \"a\", owningPathSegList);\n                this._x = x;\n                this._y = y;\n                this._r1 = r1;\n                this._r2 = r2;\n                this._angle = angle;\n                this._largeArcFlag = largeArcFlag;\n                this._sweepFlag = sweepFlag;\n            };\n            window.SVGPathSegArcRel.prototype = Object.create(window.SVGPathSeg.prototype);\n            window.SVGPathSegArcRel.prototype.toString = function () {\n                return \"[object SVGPathSegArcRel]\";\n            };\n            window.SVGPathSegArcRel.prototype._asPathString = function () {\n                return this.pathSegTypeAsLetter + \" \" + this._r1 + \" \" + this._r2 + \" \" + this._angle + \" \" + (this._largeArcFlag ? \"1\" : \"0\") + \" \" + (this._sweepFlag ? \"1\" : \"0\") + \" \" + this._x + \" \" + this._y;\n            };\n            window.SVGPathSegArcRel.prototype.clone = function () {\n                return new window.SVGPathSegArcRel(undefined, this._x, this._y, this._r1, this._r2, this._angle, this._largeArcFlag, this._sweepFlag);\n            };\n            Object.defineProperty(window.SVGPathSegArcRel.prototype, \"x\", { get: function get() {\n                    return this._x;\n                }, set: function set(x) {\n                    this._x = x;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegArcRel.prototype, \"y\", { get: function get() {\n                    return this._y;\n                }, set: function set(y) {\n                    this._y = y;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegArcRel.prototype, \"r1\", { get: function get() {\n                    return this._r1;\n                }, set: function set(r1) {\n                    this._r1 = r1;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegArcRel.prototype, \"r2\", { get: function get() {\n                    return this._r2;\n                }, set: function set(r2) {\n                    this._r2 = r2;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegArcRel.prototype, \"angle\", { get: function get() {\n                    return this._angle;\n                }, set: function set(angle) {\n                    this._angle = angle;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegArcRel.prototype, \"largeArcFlag\", { get: function get() {\n                    return this._largeArcFlag;\n                }, set: function set(largeArcFlag) {\n                    this._largeArcFlag = largeArcFlag;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegArcRel.prototype, \"sweepFlag\", { get: function get() {\n                    return this._sweepFlag;\n                }, set: function set(sweepFlag) {\n                    this._sweepFlag = sweepFlag;this._segmentChanged();\n                }, enumerable: true });\n\n            window.SVGPathSegLinetoHorizontalAbs = function (owningPathSegList, x) {\n                window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_LINETO_HORIZONTAL_ABS, \"H\", owningPathSegList);\n                this._x = x;\n            };\n            window.SVGPathSegLinetoHorizontalAbs.prototype = Object.create(window.SVGPathSeg.prototype);\n            window.SVGPathSegLinetoHorizontalAbs.prototype.toString = function () {\n                return \"[object SVGPathSegLinetoHorizontalAbs]\";\n            };\n            window.SVGPathSegLinetoHorizontalAbs.prototype._asPathString = function () {\n                return this.pathSegTypeAsLetter + \" \" + this._x;\n            };\n            window.SVGPathSegLinetoHorizontalAbs.prototype.clone = function () {\n                return new window.SVGPathSegLinetoHorizontalAbs(undefined, this._x);\n            };\n            Object.defineProperty(window.SVGPathSegLinetoHorizontalAbs.prototype, \"x\", { get: function get() {\n                    return this._x;\n                }, set: function set(x) {\n                    this._x = x;this._segmentChanged();\n                }, enumerable: true });\n\n            window.SVGPathSegLinetoHorizontalRel = function (owningPathSegList, x) {\n                window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_LINETO_HORIZONTAL_REL, \"h\", owningPathSegList);\n                this._x = x;\n            };\n            window.SVGPathSegLinetoHorizontalRel.prototype = Object.create(window.SVGPathSeg.prototype);\n            window.SVGPathSegLinetoHorizontalRel.prototype.toString = function () {\n                return \"[object SVGPathSegLinetoHorizontalRel]\";\n            };\n            window.SVGPathSegLinetoHorizontalRel.prototype._asPathString = function () {\n                return this.pathSegTypeAsLetter + \" \" + this._x;\n            };\n            window.SVGPathSegLinetoHorizontalRel.prototype.clone = function () {\n                return new window.SVGPathSegLinetoHorizontalRel(undefined, this._x);\n            };\n            Object.defineProperty(window.SVGPathSegLinetoHorizontalRel.prototype, \"x\", { get: function get() {\n                    return this._x;\n                }, set: function set(x) {\n                    this._x = x;this._segmentChanged();\n                }, enumerable: true });\n\n            window.SVGPathSegLinetoVerticalAbs = function (owningPathSegList, y) {\n                window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_LINETO_VERTICAL_ABS, \"V\", owningPathSegList);\n                this._y = y;\n            };\n            window.SVGPathSegLinetoVerticalAbs.prototype = Object.create(window.SVGPathSeg.prototype);\n            window.SVGPathSegLinetoVerticalAbs.prototype.toString = function () {\n                return \"[object SVGPathSegLinetoVerticalAbs]\";\n            };\n            window.SVGPathSegLinetoVerticalAbs.prototype._asPathString = function () {\n                return this.pathSegTypeAsLetter + \" \" + this._y;\n            };\n            window.SVGPathSegLinetoVerticalAbs.prototype.clone = function () {\n                return new window.SVGPathSegLinetoVerticalAbs(undefined, this._y);\n            };\n            Object.defineProperty(window.SVGPathSegLinetoVerticalAbs.prototype, \"y\", { get: function get() {\n                    return this._y;\n                }, set: function set(y) {\n                    this._y = y;this._segmentChanged();\n                }, enumerable: true });\n\n            window.SVGPathSegLinetoVerticalRel = function (owningPathSegList, y) {\n                window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_LINETO_VERTICAL_REL, \"v\", owningPathSegList);\n                this._y = y;\n            };\n            window.SVGPathSegLinetoVerticalRel.prototype = Object.create(window.SVGPathSeg.prototype);\n            window.SVGPathSegLinetoVerticalRel.prototype.toString = function () {\n                return \"[object SVGPathSegLinetoVerticalRel]\";\n            };\n            window.SVGPathSegLinetoVerticalRel.prototype._asPathString = function () {\n                return this.pathSegTypeAsLetter + \" \" + this._y;\n            };\n            window.SVGPathSegLinetoVerticalRel.prototype.clone = function () {\n                return new window.SVGPathSegLinetoVerticalRel(undefined, this._y);\n            };\n            Object.defineProperty(window.SVGPathSegLinetoVerticalRel.prototype, \"y\", { get: function get() {\n                    return this._y;\n                }, set: function set(y) {\n                    this._y = y;this._segmentChanged();\n                }, enumerable: true });\n\n            window.SVGPathSegCurvetoCubicSmoothAbs = function (owningPathSegList, x, y, x2, y2) {\n                window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_SMOOTH_ABS, \"S\", owningPathSegList);\n                this._x = x;\n                this._y = y;\n                this._x2 = x2;\n                this._y2 = y2;\n            };\n            window.SVGPathSegCurvetoCubicSmoothAbs.prototype = Object.create(window.SVGPathSeg.prototype);\n            window.SVGPathSegCurvetoCubicSmoothAbs.prototype.toString = function () {\n                return \"[object SVGPathSegCurvetoCubicSmoothAbs]\";\n            };\n            window.SVGPathSegCurvetoCubicSmoothAbs.prototype._asPathString = function () {\n                return this.pathSegTypeAsLetter + \" \" + this._x2 + \" \" + this._y2 + \" \" + this._x + \" \" + this._y;\n            };\n            window.SVGPathSegCurvetoCubicSmoothAbs.prototype.clone = function () {\n                return new window.SVGPathSegCurvetoCubicSmoothAbs(undefined, this._x, this._y, this._x2, this._y2);\n            };\n            Object.defineProperty(window.SVGPathSegCurvetoCubicSmoothAbs.prototype, \"x\", { get: function get() {\n                    return this._x;\n                }, set: function set(x) {\n                    this._x = x;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegCurvetoCubicSmoothAbs.prototype, \"y\", { get: function get() {\n                    return this._y;\n                }, set: function set(y) {\n                    this._y = y;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegCurvetoCubicSmoothAbs.prototype, \"x2\", { get: function get() {\n                    return this._x2;\n                }, set: function set(x2) {\n                    this._x2 = x2;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegCurvetoCubicSmoothAbs.prototype, \"y2\", { get: function get() {\n                    return this._y2;\n                }, set: function set(y2) {\n                    this._y2 = y2;this._segmentChanged();\n                }, enumerable: true });\n\n            window.SVGPathSegCurvetoCubicSmoothRel = function (owningPathSegList, x, y, x2, y2) {\n                window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_SMOOTH_REL, \"s\", owningPathSegList);\n                this._x = x;\n                this._y = y;\n                this._x2 = x2;\n                this._y2 = y2;\n            };\n            window.SVGPathSegCurvetoCubicSmoothRel.prototype = Object.create(window.SVGPathSeg.prototype);\n            window.SVGPathSegCurvetoCubicSmoothRel.prototype.toString = function () {\n                return \"[object SVGPathSegCurvetoCubicSmoothRel]\";\n            };\n            window.SVGPathSegCurvetoCubicSmoothRel.prototype._asPathString = function () {\n                return this.pathSegTypeAsLetter + \" \" + this._x2 + \" \" + this._y2 + \" \" + this._x + \" \" + this._y;\n            };\n            window.SVGPathSegCurvetoCubicSmoothRel.prototype.clone = function () {\n                return new window.SVGPathSegCurvetoCubicSmoothRel(undefined, this._x, this._y, this._x2, this._y2);\n            };\n            Object.defineProperty(window.SVGPathSegCurvetoCubicSmoothRel.prototype, \"x\", { get: function get() {\n                    return this._x;\n                }, set: function set(x) {\n                    this._x = x;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegCurvetoCubicSmoothRel.prototype, \"y\", { get: function get() {\n                    return this._y;\n                }, set: function set(y) {\n                    this._y = y;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegCurvetoCubicSmoothRel.prototype, \"x2\", { get: function get() {\n                    return this._x2;\n                }, set: function set(x2) {\n                    this._x2 = x2;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegCurvetoCubicSmoothRel.prototype, \"y2\", { get: function get() {\n                    return this._y2;\n                }, set: function set(y2) {\n                    this._y2 = y2;this._segmentChanged();\n                }, enumerable: true });\n\n            window.SVGPathSegCurvetoQuadraticSmoothAbs = function (owningPathSegList, x, y) {\n                window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS, \"T\", owningPathSegList);\n                this._x = x;\n                this._y = y;\n            };\n            window.SVGPathSegCurvetoQuadraticSmoothAbs.prototype = Object.create(window.SVGPathSeg.prototype);\n            window.SVGPathSegCurvetoQuadraticSmoothAbs.prototype.toString = function () {\n                return \"[object SVGPathSegCurvetoQuadraticSmoothAbs]\";\n            };\n            window.SVGPathSegCurvetoQuadraticSmoothAbs.prototype._asPathString = function () {\n                return this.pathSegTypeAsLetter + \" \" + this._x + \" \" + this._y;\n            };\n            window.SVGPathSegCurvetoQuadraticSmoothAbs.prototype.clone = function () {\n                return new window.SVGPathSegCurvetoQuadraticSmoothAbs(undefined, this._x, this._y);\n            };\n            Object.defineProperty(window.SVGPathSegCurvetoQuadraticSmoothAbs.prototype, \"x\", { get: function get() {\n                    return this._x;\n                }, set: function set(x) {\n                    this._x = x;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegCurvetoQuadraticSmoothAbs.prototype, \"y\", { get: function get() {\n                    return this._y;\n                }, set: function set(y) {\n                    this._y = y;this._segmentChanged();\n                }, enumerable: true });\n\n            window.SVGPathSegCurvetoQuadraticSmoothRel = function (owningPathSegList, x, y) {\n                window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL, \"t\", owningPathSegList);\n                this._x = x;\n                this._y = y;\n            };\n            window.SVGPathSegCurvetoQuadraticSmoothRel.prototype = Object.create(window.SVGPathSeg.prototype);\n            window.SVGPathSegCurvetoQuadraticSmoothRel.prototype.toString = function () {\n                return \"[object SVGPathSegCurvetoQuadraticSmoothRel]\";\n            };\n            window.SVGPathSegCurvetoQuadraticSmoothRel.prototype._asPathString = function () {\n                return this.pathSegTypeAsLetter + \" \" + this._x + \" \" + this._y;\n            };\n            window.SVGPathSegCurvetoQuadraticSmoothRel.prototype.clone = function () {\n                return new window.SVGPathSegCurvetoQuadraticSmoothRel(undefined, this._x, this._y);\n            };\n            Object.defineProperty(window.SVGPathSegCurvetoQuadraticSmoothRel.prototype, \"x\", { get: function get() {\n                    return this._x;\n                }, set: function set(x) {\n                    this._x = x;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegCurvetoQuadraticSmoothRel.prototype, \"y\", { get: function get() {\n                    return this._y;\n                }, set: function set(y) {\n                    this._y = y;this._segmentChanged();\n                }, enumerable: true });\n\n            // Add createSVGPathSeg* functions to window.SVGPathElement.\n            // Spec: http://www.w3.org/TR/SVG11/single-page.html#paths-Interfacewindow.SVGPathElement.\n            window.SVGPathElement.prototype.createSVGPathSegClosePath = function () {\n                return new window.SVGPathSegClosePath(undefined);\n            };\n            window.SVGPathElement.prototype.createSVGPathSegMovetoAbs = function (x, y) {\n                return new window.SVGPathSegMovetoAbs(undefined, x, y);\n            };\n            window.SVGPathElement.prototype.createSVGPathSegMovetoRel = function (x, y) {\n                return new window.SVGPathSegMovetoRel(undefined, x, y);\n            };\n            window.SVGPathElement.prototype.createSVGPathSegLinetoAbs = function (x, y) {\n                return new window.SVGPathSegLinetoAbs(undefined, x, y);\n            };\n            window.SVGPathElement.prototype.createSVGPathSegLinetoRel = function (x, y) {\n                return new window.SVGPathSegLinetoRel(undefined, x, y);\n            };\n            window.SVGPathElement.prototype.createSVGPathSegCurvetoCubicAbs = function (x, y, x1, y1, x2, y2) {\n                return new window.SVGPathSegCurvetoCubicAbs(undefined, x, y, x1, y1, x2, y2);\n            };\n            window.SVGPathElement.prototype.createSVGPathSegCurvetoCubicRel = function (x, y, x1, y1, x2, y2) {\n                return new window.SVGPathSegCurvetoCubicRel(undefined, x, y, x1, y1, x2, y2);\n            };\n            window.SVGPathElement.prototype.createSVGPathSegCurvetoQuadraticAbs = function (x, y, x1, y1) {\n                return new window.SVGPathSegCurvetoQuadraticAbs(undefined, x, y, x1, y1);\n            };\n            window.SVGPathElement.prototype.createSVGPathSegCurvetoQuadraticRel = function (x, y, x1, y1) {\n                return new window.SVGPathSegCurvetoQuadraticRel(undefined, x, y, x1, y1);\n            };\n            window.SVGPathElement.prototype.createSVGPathSegArcAbs = function (x, y, r1, r2, angle, largeArcFlag, sweepFlag) {\n                return new window.SVGPathSegArcAbs(undefined, x, y, r1, r2, angle, largeArcFlag, sweepFlag);\n            };\n            window.SVGPathElement.prototype.createSVGPathSegArcRel = function (x, y, r1, r2, angle, largeArcFlag, sweepFlag) {\n                return new window.SVGPathSegArcRel(undefined, x, y, r1, r2, angle, largeArcFlag, sweepFlag);\n            };\n            window.SVGPathElement.prototype.createSVGPathSegLinetoHorizontalAbs = function (x) {\n                return new window.SVGPathSegLinetoHorizontalAbs(undefined, x);\n            };\n            window.SVGPathElement.prototype.createSVGPathSegLinetoHorizontalRel = function (x) {\n                return new window.SVGPathSegLinetoHorizontalRel(undefined, x);\n            };\n            window.SVGPathElement.prototype.createSVGPathSegLinetoVerticalAbs = function (y) {\n                return new window.SVGPathSegLinetoVerticalAbs(undefined, y);\n            };\n            window.SVGPathElement.prototype.createSVGPathSegLinetoVerticalRel = function (y) {\n                return new window.SVGPathSegLinetoVerticalRel(undefined, y);\n            };\n            window.SVGPathElement.prototype.createSVGPathSegCurvetoCubicSmoothAbs = function (x, y, x2, y2) {\n                return new window.SVGPathSegCurvetoCubicSmoothAbs(undefined, x, y, x2, y2);\n            };\n            window.SVGPathElement.prototype.createSVGPathSegCurvetoCubicSmoothRel = function (x, y, x2, y2) {\n                return new window.SVGPathSegCurvetoCubicSmoothRel(undefined, x, y, x2, y2);\n            };\n            window.SVGPathElement.prototype.createSVGPathSegCurvetoQuadraticSmoothAbs = function (x, y) {\n                return new window.SVGPathSegCurvetoQuadraticSmoothAbs(undefined, x, y);\n            };\n            window.SVGPathElement.prototype.createSVGPathSegCurvetoQuadraticSmoothRel = function (x, y) {\n                return new window.SVGPathSegCurvetoQuadraticSmoothRel(undefined, x, y);\n            };\n\n            if (!(\"getPathSegAtLength\" in window.SVGPathElement.prototype)) {\n                // Add getPathSegAtLength to SVGPathElement.\n                // Spec: https://www.w3.org/TR/SVG11/single-page.html#paths-__svg__SVGPathElement__getPathSegAtLength\n                // This polyfill requires SVGPathElement.getTotalLength to implement the distance-along-a-path algorithm.\n                window.SVGPathElement.prototype.getPathSegAtLength = function (distance) {\n                    if (distance === undefined || !isFinite(distance)) throw \"Invalid arguments.\";\n\n                    var measurementElement = document.createElementNS(\"http://www.w3.org/2000/svg\", \"path\");\n                    measurementElement.setAttribute(\"d\", this.getAttribute(\"d\"));\n                    var lastPathSegment = measurementElement.pathSegList.numberOfItems - 1;\n\n                    // If the path is empty, return 0.\n                    if (lastPathSegment <= 0) return 0;\n\n                    do {\n                        measurementElement.pathSegList.removeItem(lastPathSegment);\n                        if (distance > measurementElement.getTotalLength()) break;\n                        lastPathSegment--;\n                    } while (lastPathSegment > 0);\n                    return lastPathSegment;\n                };\n            }\n        }\n\n        if (!(\"SVGPathSegList\" in window)) {\n            // Spec: http://www.w3.org/TR/SVG11/single-page.html#paths-InterfaceSVGPathSegList\n            window.SVGPathSegList = function (pathElement) {\n                this._pathElement = pathElement;\n                this._list = this._parsePath(this._pathElement.getAttribute(\"d\"));\n\n                // Use a MutationObserver to catch changes to the path's \"d\" attribute.\n                this._mutationObserverConfig = { \"attributes\": true, \"attributeFilter\": [\"d\"] };\n                this._pathElementMutationObserver = new MutationObserver(this._updateListFromPathMutations.bind(this));\n                this._pathElementMutationObserver.observe(this._pathElement, this._mutationObserverConfig);\n            };\n\n            window.SVGPathSegList.prototype.classname = \"SVGPathSegList\";\n\n            Object.defineProperty(window.SVGPathSegList.prototype, \"numberOfItems\", {\n                get: function get() {\n                    this._checkPathSynchronizedToList();\n                    return this._list.length;\n                },\n                enumerable: true\n            });\n\n            // Add the pathSegList accessors to window.SVGPathElement.\n            // Spec: http://www.w3.org/TR/SVG11/single-page.html#paths-InterfaceSVGAnimatedPathData\n            Object.defineProperty(window.SVGPathElement.prototype, \"pathSegList\", {\n                get: function get() {\n                    if (!this._pathSegList) this._pathSegList = new window.SVGPathSegList(this);\n                    return this._pathSegList;\n                },\n                enumerable: true\n            });\n            // FIXME: The following are not implemented and simply return window.SVGPathElement.pathSegList.\n            Object.defineProperty(window.SVGPathElement.prototype, \"normalizedPathSegList\", { get: function get() {\n                    return this.pathSegList;\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathElement.prototype, \"animatedPathSegList\", { get: function get() {\n                    return this.pathSegList;\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathElement.prototype, \"animatedNormalizedPathSegList\", { get: function get() {\n                    return this.pathSegList;\n                }, enumerable: true });\n\n            // Process any pending mutations to the path element and update the list as needed.\n            // This should be the first call of all public functions and is needed because\n            // MutationObservers are not synchronous so we can have pending asynchronous mutations.\n            window.SVGPathSegList.prototype._checkPathSynchronizedToList = function () {\n                this._updateListFromPathMutations(this._pathElementMutationObserver.takeRecords());\n            };\n\n            window.SVGPathSegList.prototype._updateListFromPathMutations = function (mutationRecords) {\n                if (!this._pathElement) return;\n                var hasPathMutations = false;\n                mutationRecords.forEach(function (record) {\n                    if (record.attributeName == \"d\") hasPathMutations = true;\n                });\n                if (hasPathMutations) this._list = this._parsePath(this._pathElement.getAttribute(\"d\"));\n            };\n\n            // Serialize the list and update the path's 'd' attribute.\n            window.SVGPathSegList.prototype._writeListToPath = function () {\n                this._pathElementMutationObserver.disconnect();\n                this._pathElement.setAttribute(\"d\", window.SVGPathSegList._pathSegArrayAsString(this._list));\n                this._pathElementMutationObserver.observe(this._pathElement, this._mutationObserverConfig);\n            };\n\n            // When a path segment changes the list needs to be synchronized back to the path element.\n            window.SVGPathSegList.prototype.segmentChanged = function (pathSeg) {\n                this._writeListToPath();\n            };\n\n            window.SVGPathSegList.prototype.clear = function () {\n                this._checkPathSynchronizedToList();\n\n                this._list.forEach(function (pathSeg) {\n                    pathSeg._owningPathSegList = null;\n                });\n                this._list = [];\n                this._writeListToPath();\n            };\n\n            window.SVGPathSegList.prototype.initialize = function (newItem) {\n                this._checkPathSynchronizedToList();\n\n                this._list = [newItem];\n                newItem._owningPathSegList = this;\n                this._writeListToPath();\n                return newItem;\n            };\n\n            window.SVGPathSegList.prototype._checkValidIndex = function (index) {\n                if (isNaN(index) || index < 0 || index >= this.numberOfItems) throw \"INDEX_SIZE_ERR\";\n            };\n\n            window.SVGPathSegList.prototype.getItem = function (index) {\n                this._checkPathSynchronizedToList();\n\n                this._checkValidIndex(index);\n                return this._list[index];\n            };\n\n            window.SVGPathSegList.prototype.insertItemBefore = function (newItem, index) {\n                this._checkPathSynchronizedToList();\n\n                // Spec: If the index is greater than or equal to numberOfItems, then the new item is appended to the end of the list.\n                if (index > this.numberOfItems) index = this.numberOfItems;\n                if (newItem._owningPathSegList) {\n                    // SVG2 spec says to make a copy.\n                    newItem = newItem.clone();\n                }\n                this._list.splice(index, 0, newItem);\n                newItem._owningPathSegList = this;\n                this._writeListToPath();\n                return newItem;\n            };\n\n            window.SVGPathSegList.prototype.replaceItem = function (newItem, index) {\n                this._checkPathSynchronizedToList();\n\n                if (newItem._owningPathSegList) {\n                    // SVG2 spec says to make a copy.\n                    newItem = newItem.clone();\n                }\n                this._checkValidIndex(index);\n                this._list[index] = newItem;\n                newItem._owningPathSegList = this;\n                this._writeListToPath();\n                return newItem;\n            };\n\n            window.SVGPathSegList.prototype.removeItem = function (index) {\n                this._checkPathSynchronizedToList();\n\n                this._checkValidIndex(index);\n                var item = this._list[index];\n                this._list.splice(index, 1);\n                this._writeListToPath();\n                return item;\n            };\n\n            window.SVGPathSegList.prototype.appendItem = function (newItem) {\n                this._checkPathSynchronizedToList();\n\n                if (newItem._owningPathSegList) {\n                    // SVG2 spec says to make a copy.\n                    newItem = newItem.clone();\n                }\n                this._list.push(newItem);\n                newItem._owningPathSegList = this;\n                // TODO: Optimize this to just append to the existing attribute.\n                this._writeListToPath();\n                return newItem;\n            };\n\n            window.SVGPathSegList._pathSegArrayAsString = function (pathSegArray) {\n                var string = \"\";\n                var first = true;\n                pathSegArray.forEach(function (pathSeg) {\n                    if (first) {\n                        first = false;\n                        string += pathSeg._asPathString();\n                    } else {\n                        string += \" \" + pathSeg._asPathString();\n                    }\n                });\n                return string;\n            };\n\n            // This closely follows SVGPathParser::parsePath from Source/core/svg/SVGPathParser.cpp.\n            window.SVGPathSegList.prototype._parsePath = function (string) {\n                if (!string || string.length == 0) return [];\n\n                var owningPathSegList = this;\n\n                var Builder = function Builder() {\n                    this.pathSegList = [];\n                };\n\n                Builder.prototype.appendSegment = function (pathSeg) {\n                    this.pathSegList.push(pathSeg);\n                };\n\n                var Source = function Source(string) {\n                    this._string = string;\n                    this._currentIndex = 0;\n                    this._endIndex = this._string.length;\n                    this._previousCommand = window.SVGPathSeg.PATHSEG_UNKNOWN;\n\n                    this._skipOptionalSpaces();\n                };\n\n                Source.prototype._isCurrentSpace = function () {\n                    var character = this._string[this._currentIndex];\n                    return character <= \" \" && (character == \" \" || character == \"\\n\" || character == \"\\t\" || character == \"\\r\" || character == \"\\f\");\n                };\n\n                Source.prototype._skipOptionalSpaces = function () {\n                    while (this._currentIndex < this._endIndex && this._isCurrentSpace()) {\n                        this._currentIndex++;\n                    }return this._currentIndex < this._endIndex;\n                };\n\n                Source.prototype._skipOptionalSpacesOrDelimiter = function () {\n                    if (this._currentIndex < this._endIndex && !this._isCurrentSpace() && this._string.charAt(this._currentIndex) != \",\") return false;\n                    if (this._skipOptionalSpaces()) {\n                        if (this._currentIndex < this._endIndex && this._string.charAt(this._currentIndex) == \",\") {\n                            this._currentIndex++;\n                            this._skipOptionalSpaces();\n                        }\n                    }\n                    return this._currentIndex < this._endIndex;\n                };\n\n                Source.prototype.hasMoreData = function () {\n                    return this._currentIndex < this._endIndex;\n                };\n\n                Source.prototype.peekSegmentType = function () {\n                    var lookahead = this._string[this._currentIndex];\n                    return this._pathSegTypeFromChar(lookahead);\n                };\n\n                Source.prototype._pathSegTypeFromChar = function (lookahead) {\n                    switch (lookahead) {\n                        case \"Z\":\n                        case \"z\":\n                            return window.SVGPathSeg.PATHSEG_CLOSEPATH;\n                        case \"M\":\n                            return window.SVGPathSeg.PATHSEG_MOVETO_ABS;\n                        case \"m\":\n                            return window.SVGPathSeg.PATHSEG_MOVETO_REL;\n                        case \"L\":\n                            return window.SVGPathSeg.PATHSEG_LINETO_ABS;\n                        case \"l\":\n                            return window.SVGPathSeg.PATHSEG_LINETO_REL;\n                        case \"C\":\n                            return window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_ABS;\n                        case \"c\":\n                            return window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_REL;\n                        case \"Q\":\n                            return window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_ABS;\n                        case \"q\":\n                            return window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_REL;\n                        case \"A\":\n                            return window.SVGPathSeg.PATHSEG_ARC_ABS;\n                        case \"a\":\n                            return window.SVGPathSeg.PATHSEG_ARC_REL;\n                        case \"H\":\n                            return window.SVGPathSeg.PATHSEG_LINETO_HORIZONTAL_ABS;\n                        case \"h\":\n                            return window.SVGPathSeg.PATHSEG_LINETO_HORIZONTAL_REL;\n                        case \"V\":\n                            return window.SVGPathSeg.PATHSEG_LINETO_VERTICAL_ABS;\n                        case \"v\":\n                            return window.SVGPathSeg.PATHSEG_LINETO_VERTICAL_REL;\n                        case \"S\":\n                            return window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_SMOOTH_ABS;\n                        case \"s\":\n                            return window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_SMOOTH_REL;\n                        case \"T\":\n                            return window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS;\n                        case \"t\":\n                            return window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL;\n                        default:\n                            return window.SVGPathSeg.PATHSEG_UNKNOWN;\n                    }\n                };\n\n                Source.prototype._nextCommandHelper = function (lookahead, previousCommand) {\n                    // Check for remaining coordinates in the current command.\n                    if ((lookahead == \"+\" || lookahead == \"-\" || lookahead == \".\" || lookahead >= \"0\" && lookahead <= \"9\") && previousCommand != window.SVGPathSeg.PATHSEG_CLOSEPATH) {\n                        if (previousCommand == window.SVGPathSeg.PATHSEG_MOVETO_ABS) return window.SVGPathSeg.PATHSEG_LINETO_ABS;\n                        if (previousCommand == window.SVGPathSeg.PATHSEG_MOVETO_REL) return window.SVGPathSeg.PATHSEG_LINETO_REL;\n                        return previousCommand;\n                    }\n                    return window.SVGPathSeg.PATHSEG_UNKNOWN;\n                };\n\n                Source.prototype.initialCommandIsMoveTo = function () {\n                    // If the path is empty it is still valid, so return true.\n                    if (!this.hasMoreData()) return true;\n                    var command = this.peekSegmentType();\n                    // Path must start with moveTo.\n                    return command == window.SVGPathSeg.PATHSEG_MOVETO_ABS || command == window.SVGPathSeg.PATHSEG_MOVETO_REL;\n                };\n\n                // Parse a number from an SVG path. This very closely follows genericParseNumber(...) from Source/core/svg/SVGParserUtilities.cpp.\n                // Spec: http://www.w3.org/TR/SVG11/single-page.html#paths-PathDataBNF\n                Source.prototype._parseNumber = function () {\n                    var exponent = 0;\n                    var integer = 0;\n                    var frac = 1;\n                    var decimal = 0;\n                    var sign = 1;\n                    var expsign = 1;\n\n                    var startIndex = this._currentIndex;\n\n                    this._skipOptionalSpaces();\n\n                    // Read the sign.\n                    if (this._currentIndex < this._endIndex && this._string.charAt(this._currentIndex) == \"+\") this._currentIndex++;else if (this._currentIndex < this._endIndex && this._string.charAt(this._currentIndex) == \"-\") {\n                        this._currentIndex++;\n                        sign = -1;\n                    }\n\n                    if (this._currentIndex == this._endIndex || (this._string.charAt(this._currentIndex) < \"0\" || this._string.charAt(this._currentIndex) > \"9\") && this._string.charAt(this._currentIndex) != \".\")\n                        // The first character of a number must be one of [0-9+-.].\n                        return undefined;\n\n                    // Read the integer part, build right-to-left.\n                    var startIntPartIndex = this._currentIndex;\n                    while (this._currentIndex < this._endIndex && this._string.charAt(this._currentIndex) >= \"0\" && this._string.charAt(this._currentIndex) <= \"9\") {\n                        this._currentIndex++;\n                    } // Advance to first non-digit.\n\n                    if (this._currentIndex != startIntPartIndex) {\n                        var scanIntPartIndex = this._currentIndex - 1;\n                        var multiplier = 1;\n                        while (scanIntPartIndex >= startIntPartIndex) {\n                            integer += multiplier * (this._string.charAt(scanIntPartIndex--) - \"0\");\n                            multiplier *= 10;\n                        }\n                    }\n\n                    // Read the decimals.\n                    if (this._currentIndex < this._endIndex && this._string.charAt(this._currentIndex) == \".\") {\n                        this._currentIndex++;\n\n                        // There must be a least one digit following the .\n                        if (this._currentIndex >= this._endIndex || this._string.charAt(this._currentIndex) < \"0\" || this._string.charAt(this._currentIndex) > \"9\") return undefined;\n                        while (this._currentIndex < this._endIndex && this._string.charAt(this._currentIndex) >= \"0\" && this._string.charAt(this._currentIndex) <= \"9\") {\n                            frac *= 10;\n                            decimal += (this._string.charAt(this._currentIndex) - \"0\") / frac;\n                            this._currentIndex += 1;\n                        }\n                    }\n\n                    // Read the exponent part.\n                    if (this._currentIndex != startIndex && this._currentIndex + 1 < this._endIndex && (this._string.charAt(this._currentIndex) == \"e\" || this._string.charAt(this._currentIndex) == \"E\") && this._string.charAt(this._currentIndex + 1) != \"x\" && this._string.charAt(this._currentIndex + 1) != \"m\") {\n                        this._currentIndex++;\n\n                        // Read the sign of the exponent.\n                        if (this._string.charAt(this._currentIndex) == \"+\") {\n                            this._currentIndex++;\n                        } else if (this._string.charAt(this._currentIndex) == \"-\") {\n                            this._currentIndex++;\n                            expsign = -1;\n                        }\n\n                        // There must be an exponent.\n                        if (this._currentIndex >= this._endIndex || this._string.charAt(this._currentIndex) < \"0\" || this._string.charAt(this._currentIndex) > \"9\") return undefined;\n\n                        while (this._currentIndex < this._endIndex && this._string.charAt(this._currentIndex) >= \"0\" && this._string.charAt(this._currentIndex) <= \"9\") {\n                            exponent *= 10;\n                            exponent += this._string.charAt(this._currentIndex) - \"0\";\n                            this._currentIndex++;\n                        }\n                    }\n\n                    var number = integer + decimal;\n                    number *= sign;\n\n                    if (exponent) number *= Math.pow(10, expsign * exponent);\n\n                    if (startIndex == this._currentIndex) return undefined;\n\n                    this._skipOptionalSpacesOrDelimiter();\n\n                    return number;\n                };\n\n                Source.prototype._parseArcFlag = function () {\n                    if (this._currentIndex >= this._endIndex) return undefined;\n                    var flag = false;\n                    var flagChar = this._string.charAt(this._currentIndex++);\n                    if (flagChar == \"0\") flag = false;else if (flagChar == \"1\") flag = true;else return undefined;\n\n                    this._skipOptionalSpacesOrDelimiter();\n                    return flag;\n                };\n\n                Source.prototype.parseSegment = function () {\n                    var lookahead = this._string[this._currentIndex];\n                    var command = this._pathSegTypeFromChar(lookahead);\n                    if (command == window.SVGPathSeg.PATHSEG_UNKNOWN) {\n                        // Possibly an implicit command. Not allowed if this is the first command.\n                        if (this._previousCommand == window.SVGPathSeg.PATHSEG_UNKNOWN) return null;\n                        command = this._nextCommandHelper(lookahead, this._previousCommand);\n                        if (command == window.SVGPathSeg.PATHSEG_UNKNOWN) return null;\n                    } else {\n                        this._currentIndex++;\n                    }\n\n                    this._previousCommand = command;\n\n                    switch (command) {\n                        case window.SVGPathSeg.PATHSEG_MOVETO_REL:\n                            return new window.SVGPathSegMovetoRel(owningPathSegList, this._parseNumber(), this._parseNumber());\n                        case window.SVGPathSeg.PATHSEG_MOVETO_ABS:\n                            return new window.SVGPathSegMovetoAbs(owningPathSegList, this._parseNumber(), this._parseNumber());\n                        case window.SVGPathSeg.PATHSEG_LINETO_REL:\n                            return new window.SVGPathSegLinetoRel(owningPathSegList, this._parseNumber(), this._parseNumber());\n                        case window.SVGPathSeg.PATHSEG_LINETO_ABS:\n                            return new window.SVGPathSegLinetoAbs(owningPathSegList, this._parseNumber(), this._parseNumber());\n                        case window.SVGPathSeg.PATHSEG_LINETO_HORIZONTAL_REL:\n                            return new window.SVGPathSegLinetoHorizontalRel(owningPathSegList, this._parseNumber());\n                        case window.SVGPathSeg.PATHSEG_LINETO_HORIZONTAL_ABS:\n                            return new window.SVGPathSegLinetoHorizontalAbs(owningPathSegList, this._parseNumber());\n                        case window.SVGPathSeg.PATHSEG_LINETO_VERTICAL_REL:\n                            return new window.SVGPathSegLinetoVerticalRel(owningPathSegList, this._parseNumber());\n                        case window.SVGPathSeg.PATHSEG_LINETO_VERTICAL_ABS:\n                            return new window.SVGPathSegLinetoVerticalAbs(owningPathSegList, this._parseNumber());\n                        case window.SVGPathSeg.PATHSEG_CLOSEPATH:\n                            this._skipOptionalSpaces();\n                            return new window.SVGPathSegClosePath(owningPathSegList);\n                        case window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_REL:\n                            var points = { x1: this._parseNumber(), y1: this._parseNumber(), x2: this._parseNumber(), y2: this._parseNumber(), x: this._parseNumber(), y: this._parseNumber() };\n                            return new window.SVGPathSegCurvetoCubicRel(owningPathSegList, points.x, points.y, points.x1, points.y1, points.x2, points.y2);\n                        case window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_ABS:\n                            var points = { x1: this._parseNumber(), y1: this._parseNumber(), x2: this._parseNumber(), y2: this._parseNumber(), x: this._parseNumber(), y: this._parseNumber() };\n                            return new window.SVGPathSegCurvetoCubicAbs(owningPathSegList, points.x, points.y, points.x1, points.y1, points.x2, points.y2);\n                        case window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_SMOOTH_REL:\n                            var points = { x2: this._parseNumber(), y2: this._parseNumber(), x: this._parseNumber(), y: this._parseNumber() };\n                            return new window.SVGPathSegCurvetoCubicSmoothRel(owningPathSegList, points.x, points.y, points.x2, points.y2);\n                        case window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_SMOOTH_ABS:\n                            var points = { x2: this._parseNumber(), y2: this._parseNumber(), x: this._parseNumber(), y: this._parseNumber() };\n                            return new window.SVGPathSegCurvetoCubicSmoothAbs(owningPathSegList, points.x, points.y, points.x2, points.y2);\n                        case window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_REL:\n                            var points = { x1: this._parseNumber(), y1: this._parseNumber(), x: this._parseNumber(), y: this._parseNumber() };\n                            return new window.SVGPathSegCurvetoQuadraticRel(owningPathSegList, points.x, points.y, points.x1, points.y1);\n                        case window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_ABS:\n                            var points = { x1: this._parseNumber(), y1: this._parseNumber(), x: this._parseNumber(), y: this._parseNumber() };\n                            return new window.SVGPathSegCurvetoQuadraticAbs(owningPathSegList, points.x, points.y, points.x1, points.y1);\n                        case window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL:\n                            return new window.SVGPathSegCurvetoQuadraticSmoothRel(owningPathSegList, this._parseNumber(), this._parseNumber());\n                        case window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS:\n                            return new window.SVGPathSegCurvetoQuadraticSmoothAbs(owningPathSegList, this._parseNumber(), this._parseNumber());\n                        case window.SVGPathSeg.PATHSEG_ARC_REL:\n                            var points = { x1: this._parseNumber(), y1: this._parseNumber(), arcAngle: this._parseNumber(), arcLarge: this._parseArcFlag(), arcSweep: this._parseArcFlag(), x: this._parseNumber(), y: this._parseNumber() };\n                            return new window.SVGPathSegArcRel(owningPathSegList, points.x, points.y, points.x1, points.y1, points.arcAngle, points.arcLarge, points.arcSweep);\n                        case window.SVGPathSeg.PATHSEG_ARC_ABS:\n                            var points = { x1: this._parseNumber(), y1: this._parseNumber(), arcAngle: this._parseNumber(), arcLarge: this._parseArcFlag(), arcSweep: this._parseArcFlag(), x: this._parseNumber(), y: this._parseNumber() };\n                            return new window.SVGPathSegArcAbs(owningPathSegList, points.x, points.y, points.x1, points.y1, points.arcAngle, points.arcLarge, points.arcSweep);\n                        default:\n                            throw \"Unknown path seg type.\";\n                    }\n                };\n\n                var builder = new Builder();\n                var source = new Source(string);\n\n                if (!source.initialCommandIsMoveTo()) return [];\n                while (source.hasMoreData()) {\n                    var pathSeg = source.parseSegment();\n                    if (!pathSeg) return [];\n                    builder.appendSegment(pathSeg);\n                }\n\n                return builder.pathSegList;\n            };\n        }\n    })();\n\n    // String.padEnd polyfill for IE11\n    //\n    // https://github.com/uxitten/polyfill/blob/master/string.polyfill.js\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/padEnd\n    if (!String.prototype.padEnd) {\n        String.prototype.padEnd = function padEnd(targetLength, padString) {\n            targetLength = targetLength >> 0; //floor if number or convert non-number to 0;\n            padString = String(typeof padString !== 'undefined' ? padString : ' ');\n            if (this.length > targetLength) {\n                return String(this);\n            } else {\n                targetLength = targetLength - this.length;\n                if (targetLength > padString.length) {\n                    padString += padString.repeat(targetLength / padString.length); //append to original to ensure we are longer than needed\n                }\n                return String(this) + padString.slice(0, targetLength);\n            }\n        };\n    }\n\n    /* jshint ignore:end */\n\n    c3_chart_fn.axis = function () {};\n    c3_chart_fn.axis.labels = function (labels) {\n        var $$ = this.internal;\n        if (arguments.length) {\n            Object.keys(labels).forEach(function (axisId) {\n                $$.axis.setLabelText(axisId, labels[axisId]);\n            });\n            $$.axis.updateLabels();\n        }\n        // TODO: return some values?\n    };\n    c3_chart_fn.axis.max = function (max) {\n        var $$ = this.internal,\n            config = $$.config;\n        if (arguments.length) {\n            if ((typeof max === 'undefined' ? 'undefined' : _typeof(max)) === 'object') {\n                if (isValue(max.x)) {\n                    config.axis_x_max = max.x;\n                }\n                if (isValue(max.y)) {\n                    config.axis_y_max = max.y;\n                }\n                if (isValue(max.y2)) {\n                    config.axis_y2_max = max.y2;\n                }\n            } else {\n                config.axis_y_max = config.axis_y2_max = max;\n            }\n            $$.redraw({ withUpdateOrgXDomain: true, withUpdateXDomain: true });\n        } else {\n            return {\n                x: config.axis_x_max,\n                y: config.axis_y_max,\n                y2: config.axis_y2_max\n            };\n        }\n    };\n    c3_chart_fn.axis.min = function (min) {\n        var $$ = this.internal,\n            config = $$.config;\n        if (arguments.length) {\n            if ((typeof min === 'undefined' ? 'undefined' : _typeof(min)) === 'object') {\n                if (isValue(min.x)) {\n                    config.axis_x_min = min.x;\n                }\n                if (isValue(min.y)) {\n                    config.axis_y_min = min.y;\n                }\n                if (isValue(min.y2)) {\n                    config.axis_y2_min = min.y2;\n                }\n            } else {\n                config.axis_y_min = config.axis_y2_min = min;\n            }\n            $$.redraw({ withUpdateOrgXDomain: true, withUpdateXDomain: true });\n        } else {\n            return {\n                x: config.axis_x_min,\n                y: config.axis_y_min,\n                y2: config.axis_y2_min\n            };\n        }\n    };\n    c3_chart_fn.axis.range = function (range) {\n        if (arguments.length) {\n            if (isDefined(range.max)) {\n                this.axis.max(range.max);\n            }\n            if (isDefined(range.min)) {\n                this.axis.min(range.min);\n            }\n        } else {\n            return {\n                max: this.axis.max(),\n                min: this.axis.min()\n            };\n        }\n    };\n\n    c3_chart_fn.category = function (i, category) {\n        var $$ = this.internal,\n            config = $$.config;\n        if (arguments.length > 1) {\n            config.axis_x_categories[i] = category;\n            $$.redraw();\n        }\n        return config.axis_x_categories[i];\n    };\n    c3_chart_fn.categories = function (categories) {\n        var $$ = this.internal,\n            config = $$.config;\n        if (!arguments.length) {\n            return config.axis_x_categories;\n        }\n        config.axis_x_categories = categories;\n        $$.redraw();\n        return config.axis_x_categories;\n    };\n\n    c3_chart_fn.resize = function (size) {\n        var $$ = this.internal,\n            config = $$.config;\n        config.size_width = size ? size.width : null;\n        config.size_height = size ? size.height : null;\n        this.flush();\n    };\n\n    c3_chart_fn.flush = function () {\n        var $$ = this.internal;\n        $$.updateAndRedraw({ withLegend: true, withTransition: false, withTransitionForTransform: false });\n    };\n\n    c3_chart_fn.destroy = function () {\n        var $$ = this.internal;\n\n        window.clearInterval($$.intervalForObserveInserted);\n\n        if ($$.resizeTimeout !== undefined) {\n            window.clearTimeout($$.resizeTimeout);\n        }\n\n        if (window.detachEvent) {\n            window.detachEvent('onresize', $$.resizeIfElementDisplayed);\n        } else if (window.removeEventListener) {\n            window.removeEventListener('resize', $$.resizeIfElementDisplayed);\n        } else {\n            var wrapper = window.onresize;\n            // check if no one else removed our wrapper and remove our resizeFunction from it\n            if (wrapper && wrapper.add && wrapper.remove) {\n                wrapper.remove($$.resizeFunction);\n            }\n        }\n\n        // remove the inner resize functions\n        $$.resizeFunction.remove();\n\n        $$.selectChart.classed('c3', false).html(\"\");\n\n        // MEMO: this is needed because the reference of some elements will not be released, then memory leak will happen.\n        Object.keys($$).forEach(function (key) {\n            $$[key] = null;\n        });\n\n        return null;\n    };\n\n    // TODO: fix\n    c3_chart_fn.color = function (id) {\n        var $$ = this.internal;\n        return $$.color(id); // more patterns\n    };\n\n    c3_chart_fn.data = function (targetIds) {\n        var targets = this.internal.data.targets;\n        return typeof targetIds === 'undefined' ? targets : targets.filter(function (t) {\n            return [].concat(targetIds).indexOf(t.id) >= 0;\n        });\n    };\n    c3_chart_fn.data.shown = function (targetIds) {\n        return this.internal.filterTargetsToShow(this.data(targetIds));\n    };\n    c3_chart_fn.data.values = function (targetId) {\n        var targets,\n            values = null;\n        if (targetId) {\n            targets = this.data(targetId);\n            values = targets[0] ? targets[0].values.map(function (d) {\n                return d.value;\n            }) : null;\n        }\n        return values;\n    };\n    c3_chart_fn.data.names = function (names) {\n        this.internal.clearLegendItemTextBoxCache();\n        return this.internal.updateDataAttributes('names', names);\n    };\n    c3_chart_fn.data.colors = function (colors) {\n        return this.internal.updateDataAttributes('colors', colors);\n    };\n    c3_chart_fn.data.axes = function (axes) {\n        return this.internal.updateDataAttributes('axes', axes);\n    };\n\n    c3_chart_fn.flow = function (args) {\n        var $$ = this.internal,\n            targets,\n            data,\n            notfoundIds = [],\n            orgDataCount = $$.getMaxDataCount(),\n            dataCount,\n            domain,\n            baseTarget,\n            baseValue,\n            length = 0,\n            tail = 0,\n            diff,\n            to;\n\n        if (args.json) {\n            data = $$.convertJsonToData(args.json, args.keys);\n        } else if (args.rows) {\n            data = $$.convertRowsToData(args.rows);\n        } else if (args.columns) {\n            data = $$.convertColumnsToData(args.columns);\n        } else {\n            return;\n        }\n        targets = $$.convertDataToTargets(data, true);\n\n        // Update/Add data\n        $$.data.targets.forEach(function (t) {\n            var found = false,\n                i,\n                j;\n            for (i = 0; i < targets.length; i++) {\n                if (t.id === targets[i].id) {\n                    found = true;\n\n                    if (t.values[t.values.length - 1]) {\n                        tail = t.values[t.values.length - 1].index + 1;\n                    }\n                    length = targets[i].values.length;\n\n                    for (j = 0; j < length; j++) {\n                        targets[i].values[j].index = tail + j;\n                        if (!$$.isTimeSeries()) {\n                            targets[i].values[j].x = tail + j;\n                        }\n                    }\n                    t.values = t.values.concat(targets[i].values);\n\n                    targets.splice(i, 1);\n                    break;\n                }\n            }\n            if (!found) {\n                notfoundIds.push(t.id);\n            }\n        });\n\n        // Append null for not found targets\n        $$.data.targets.forEach(function (t) {\n            var i, j;\n            for (i = 0; i < notfoundIds.length; i++) {\n                if (t.id === notfoundIds[i]) {\n                    tail = t.values[t.values.length - 1].index + 1;\n                    for (j = 0; j < length; j++) {\n                        t.values.push({\n                            id: t.id,\n                            index: tail + j,\n                            x: $$.isTimeSeries() ? $$.getOtherTargetX(tail + j) : tail + j,\n                            value: null\n                        });\n                    }\n                }\n            }\n        });\n\n        // Generate null values for new target\n        if ($$.data.targets.length) {\n            targets.forEach(function (t) {\n                var i,\n                    missing = [];\n                for (i = $$.data.targets[0].values[0].index; i < tail; i++) {\n                    missing.push({\n                        id: t.id,\n                        index: i,\n                        x: $$.isTimeSeries() ? $$.getOtherTargetX(i) : i,\n                        value: null\n                    });\n                }\n                t.values.forEach(function (v) {\n                    v.index += tail;\n                    if (!$$.isTimeSeries()) {\n                        v.x += tail;\n                    }\n                });\n                t.values = missing.concat(t.values);\n            });\n        }\n        $$.data.targets = $$.data.targets.concat(targets); // add remained\n\n        // check data count because behavior needs to change when it's only one\n        dataCount = $$.getMaxDataCount();\n        baseTarget = $$.data.targets[0];\n        baseValue = baseTarget.values[0];\n\n        // Update length to flow if needed\n        if (isDefined(args.to)) {\n            length = 0;\n            to = $$.isTimeSeries() ? $$.parseDate(args.to) : args.to;\n            baseTarget.values.forEach(function (v) {\n                if (v.x < to) {\n                    length++;\n                }\n            });\n        } else if (isDefined(args.length)) {\n            length = args.length;\n        }\n\n        // If only one data, update the domain to flow from left edge of the chart\n        if (!orgDataCount) {\n            if ($$.isTimeSeries()) {\n                if (baseTarget.values.length > 1) {\n                    diff = baseTarget.values[baseTarget.values.length - 1].x - baseValue.x;\n                } else {\n                    diff = baseValue.x - $$.getXDomain($$.data.targets)[0];\n                }\n            } else {\n                diff = 1;\n            }\n            domain = [baseValue.x - diff, baseValue.x];\n            $$.updateXDomain(null, true, true, false, domain);\n        } else if (orgDataCount === 1) {\n            if ($$.isTimeSeries()) {\n                diff = (baseTarget.values[baseTarget.values.length - 1].x - baseValue.x) / 2;\n                domain = [new Date(+baseValue.x - diff), new Date(+baseValue.x + diff)];\n                $$.updateXDomain(null, true, true, false, domain);\n            }\n        }\n\n        // Set targets\n        $$.updateTargets($$.data.targets);\n\n        // Redraw with new targets\n        $$.redraw({\n            flow: {\n                index: baseValue.index,\n                length: length,\n                duration: isValue(args.duration) ? args.duration : $$.config.transition_duration,\n                done: args.done,\n                orgDataCount: orgDataCount\n            },\n            withLegend: true,\n            withTransition: orgDataCount > 1,\n            withTrimXDomain: false,\n            withUpdateXAxis: true\n        });\n    };\n\n    c3_chart_internal_fn.generateFlow = function (args) {\n        var $$ = this,\n            config = $$.config,\n            d3 = $$.d3;\n\n        return function () {\n            var targets = args.targets,\n                flow = args.flow,\n                drawBar = args.drawBar,\n                drawLine = args.drawLine,\n                drawArea = args.drawArea,\n                cx = args.cx,\n                cy = args.cy,\n                xv = args.xv,\n                xForText = args.xForText,\n                yForText = args.yForText,\n                duration = args.duration;\n\n            var translateX,\n                scaleX = 1,\n                transform,\n                flowIndex = flow.index,\n                flowLength = flow.length,\n                flowStart = $$.getValueOnIndex($$.data.targets[0].values, flowIndex),\n                flowEnd = $$.getValueOnIndex($$.data.targets[0].values, flowIndex + flowLength),\n                orgDomain = $$.x.domain(),\n                domain,\n                durationForFlow = flow.duration || duration,\n                done = flow.done || function () {},\n                wait = $$.generateWait();\n\n            var xgrid = $$.xgrid || d3.selectAll([]),\n                xgridLines = $$.xgridLines || d3.selectAll([]),\n                mainRegion = $$.mainRegion || d3.selectAll([]),\n                mainText = $$.mainText || d3.selectAll([]),\n                mainBar = $$.mainBar || d3.selectAll([]),\n                mainLine = $$.mainLine || d3.selectAll([]),\n                mainArea = $$.mainArea || d3.selectAll([]),\n                mainCircle = $$.mainCircle || d3.selectAll([]);\n\n            // set flag\n            $$.flowing = true;\n\n            // remove head data after rendered\n            $$.data.targets.forEach(function (d) {\n                d.values.splice(0, flowLength);\n            });\n\n            // update x domain to generate axis elements for flow\n            domain = $$.updateXDomain(targets, true, true);\n            // update elements related to x scale\n            if ($$.updateXGrid) {\n                $$.updateXGrid(true);\n            }\n\n            // generate transform to flow\n            if (!flow.orgDataCount) {\n                // if empty\n                if ($$.data.targets[0].values.length !== 1) {\n                    translateX = $$.x(orgDomain[0]) - $$.x(domain[0]);\n                } else {\n                    if ($$.isTimeSeries()) {\n                        flowStart = $$.getValueOnIndex($$.data.targets[0].values, 0);\n                        flowEnd = $$.getValueOnIndex($$.data.targets[0].values, $$.data.targets[0].values.length - 1);\n                        translateX = $$.x(flowStart.x) - $$.x(flowEnd.x);\n                    } else {\n                        translateX = diffDomain(domain) / 2;\n                    }\n                }\n            } else if (flow.orgDataCount === 1 || (flowStart && flowStart.x) === (flowEnd && flowEnd.x)) {\n                translateX = $$.x(orgDomain[0]) - $$.x(domain[0]);\n            } else {\n                if ($$.isTimeSeries()) {\n                    translateX = $$.x(orgDomain[0]) - $$.x(domain[0]);\n                } else {\n                    translateX = $$.x(flowStart.x) - $$.x(flowEnd.x);\n                }\n            }\n            scaleX = diffDomain(orgDomain) / diffDomain(domain);\n            transform = 'translate(' + translateX + ',0) scale(' + scaleX + ',1)';\n\n            $$.hideXGridFocus();\n\n            d3.transition().ease('linear').duration(durationForFlow).each(function () {\n                wait.add($$.axes.x.transition().call($$.xAxis));\n                wait.add(mainBar.transition().attr('transform', transform));\n                wait.add(mainLine.transition().attr('transform', transform));\n                wait.add(mainArea.transition().attr('transform', transform));\n                wait.add(mainCircle.transition().attr('transform', transform));\n                wait.add(mainText.transition().attr('transform', transform));\n                wait.add(mainRegion.filter($$.isRegionOnX).transition().attr('transform', transform));\n                wait.add(xgrid.transition().attr('transform', transform));\n                wait.add(xgridLines.transition().attr('transform', transform));\n            }).call(wait, function () {\n                var i,\n                    shapes = [],\n                    texts = [],\n                    eventRects = [];\n\n                // remove flowed elements\n                if (flowLength) {\n                    for (i = 0; i < flowLength; i++) {\n                        shapes.push('.' + CLASS.shape + '-' + (flowIndex + i));\n                        texts.push('.' + CLASS.text + '-' + (flowIndex + i));\n                        eventRects.push('.' + CLASS.eventRect + '-' + (flowIndex + i));\n                    }\n                    $$.svg.selectAll('.' + CLASS.shapes).selectAll(shapes).remove();\n                    $$.svg.selectAll('.' + CLASS.texts).selectAll(texts).remove();\n                    $$.svg.selectAll('.' + CLASS.eventRects).selectAll(eventRects).remove();\n                    $$.svg.select('.' + CLASS.xgrid).remove();\n                }\n\n                // draw again for removing flowed elements and reverting attr\n                xgrid.attr('transform', null).attr($$.xgridAttr);\n                xgridLines.attr('transform', null);\n                xgridLines.select('line').attr(\"x1\", config.axis_rotated ? 0 : xv).attr(\"x2\", config.axis_rotated ? $$.width : xv);\n                xgridLines.select('text').attr(\"x\", config.axis_rotated ? $$.width : 0).attr(\"y\", xv);\n                mainBar.attr('transform', null).attr(\"d\", drawBar);\n                mainLine.attr('transform', null).attr(\"d\", drawLine);\n                mainArea.attr('transform', null).attr(\"d\", drawArea);\n                mainCircle.attr('transform', null).attr(\"cx\", cx).attr(\"cy\", cy);\n                mainText.attr('transform', null).attr('x', xForText).attr('y', yForText).style('fill-opacity', $$.opacityForText.bind($$));\n                mainRegion.attr('transform', null);\n                mainRegion.select('rect').filter($$.isRegionOnX).attr(\"x\", $$.regionX.bind($$)).attr(\"width\", $$.regionWidth.bind($$));\n\n                if (config.interaction_enabled) {\n                    $$.redrawEventRect();\n                }\n\n                // callback for end of flow\n                done();\n\n                $$.flowing = false;\n            });\n        };\n    };\n\n    c3_chart_fn.focus = function (targetIds) {\n        var $$ = this.internal,\n            candidates;\n\n        targetIds = $$.mapToTargetIds(targetIds);\n        candidates = $$.svg.selectAll($$.selectorTargets(targetIds.filter($$.isTargetToShow, $$))), this.revert();\n        this.defocus();\n        candidates.classed(CLASS.focused, true).classed(CLASS.defocused, false);\n        if ($$.hasArcType()) {\n            $$.expandArc(targetIds);\n        }\n        $$.toggleFocusLegend(targetIds, true);\n\n        $$.focusedTargetIds = targetIds;\n        $$.defocusedTargetIds = $$.defocusedTargetIds.filter(function (id) {\n            return targetIds.indexOf(id) < 0;\n        });\n    };\n\n    c3_chart_fn.defocus = function (targetIds) {\n        var $$ = this.internal,\n            candidates;\n\n        targetIds = $$.mapToTargetIds(targetIds);\n        candidates = $$.svg.selectAll($$.selectorTargets(targetIds.filter($$.isTargetToShow, $$))), candidates.classed(CLASS.focused, false).classed(CLASS.defocused, true);\n        if ($$.hasArcType()) {\n            $$.unexpandArc(targetIds);\n        }\n        $$.toggleFocusLegend(targetIds, false);\n\n        $$.focusedTargetIds = $$.focusedTargetIds.filter(function (id) {\n            return targetIds.indexOf(id) < 0;\n        });\n        $$.defocusedTargetIds = targetIds;\n    };\n\n    c3_chart_fn.revert = function (targetIds) {\n        var $$ = this.internal,\n            candidates;\n\n        targetIds = $$.mapToTargetIds(targetIds);\n        candidates = $$.svg.selectAll($$.selectorTargets(targetIds)); // should be for all targets\n\n        candidates.classed(CLASS.focused, false).classed(CLASS.defocused, false);\n        if ($$.hasArcType()) {\n            $$.unexpandArc(targetIds);\n        }\n        if ($$.config.legend_show) {\n            $$.showLegend(targetIds.filter($$.isLegendToShow.bind($$)));\n            $$.legend.selectAll($$.selectorLegends(targetIds)).filter(function () {\n                return $$.d3.select(this).classed(CLASS.legendItemFocused);\n            }).classed(CLASS.legendItemFocused, false);\n        }\n\n        $$.focusedTargetIds = [];\n        $$.defocusedTargetIds = [];\n    };\n\n    c3_chart_fn.xgrids = function (grids) {\n        var $$ = this.internal,\n            config = $$.config;\n        if (!grids) {\n            return config.grid_x_lines;\n        }\n        config.grid_x_lines = grids;\n        $$.redrawWithoutRescale();\n        return config.grid_x_lines;\n    };\n    c3_chart_fn.xgrids.add = function (grids) {\n        var $$ = this.internal;\n        return this.xgrids($$.config.grid_x_lines.concat(grids ? grids : []));\n    };\n    c3_chart_fn.xgrids.remove = function (params) {\n        // TODO: multiple\n        var $$ = this.internal;\n        $$.removeGridLines(params, true);\n    };\n\n    c3_chart_fn.ygrids = function (grids) {\n        var $$ = this.internal,\n            config = $$.config;\n        if (!grids) {\n            return config.grid_y_lines;\n        }\n        config.grid_y_lines = grids;\n        $$.redrawWithoutRescale();\n        return config.grid_y_lines;\n    };\n    c3_chart_fn.ygrids.add = function (grids) {\n        var $$ = this.internal;\n        return this.ygrids($$.config.grid_y_lines.concat(grids ? grids : []));\n    };\n    c3_chart_fn.ygrids.remove = function (params) {\n        // TODO: multiple\n        var $$ = this.internal;\n        $$.removeGridLines(params, false);\n    };\n\n    c3_chart_fn.groups = function (groups) {\n        var $$ = this.internal,\n            config = $$.config;\n        if (isUndefined(groups)) {\n            return config.data_groups;\n        }\n        config.data_groups = groups;\n        $$.redraw();\n        return config.data_groups;\n    };\n\n    c3_chart_fn.legend = function () {};\n    c3_chart_fn.legend.show = function (targetIds) {\n        var $$ = this.internal;\n        $$.showLegend($$.mapToTargetIds(targetIds));\n        $$.updateAndRedraw({ withLegend: true });\n    };\n    c3_chart_fn.legend.hide = function (targetIds) {\n        var $$ = this.internal;\n        $$.hideLegend($$.mapToTargetIds(targetIds));\n        $$.updateAndRedraw({ withLegend: true });\n    };\n\n    c3_chart_fn.load = function (args) {\n        var $$ = this.internal,\n            config = $$.config;\n        // update xs if specified\n        if (args.xs) {\n            $$.addXs(args.xs);\n        }\n        // update names if exists\n        if ('names' in args) {\n            c3_chart_fn.data.names.bind(this)(args.names);\n        }\n        // update classes if exists\n        if ('classes' in args) {\n            Object.keys(args.classes).forEach(function (id) {\n                config.data_classes[id] = args.classes[id];\n            });\n        }\n        // update categories if exists\n        if ('categories' in args && $$.isCategorized()) {\n            config.axis_x_categories = args.categories;\n        }\n        // update axes if exists\n        if ('axes' in args) {\n            Object.keys(args.axes).forEach(function (id) {\n                config.data_axes[id] = args.axes[id];\n            });\n        }\n        // update colors if exists\n        if ('colors' in args) {\n            Object.keys(args.colors).forEach(function (id) {\n                config.data_colors[id] = args.colors[id];\n            });\n        }\n        // use cache if exists\n        if ('cacheIds' in args && $$.hasCaches(args.cacheIds)) {\n            $$.load($$.getCaches(args.cacheIds), args.done);\n            return;\n        }\n        // unload if needed\n        if ('unload' in args) {\n            // TODO: do not unload if target will load (included in url/rows/columns)\n            $$.unload($$.mapToTargetIds(typeof args.unload === 'boolean' && args.unload ? null : args.unload), function () {\n                $$.loadFromArgs(args);\n            });\n        } else {\n            $$.loadFromArgs(args);\n        }\n    };\n\n    c3_chart_fn.unload = function (args) {\n        var $$ = this.internal;\n        args = args || {};\n        if (args instanceof Array) {\n            args = { ids: args };\n        } else if (typeof args === 'string') {\n            args = { ids: [args] };\n        }\n        $$.unload($$.mapToTargetIds(args.ids), function () {\n            $$.redraw({ withUpdateOrgXDomain: true, withUpdateXDomain: true, withLegend: true });\n            if (args.done) {\n                args.done();\n            }\n        });\n    };\n\n    c3_chart_fn.regions = function (regions) {\n        var $$ = this.internal,\n            config = $$.config;\n        if (!regions) {\n            return config.regions;\n        }\n        config.regions = regions;\n        $$.redrawWithoutRescale();\n        return config.regions;\n    };\n    c3_chart_fn.regions.add = function (regions) {\n        var $$ = this.internal,\n            config = $$.config;\n        if (!regions) {\n            return config.regions;\n        }\n        config.regions = config.regions.concat(regions);\n        $$.redrawWithoutRescale();\n        return config.regions;\n    };\n    c3_chart_fn.regions.remove = function (options) {\n        var $$ = this.internal,\n            config = $$.config,\n            duration,\n            classes,\n            regions;\n\n        options = options || {};\n        duration = $$.getOption(options, \"duration\", config.transition_duration);\n        classes = $$.getOption(options, \"classes\", [CLASS.region]);\n\n        regions = $$.main.select('.' + CLASS.regions).selectAll(classes.map(function (c) {\n            return '.' + c;\n        }));\n        (duration ? regions.transition().duration(duration) : regions).style('opacity', 0).remove();\n\n        config.regions = config.regions.filter(function (region) {\n            var found = false;\n            if (!region['class']) {\n                return true;\n            }\n            region['class'].split(' ').forEach(function (c) {\n                if (classes.indexOf(c) >= 0) {\n                    found = true;\n                }\n            });\n            return !found;\n        });\n\n        return config.regions;\n    };\n\n    c3_chart_fn.selected = function (targetId) {\n        var $$ = this.internal,\n            d3 = $$.d3;\n        return d3.merge($$.main.selectAll('.' + CLASS.shapes + $$.getTargetSelectorSuffix(targetId)).selectAll('.' + CLASS.shape).filter(function () {\n            return d3.select(this).classed(CLASS.SELECTED);\n        }).map(function (d) {\n            return d.map(function (d) {\n                var data = d.__data__;return data.data ? data.data : data;\n            });\n        }));\n    };\n    c3_chart_fn.select = function (ids, indices, resetOther) {\n        var $$ = this.internal,\n            d3 = $$.d3,\n            config = $$.config;\n        if (!config.data_selection_enabled) {\n            return;\n        }\n        $$.main.selectAll('.' + CLASS.shapes).selectAll('.' + CLASS.shape).each(function (d, i) {\n            var shape = d3.select(this),\n                id = d.data ? d.data.id : d.id,\n                toggle = $$.getToggle(this, d).bind($$),\n                isTargetId = config.data_selection_grouped || !ids || ids.indexOf(id) >= 0,\n                isTargetIndex = !indices || indices.indexOf(i) >= 0,\n                isSelected = shape.classed(CLASS.SELECTED);\n            // line/area selection not supported yet\n            if (shape.classed(CLASS.line) || shape.classed(CLASS.area)) {\n                return;\n            }\n            if (isTargetId && isTargetIndex) {\n                if (config.data_selection_isselectable(d) && !isSelected) {\n                    toggle(true, shape.classed(CLASS.SELECTED, true), d, i);\n                }\n            } else if (isDefined(resetOther) && resetOther) {\n                if (isSelected) {\n                    toggle(false, shape.classed(CLASS.SELECTED, false), d, i);\n                }\n            }\n        });\n    };\n    c3_chart_fn.unselect = function (ids, indices) {\n        var $$ = this.internal,\n            d3 = $$.d3,\n            config = $$.config;\n        if (!config.data_selection_enabled) {\n            return;\n        }\n        $$.main.selectAll('.' + CLASS.shapes).selectAll('.' + CLASS.shape).each(function (d, i) {\n            var shape = d3.select(this),\n                id = d.data ? d.data.id : d.id,\n                toggle = $$.getToggle(this, d).bind($$),\n                isTargetId = config.data_selection_grouped || !ids || ids.indexOf(id) >= 0,\n                isTargetIndex = !indices || indices.indexOf(i) >= 0,\n                isSelected = shape.classed(CLASS.SELECTED);\n            // line/area selection not supported yet\n            if (shape.classed(CLASS.line) || shape.classed(CLASS.area)) {\n                return;\n            }\n            if (isTargetId && isTargetIndex) {\n                if (config.data_selection_isselectable(d)) {\n                    if (isSelected) {\n                        toggle(false, shape.classed(CLASS.SELECTED, false), d, i);\n                    }\n                }\n            }\n        });\n    };\n\n    c3_chart_fn.show = function (targetIds, options) {\n        var $$ = this.internal,\n            targets;\n\n        targetIds = $$.mapToTargetIds(targetIds);\n        options = options || {};\n\n        $$.removeHiddenTargetIds(targetIds);\n        targets = $$.svg.selectAll($$.selectorTargets(targetIds));\n\n        targets.transition().style('opacity', 1, 'important').call($$.endall, function () {\n            targets.style('opacity', null).style('opacity', 1);\n        });\n\n        if (options.withLegend) {\n            $$.showLegend(targetIds);\n        }\n\n        $$.redraw({ withUpdateOrgXDomain: true, withUpdateXDomain: true, withLegend: true });\n    };\n\n    c3_chart_fn.hide = function (targetIds, options) {\n        var $$ = this.internal,\n            targets;\n\n        targetIds = $$.mapToTargetIds(targetIds);\n        options = options || {};\n\n        $$.addHiddenTargetIds(targetIds);\n        targets = $$.svg.selectAll($$.selectorTargets(targetIds));\n\n        targets.transition().style('opacity', 0, 'important').call($$.endall, function () {\n            targets.style('opacity', null).style('opacity', 0);\n        });\n\n        if (options.withLegend) {\n            $$.hideLegend(targetIds);\n        }\n\n        $$.redraw({ withUpdateOrgXDomain: true, withUpdateXDomain: true, withLegend: true });\n    };\n\n    c3_chart_fn.toggle = function (targetIds, options) {\n        var that = this,\n            $$ = this.internal;\n        $$.mapToTargetIds(targetIds).forEach(function (targetId) {\n            $$.isTargetToShow(targetId) ? that.hide(targetId, options) : that.show(targetId, options);\n        });\n    };\n\n    c3_chart_fn.tooltip = function () {};\n    c3_chart_fn.tooltip.show = function (args) {\n        var $$ = this.internal,\n            index,\n            mouse;\n\n        // determine mouse position on the chart\n        if (args.mouse) {\n            mouse = args.mouse;\n        }\n\n        // determine focus data\n        if (args.data) {\n            if ($$.isMultipleX()) {\n                // if multiple xs, target point will be determined by mouse\n                mouse = [$$.x(args.data.x), $$.getYScale(args.data.id)(args.data.value)];\n                index = null;\n            } else {\n                // TODO: when tooltip_grouped = false\n                index = isValue(args.data.index) ? args.data.index : $$.getIndexByX(args.data.x);\n            }\n        } else if (typeof args.x !== 'undefined') {\n            index = $$.getIndexByX(args.x);\n        } else if (typeof args.index !== 'undefined') {\n            index = args.index;\n        }\n\n        // emulate mouse events to show\n        $$.dispatchEvent('mouseover', index, mouse);\n        $$.dispatchEvent('mousemove', index, mouse);\n\n        $$.config.tooltip_onshow.call($$, args.data);\n    };\n    c3_chart_fn.tooltip.hide = function () {\n        // TODO: get target data by checking the state of focus\n        this.internal.dispatchEvent('mouseout', 0);\n\n        this.internal.config.tooltip_onhide.call(this);\n    };\n\n    c3_chart_fn.transform = function (type, targetIds) {\n        var $$ = this.internal,\n            options = ['pie', 'donut'].indexOf(type) >= 0 ? { withTransform: true } : null;\n        $$.transformTo(targetIds, type, options);\n    };\n\n    c3_chart_internal_fn.transformTo = function (targetIds, type, optionsForRedraw) {\n        var $$ = this,\n            withTransitionForAxis = !$$.hasArcType(),\n            options = optionsForRedraw || { withTransitionForAxis: withTransitionForAxis };\n        options.withTransitionForTransform = false;\n        $$.transiting = false;\n        $$.setTargetType(targetIds, type);\n        $$.updateTargets($$.data.targets); // this is needed when transforming to arc\n        $$.updateAndRedraw(options);\n    };\n\n    c3_chart_fn.x = function (x) {\n        var $$ = this.internal;\n        if (arguments.length) {\n            $$.updateTargetX($$.data.targets, x);\n            $$.redraw({ withUpdateOrgXDomain: true, withUpdateXDomain: true });\n        }\n        return $$.data.xs;\n    };\n    c3_chart_fn.xs = function (xs) {\n        var $$ = this.internal;\n        if (arguments.length) {\n            $$.updateTargetXs($$.data.targets, xs);\n            $$.redraw({ withUpdateOrgXDomain: true, withUpdateXDomain: true });\n        }\n        return $$.data.xs;\n    };\n\n    c3_chart_fn.zoom = function (domain) {\n        var $$ = this.internal;\n        if (domain) {\n            if ($$.isTimeSeries()) {\n                domain = domain.map(function (x) {\n                    return $$.parseDate(x);\n                });\n            }\n            $$.brush.extent(domain);\n            $$.redraw({ withUpdateXDomain: true, withY: $$.config.zoom_rescale });\n            $$.config.zoom_onzoom.call(this, $$.x.orgDomain());\n        }\n        return $$.brush.extent();\n    };\n    c3_chart_fn.zoom.enable = function (enabled) {\n        var $$ = this.internal;\n        $$.config.zoom_enabled = enabled;\n        $$.updateAndRedraw();\n    };\n    c3_chart_fn.unzoom = function () {\n        var $$ = this.internal;\n        $$.brush.clear().update();\n        $$.redraw({ withUpdateXDomain: true });\n    };\n\n    c3_chart_fn.zoom.max = function (max) {\n        var $$ = this.internal,\n            config = $$.config,\n            d3 = $$.d3;\n        if (max === 0 || max) {\n            config.zoom_x_max = d3.max([$$.orgXDomain[1], max]);\n        } else {\n            return config.zoom_x_max;\n        }\n    };\n\n    c3_chart_fn.zoom.min = function (min) {\n        var $$ = this.internal,\n            config = $$.config,\n            d3 = $$.d3;\n        if (min === 0 || min) {\n            config.zoom_x_min = d3.min([$$.orgXDomain[0], min]);\n        } else {\n            return config.zoom_x_min;\n        }\n    };\n\n    c3_chart_fn.zoom.range = function (range) {\n        if (arguments.length) {\n            if (isDefined(range.max)) {\n                this.domain.max(range.max);\n            }\n            if (isDefined(range.min)) {\n                this.domain.min(range.min);\n            }\n        } else {\n            return {\n                max: this.domain.max(),\n                min: this.domain.min()\n            };\n        }\n    };\n\n    c3_chart_internal_fn.initPie = function () {\n        var $$ = this,\n            d3 = $$.d3;\n        $$.pie = d3.layout.pie().value(function (d) {\n            return d.values.reduce(function (a, b) {\n                return a + b.value;\n            }, 0);\n        });\n        $$.pie.sort($$.getOrderFunction() || null);\n    };\n\n    c3_chart_internal_fn.updateRadius = function () {\n        var $$ = this,\n            config = $$.config,\n            w = config.gauge_width || config.donut_width,\n            gaugeArcWidth = $$.filterTargetsToShow($$.data.targets).length * $$.config.gauge_arcs_minWidth;\n        $$.radiusExpanded = Math.min($$.arcWidth, $$.arcHeight) / 2 * ($$.hasType('gauge') ? 0.85 : 1);\n        $$.radius = $$.radiusExpanded * 0.95;\n        $$.innerRadiusRatio = w ? ($$.radius - w) / $$.radius : 0.6;\n        $$.innerRadius = $$.hasType('donut') || $$.hasType('gauge') ? $$.radius * $$.innerRadiusRatio : 0;\n        $$.gaugeArcWidth = w ? w : gaugeArcWidth <= $$.radius - $$.innerRadius ? $$.radius - $$.innerRadius : gaugeArcWidth <= $$.radius ? gaugeArcWidth : $$.radius;\n    };\n\n    c3_chart_internal_fn.updateArc = function () {\n        var $$ = this;\n        $$.svgArc = $$.getSvgArc();\n        $$.svgArcExpanded = $$.getSvgArcExpanded();\n        $$.svgArcExpandedSub = $$.getSvgArcExpanded(0.98);\n    };\n\n    c3_chart_internal_fn.updateAngle = function (d) {\n        var $$ = this,\n            config = $$.config,\n            found = false,\n            index = 0,\n            gMin,\n            gMax,\n            gTic,\n            gValue;\n\n        if (!config) {\n            return null;\n        }\n\n        $$.pie($$.filterTargetsToShow($$.data.targets)).forEach(function (t) {\n            if (!found && t.data.id === d.data.id) {\n                found = true;\n                d = t;\n                d.index = index;\n            }\n            index++;\n        });\n        if (isNaN(d.startAngle)) {\n            d.startAngle = 0;\n        }\n        if (isNaN(d.endAngle)) {\n            d.endAngle = d.startAngle;\n        }\n        if ($$.isGaugeType(d.data)) {\n            gMin = config.gauge_min;\n            gMax = config.gauge_max;\n            gTic = Math.PI * (config.gauge_fullCircle ? 2 : 1) / (gMax - gMin);\n            gValue = d.value < gMin ? 0 : d.value < gMax ? d.value - gMin : gMax - gMin;\n            d.startAngle = config.gauge_startingAngle;\n            d.endAngle = d.startAngle + gTic * gValue;\n        }\n        return found ? d : null;\n    };\n\n    c3_chart_internal_fn.getSvgArc = function () {\n        var $$ = this,\n            hasGaugeType = $$.hasType('gauge'),\n            singleArcWidth = $$.gaugeArcWidth / $$.filterTargetsToShow($$.data.targets).length,\n            arc = $$.d3.svg.arc().outerRadius(function (d) {\n            return hasGaugeType ? $$.radius - singleArcWidth * d.index : $$.radius;\n        }).innerRadius(function (d) {\n            return hasGaugeType ? $$.radius - singleArcWidth * (d.index + 1) : $$.innerRadius;\n        }),\n            newArc = function newArc(d, withoutUpdate) {\n            var updated;\n            if (withoutUpdate) {\n                return arc(d);\n            } // for interpolate\n            updated = $$.updateAngle(d);\n            return updated ? arc(updated) : \"M 0 0\";\n        };\n        // TODO: extends all function\n        newArc.centroid = arc.centroid;\n        return newArc;\n    };\n\n    c3_chart_internal_fn.getSvgArcExpanded = function (rate) {\n        rate = rate || 1;\n        var $$ = this,\n            hasGaugeType = $$.hasType('gauge'),\n            singleArcWidth = $$.gaugeArcWidth / $$.filterTargetsToShow($$.data.targets).length,\n            expandWidth = Math.min($$.radiusExpanded * rate - $$.radius, singleArcWidth * 0.8 - (1 - rate) * 100),\n            arc = $$.d3.svg.arc().outerRadius(function (d) {\n            return hasGaugeType ? $$.radius - singleArcWidth * d.index + expandWidth : $$.radiusExpanded * rate;\n        }).innerRadius(function (d) {\n            return hasGaugeType ? $$.radius - singleArcWidth * (d.index + 1) : $$.innerRadius;\n        });\n        return function (d) {\n            var updated = $$.updateAngle(d);\n            return updated ? arc(updated) : \"M 0 0\";\n        };\n    };\n\n    c3_chart_internal_fn.getArc = function (d, withoutUpdate, force) {\n        return force || this.isArcType(d.data) ? this.svgArc(d, withoutUpdate) : \"M 0 0\";\n    };\n\n    c3_chart_internal_fn.transformForArcLabel = function (d) {\n        var $$ = this,\n            config = $$.config,\n            updated = $$.updateAngle(d),\n            c,\n            x,\n            y,\n            h,\n            ratio,\n            translate = \"\",\n            hasGauge = $$.hasType('gauge');\n        if (updated && !hasGauge) {\n            c = this.svgArc.centroid(updated);\n            x = isNaN(c[0]) ? 0 : c[0];\n            y = isNaN(c[1]) ? 0 : c[1];\n            h = Math.sqrt(x * x + y * y);\n            if ($$.hasType('donut') && config.donut_label_ratio) {\n                ratio = isFunction(config.donut_label_ratio) ? config.donut_label_ratio(d, $$.radius, h) : config.donut_label_ratio;\n            } else if ($$.hasType('pie') && config.pie_label_ratio) {\n                ratio = isFunction(config.pie_label_ratio) ? config.pie_label_ratio(d, $$.radius, h) : config.pie_label_ratio;\n            } else {\n                ratio = $$.radius && h ? (36 / $$.radius > 0.375 ? 1.175 - 36 / $$.radius : 0.8) * $$.radius / h : 0;\n            }\n            translate = \"translate(\" + x * ratio + ',' + y * ratio + \")\";\n        } else if (updated && hasGauge && $$.filterTargetsToShow($$.data.targets).length > 1) {\n            var y1 = Math.sin(updated.endAngle - Math.PI / 2);\n            x = Math.cos(updated.endAngle - Math.PI / 2) * ($$.radiusExpanded + 25);\n            y = y1 * ($$.radiusExpanded + 15 - Math.abs(y1 * 10)) + 3;\n            translate = \"translate(\" + x + ',' + y + \")\";\n        }\n        return translate;\n    };\n\n    c3_chart_internal_fn.getArcRatio = function (d) {\n        var $$ = this,\n            config = $$.config,\n            whole = Math.PI * ($$.hasType('gauge') && !config.gauge_fullCircle ? 1 : 2);\n        return d ? (d.endAngle - d.startAngle) / whole : null;\n    };\n\n    c3_chart_internal_fn.convertToArcData = function (d) {\n        return this.addName({\n            id: d.data.id,\n            value: d.value,\n            ratio: this.getArcRatio(d),\n            index: d.index\n        });\n    };\n\n    c3_chart_internal_fn.textForArcLabel = function (d) {\n        var $$ = this,\n            updated,\n            value,\n            ratio,\n            id,\n            format;\n        if (!$$.shouldShowArcLabel()) {\n            return \"\";\n        }\n        updated = $$.updateAngle(d);\n        value = updated ? updated.value : null;\n        ratio = $$.getArcRatio(updated);\n        id = d.data.id;\n        if (!$$.hasType('gauge') && !$$.meetsArcLabelThreshold(ratio)) {\n            return \"\";\n        }\n        format = $$.getArcLabelFormat();\n        return format ? format(value, ratio, id) : $$.defaultArcValueFormat(value, ratio);\n    };\n\n    c3_chart_internal_fn.textForGaugeMinMax = function (value, isMax) {\n        var $$ = this,\n            format = $$.getGaugeLabelExtents();\n\n        return format ? format(value, isMax) : value;\n    };\n\n    c3_chart_internal_fn.expandArc = function (targetIds) {\n        var $$ = this,\n            interval;\n\n        // MEMO: avoid to cancel transition\n        if ($$.transiting) {\n            interval = window.setInterval(function () {\n                if (!$$.transiting) {\n                    window.clearInterval(interval);\n                    if ($$.legend.selectAll('.c3-legend-item-focused').size() > 0) {\n                        $$.expandArc(targetIds);\n                    }\n                }\n            }, 10);\n            return;\n        }\n\n        targetIds = $$.mapToTargetIds(targetIds);\n\n        $$.svg.selectAll($$.selectorTargets(targetIds, '.' + CLASS.chartArc)).each(function (d) {\n            if (!$$.shouldExpand(d.data.id)) {\n                return;\n            }\n            $$.d3.select(this).selectAll('path').transition().duration($$.expandDuration(d.data.id)).attr(\"d\", $$.svgArcExpanded).transition().duration($$.expandDuration(d.data.id) * 2).attr(\"d\", $$.svgArcExpandedSub).each(function (d) {\n                if ($$.isDonutType(d.data)) {\n                    // callback here\n                }\n            });\n        });\n    };\n\n    c3_chart_internal_fn.unexpandArc = function (targetIds) {\n        var $$ = this;\n\n        if ($$.transiting) {\n            return;\n        }\n\n        targetIds = $$.mapToTargetIds(targetIds);\n\n        $$.svg.selectAll($$.selectorTargets(targetIds, '.' + CLASS.chartArc)).selectAll('path').transition().duration(function (d) {\n            return $$.expandDuration(d.data.id);\n        }).attr(\"d\", $$.svgArc);\n        $$.svg.selectAll('.' + CLASS.arc);\n    };\n\n    c3_chart_internal_fn.expandDuration = function (id) {\n        var $$ = this,\n            config = $$.config;\n\n        if ($$.isDonutType(id)) {\n            return config.donut_expand_duration;\n        } else if ($$.isGaugeType(id)) {\n            return config.gauge_expand_duration;\n        } else if ($$.isPieType(id)) {\n            return config.pie_expand_duration;\n        } else {\n            return 50;\n        }\n    };\n\n    c3_chart_internal_fn.shouldExpand = function (id) {\n        var $$ = this,\n            config = $$.config;\n        return $$.isDonutType(id) && config.donut_expand || $$.isGaugeType(id) && config.gauge_expand || $$.isPieType(id) && config.pie_expand;\n    };\n\n    c3_chart_internal_fn.shouldShowArcLabel = function () {\n        var $$ = this,\n            config = $$.config,\n            shouldShow = true;\n        if ($$.hasType('donut')) {\n            shouldShow = config.donut_label_show;\n        } else if ($$.hasType('pie')) {\n            shouldShow = config.pie_label_show;\n        }\n        // when gauge, always true\n        return shouldShow;\n    };\n\n    c3_chart_internal_fn.meetsArcLabelThreshold = function (ratio) {\n        var $$ = this,\n            config = $$.config,\n            threshold = $$.hasType('donut') ? config.donut_label_threshold : config.pie_label_threshold;\n        return ratio >= threshold;\n    };\n\n    c3_chart_internal_fn.getArcLabelFormat = function () {\n        var $$ = this,\n            config = $$.config,\n            format = config.pie_label_format;\n        if ($$.hasType('gauge')) {\n            format = config.gauge_label_format;\n        } else if ($$.hasType('donut')) {\n            format = config.donut_label_format;\n        }\n        return format;\n    };\n\n    c3_chart_internal_fn.getGaugeLabelExtents = function () {\n        var $$ = this,\n            config = $$.config;\n        return config.gauge_label_extents;\n    };\n\n    c3_chart_internal_fn.getArcTitle = function () {\n        var $$ = this;\n        return $$.hasType('donut') ? $$.config.donut_title : \"\";\n    };\n\n    c3_chart_internal_fn.updateTargetsForArc = function (targets) {\n        var $$ = this,\n            main = $$.main,\n            mainPieUpdate,\n            mainPieEnter,\n            classChartArc = $$.classChartArc.bind($$),\n            classArcs = $$.classArcs.bind($$),\n            classFocus = $$.classFocus.bind($$);\n        mainPieUpdate = main.select('.' + CLASS.chartArcs).selectAll('.' + CLASS.chartArc).data($$.pie(targets)).attr(\"class\", function (d) {\n            return classChartArc(d) + classFocus(d.data);\n        });\n        mainPieEnter = mainPieUpdate.enter().append(\"g\").attr(\"class\", classChartArc);\n        mainPieEnter.append('g').attr('class', classArcs);\n        mainPieEnter.append(\"text\").attr(\"dy\", $$.hasType('gauge') ? \"-.1em\" : \".35em\").style(\"opacity\", 0).style(\"text-anchor\", \"middle\").style(\"pointer-events\", \"none\");\n        // MEMO: can not keep same color..., but not bad to update color in redraw\n        //mainPieUpdate.exit().remove();\n    };\n\n    c3_chart_internal_fn.initArc = function () {\n        var $$ = this;\n        $$.arcs = $$.main.select('.' + CLASS.chart).append(\"g\").attr(\"class\", CLASS.chartArcs).attr(\"transform\", $$.getTranslate('arc'));\n        $$.arcs.append('text').attr('class', CLASS.chartArcsTitle).style(\"text-anchor\", \"middle\").text($$.getArcTitle());\n    };\n\n    c3_chart_internal_fn.redrawArc = function (duration, durationForExit, withTransform) {\n        var $$ = this,\n            d3 = $$.d3,\n            config = $$.config,\n            main = $$.main,\n            mainArc,\n            backgroundArc,\n            mainArcLabelLine,\n            hasGaugeType = $$.hasType('gauge');\n        mainArc = main.selectAll('.' + CLASS.arcs).selectAll('.' + CLASS.arc).data($$.arcData.bind($$));\n        mainArc.enter().append('path').attr(\"class\", $$.classArc.bind($$)).style(\"fill\", function (d) {\n            return $$.color(d.data);\n        }).style(\"cursor\", function (d) {\n            return config.interaction_enabled && config.data_selection_isselectable(d) ? \"pointer\" : null;\n        }).each(function (d) {\n            if ($$.isGaugeType(d.data)) {\n                d.startAngle = d.endAngle = config.gauge_startingAngle;\n            }\n            this._current = d;\n        });\n        if (hasGaugeType) {\n            mainArcLabelLine = main.selectAll('.' + CLASS.arcs).selectAll('.' + CLASS.arcLabelLine).data($$.arcData.bind($$));\n            mainArcLabelLine.enter().append('rect').attr(\"class\", function (d) {\n                return CLASS.arcLabelLine + ' ' + CLASS.target + ' ' + CLASS.target + '-' + d.data.id;\n            });\n            if ($$.filterTargetsToShow($$.data.targets).length === 1) {\n                mainArcLabelLine.style(\"display\", \"none\");\n            } else {\n                mainArcLabelLine.style(\"fill\", function (d) {\n                    return config.color_pattern.length > 0 ? $$.levelColor(d.data.values[0].value) : $$.color(d.data);\n                }).style(\"display\", config.gauge_labelLine_show ? \"\" : \"none\").each(function (d) {\n                    var lineLength = 0,\n                        lineThickness = 2,\n                        x = 0,\n                        y = 0,\n                        transform = \"\";\n                    if ($$.hiddenTargetIds.indexOf(d.data.id) < 0) {\n                        var updated = $$.updateAngle(d),\n                            innerLineLength = $$.gaugeArcWidth / $$.filterTargetsToShow($$.data.targets).length * (updated.index + 1),\n                            lineAngle = updated.endAngle - Math.PI / 2,\n                            arcInnerRadius = $$.radius - innerLineLength,\n                            linePositioningAngle = lineAngle - (arcInnerRadius === 0 ? 0 : 1 / arcInnerRadius);\n                        lineLength = $$.radiusExpanded - $$.radius + innerLineLength;\n                        x = Math.cos(linePositioningAngle) * arcInnerRadius;\n                        y = Math.sin(linePositioningAngle) * arcInnerRadius;\n                        transform = \"rotate(\" + lineAngle * 180 / Math.PI + \", \" + x + \", \" + y + \")\";\n                    }\n                    d3.select(this).attr({ x: x, y: y, width: lineLength, height: lineThickness, transform: transform }).style(\"stroke-dasharray\", \"0, \" + (lineLength + lineThickness) + \", 0\");\n                });\n            }\n        }\n        mainArc.attr(\"transform\", function (d) {\n            return !$$.isGaugeType(d.data) && withTransform ? \"scale(0)\" : \"\";\n        }).on('mouseover', config.interaction_enabled ? function (d) {\n            var updated, arcData;\n            if ($$.transiting) {\n                // skip while transiting\n                return;\n            }\n            updated = $$.updateAngle(d);\n            if (updated) {\n                arcData = $$.convertToArcData(updated);\n                // transitions\n                $$.expandArc(updated.data.id);\n                $$.api.focus(updated.data.id);\n                $$.toggleFocusLegend(updated.data.id, true);\n                $$.config.data_onmouseover(arcData, this);\n            }\n        } : null).on('mousemove', config.interaction_enabled ? function (d) {\n            var updated = $$.updateAngle(d),\n                arcData,\n                selectedData;\n            if (updated) {\n                arcData = $$.convertToArcData(updated), selectedData = [arcData];\n                $$.showTooltip(selectedData, this);\n            }\n        } : null).on('mouseout', config.interaction_enabled ? function (d) {\n            var updated, arcData;\n            if ($$.transiting) {\n                // skip while transiting\n                return;\n            }\n            updated = $$.updateAngle(d);\n            if (updated) {\n                arcData = $$.convertToArcData(updated);\n                // transitions\n                $$.unexpandArc(updated.data.id);\n                $$.api.revert();\n                $$.revertLegend();\n                $$.hideTooltip();\n                $$.config.data_onmouseout(arcData, this);\n            }\n        } : null).on('click', config.interaction_enabled ? function (d, i) {\n            var updated = $$.updateAngle(d),\n                arcData;\n            if (updated) {\n                arcData = $$.convertToArcData(updated);\n                if ($$.toggleShape) {\n                    $$.toggleShape(this, arcData, i);\n                }\n                $$.config.data_onclick.call($$.api, arcData, this);\n            }\n        } : null).each(function () {\n            $$.transiting = true;\n        }).transition().duration(duration).attrTween(\"d\", function (d) {\n            var updated = $$.updateAngle(d),\n                interpolate;\n            if (!updated) {\n                return function () {\n                    return \"M 0 0\";\n                };\n            }\n            //                if (this._current === d) {\n            //                    this._current = {\n            //                        startAngle: Math.PI*2,\n            //                        endAngle: Math.PI*2,\n            //                    };\n            //                }\n            if (isNaN(this._current.startAngle)) {\n                this._current.startAngle = 0;\n            }\n            if (isNaN(this._current.endAngle)) {\n                this._current.endAngle = this._current.startAngle;\n            }\n            interpolate = d3.interpolate(this._current, updated);\n            this._current = interpolate(0);\n            return function (t) {\n                var interpolated = interpolate(t);\n                interpolated.data = d.data; // data.id will be updated by interporator\n                return $$.getArc(interpolated, true);\n            };\n        }).attr(\"transform\", withTransform ? \"scale(1)\" : \"\").style(\"fill\", function (d) {\n            return $$.levelColor ? $$.levelColor(d.data.values[0].value) : $$.color(d.data.id);\n        }) // Where gauge reading color would receive customization.\n        .call($$.endall, function () {\n            $$.transiting = false;\n        });\n        mainArc.exit().transition().duration(durationForExit).style('opacity', 0).remove();\n        main.selectAll('.' + CLASS.chartArc).select('text').style(\"opacity\", 0).attr('class', function (d) {\n            return $$.isGaugeType(d.data) ? CLASS.gaugeValue : '';\n        }).text($$.textForArcLabel.bind($$)).attr(\"transform\", $$.transformForArcLabel.bind($$)).style('font-size', function (d) {\n            return $$.isGaugeType(d.data) && $$.filterTargetsToShow($$.data.targets).length === 1 ? Math.round($$.radius / 5) + 'px' : '';\n        }).transition().duration(duration).style(\"opacity\", function (d) {\n            return $$.isTargetToShow(d.data.id) && $$.isArcType(d.data) ? 1 : 0;\n        });\n        main.select('.' + CLASS.chartArcsTitle).style(\"opacity\", $$.hasType('donut') || hasGaugeType ? 1 : 0);\n\n        if (hasGaugeType) {\n            var index = 0;\n            backgroundArc = $$.arcs.select('g.' + CLASS.chartArcsBackground).selectAll('path.' + CLASS.chartArcsBackground).data($$.data.targets);\n            backgroundArc.enter().append(\"path\");\n            backgroundArc.attr(\"class\", function (d, i) {\n                return CLASS.chartArcsBackground + ' ' + CLASS.chartArcsBackground + '-' + i;\n            }).attr(\"d\", function (d1) {\n                if ($$.hiddenTargetIds.indexOf(d1.id) >= 0) {\n                    return \"M 0 0\";\n                }\n\n                var d = {\n                    data: [{ value: config.gauge_max }],\n                    startAngle: config.gauge_startingAngle,\n                    endAngle: -1 * config.gauge_startingAngle * (config.gauge_fullCircle ? Math.PI : 1),\n                    index: index++\n                };\n                return $$.getArc(d, true, true);\n            });\n            backgroundArc.exit().remove();\n\n            $$.arcs.select('.' + CLASS.chartArcsGaugeUnit).attr(\"dy\", \".75em\").text(config.gauge_label_show ? config.gauge_units : '');\n            $$.arcs.select('.' + CLASS.chartArcsGaugeMin).attr(\"dx\", -1 * ($$.innerRadius + ($$.radius - $$.innerRadius) / (config.gauge_fullCircle ? 1 : 2)) + \"px\").attr(\"dy\", \"1.2em\").text(config.gauge_label_show ? $$.textForGaugeMinMax(config.gauge_min, false) : '');\n            $$.arcs.select('.' + CLASS.chartArcsGaugeMax).attr(\"dx\", $$.innerRadius + ($$.radius - $$.innerRadius) / (config.gauge_fullCircle ? 1 : 2) + \"px\").attr(\"dy\", \"1.2em\").text(config.gauge_label_show ? $$.textForGaugeMinMax(config.gauge_max, true) : '');\n        }\n    };\n    c3_chart_internal_fn.initGauge = function () {\n        var arcs = this.arcs;\n        if (this.hasType('gauge')) {\n            arcs.append('g').attr(\"class\", CLASS.chartArcsBackground);\n            arcs.append(\"text\").attr(\"class\", CLASS.chartArcsGaugeUnit).style(\"text-anchor\", \"middle\").style(\"pointer-events\", \"none\");\n            arcs.append(\"text\").attr(\"class\", CLASS.chartArcsGaugeMin).style(\"text-anchor\", \"middle\").style(\"pointer-events\", \"none\");\n            arcs.append(\"text\").attr(\"class\", CLASS.chartArcsGaugeMax).style(\"text-anchor\", \"middle\").style(\"pointer-events\", \"none\");\n        }\n    };\n    c3_chart_internal_fn.getGaugeLabelHeight = function () {\n        return this.config.gauge_label_show ? 20 : 0;\n    };\n\n    c3_chart_internal_fn.hasCaches = function (ids) {\n        for (var i = 0; i < ids.length; i++) {\n            if (!(ids[i] in this.cache)) {\n                return false;\n            }\n        }\n        return true;\n    };\n    c3_chart_internal_fn.addCache = function (id, target) {\n        this.cache[id] = this.cloneTarget(target);\n    };\n    c3_chart_internal_fn.getCaches = function (ids) {\n        var targets = [],\n            i;\n        for (i = 0; i < ids.length; i++) {\n            if (ids[i] in this.cache) {\n                targets.push(this.cloneTarget(this.cache[ids[i]]));\n            }\n        }\n        return targets;\n    };\n\n    c3_chart_internal_fn.categoryName = function (i) {\n        var config = this.config;\n        return i < config.axis_x_categories.length ? config.axis_x_categories[i] : i;\n    };\n\n    c3_chart_internal_fn.generateClass = function (prefix, targetId) {\n        return \" \" + prefix + \" \" + prefix + this.getTargetSelectorSuffix(targetId);\n    };\n    c3_chart_internal_fn.classText = function (d) {\n        return this.generateClass(CLASS.text, d.index);\n    };\n    c3_chart_internal_fn.classTexts = function (d) {\n        return this.generateClass(CLASS.texts, d.id);\n    };\n    c3_chart_internal_fn.classShape = function (d) {\n        return this.generateClass(CLASS.shape, d.index);\n    };\n    c3_chart_internal_fn.classShapes = function (d) {\n        return this.generateClass(CLASS.shapes, d.id);\n    };\n    c3_chart_internal_fn.classLine = function (d) {\n        return this.classShape(d) + this.generateClass(CLASS.line, d.id);\n    };\n    c3_chart_internal_fn.classLines = function (d) {\n        return this.classShapes(d) + this.generateClass(CLASS.lines, d.id);\n    };\n    c3_chart_internal_fn.classCircle = function (d) {\n        return this.classShape(d) + this.generateClass(CLASS.circle, d.index);\n    };\n    c3_chart_internal_fn.classCircles = function (d) {\n        return this.classShapes(d) + this.generateClass(CLASS.circles, d.id);\n    };\n    c3_chart_internal_fn.classBar = function (d) {\n        return this.classShape(d) + this.generateClass(CLASS.bar, d.index);\n    };\n    c3_chart_internal_fn.classBars = function (d) {\n        return this.classShapes(d) + this.generateClass(CLASS.bars, d.id);\n    };\n    c3_chart_internal_fn.classArc = function (d) {\n        return this.classShape(d.data) + this.generateClass(CLASS.arc, d.data.id);\n    };\n    c3_chart_internal_fn.classArcs = function (d) {\n        return this.classShapes(d.data) + this.generateClass(CLASS.arcs, d.data.id);\n    };\n    c3_chart_internal_fn.classArea = function (d) {\n        return this.classShape(d) + this.generateClass(CLASS.area, d.id);\n    };\n    c3_chart_internal_fn.classAreas = function (d) {\n        return this.classShapes(d) + this.generateClass(CLASS.areas, d.id);\n    };\n    c3_chart_internal_fn.classRegion = function (d, i) {\n        return this.generateClass(CLASS.region, i) + ' ' + ('class' in d ? d['class'] : '');\n    };\n    c3_chart_internal_fn.classEvent = function (d) {\n        return this.generateClass(CLASS.eventRect, d.index);\n    };\n    c3_chart_internal_fn.classTarget = function (id) {\n        var $$ = this;\n        var additionalClassSuffix = $$.config.data_classes[id],\n            additionalClass = '';\n        if (additionalClassSuffix) {\n            additionalClass = ' ' + CLASS.target + '-' + additionalClassSuffix;\n        }\n        return $$.generateClass(CLASS.target, id) + additionalClass;\n    };\n    c3_chart_internal_fn.classFocus = function (d) {\n        return this.classFocused(d) + this.classDefocused(d);\n    };\n    c3_chart_internal_fn.classFocused = function (d) {\n        return ' ' + (this.focusedTargetIds.indexOf(d.id) >= 0 ? CLASS.focused : '');\n    };\n    c3_chart_internal_fn.classDefocused = function (d) {\n        return ' ' + (this.defocusedTargetIds.indexOf(d.id) >= 0 ? CLASS.defocused : '');\n    };\n    c3_chart_internal_fn.classChartText = function (d) {\n        return CLASS.chartText + this.classTarget(d.id);\n    };\n    c3_chart_internal_fn.classChartLine = function (d) {\n        return CLASS.chartLine + this.classTarget(d.id);\n    };\n    c3_chart_internal_fn.classChartBar = function (d) {\n        return CLASS.chartBar + this.classTarget(d.id);\n    };\n    c3_chart_internal_fn.classChartArc = function (d) {\n        return CLASS.chartArc + this.classTarget(d.data.id);\n    };\n    c3_chart_internal_fn.getTargetSelectorSuffix = function (targetId) {\n        return targetId || targetId === 0 ? ('-' + targetId).replace(/[\\s?!@#$%^&*()_=+,.<>'\":;\\[\\]\\/|~`{}\\\\]/g, '-') : '';\n    };\n    c3_chart_internal_fn.selectorTarget = function (id, prefix) {\n        return (prefix || '') + '.' + CLASS.target + this.getTargetSelectorSuffix(id);\n    };\n    c3_chart_internal_fn.selectorTargets = function (ids, prefix) {\n        var $$ = this;\n        ids = ids || [];\n        return ids.length ? ids.map(function (id) {\n            return $$.selectorTarget(id, prefix);\n        }) : null;\n    };\n    c3_chart_internal_fn.selectorLegend = function (id) {\n        return '.' + CLASS.legendItem + this.getTargetSelectorSuffix(id);\n    };\n    c3_chart_internal_fn.selectorLegends = function (ids) {\n        var $$ = this;\n        return ids && ids.length ? ids.map(function (id) {\n            return $$.selectorLegend(id);\n        }) : null;\n    };\n\n    c3_chart_internal_fn.getClipPath = function (id) {\n        var isIE9 = window.navigator.appVersion.toLowerCase().indexOf(\"msie 9.\") >= 0;\n        return \"url(\" + (isIE9 ? \"\" : document.URL.split('#')[0]) + \"#\" + id + \")\";\n    };\n    c3_chart_internal_fn.appendClip = function (parent, id) {\n        return parent.append(\"clipPath\").attr(\"id\", id).append(\"rect\");\n    };\n    c3_chart_internal_fn.getAxisClipX = function (forHorizontal) {\n        // axis line width + padding for left\n        var left = Math.max(30, this.margin.left);\n        return forHorizontal ? -(1 + left) : -(left - 1);\n    };\n    c3_chart_internal_fn.getAxisClipY = function (forHorizontal) {\n        return forHorizontal ? -20 : -this.margin.top;\n    };\n    c3_chart_internal_fn.getXAxisClipX = function () {\n        var $$ = this;\n        return $$.getAxisClipX(!$$.config.axis_rotated);\n    };\n    c3_chart_internal_fn.getXAxisClipY = function () {\n        var $$ = this;\n        return $$.getAxisClipY(!$$.config.axis_rotated);\n    };\n    c3_chart_internal_fn.getYAxisClipX = function () {\n        var $$ = this;\n        return $$.config.axis_y_inner ? -1 : $$.getAxisClipX($$.config.axis_rotated);\n    };\n    c3_chart_internal_fn.getYAxisClipY = function () {\n        var $$ = this;\n        return $$.getAxisClipY($$.config.axis_rotated);\n    };\n    c3_chart_internal_fn.getAxisClipWidth = function (forHorizontal) {\n        var $$ = this,\n            left = Math.max(30, $$.margin.left),\n            right = Math.max(30, $$.margin.right);\n        // width + axis line width + padding for left/right\n        return forHorizontal ? $$.width + 2 + left + right : $$.margin.left + 20;\n    };\n    c3_chart_internal_fn.getAxisClipHeight = function (forHorizontal) {\n        // less than 20 is not enough to show the axis label 'outer' without legend\n        return (forHorizontal ? this.margin.bottom : this.margin.top + this.height) + 20;\n    };\n    c3_chart_internal_fn.getXAxisClipWidth = function () {\n        var $$ = this;\n        return $$.getAxisClipWidth(!$$.config.axis_rotated);\n    };\n    c3_chart_internal_fn.getXAxisClipHeight = function () {\n        var $$ = this;\n        return $$.getAxisClipHeight(!$$.config.axis_rotated);\n    };\n    c3_chart_internal_fn.getYAxisClipWidth = function () {\n        var $$ = this;\n        return $$.getAxisClipWidth($$.config.axis_rotated) + ($$.config.axis_y_inner ? 20 : 0);\n    };\n    c3_chart_internal_fn.getYAxisClipHeight = function () {\n        var $$ = this;\n        return $$.getAxisClipHeight($$.config.axis_rotated);\n    };\n\n    c3_chart_internal_fn.generateColor = function () {\n        var $$ = this,\n            config = $$.config,\n            d3 = $$.d3,\n            colors = config.data_colors,\n            pattern = notEmpty(config.color_pattern) ? config.color_pattern : d3.scale.category10().range(),\n            callback = config.data_color,\n            ids = [];\n\n        return function (d) {\n            var id = d.id || d.data && d.data.id || d,\n                color;\n\n            // if callback function is provided\n            if (colors[id] instanceof Function) {\n                color = colors[id](d);\n            }\n            // if specified, choose that color\n            else if (colors[id]) {\n                    color = colors[id];\n                }\n                // if not specified, choose from pattern\n                else {\n                        if (ids.indexOf(id) < 0) {\n                            ids.push(id);\n                        }\n                        color = pattern[ids.indexOf(id) % pattern.length];\n                        colors[id] = color;\n                    }\n            return callback instanceof Function ? callback(color, d) : color;\n        };\n    };\n    c3_chart_internal_fn.generateLevelColor = function () {\n        var $$ = this,\n            config = $$.config,\n            colors = config.color_pattern,\n            threshold = config.color_threshold,\n            asValue = threshold.unit === 'value',\n            values = threshold.values && threshold.values.length ? threshold.values : [],\n            max = threshold.max || 100;\n        return notEmpty(config.color_threshold) ? function (value) {\n            var i,\n                v,\n                color = colors[colors.length - 1];\n            for (i = 0; i < values.length; i++) {\n                v = asValue ? value : value * 100 / max;\n                if (v < values[i]) {\n                    color = colors[i];\n                    break;\n                }\n            }\n            return color;\n        } : null;\n    };\n\n    c3_chart_internal_fn.getDefaultConfig = function () {\n        var config = {\n            bindto: '#chart',\n            svg_classname: undefined,\n            size_width: undefined,\n            size_height: undefined,\n            padding_left: undefined,\n            padding_right: undefined,\n            padding_top: undefined,\n            padding_bottom: undefined,\n            resize_auto: true,\n            zoom_enabled: false,\n            zoom_extent: undefined,\n            zoom_privileged: false,\n            zoom_rescale: false,\n            zoom_onzoom: function zoom_onzoom() {},\n            zoom_onzoomstart: function zoom_onzoomstart() {},\n            zoom_onzoomend: function zoom_onzoomend() {},\n            zoom_x_min: undefined,\n            zoom_x_max: undefined,\n            interaction_brighten: true,\n            interaction_enabled: true,\n            onmouseover: function onmouseover() {},\n            onmouseout: function onmouseout() {},\n            onresize: function onresize() {},\n            onresized: function onresized() {},\n            oninit: function oninit() {},\n            onrendered: function onrendered() {},\n            transition_duration: 350,\n            data_x: undefined,\n            data_xs: {},\n            data_xFormat: '%Y-%m-%d',\n            data_xLocaltime: true,\n            data_xSort: true,\n            data_idConverter: function data_idConverter(id) {\n                return id;\n            },\n            data_names: {},\n            data_classes: {},\n            data_groups: [],\n            data_axes: {},\n            data_type: undefined,\n            data_types: {},\n            data_labels: {},\n            data_order: 'desc',\n            data_regions: {},\n            data_color: undefined,\n            data_colors: {},\n            data_hide: false,\n            data_filter: undefined,\n            data_selection_enabled: false,\n            data_selection_grouped: false,\n            data_selection_isselectable: function data_selection_isselectable() {\n                return true;\n            },\n            data_selection_multiple: true,\n            data_selection_draggable: false,\n            data_onclick: function data_onclick() {},\n            data_onmouseover: function data_onmouseover() {},\n            data_onmouseout: function data_onmouseout() {},\n            data_onselected: function data_onselected() {},\n            data_onunselected: function data_onunselected() {},\n            data_url: undefined,\n            data_headers: undefined,\n            data_json: undefined,\n            data_rows: undefined,\n            data_columns: undefined,\n            data_mimeType: undefined,\n            data_keys: undefined,\n            // configuration for no plot-able data supplied.\n            data_empty_label_text: \"\",\n            // subchart\n            subchart_show: false,\n            subchart_size_height: 60,\n            subchart_axis_x_show: true,\n            subchart_onbrush: function subchart_onbrush() {},\n            // color\n            color_pattern: [],\n            color_threshold: {},\n            // legend\n            legend_show: true,\n            legend_hide: false,\n            legend_position: 'bottom',\n            legend_inset_anchor: 'top-left',\n            legend_inset_x: 10,\n            legend_inset_y: 0,\n            legend_inset_step: undefined,\n            legend_item_onclick: undefined,\n            legend_item_onmouseover: undefined,\n            legend_item_onmouseout: undefined,\n            legend_equally: false,\n            legend_padding: 0,\n            legend_item_tile_width: 10,\n            legend_item_tile_height: 10,\n            // axis\n            axis_rotated: false,\n            axis_x_show: true,\n            axis_x_type: 'indexed',\n            axis_x_localtime: true,\n            axis_x_categories: [],\n            axis_x_tick_centered: false,\n            axis_x_tick_format: undefined,\n            axis_x_tick_culling: {},\n            axis_x_tick_culling_max: 10,\n            axis_x_tick_count: undefined,\n            axis_x_tick_fit: true,\n            axis_x_tick_values: null,\n            axis_x_tick_rotate: 0,\n            axis_x_tick_outer: true,\n            axis_x_tick_multiline: true,\n            axis_x_tick_multilineMax: 0,\n            axis_x_tick_width: null,\n            axis_x_max: undefined,\n            axis_x_min: undefined,\n            axis_x_padding: {},\n            axis_x_height: undefined,\n            axis_x_extent: undefined,\n            axis_x_label: {},\n            axis_x_inner: undefined,\n            axis_y_show: true,\n            axis_y_type: undefined,\n            axis_y_max: undefined,\n            axis_y_min: undefined,\n            axis_y_inverted: false,\n            axis_y_center: undefined,\n            axis_y_inner: undefined,\n            axis_y_label: {},\n            axis_y_tick_format: undefined,\n            axis_y_tick_outer: true,\n            axis_y_tick_values: null,\n            axis_y_tick_rotate: 0,\n            axis_y_tick_count: undefined,\n            axis_y_tick_time_value: undefined,\n            axis_y_tick_time_interval: undefined,\n            axis_y_padding: {},\n            axis_y_default: undefined,\n            axis_y2_show: false,\n            axis_y2_max: undefined,\n            axis_y2_min: undefined,\n            axis_y2_inverted: false,\n            axis_y2_center: undefined,\n            axis_y2_inner: undefined,\n            axis_y2_label: {},\n            axis_y2_tick_format: undefined,\n            axis_y2_tick_outer: true,\n            axis_y2_tick_values: null,\n            axis_y2_tick_count: undefined,\n            axis_y2_padding: {},\n            axis_y2_default: undefined,\n            // grid\n            grid_x_show: false,\n            grid_x_type: 'tick',\n            grid_x_lines: [],\n            grid_y_show: false,\n            // not used\n            // grid_y_type: 'tick',\n            grid_y_lines: [],\n            grid_y_ticks: 10,\n            grid_focus_show: true,\n            grid_lines_front: true,\n            // point - point of each data\n            point_show: true,\n            point_r: 2.5,\n            point_sensitivity: 10,\n            point_focus_expand_enabled: true,\n            point_focus_expand_r: undefined,\n            point_select_r: undefined,\n            // line\n            line_connectNull: false,\n            line_step_type: 'step',\n            // bar\n            bar_width: undefined,\n            bar_width_ratio: 0.6,\n            bar_width_max: undefined,\n            bar_zerobased: true,\n            bar_space: 0,\n            // area\n            area_zerobased: true,\n            area_above: false,\n            // pie\n            pie_label_show: true,\n            pie_label_format: undefined,\n            pie_label_threshold: 0.05,\n            pie_label_ratio: undefined,\n            pie_expand: {},\n            pie_expand_duration: 50,\n            // gauge\n            gauge_fullCircle: false,\n            gauge_label_show: true,\n            gauge_labelLine_show: true,\n            gauge_label_format: undefined,\n            gauge_min: 0,\n            gauge_max: 100,\n            gauge_startingAngle: -1 * Math.PI / 2,\n            gauge_label_extents: undefined,\n            gauge_units: undefined,\n            gauge_width: undefined,\n            gauge_arcs_minWidth: 5,\n            gauge_expand: {},\n            gauge_expand_duration: 50,\n            // donut\n            donut_label_show: true,\n            donut_label_format: undefined,\n            donut_label_threshold: 0.05,\n            donut_label_ratio: undefined,\n            donut_width: undefined,\n            donut_title: \"\",\n            donut_expand: {},\n            donut_expand_duration: 50,\n            // spline\n            spline_interpolation_type: 'cardinal',\n            // region - region to change style\n            regions: [],\n            // tooltip - show when mouseover on each data\n            tooltip_show: true,\n            tooltip_grouped: true,\n            tooltip_order: undefined,\n            tooltip_format_title: undefined,\n            tooltip_format_name: undefined,\n            tooltip_format_value: undefined,\n            tooltip_position: undefined,\n            tooltip_contents: function tooltip_contents(d, defaultTitleFormat, defaultValueFormat, color) {\n                return this.getTooltipContent ? this.getTooltipContent(d, defaultTitleFormat, defaultValueFormat, color) : '';\n            },\n            tooltip_init_show: false,\n            tooltip_init_x: 0,\n            tooltip_init_position: { top: '0px', left: '50px' },\n            tooltip_onshow: function tooltip_onshow() {},\n            tooltip_onhide: function tooltip_onhide() {},\n            // title\n            title_text: undefined,\n            title_padding: {\n                top: 0,\n                right: 0,\n                bottom: 0,\n                left: 0\n            },\n            title_position: 'top-center'\n        };\n\n        Object.keys(this.additionalConfig).forEach(function (key) {\n            config[key] = this.additionalConfig[key];\n        }, this);\n\n        return config;\n    };\n    c3_chart_internal_fn.additionalConfig = {};\n\n    c3_chart_internal_fn.loadConfig = function (config) {\n        var this_config = this.config,\n            target,\n            keys,\n            read;\n        function find() {\n            var key = keys.shift();\n            //        console.log(\"key =>\", key, \", target =>\", target);\n            if (key && target && (typeof target === 'undefined' ? 'undefined' : _typeof(target)) === 'object' && key in target) {\n                target = target[key];\n                return find();\n            } else if (!key) {\n                return target;\n            } else {\n                return undefined;\n            }\n        }\n        Object.keys(this_config).forEach(function (key) {\n            target = config;\n            keys = key.split('_');\n            read = find();\n            //        console.log(\"CONFIG : \", key, read);\n            if (isDefined(read)) {\n                this_config[key] = read;\n            }\n        });\n    };\n\n    c3_chart_internal_fn.convertUrlToData = function (url, mimeType, headers, keys, done) {\n        var $$ = this,\n            type = mimeType ? mimeType : 'csv';\n        var req = $$.d3.xhr(url);\n        if (headers) {\n            Object.keys(headers).forEach(function (header) {\n                req.header(header, headers[header]);\n            });\n        }\n        req.get(function (error, data) {\n            var d;\n            var dataResponse = data.response || data.responseText; // Fixes IE9 XHR issue; see #1345\n            if (!data) {\n                throw new Error(error.responseURL + ' ' + error.status + ' (' + error.statusText + ')');\n            }\n            if (type === 'json') {\n                d = $$.convertJsonToData(JSON.parse(dataResponse), keys);\n            } else if (type === 'tsv') {\n                d = $$.convertTsvToData(dataResponse);\n            } else {\n                d = $$.convertCsvToData(dataResponse);\n            }\n            done.call($$, d);\n        });\n    };\n    c3_chart_internal_fn.convertXsvToData = function (xsv, parser) {\n        var rows = parser.parseRows(xsv),\n            d;\n        if (rows.length === 1) {\n            d = [{}];\n            rows[0].forEach(function (id) {\n                d[0][id] = null;\n            });\n        } else {\n            d = parser.parse(xsv);\n        }\n        return d;\n    };\n    c3_chart_internal_fn.convertCsvToData = function (csv) {\n        return this.convertXsvToData(csv, this.d3.csv);\n    };\n    c3_chart_internal_fn.convertTsvToData = function (tsv) {\n        return this.convertXsvToData(tsv, this.d3.tsv);\n    };\n    c3_chart_internal_fn.convertJsonToData = function (json, keys) {\n        var $$ = this,\n            new_rows = [],\n            targetKeys,\n            data;\n        if (keys) {\n            // when keys specified, json would be an array that includes objects\n            if (keys.x) {\n                targetKeys = keys.value.concat(keys.x);\n                $$.config.data_x = keys.x;\n            } else {\n                targetKeys = keys.value;\n            }\n            new_rows.push(targetKeys);\n            json.forEach(function (o) {\n                var new_row = [];\n                targetKeys.forEach(function (key) {\n                    // convert undefined to null because undefined data will be removed in convertDataToTargets()\n                    var v = $$.findValueInJson(o, key);\n                    if (isUndefined(v)) {\n                        v = null;\n                    }\n                    new_row.push(v);\n                });\n                new_rows.push(new_row);\n            });\n            data = $$.convertRowsToData(new_rows);\n        } else {\n            Object.keys(json).forEach(function (key) {\n                new_rows.push([key].concat(json[key]));\n            });\n            data = $$.convertColumnsToData(new_rows);\n        }\n        return data;\n    };\n    c3_chart_internal_fn.findValueInJson = function (object, path) {\n        path = path.replace(/\\[(\\w+)\\]/g, '.$1'); // convert indexes to properties (replace [] with .)\n        path = path.replace(/^\\./, ''); // strip a leading dot\n        var pathArray = path.split('.');\n        for (var i = 0; i < pathArray.length; ++i) {\n            var k = pathArray[i];\n            if (k in object) {\n                object = object[k];\n            } else {\n                return;\n            }\n        }\n        return object;\n    };\n\n    /**\n     * Converts the rows to normalized data.\n     * @param {any[][]} rows The row data\n     * @return {Object[]}\n     */\n    c3_chart_internal_fn.convertRowsToData = function (rows) {\n        var newRows = [];\n        var keys = rows[0];\n\n        for (var i = 1; i < rows.length; i++) {\n            var newRow = {};\n            for (var j = 0; j < rows[i].length; j++) {\n                if (isUndefined(rows[i][j])) {\n                    throw new Error(\"Source data is missing a component at (\" + i + \",\" + j + \")!\");\n                }\n                newRow[keys[j]] = rows[i][j];\n            }\n            newRows.push(newRow);\n        }\n        return newRows;\n    };\n\n    /**\n     * Converts the columns to normalized data.\n     * @param {any[][]} columns The column data\n     * @return {Object[]}\n     */\n    c3_chart_internal_fn.convertColumnsToData = function (columns) {\n        var newRows = [];\n\n        for (var i = 0; i < columns.length; i++) {\n            var key = columns[i][0];\n            for (var j = 1; j < columns[i].length; j++) {\n                if (isUndefined(newRows[j - 1])) {\n                    newRows[j - 1] = {};\n                }\n                if (isUndefined(columns[i][j])) {\n                    throw new Error(\"Source data is missing a component at (\" + i + \",\" + j + \")!\");\n                }\n                newRows[j - 1][key] = columns[i][j];\n            }\n        }\n\n        return newRows;\n    };\n\n    c3_chart_internal_fn.convertDataToTargets = function (data, appendXs) {\n        var $$ = this,\n            config = $$.config,\n            ids = $$.d3.keys(data[0]).filter($$.isNotX, $$),\n            xs = $$.d3.keys(data[0]).filter($$.isX, $$),\n            targets;\n\n        // save x for update data by load when custom x and c3.x API\n        ids.forEach(function (id) {\n            var xKey = $$.getXKey(id);\n\n            if ($$.isCustomX() || $$.isTimeSeries()) {\n                // if included in input data\n                if (xs.indexOf(xKey) >= 0) {\n                    $$.data.xs[id] = (appendXs && $$.data.xs[id] ? $$.data.xs[id] : []).concat(data.map(function (d) {\n                        return d[xKey];\n                    }).filter(isValue).map(function (rawX, i) {\n                        return $$.generateTargetX(rawX, id, i);\n                    }));\n                }\n                // if not included in input data, find from preloaded data of other id's x\n                else if (config.data_x) {\n                        $$.data.xs[id] = $$.getOtherTargetXs();\n                    }\n                    // if not included in input data, find from preloaded data\n                    else if (notEmpty(config.data_xs)) {\n                            $$.data.xs[id] = $$.getXValuesOfXKey(xKey, $$.data.targets);\n                        }\n                // MEMO: if no x included, use same x of current will be used\n            } else {\n                $$.data.xs[id] = data.map(function (d, i) {\n                    return i;\n                });\n            }\n        });\n\n        // check x is defined\n        ids.forEach(function (id) {\n            if (!$$.data.xs[id]) {\n                throw new Error('x is not defined for id = \"' + id + '\".');\n            }\n        });\n\n        // convert to target\n        targets = ids.map(function (id, index) {\n            var convertedId = config.data_idConverter(id);\n            return {\n                id: convertedId,\n                id_org: id,\n                values: data.map(function (d, i) {\n                    var xKey = $$.getXKey(id),\n                        rawX = d[xKey],\n                        value = d[id] !== null && !isNaN(d[id]) ? +d[id] : null,\n                        x;\n                    // use x as categories if custom x and categorized\n                    if ($$.isCustomX() && $$.isCategorized() && !isUndefined(rawX)) {\n                        if (index === 0 && i === 0) {\n                            config.axis_x_categories = [];\n                        }\n                        x = config.axis_x_categories.indexOf(rawX);\n                        if (x === -1) {\n                            x = config.axis_x_categories.length;\n                            config.axis_x_categories.push(rawX);\n                        }\n                    } else {\n                        x = $$.generateTargetX(rawX, id, i);\n                    }\n                    // mark as x = undefined if value is undefined and filter to remove after mapped\n                    if (isUndefined(d[id]) || $$.data.xs[id].length <= i) {\n                        x = undefined;\n                    }\n                    return { x: x, value: value, id: convertedId };\n                }).filter(function (v) {\n                    return isDefined(v.x);\n                })\n            };\n        });\n\n        // finish targets\n        targets.forEach(function (t) {\n            var i;\n            // sort values by its x\n            if (config.data_xSort) {\n                t.values = t.values.sort(function (v1, v2) {\n                    var x1 = v1.x || v1.x === 0 ? v1.x : Infinity,\n                        x2 = v2.x || v2.x === 0 ? v2.x : Infinity;\n                    return x1 - x2;\n                });\n            }\n            // indexing each value\n            i = 0;\n            t.values.forEach(function (v) {\n                v.index = i++;\n            });\n            // this needs to be sorted because its index and value.index is identical\n            $$.data.xs[t.id].sort(function (v1, v2) {\n                return v1 - v2;\n            });\n        });\n\n        // cache information about values\n        $$.hasNegativeValue = $$.hasNegativeValueInTargets(targets);\n        $$.hasPositiveValue = $$.hasPositiveValueInTargets(targets);\n\n        // set target types\n        if (config.data_type) {\n            $$.setTargetType($$.mapToIds(targets).filter(function (id) {\n                return !(id in config.data_types);\n            }), config.data_type);\n        }\n\n        // cache as original id keyed\n        targets.forEach(function (d) {\n            $$.addCache(d.id_org, d);\n        });\n\n        return targets;\n    };\n\n    c3_chart_internal_fn.isX = function (key) {\n        var $$ = this,\n            config = $$.config;\n        return config.data_x && key === config.data_x || notEmpty(config.data_xs) && hasValue(config.data_xs, key);\n    };\n    c3_chart_internal_fn.isNotX = function (key) {\n        return !this.isX(key);\n    };\n    c3_chart_internal_fn.getXKey = function (id) {\n        var $$ = this,\n            config = $$.config;\n        return config.data_x ? config.data_x : notEmpty(config.data_xs) ? config.data_xs[id] : null;\n    };\n    c3_chart_internal_fn.getXValuesOfXKey = function (key, targets) {\n        var $$ = this,\n            xValues,\n            ids = targets && notEmpty(targets) ? $$.mapToIds(targets) : [];\n        ids.forEach(function (id) {\n            if ($$.getXKey(id) === key) {\n                xValues = $$.data.xs[id];\n            }\n        });\n        return xValues;\n    };\n    c3_chart_internal_fn.getIndexByX = function (x) {\n        var $$ = this,\n            data = $$.filterByX($$.data.targets, x);\n        return data.length ? data[0].index : null;\n    };\n    c3_chart_internal_fn.getXValue = function (id, i) {\n        var $$ = this;\n        return id in $$.data.xs && $$.data.xs[id] && isValue($$.data.xs[id][i]) ? $$.data.xs[id][i] : i;\n    };\n    c3_chart_internal_fn.getOtherTargetXs = function () {\n        var $$ = this,\n            idsForX = Object.keys($$.data.xs);\n        return idsForX.length ? $$.data.xs[idsForX[0]] : null;\n    };\n    c3_chart_internal_fn.getOtherTargetX = function (index) {\n        var xs = this.getOtherTargetXs();\n        return xs && index < xs.length ? xs[index] : null;\n    };\n    c3_chart_internal_fn.addXs = function (xs) {\n        var $$ = this;\n        Object.keys(xs).forEach(function (id) {\n            $$.config.data_xs[id] = xs[id];\n        });\n    };\n    c3_chart_internal_fn.hasMultipleX = function (xs) {\n        return this.d3.set(Object.keys(xs).map(function (id) {\n            return xs[id];\n        })).size() > 1;\n    };\n    c3_chart_internal_fn.isMultipleX = function () {\n        return notEmpty(this.config.data_xs) || !this.config.data_xSort || this.hasType('scatter');\n    };\n    c3_chart_internal_fn.addName = function (data) {\n        var $$ = this,\n            name;\n        if (data) {\n            name = $$.config.data_names[data.id];\n            data.name = name !== undefined ? name : data.id;\n        }\n        return data;\n    };\n    c3_chart_internal_fn.getValueOnIndex = function (values, index) {\n        var valueOnIndex = values.filter(function (v) {\n            return v.index === index;\n        });\n        return valueOnIndex.length ? valueOnIndex[0] : null;\n    };\n    c3_chart_internal_fn.updateTargetX = function (targets, x) {\n        var $$ = this;\n        targets.forEach(function (t) {\n            t.values.forEach(function (v, i) {\n                v.x = $$.generateTargetX(x[i], t.id, i);\n            });\n            $$.data.xs[t.id] = x;\n        });\n    };\n    c3_chart_internal_fn.updateTargetXs = function (targets, xs) {\n        var $$ = this;\n        targets.forEach(function (t) {\n            if (xs[t.id]) {\n                $$.updateTargetX([t], xs[t.id]);\n            }\n        });\n    };\n    c3_chart_internal_fn.generateTargetX = function (rawX, id, index) {\n        var $$ = this,\n            x;\n        if ($$.isTimeSeries()) {\n            x = rawX ? $$.parseDate(rawX) : $$.parseDate($$.getXValue(id, index));\n        } else if ($$.isCustomX() && !$$.isCategorized()) {\n            x = isValue(rawX) ? +rawX : $$.getXValue(id, index);\n        } else {\n            x = index;\n        }\n        return x;\n    };\n    c3_chart_internal_fn.cloneTarget = function (target) {\n        return {\n            id: target.id,\n            id_org: target.id_org,\n            values: target.values.map(function (d) {\n                return { x: d.x, value: d.value, id: d.id };\n            })\n        };\n    };\n    c3_chart_internal_fn.updateXs = function () {\n        var $$ = this;\n        if ($$.data.targets.length) {\n            $$.xs = [];\n            $$.data.targets[0].values.forEach(function (v) {\n                $$.xs[v.index] = v.x;\n            });\n        }\n    };\n    c3_chart_internal_fn.getPrevX = function (i) {\n        var x = this.xs[i - 1];\n        return typeof x !== 'undefined' ? x : null;\n    };\n    c3_chart_internal_fn.getNextX = function (i) {\n        var x = this.xs[i + 1];\n        return typeof x !== 'undefined' ? x : null;\n    };\n    c3_chart_internal_fn.getMaxDataCount = function () {\n        var $$ = this;\n        return $$.d3.max($$.data.targets, function (t) {\n            return t.values.length;\n        });\n    };\n    c3_chart_internal_fn.getMaxDataCountTarget = function (targets) {\n        var length = targets.length,\n            max = 0,\n            maxTarget;\n        if (length > 1) {\n            targets.forEach(function (t) {\n                if (t.values.length > max) {\n                    maxTarget = t;\n                    max = t.values.length;\n                }\n            });\n        } else {\n            maxTarget = length ? targets[0] : null;\n        }\n        return maxTarget;\n    };\n    c3_chart_internal_fn.getEdgeX = function (targets) {\n        var $$ = this;\n        return !targets.length ? [0, 0] : [$$.d3.min(targets, function (t) {\n            return t.values[0].x;\n        }), $$.d3.max(targets, function (t) {\n            return t.values[t.values.length - 1].x;\n        })];\n    };\n    c3_chart_internal_fn.mapToIds = function (targets) {\n        return targets.map(function (d) {\n            return d.id;\n        });\n    };\n    c3_chart_internal_fn.mapToTargetIds = function (ids) {\n        var $$ = this;\n        return ids ? [].concat(ids) : $$.mapToIds($$.data.targets);\n    };\n    c3_chart_internal_fn.hasTarget = function (targets, id) {\n        var ids = this.mapToIds(targets),\n            i;\n        for (i = 0; i < ids.length; i++) {\n            if (ids[i] === id) {\n                return true;\n            }\n        }\n        return false;\n    };\n    c3_chart_internal_fn.isTargetToShow = function (targetId) {\n        return this.hiddenTargetIds.indexOf(targetId) < 0;\n    };\n    c3_chart_internal_fn.isLegendToShow = function (targetId) {\n        return this.hiddenLegendIds.indexOf(targetId) < 0;\n    };\n    c3_chart_internal_fn.filterTargetsToShow = function (targets) {\n        var $$ = this;\n        return targets.filter(function (t) {\n            return $$.isTargetToShow(t.id);\n        });\n    };\n    c3_chart_internal_fn.mapTargetsToUniqueXs = function (targets) {\n        var $$ = this;\n        var xs = $$.d3.set($$.d3.merge(targets.map(function (t) {\n            return t.values.map(function (v) {\n                return +v.x;\n            });\n        }))).values();\n        xs = $$.isTimeSeries() ? xs.map(function (x) {\n            return new Date(+x);\n        }) : xs.map(function (x) {\n            return +x;\n        });\n        return xs.sort(function (a, b) {\n            return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n        });\n    };\n    c3_chart_internal_fn.addHiddenTargetIds = function (targetIds) {\n        targetIds = targetIds instanceof Array ? targetIds : new Array(targetIds);\n        for (var i = 0; i < targetIds.length; i++) {\n            if (this.hiddenTargetIds.indexOf(targetIds[i]) < 0) {\n                this.hiddenTargetIds = this.hiddenTargetIds.concat(targetIds[i]);\n            }\n        }\n    };\n    c3_chart_internal_fn.removeHiddenTargetIds = function (targetIds) {\n        this.hiddenTargetIds = this.hiddenTargetIds.filter(function (id) {\n            return targetIds.indexOf(id) < 0;\n        });\n    };\n    c3_chart_internal_fn.addHiddenLegendIds = function (targetIds) {\n        targetIds = targetIds instanceof Array ? targetIds : new Array(targetIds);\n        for (var i = 0; i < targetIds.length; i++) {\n            if (this.hiddenLegendIds.indexOf(targetIds[i]) < 0) {\n                this.hiddenLegendIds = this.hiddenLegendIds.concat(targetIds[i]);\n            }\n        }\n    };\n    c3_chart_internal_fn.removeHiddenLegendIds = function (targetIds) {\n        this.hiddenLegendIds = this.hiddenLegendIds.filter(function (id) {\n            return targetIds.indexOf(id) < 0;\n        });\n    };\n    c3_chart_internal_fn.getValuesAsIdKeyed = function (targets) {\n        var ys = {};\n        targets.forEach(function (t) {\n            ys[t.id] = [];\n            t.values.forEach(function (v) {\n                ys[t.id].push(v.value);\n            });\n        });\n        return ys;\n    };\n    c3_chart_internal_fn.checkValueInTargets = function (targets, checker) {\n        var ids = Object.keys(targets),\n            i,\n            j,\n            values;\n        for (i = 0; i < ids.length; i++) {\n            values = targets[ids[i]].values;\n            for (j = 0; j < values.length; j++) {\n                if (checker(values[j].value)) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    c3_chart_internal_fn.hasNegativeValueInTargets = function (targets) {\n        return this.checkValueInTargets(targets, function (v) {\n            return v < 0;\n        });\n    };\n    c3_chart_internal_fn.hasPositiveValueInTargets = function (targets) {\n        return this.checkValueInTargets(targets, function (v) {\n            return v > 0;\n        });\n    };\n    c3_chart_internal_fn.isOrderDesc = function () {\n        var config = this.config;\n        return typeof config.data_order === 'string' && config.data_order.toLowerCase() === 'desc';\n    };\n    c3_chart_internal_fn.isOrderAsc = function () {\n        var config = this.config;\n        return typeof config.data_order === 'string' && config.data_order.toLowerCase() === 'asc';\n    };\n    c3_chart_internal_fn.getOrderFunction = function () {\n        var $$ = this,\n            config = $$.config,\n            orderAsc = $$.isOrderAsc(),\n            orderDesc = $$.isOrderDesc();\n        if (orderAsc || orderDesc) {\n            return function (t1, t2) {\n                var reducer = function reducer(p, c) {\n                    return p + Math.abs(c.value);\n                };\n                var t1Sum = t1.values.reduce(reducer, 0),\n                    t2Sum = t2.values.reduce(reducer, 0);\n                return orderDesc ? t2Sum - t1Sum : t1Sum - t2Sum;\n            };\n        } else if (isFunction(config.data_order)) {\n            return config.data_order;\n        } else if (isArray(config.data_order)) {\n            var order = config.data_order;\n            return function (t1, t2) {\n                return order.indexOf(t1.id) - order.indexOf(t2.id);\n            };\n        }\n    };\n    c3_chart_internal_fn.orderTargets = function (targets) {\n        var fct = this.getOrderFunction();\n        if (fct) {\n            targets.sort(fct);\n            if (this.isOrderAsc() || this.isOrderDesc()) {\n                targets.reverse();\n            }\n        }\n        return targets;\n    };\n    c3_chart_internal_fn.filterByX = function (targets, x) {\n        return this.d3.merge(targets.map(function (t) {\n            return t.values;\n        })).filter(function (v) {\n            return v.x - x === 0;\n        });\n    };\n    c3_chart_internal_fn.filterRemoveNull = function (data) {\n        return data.filter(function (d) {\n            return isValue(d.value);\n        });\n    };\n    c3_chart_internal_fn.filterByXDomain = function (targets, xDomain) {\n        return targets.map(function (t) {\n            return {\n                id: t.id,\n                id_org: t.id_org,\n                values: t.values.filter(function (v) {\n                    return xDomain[0] <= v.x && v.x <= xDomain[1];\n                })\n            };\n        });\n    };\n    c3_chart_internal_fn.hasDataLabel = function () {\n        var config = this.config;\n        if (typeof config.data_labels === 'boolean' && config.data_labels) {\n            return true;\n        } else if (_typeof(config.data_labels) === 'object' && notEmpty(config.data_labels)) {\n            return true;\n        }\n        return false;\n    };\n    c3_chart_internal_fn.getDataLabelLength = function (min, max, key) {\n        var $$ = this,\n            lengths = [0, 0],\n            paddingCoef = 1.3;\n        $$.selectChart.select('svg').selectAll('.dummy').data([min, max]).enter().append('text').text(function (d) {\n            return $$.dataLabelFormat(d.id)(d);\n        }).each(function (d, i) {\n            lengths[i] = this.getBoundingClientRect()[key] * paddingCoef;\n        }).remove();\n        return lengths;\n    };\n    c3_chart_internal_fn.isNoneArc = function (d) {\n        return this.hasTarget(this.data.targets, d.id);\n    }, c3_chart_internal_fn.isArc = function (d) {\n        return 'data' in d && this.hasTarget(this.data.targets, d.data.id);\n    };\n    c3_chart_internal_fn.findSameXOfValues = function (values, index) {\n        var i,\n            targetX = values[index].x,\n            sames = [];\n        for (i = index - 1; i >= 0; i--) {\n            if (targetX !== values[i].x) {\n                break;\n            }\n            sames.push(values[i]);\n        }\n        for (i = index; i < values.length; i++) {\n            if (targetX !== values[i].x) {\n                break;\n            }\n            sames.push(values[i]);\n        }\n        return sames;\n    };\n\n    c3_chart_internal_fn.findClosestFromTargets = function (targets, pos) {\n        var $$ = this,\n            candidates;\n\n        // map to array of closest points of each target\n        candidates = targets.map(function (target) {\n            return $$.findClosest(target.values, pos);\n        });\n\n        // decide closest point and return\n        return $$.findClosest(candidates, pos);\n    };\n    c3_chart_internal_fn.findClosest = function (values, pos) {\n        var $$ = this,\n            minDist = $$.config.point_sensitivity,\n            closest;\n\n        // find mouseovering bar\n        values.filter(function (v) {\n            return v && $$.isBarType(v.id);\n        }).forEach(function (v) {\n            var shape = $$.main.select('.' + CLASS.bars + $$.getTargetSelectorSuffix(v.id) + ' .' + CLASS.bar + '-' + v.index).node();\n            if (!closest && $$.isWithinBar(shape)) {\n                closest = v;\n            }\n        });\n\n        // find closest point from non-bar\n        values.filter(function (v) {\n            return v && !$$.isBarType(v.id);\n        }).forEach(function (v) {\n            var d = $$.dist(v, pos);\n            if (d < minDist) {\n                minDist = d;\n                closest = v;\n            }\n        });\n\n        return closest;\n    };\n    c3_chart_internal_fn.dist = function (data, pos) {\n        var $$ = this,\n            config = $$.config,\n            xIndex = config.axis_rotated ? 1 : 0,\n            yIndex = config.axis_rotated ? 0 : 1,\n            y = $$.circleY(data, data.index),\n            x = $$.x(data.x);\n        return Math.sqrt(Math.pow(x - pos[xIndex], 2) + Math.pow(y - pos[yIndex], 2));\n    };\n    c3_chart_internal_fn.convertValuesToStep = function (values) {\n        var converted = [].concat(values),\n            i;\n\n        if (!this.isCategorized()) {\n            return values;\n        }\n\n        for (i = values.length + 1; 0 < i; i--) {\n            converted[i] = converted[i - 1];\n        }\n\n        converted[0] = {\n            x: converted[0].x - 1,\n            value: converted[0].value,\n            id: converted[0].id\n        };\n        converted[values.length + 1] = {\n            x: converted[values.length].x + 1,\n            value: converted[values.length].value,\n            id: converted[values.length].id\n        };\n\n        return converted;\n    };\n    c3_chart_internal_fn.updateDataAttributes = function (name, attrs) {\n        var $$ = this,\n            config = $$.config,\n            current = config['data_' + name];\n        if (typeof attrs === 'undefined') {\n            return current;\n        }\n        Object.keys(attrs).forEach(function (id) {\n            current[id] = attrs[id];\n        });\n        $$.redraw({ withLegend: true });\n        return current;\n    };\n\n    c3_chart_internal_fn.load = function (targets, args) {\n        var $$ = this;\n        if (targets) {\n            // filter loading targets if needed\n            if (args.filter) {\n                targets = targets.filter(args.filter);\n            }\n            // set type if args.types || args.type specified\n            if (args.type || args.types) {\n                targets.forEach(function (t) {\n                    var type = args.types && args.types[t.id] ? args.types[t.id] : args.type;\n                    $$.setTargetType(t.id, type);\n                });\n            }\n            // Update/Add data\n            $$.data.targets.forEach(function (d) {\n                for (var i = 0; i < targets.length; i++) {\n                    if (d.id === targets[i].id) {\n                        d.values = targets[i].values;\n                        targets.splice(i, 1);\n                        break;\n                    }\n                }\n            });\n            $$.data.targets = $$.data.targets.concat(targets); // add remained\n        }\n\n        // Set targets\n        $$.updateTargets($$.data.targets);\n\n        // Redraw with new targets\n        $$.redraw({ withUpdateOrgXDomain: true, withUpdateXDomain: true, withLegend: true });\n\n        if (args.done) {\n            args.done();\n        }\n    };\n    c3_chart_internal_fn.loadFromArgs = function (args) {\n        var $$ = this;\n        if (args.data) {\n            $$.load($$.convertDataToTargets(args.data), args);\n        } else if (args.url) {\n            $$.convertUrlToData(args.url, args.mimeType, args.headers, args.keys, function (data) {\n                $$.load($$.convertDataToTargets(data), args);\n            });\n        } else if (args.json) {\n            $$.load($$.convertDataToTargets($$.convertJsonToData(args.json, args.keys)), args);\n        } else if (args.rows) {\n            $$.load($$.convertDataToTargets($$.convertRowsToData(args.rows)), args);\n        } else if (args.columns) {\n            $$.load($$.convertDataToTargets($$.convertColumnsToData(args.columns)), args);\n        } else {\n            $$.load(null, args);\n        }\n    };\n    c3_chart_internal_fn.unload = function (targetIds, done) {\n        var $$ = this;\n        if (!done) {\n            done = function done() {};\n        }\n        // filter existing target\n        targetIds = targetIds.filter(function (id) {\n            return $$.hasTarget($$.data.targets, id);\n        });\n        // If no target, call done and return\n        if (!targetIds || targetIds.length === 0) {\n            done();\n            return;\n        }\n        $$.svg.selectAll(targetIds.map(function (id) {\n            return $$.selectorTarget(id);\n        })).transition().style('opacity', 0).remove().call($$.endall, done);\n        targetIds.forEach(function (id) {\n            // Reset fadein for future load\n            $$.withoutFadeIn[id] = false;\n            // Remove target's elements\n            if ($$.legend) {\n                $$.legend.selectAll('.' + CLASS.legendItem + $$.getTargetSelectorSuffix(id)).remove();\n            }\n            // Remove target\n            $$.data.targets = $$.data.targets.filter(function (t) {\n                return t.id !== id;\n            });\n        });\n    };\n\n    c3_chart_internal_fn.getYDomainMin = function (targets) {\n        var $$ = this,\n            config = $$.config,\n            ids = $$.mapToIds(targets),\n            ys = $$.getValuesAsIdKeyed(targets),\n            j,\n            k,\n            baseId,\n            idsInGroup,\n            id,\n            hasNegativeValue;\n        if (config.data_groups.length > 0) {\n            hasNegativeValue = $$.hasNegativeValueInTargets(targets);\n            for (j = 0; j < config.data_groups.length; j++) {\n                // Determine baseId\n                idsInGroup = config.data_groups[j].filter(function (id) {\n                    return ids.indexOf(id) >= 0;\n                });\n                if (idsInGroup.length === 0) {\n                    continue;\n                }\n                baseId = idsInGroup[0];\n                // Consider negative values\n                if (hasNegativeValue && ys[baseId]) {\n                    ys[baseId].forEach(function (v, i) {\n                        ys[baseId][i] = v < 0 ? v : 0;\n                    });\n                }\n                // Compute min\n                for (k = 1; k < idsInGroup.length; k++) {\n                    id = idsInGroup[k];\n                    if (!ys[id]) {\n                        continue;\n                    }\n                    ys[id].forEach(function (v, i) {\n                        if ($$.axis.getId(id) === $$.axis.getId(baseId) && ys[baseId] && !(hasNegativeValue && +v > 0)) {\n                            ys[baseId][i] += +v;\n                        }\n                    });\n                }\n            }\n        }\n        return $$.d3.min(Object.keys(ys).map(function (key) {\n            return $$.d3.min(ys[key]);\n        }));\n    };\n    c3_chart_internal_fn.getYDomainMax = function (targets) {\n        var $$ = this,\n            config = $$.config,\n            ids = $$.mapToIds(targets),\n            ys = $$.getValuesAsIdKeyed(targets),\n            j,\n            k,\n            baseId,\n            idsInGroup,\n            id,\n            hasPositiveValue;\n        if (config.data_groups.length > 0) {\n            hasPositiveValue = $$.hasPositiveValueInTargets(targets);\n            for (j = 0; j < config.data_groups.length; j++) {\n                // Determine baseId\n                idsInGroup = config.data_groups[j].filter(function (id) {\n                    return ids.indexOf(id) >= 0;\n                });\n                if (idsInGroup.length === 0) {\n                    continue;\n                }\n                baseId = idsInGroup[0];\n                // Consider positive values\n                if (hasPositiveValue && ys[baseId]) {\n                    ys[baseId].forEach(function (v, i) {\n                        ys[baseId][i] = v > 0 ? v : 0;\n                    });\n                }\n                // Compute max\n                for (k = 1; k < idsInGroup.length; k++) {\n                    id = idsInGroup[k];\n                    if (!ys[id]) {\n                        continue;\n                    }\n                    ys[id].forEach(function (v, i) {\n                        if ($$.axis.getId(id) === $$.axis.getId(baseId) && ys[baseId] && !(hasPositiveValue && +v < 0)) {\n                            ys[baseId][i] += +v;\n                        }\n                    });\n                }\n            }\n        }\n        return $$.d3.max(Object.keys(ys).map(function (key) {\n            return $$.d3.max(ys[key]);\n        }));\n    };\n    c3_chart_internal_fn.getYDomain = function (targets, axisId, xDomain) {\n        var $$ = this,\n            config = $$.config,\n            targetsByAxisId = targets.filter(function (t) {\n            return $$.axis.getId(t.id) === axisId;\n        }),\n            yTargets = xDomain ? $$.filterByXDomain(targetsByAxisId, xDomain) : targetsByAxisId,\n            yMin = axisId === 'y2' ? config.axis_y2_min : config.axis_y_min,\n            yMax = axisId === 'y2' ? config.axis_y2_max : config.axis_y_max,\n            yDomainMin = $$.getYDomainMin(yTargets),\n            yDomainMax = $$.getYDomainMax(yTargets),\n            domain,\n            domainLength,\n            padding,\n            padding_top,\n            padding_bottom,\n            center = axisId === 'y2' ? config.axis_y2_center : config.axis_y_center,\n            yDomainAbs,\n            lengths,\n            diff,\n            ratio,\n            isAllPositive,\n            isAllNegative,\n            isZeroBased = $$.hasType('bar', yTargets) && config.bar_zerobased || $$.hasType('area', yTargets) && config.area_zerobased,\n            isInverted = axisId === 'y2' ? config.axis_y2_inverted : config.axis_y_inverted,\n            showHorizontalDataLabel = $$.hasDataLabel() && config.axis_rotated,\n            showVerticalDataLabel = $$.hasDataLabel() && !config.axis_rotated;\n\n        // MEMO: avoid inverting domain unexpectedly\n        yDomainMin = isValue(yMin) ? yMin : isValue(yMax) ? yDomainMin < yMax ? yDomainMin : yMax - 10 : yDomainMin;\n        yDomainMax = isValue(yMax) ? yMax : isValue(yMin) ? yMin < yDomainMax ? yDomainMax : yMin + 10 : yDomainMax;\n\n        if (yTargets.length === 0) {\n            // use current domain if target of axisId is none\n            return axisId === 'y2' ? $$.y2.domain() : $$.y.domain();\n        }\n        if (isNaN(yDomainMin)) {\n            // set minimum to zero when not number\n            yDomainMin = 0;\n        }\n        if (isNaN(yDomainMax)) {\n            // set maximum to have same value as yDomainMin\n            yDomainMax = yDomainMin;\n        }\n        if (yDomainMin === yDomainMax) {\n            yDomainMin < 0 ? yDomainMax = 0 : yDomainMin = 0;\n        }\n        isAllPositive = yDomainMin >= 0 && yDomainMax >= 0;\n        isAllNegative = yDomainMin <= 0 && yDomainMax <= 0;\n\n        // Cancel zerobased if axis_*_min / axis_*_max specified\n        if (isValue(yMin) && isAllPositive || isValue(yMax) && isAllNegative) {\n            isZeroBased = false;\n        }\n\n        // Bar/Area chart should be 0-based if all positive|negative\n        if (isZeroBased) {\n            if (isAllPositive) {\n                yDomainMin = 0;\n            }\n            if (isAllNegative) {\n                yDomainMax = 0;\n            }\n        }\n\n        domainLength = Math.abs(yDomainMax - yDomainMin);\n        padding = padding_top = padding_bottom = domainLength * 0.1;\n\n        if (typeof center !== 'undefined') {\n            yDomainAbs = Math.max(Math.abs(yDomainMin), Math.abs(yDomainMax));\n            yDomainMax = center + yDomainAbs;\n            yDomainMin = center - yDomainAbs;\n        }\n        // add padding for data label\n        if (showHorizontalDataLabel) {\n            lengths = $$.getDataLabelLength(yDomainMin, yDomainMax, 'width');\n            diff = diffDomain($$.y.range());\n            ratio = [lengths[0] / diff, lengths[1] / diff];\n            padding_top += domainLength * (ratio[1] / (1 - ratio[0] - ratio[1]));\n            padding_bottom += domainLength * (ratio[0] / (1 - ratio[0] - ratio[1]));\n        } else if (showVerticalDataLabel) {\n            lengths = $$.getDataLabelLength(yDomainMin, yDomainMax, 'height');\n            padding_top += $$.axis.convertPixelsToAxisPadding(lengths[1], domainLength);\n            padding_bottom += $$.axis.convertPixelsToAxisPadding(lengths[0], domainLength);\n        }\n        if (axisId === 'y' && notEmpty(config.axis_y_padding)) {\n            padding_top = $$.axis.getPadding(config.axis_y_padding, 'top', padding_top, domainLength);\n            padding_bottom = $$.axis.getPadding(config.axis_y_padding, 'bottom', padding_bottom, domainLength);\n        }\n        if (axisId === 'y2' && notEmpty(config.axis_y2_padding)) {\n            padding_top = $$.axis.getPadding(config.axis_y2_padding, 'top', padding_top, domainLength);\n            padding_bottom = $$.axis.getPadding(config.axis_y2_padding, 'bottom', padding_bottom, domainLength);\n        }\n        // Bar/Area chart should be 0-based if all positive|negative\n        if (isZeroBased) {\n            if (isAllPositive) {\n                padding_bottom = yDomainMin;\n            }\n            if (isAllNegative) {\n                padding_top = -yDomainMax;\n            }\n        }\n        domain = [yDomainMin - padding_bottom, yDomainMax + padding_top];\n        return isInverted ? domain.reverse() : domain;\n    };\n    c3_chart_internal_fn.getXDomainMin = function (targets) {\n        var $$ = this,\n            config = $$.config;\n        return isDefined(config.axis_x_min) ? $$.isTimeSeries() ? this.parseDate(config.axis_x_min) : config.axis_x_min : $$.d3.min(targets, function (t) {\n            return $$.d3.min(t.values, function (v) {\n                return v.x;\n            });\n        });\n    };\n    c3_chart_internal_fn.getXDomainMax = function (targets) {\n        var $$ = this,\n            config = $$.config;\n        return isDefined(config.axis_x_max) ? $$.isTimeSeries() ? this.parseDate(config.axis_x_max) : config.axis_x_max : $$.d3.max(targets, function (t) {\n            return $$.d3.max(t.values, function (v) {\n                return v.x;\n            });\n        });\n    };\n    c3_chart_internal_fn.getXDomainPadding = function (domain) {\n        var $$ = this,\n            config = $$.config,\n            diff = domain[1] - domain[0],\n            maxDataCount,\n            padding,\n            paddingLeft,\n            paddingRight;\n        if ($$.isCategorized()) {\n            padding = 0;\n        } else if ($$.hasType('bar')) {\n            maxDataCount = $$.getMaxDataCount();\n            padding = maxDataCount > 1 ? diff / (maxDataCount - 1) / 2 : 0.5;\n        } else {\n            padding = diff * 0.01;\n        }\n        if (_typeof(config.axis_x_padding) === 'object' && notEmpty(config.axis_x_padding)) {\n            paddingLeft = isValue(config.axis_x_padding.left) ? config.axis_x_padding.left : padding;\n            paddingRight = isValue(config.axis_x_padding.right) ? config.axis_x_padding.right : padding;\n        } else if (typeof config.axis_x_padding === 'number') {\n            paddingLeft = paddingRight = config.axis_x_padding;\n        } else {\n            paddingLeft = paddingRight = padding;\n        }\n        return { left: paddingLeft, right: paddingRight };\n    };\n    c3_chart_internal_fn.getXDomain = function (targets) {\n        var $$ = this,\n            xDomain = [$$.getXDomainMin(targets), $$.getXDomainMax(targets)],\n            firstX = xDomain[0],\n            lastX = xDomain[1],\n            padding = $$.getXDomainPadding(xDomain),\n            min = 0,\n            max = 0;\n        // show center of x domain if min and max are the same\n        if (firstX - lastX === 0 && !$$.isCategorized()) {\n            if ($$.isTimeSeries()) {\n                firstX = new Date(firstX.getTime() * 0.5);\n                lastX = new Date(lastX.getTime() * 1.5);\n            } else {\n                firstX = firstX === 0 ? 1 : firstX * 0.5;\n                lastX = lastX === 0 ? -1 : lastX * 1.5;\n            }\n        }\n        if (firstX || firstX === 0) {\n            min = $$.isTimeSeries() ? new Date(firstX.getTime() - padding.left) : firstX - padding.left;\n        }\n        if (lastX || lastX === 0) {\n            max = $$.isTimeSeries() ? new Date(lastX.getTime() + padding.right) : lastX + padding.right;\n        }\n        return [min, max];\n    };\n    c3_chart_internal_fn.updateXDomain = function (targets, withUpdateXDomain, withUpdateOrgXDomain, withTrim, domain) {\n        var $$ = this,\n            config = $$.config;\n\n        if (withUpdateOrgXDomain) {\n            $$.x.domain(domain ? domain : $$.d3.extent($$.getXDomain(targets)));\n            $$.orgXDomain = $$.x.domain();\n            if (config.zoom_enabled) {\n                $$.zoom.scale($$.x).updateScaleExtent();\n            }\n            $$.subX.domain($$.x.domain());\n            if ($$.brush) {\n                $$.brush.scale($$.subX);\n            }\n        }\n        if (withUpdateXDomain) {\n            $$.x.domain(domain ? domain : !$$.brush || $$.brush.empty() ? $$.orgXDomain : $$.brush.extent());\n            if (config.zoom_enabled) {\n                $$.zoom.scale($$.x).updateScaleExtent();\n            }\n        }\n\n        // Trim domain when too big by zoom mousemove event\n        if (withTrim) {\n            $$.x.domain($$.trimXDomain($$.x.orgDomain()));\n        }\n\n        return $$.x.domain();\n    };\n    c3_chart_internal_fn.trimXDomain = function (domain) {\n        var zoomDomain = this.getZoomDomain(),\n            min = zoomDomain[0],\n            max = zoomDomain[1];\n        if (domain[0] <= min) {\n            domain[1] = +domain[1] + (min - domain[0]);\n            domain[0] = min;\n        }\n        if (max <= domain[1]) {\n            domain[0] = +domain[0] - (domain[1] - max);\n            domain[1] = max;\n        }\n        return domain;\n    };\n\n    c3_chart_internal_fn.drag = function (mouse) {\n        var $$ = this,\n            config = $$.config,\n            main = $$.main,\n            d3 = $$.d3;\n        var sx, sy, mx, my, minX, maxX, minY, maxY;\n\n        if ($$.hasArcType()) {\n            return;\n        }\n        if (!config.data_selection_enabled) {\n            return;\n        } // do nothing if not selectable\n        if (config.zoom_enabled && !$$.zoom.altDomain) {\n            return;\n        } // skip if zoomable because of conflict drag dehavior\n        if (!config.data_selection_multiple) {\n            return;\n        } // skip when single selection because drag is used for multiple selection\n\n        sx = $$.dragStart[0];\n        sy = $$.dragStart[1];\n        mx = mouse[0];\n        my = mouse[1];\n        minX = Math.min(sx, mx);\n        maxX = Math.max(sx, mx);\n        minY = config.data_selection_grouped ? $$.margin.top : Math.min(sy, my);\n        maxY = config.data_selection_grouped ? $$.height : Math.max(sy, my);\n\n        main.select('.' + CLASS.dragarea).attr('x', minX).attr('y', minY).attr('width', maxX - minX).attr('height', maxY - minY);\n        // TODO: binary search when multiple xs\n        main.selectAll('.' + CLASS.shapes).selectAll('.' + CLASS.shape).filter(function (d) {\n            return config.data_selection_isselectable(d);\n        }).each(function (d, i) {\n            var shape = d3.select(this),\n                isSelected = shape.classed(CLASS.SELECTED),\n                isIncluded = shape.classed(CLASS.INCLUDED),\n                _x,\n                _y,\n                _w,\n                _h,\n                toggle,\n                isWithin = false,\n                box;\n            if (shape.classed(CLASS.circle)) {\n                _x = shape.attr(\"cx\") * 1;\n                _y = shape.attr(\"cy\") * 1;\n                toggle = $$.togglePoint;\n                isWithin = minX < _x && _x < maxX && minY < _y && _y < maxY;\n            } else if (shape.classed(CLASS.bar)) {\n                box = getPathBox(this);\n                _x = box.x;\n                _y = box.y;\n                _w = box.width;\n                _h = box.height;\n                toggle = $$.togglePath;\n                isWithin = !(maxX < _x || _x + _w < minX) && !(maxY < _y || _y + _h < minY);\n            } else {\n                // line/area selection not supported yet\n                return;\n            }\n            if (isWithin ^ isIncluded) {\n                shape.classed(CLASS.INCLUDED, !isIncluded);\n                // TODO: included/unincluded callback here\n                shape.classed(CLASS.SELECTED, !isSelected);\n                toggle.call($$, !isSelected, shape, d, i);\n            }\n        });\n    };\n\n    c3_chart_internal_fn.dragstart = function (mouse) {\n        var $$ = this,\n            config = $$.config;\n        if ($$.hasArcType()) {\n            return;\n        }\n        if (!config.data_selection_enabled) {\n            return;\n        } // do nothing if not selectable\n        $$.dragStart = mouse;\n        $$.main.select('.' + CLASS.chart).append('rect').attr('class', CLASS.dragarea).style('opacity', 0.1);\n        $$.dragging = true;\n    };\n\n    c3_chart_internal_fn.dragend = function () {\n        var $$ = this,\n            config = $$.config;\n        if ($$.hasArcType()) {\n            return;\n        }\n        if (!config.data_selection_enabled) {\n            return;\n        } // do nothing if not selectable\n        $$.main.select('.' + CLASS.dragarea).transition().duration(100).style('opacity', 0).remove();\n        $$.main.selectAll('.' + CLASS.shape).classed(CLASS.INCLUDED, false);\n        $$.dragging = false;\n    };\n\n    c3_chart_internal_fn.getYFormat = function (forArc) {\n        var $$ = this,\n            formatForY = forArc && !$$.hasType('gauge') ? $$.defaultArcValueFormat : $$.yFormat,\n            formatForY2 = forArc && !$$.hasType('gauge') ? $$.defaultArcValueFormat : $$.y2Format;\n        return function (v, ratio, id) {\n            var format = $$.axis.getId(id) === 'y2' ? formatForY2 : formatForY;\n            return format.call($$, v, ratio);\n        };\n    };\n    c3_chart_internal_fn.yFormat = function (v) {\n        var $$ = this,\n            config = $$.config,\n            format = config.axis_y_tick_format ? config.axis_y_tick_format : $$.defaultValueFormat;\n        return format(v);\n    };\n    c3_chart_internal_fn.y2Format = function (v) {\n        var $$ = this,\n            config = $$.config,\n            format = config.axis_y2_tick_format ? config.axis_y2_tick_format : $$.defaultValueFormat;\n        return format(v);\n    };\n    c3_chart_internal_fn.defaultValueFormat = function (v) {\n        return isValue(v) ? +v : \"\";\n    };\n    c3_chart_internal_fn.defaultArcValueFormat = function (v, ratio) {\n        return (ratio * 100).toFixed(1) + '%';\n    };\n    c3_chart_internal_fn.dataLabelFormat = function (targetId) {\n        var $$ = this,\n            data_labels = $$.config.data_labels,\n            format,\n            defaultFormat = function defaultFormat(v) {\n            return isValue(v) ? +v : \"\";\n        };\n        // find format according to axis id\n        if (typeof data_labels.format === 'function') {\n            format = data_labels.format;\n        } else if (_typeof(data_labels.format) === 'object') {\n            if (data_labels.format[targetId]) {\n                format = data_labels.format[targetId] === true ? defaultFormat : data_labels.format[targetId];\n            } else {\n                format = function format() {\n                    return '';\n                };\n            }\n        } else {\n            format = defaultFormat;\n        }\n        return format;\n    };\n\n    c3_chart_internal_fn.initGrid = function () {\n        var $$ = this,\n            config = $$.config,\n            d3 = $$.d3;\n        $$.grid = $$.main.append('g').attr(\"clip-path\", $$.clipPathForGrid).attr('class', CLASS.grid);\n        if (config.grid_x_show) {\n            $$.grid.append(\"g\").attr(\"class\", CLASS.xgrids);\n        }\n        if (config.grid_y_show) {\n            $$.grid.append('g').attr('class', CLASS.ygrids);\n        }\n        if (config.grid_focus_show) {\n            $$.grid.append('g').attr(\"class\", CLASS.xgridFocus).append('line').attr('class', CLASS.xgridFocus);\n        }\n        $$.xgrid = d3.selectAll([]);\n        if (!config.grid_lines_front) {\n            $$.initGridLines();\n        }\n    };\n    c3_chart_internal_fn.initGridLines = function () {\n        var $$ = this,\n            d3 = $$.d3;\n        $$.gridLines = $$.main.append('g').attr(\"clip-path\", $$.clipPathForGrid).attr('class', CLASS.grid + ' ' + CLASS.gridLines);\n        $$.gridLines.append('g').attr(\"class\", CLASS.xgridLines);\n        $$.gridLines.append('g').attr('class', CLASS.ygridLines);\n        $$.xgridLines = d3.selectAll([]);\n    };\n    c3_chart_internal_fn.updateXGrid = function (withoutUpdate) {\n        var $$ = this,\n            config = $$.config,\n            d3 = $$.d3,\n            xgridData = $$.generateGridData(config.grid_x_type, $$.x),\n            tickOffset = $$.isCategorized() ? $$.xAxis.tickOffset() : 0;\n\n        $$.xgridAttr = config.axis_rotated ? {\n            'x1': 0,\n            'x2': $$.width,\n            'y1': function y1(d) {\n                return $$.x(d) - tickOffset;\n            },\n            'y2': function y2(d) {\n                return $$.x(d) - tickOffset;\n            }\n        } : {\n            'x1': function x1(d) {\n                return $$.x(d) + tickOffset;\n            },\n            'x2': function x2(d) {\n                return $$.x(d) + tickOffset;\n            },\n            'y1': 0,\n            'y2': $$.height\n        };\n\n        $$.xgrid = $$.main.select('.' + CLASS.xgrids).selectAll('.' + CLASS.xgrid).data(xgridData);\n        $$.xgrid.enter().append('line').attr(\"class\", CLASS.xgrid);\n        if (!withoutUpdate) {\n            $$.xgrid.attr($$.xgridAttr).style(\"opacity\", function () {\n                return +d3.select(this).attr(config.axis_rotated ? 'y1' : 'x1') === (config.axis_rotated ? $$.height : 0) ? 0 : 1;\n            });\n        }\n        $$.xgrid.exit().remove();\n    };\n\n    c3_chart_internal_fn.updateYGrid = function () {\n        var $$ = this,\n            config = $$.config,\n            gridValues = $$.yAxis.tickValues() || $$.y.ticks(config.grid_y_ticks);\n        $$.ygrid = $$.main.select('.' + CLASS.ygrids).selectAll('.' + CLASS.ygrid).data(gridValues);\n        $$.ygrid.enter().append('line').attr('class', CLASS.ygrid);\n        $$.ygrid.attr(\"x1\", config.axis_rotated ? $$.y : 0).attr(\"x2\", config.axis_rotated ? $$.y : $$.width).attr(\"y1\", config.axis_rotated ? 0 : $$.y).attr(\"y2\", config.axis_rotated ? $$.height : $$.y);\n        $$.ygrid.exit().remove();\n        $$.smoothLines($$.ygrid, 'grid');\n    };\n\n    c3_chart_internal_fn.gridTextAnchor = function (d) {\n        return d.position ? d.position : \"end\";\n    };\n    c3_chart_internal_fn.gridTextDx = function (d) {\n        return d.position === 'start' ? 4 : d.position === 'middle' ? 0 : -4;\n    };\n    c3_chart_internal_fn.xGridTextX = function (d) {\n        return d.position === 'start' ? -this.height : d.position === 'middle' ? -this.height / 2 : 0;\n    };\n    c3_chart_internal_fn.yGridTextX = function (d) {\n        return d.position === 'start' ? 0 : d.position === 'middle' ? this.width / 2 : this.width;\n    };\n    c3_chart_internal_fn.updateGrid = function (duration) {\n        var $$ = this,\n            main = $$.main,\n            config = $$.config,\n            xgridLine,\n            ygridLine,\n            yv;\n\n        // hide if arc type\n        $$.grid.style('visibility', $$.hasArcType() ? 'hidden' : 'visible');\n\n        main.select('line.' + CLASS.xgridFocus).style(\"visibility\", \"hidden\");\n        if (config.grid_x_show) {\n            $$.updateXGrid();\n        }\n        $$.xgridLines = main.select('.' + CLASS.xgridLines).selectAll('.' + CLASS.xgridLine).data(config.grid_x_lines);\n        // enter\n        xgridLine = $$.xgridLines.enter().append('g').attr(\"class\", function (d) {\n            return CLASS.xgridLine + (d['class'] ? ' ' + d['class'] : '');\n        });\n        xgridLine.append('line').style(\"opacity\", 0);\n        xgridLine.append('text').attr(\"text-anchor\", $$.gridTextAnchor).attr(\"transform\", config.axis_rotated ? \"\" : \"rotate(-90)\").attr('dx', $$.gridTextDx).attr('dy', -5).style(\"opacity\", 0);\n        // udpate\n        // done in d3.transition() of the end of this function\n        // exit\n        $$.xgridLines.exit().transition().duration(duration).style(\"opacity\", 0).remove();\n\n        // Y-Grid\n        if (config.grid_y_show) {\n            $$.updateYGrid();\n        }\n        $$.ygridLines = main.select('.' + CLASS.ygridLines).selectAll('.' + CLASS.ygridLine).data(config.grid_y_lines);\n        // enter\n        ygridLine = $$.ygridLines.enter().append('g').attr(\"class\", function (d) {\n            return CLASS.ygridLine + (d['class'] ? ' ' + d['class'] : '');\n        });\n        ygridLine.append('line').style(\"opacity\", 0);\n        ygridLine.append('text').attr(\"text-anchor\", $$.gridTextAnchor).attr(\"transform\", config.axis_rotated ? \"rotate(-90)\" : \"\").attr('dx', $$.gridTextDx).attr('dy', -5).style(\"opacity\", 0);\n        // update\n        yv = $$.yv.bind($$);\n        $$.ygridLines.select('line').transition().duration(duration).attr(\"x1\", config.axis_rotated ? yv : 0).attr(\"x2\", config.axis_rotated ? yv : $$.width).attr(\"y1\", config.axis_rotated ? 0 : yv).attr(\"y2\", config.axis_rotated ? $$.height : yv).style(\"opacity\", 1);\n        $$.ygridLines.select('text').transition().duration(duration).attr(\"x\", config.axis_rotated ? $$.xGridTextX.bind($$) : $$.yGridTextX.bind($$)).attr(\"y\", yv).text(function (d) {\n            return d.text;\n        }).style(\"opacity\", 1);\n        // exit\n        $$.ygridLines.exit().transition().duration(duration).style(\"opacity\", 0).remove();\n    };\n    c3_chart_internal_fn.redrawGrid = function (withTransition) {\n        var $$ = this,\n            config = $$.config,\n            xv = $$.xv.bind($$),\n            lines = $$.xgridLines.select('line'),\n            texts = $$.xgridLines.select('text');\n        return [(withTransition ? lines.transition() : lines).attr(\"x1\", config.axis_rotated ? 0 : xv).attr(\"x2\", config.axis_rotated ? $$.width : xv).attr(\"y1\", config.axis_rotated ? xv : 0).attr(\"y2\", config.axis_rotated ? xv : $$.height).style(\"opacity\", 1), (withTransition ? texts.transition() : texts).attr(\"x\", config.axis_rotated ? $$.yGridTextX.bind($$) : $$.xGridTextX.bind($$)).attr(\"y\", xv).text(function (d) {\n            return d.text;\n        }).style(\"opacity\", 1)];\n    };\n    c3_chart_internal_fn.showXGridFocus = function (selectedData) {\n        var $$ = this,\n            config = $$.config,\n            dataToShow = selectedData.filter(function (d) {\n            return d && isValue(d.value);\n        }),\n            focusEl = $$.main.selectAll('line.' + CLASS.xgridFocus),\n            xx = $$.xx.bind($$);\n        if (!config.tooltip_show) {\n            return;\n        }\n        // Hide when scatter plot exists\n        if ($$.hasType('scatter') || $$.hasArcType()) {\n            return;\n        }\n        focusEl.style(\"visibility\", \"visible\").data([dataToShow[0]]).attr(config.axis_rotated ? 'y1' : 'x1', xx).attr(config.axis_rotated ? 'y2' : 'x2', xx);\n        $$.smoothLines(focusEl, 'grid');\n    };\n    c3_chart_internal_fn.hideXGridFocus = function () {\n        this.main.select('line.' + CLASS.xgridFocus).style(\"visibility\", \"hidden\");\n    };\n    c3_chart_internal_fn.updateXgridFocus = function () {\n        var $$ = this,\n            config = $$.config;\n        $$.main.select('line.' + CLASS.xgridFocus).attr(\"x1\", config.axis_rotated ? 0 : -10).attr(\"x2\", config.axis_rotated ? $$.width : -10).attr(\"y1\", config.axis_rotated ? -10 : 0).attr(\"y2\", config.axis_rotated ? -10 : $$.height);\n    };\n    c3_chart_internal_fn.generateGridData = function (type, scale) {\n        var $$ = this,\n            gridData = [],\n            xDomain,\n            firstYear,\n            lastYear,\n            i,\n            tickNum = $$.main.select(\".\" + CLASS.axisX).selectAll('.tick').size();\n        if (type === 'year') {\n            xDomain = $$.getXDomain();\n            firstYear = xDomain[0].getFullYear();\n            lastYear = xDomain[1].getFullYear();\n            for (i = firstYear; i <= lastYear; i++) {\n                gridData.push(new Date(i + '-01-01 00:00:00'));\n            }\n        } else {\n            gridData = scale.ticks(10);\n            if (gridData.length > tickNum) {\n                // use only int\n                gridData = gridData.filter(function (d) {\n                    return (\"\" + d).indexOf('.') < 0;\n                });\n            }\n        }\n        return gridData;\n    };\n    c3_chart_internal_fn.getGridFilterToRemove = function (params) {\n        return params ? function (line) {\n            var found = false;\n            [].concat(params).forEach(function (param) {\n                if ('value' in param && line.value === param.value || 'class' in param && line['class'] === param['class']) {\n                    found = true;\n                }\n            });\n            return found;\n        } : function () {\n            return true;\n        };\n    };\n    c3_chart_internal_fn.removeGridLines = function (params, forX) {\n        var $$ = this,\n            config = $$.config,\n            toRemove = $$.getGridFilterToRemove(params),\n            toShow = function toShow(line) {\n            return !toRemove(line);\n        },\n            classLines = forX ? CLASS.xgridLines : CLASS.ygridLines,\n            classLine = forX ? CLASS.xgridLine : CLASS.ygridLine;\n        $$.main.select('.' + classLines).selectAll('.' + classLine).filter(toRemove).transition().duration(config.transition_duration).style('opacity', 0).remove();\n        if (forX) {\n            config.grid_x_lines = config.grid_x_lines.filter(toShow);\n        } else {\n            config.grid_y_lines = config.grid_y_lines.filter(toShow);\n        }\n    };\n\n    c3_chart_internal_fn.initEventRect = function () {\n        var $$ = this;\n        $$.main.select('.' + CLASS.chart).append(\"g\").attr(\"class\", CLASS.eventRects).style('fill-opacity', 0);\n    };\n    c3_chart_internal_fn.redrawEventRect = function () {\n        var $$ = this,\n            config = $$.config,\n            eventRectUpdate,\n            maxDataCountTarget,\n            isMultipleX = $$.isMultipleX();\n\n        // rects for mouseover\n        var eventRects = $$.main.select('.' + CLASS.eventRects).style('cursor', config.zoom_enabled ? config.axis_rotated ? 'ns-resize' : 'ew-resize' : null).classed(CLASS.eventRectsMultiple, isMultipleX).classed(CLASS.eventRectsSingle, !isMultipleX);\n\n        // clear old rects\n        eventRects.selectAll('.' + CLASS.eventRect).remove();\n\n        // open as public variable\n        $$.eventRect = eventRects.selectAll('.' + CLASS.eventRect);\n\n        if (isMultipleX) {\n            eventRectUpdate = $$.eventRect.data([0]);\n            // enter : only one rect will be added\n            $$.generateEventRectsForMultipleXs(eventRectUpdate.enter());\n            // update\n            $$.updateEventRect(eventRectUpdate);\n            // exit : not needed because always only one rect exists\n        } else {\n            // Set data and update $$.eventRect\n            maxDataCountTarget = $$.getMaxDataCountTarget($$.data.targets);\n            eventRects.datum(maxDataCountTarget ? maxDataCountTarget.values : []);\n            $$.eventRect = eventRects.selectAll('.' + CLASS.eventRect);\n            eventRectUpdate = $$.eventRect.data(function (d) {\n                return d;\n            });\n            // enter\n            $$.generateEventRectsForSingleX(eventRectUpdate.enter());\n            // update\n            $$.updateEventRect(eventRectUpdate);\n            // exit\n            eventRectUpdate.exit().remove();\n        }\n    };\n    c3_chart_internal_fn.updateEventRect = function (eventRectUpdate) {\n        var $$ = this,\n            config = $$.config,\n            x,\n            y,\n            w,\n            h,\n            rectW,\n            rectX;\n\n        // set update selection if null\n        eventRectUpdate = eventRectUpdate || $$.eventRect.data(function (d) {\n            return d;\n        });\n\n        if ($$.isMultipleX()) {\n            // TODO: rotated not supported yet\n            x = 0;\n            y = 0;\n            w = $$.width;\n            h = $$.height;\n        } else {\n            if (($$.isCustomX() || $$.isTimeSeries()) && !$$.isCategorized()) {\n\n                // update index for x that is used by prevX and nextX\n                $$.updateXs();\n\n                rectW = function rectW(d) {\n                    var prevX = $$.getPrevX(d.index),\n                        nextX = $$.getNextX(d.index);\n\n                    // if there this is a single data point make the eventRect full width (or height)\n                    if (prevX === null && nextX === null) {\n                        return config.axis_rotated ? $$.height : $$.width;\n                    }\n\n                    if (prevX === null) {\n                        prevX = $$.x.domain()[0];\n                    }\n                    if (nextX === null) {\n                        nextX = $$.x.domain()[1];\n                    }\n\n                    return Math.max(0, ($$.x(nextX) - $$.x(prevX)) / 2);\n                };\n                rectX = function rectX(d) {\n                    var prevX = $$.getPrevX(d.index),\n                        nextX = $$.getNextX(d.index),\n                        thisX = $$.data.xs[d.id][d.index];\n\n                    // if there this is a single data point position the eventRect at 0\n                    if (prevX === null && nextX === null) {\n                        return 0;\n                    }\n\n                    if (prevX === null) {\n                        prevX = $$.x.domain()[0];\n                    }\n\n                    return ($$.x(thisX) + $$.x(prevX)) / 2;\n                };\n            } else {\n                rectW = $$.getEventRectWidth();\n                rectX = function rectX(d) {\n                    return $$.x(d.x) - rectW / 2;\n                };\n            }\n            x = config.axis_rotated ? 0 : rectX;\n            y = config.axis_rotated ? rectX : 0;\n            w = config.axis_rotated ? $$.width : rectW;\n            h = config.axis_rotated ? rectW : $$.height;\n        }\n\n        eventRectUpdate.attr('class', $$.classEvent.bind($$)).attr(\"x\", x).attr(\"y\", y).attr(\"width\", w).attr(\"height\", h);\n    };\n    c3_chart_internal_fn.generateEventRectsForSingleX = function (eventRectEnter) {\n        var $$ = this,\n            d3 = $$.d3,\n            config = $$.config;\n        eventRectEnter.append(\"rect\").attr(\"class\", $$.classEvent.bind($$)).style(\"cursor\", config.data_selection_enabled && config.data_selection_grouped ? \"pointer\" : null).on('mouseover', function (d) {\n            var index = d.index;\n\n            if ($$.dragging || $$.flowing) {\n                return;\n            } // do nothing while dragging/flowing\n            if ($$.hasArcType()) {\n                return;\n            }\n\n            // Expand shapes for selection\n            if (config.point_focus_expand_enabled) {\n                $$.expandCircles(index, null, true);\n            }\n            $$.expandBars(index, null, true);\n\n            // Call event handler\n            $$.main.selectAll('.' + CLASS.shape + '-' + index).each(function (d) {\n                config.data_onmouseover.call($$.api, d);\n            });\n        }).on('mouseout', function (d) {\n            var index = d.index;\n            if (!$$.config) {\n                return;\n            } // chart is destroyed\n            if ($$.hasArcType()) {\n                return;\n            }\n            $$.hideXGridFocus();\n            $$.hideTooltip();\n            // Undo expanded shapes\n            $$.unexpandCircles();\n            $$.unexpandBars();\n            // Call event handler\n            $$.main.selectAll('.' + CLASS.shape + '-' + index).each(function (d) {\n                config.data_onmouseout.call($$.api, d);\n            });\n        }).on('mousemove', function (d) {\n            var selectedData,\n                index = d.index,\n                eventRect = $$.svg.select('.' + CLASS.eventRect + '-' + index);\n\n            if ($$.dragging || $$.flowing) {\n                return;\n            } // do nothing while dragging/flowing\n            if ($$.hasArcType()) {\n                return;\n            }\n\n            if ($$.isStepType(d) && $$.config.line_step_type === 'step-after' && d3.mouse(this)[0] < $$.x($$.getXValue(d.id, index))) {\n                index -= 1;\n            }\n\n            // Show tooltip\n            selectedData = $$.filterTargetsToShow($$.data.targets).map(function (t) {\n                return $$.addName($$.getValueOnIndex(t.values, index));\n            });\n\n            if (config.tooltip_grouped) {\n                $$.showTooltip(selectedData, this);\n                $$.showXGridFocus(selectedData);\n            }\n\n            if (config.tooltip_grouped && (!config.data_selection_enabled || config.data_selection_grouped)) {\n                return;\n            }\n\n            $$.main.selectAll('.' + CLASS.shape + '-' + index).each(function () {\n                d3.select(this).classed(CLASS.EXPANDED, true);\n                if (config.data_selection_enabled) {\n                    eventRect.style('cursor', config.data_selection_grouped ? 'pointer' : null);\n                }\n                if (!config.tooltip_grouped) {\n                    $$.hideXGridFocus();\n                    $$.hideTooltip();\n                    if (!config.data_selection_grouped) {\n                        $$.unexpandCircles(index);\n                        $$.unexpandBars(index);\n                    }\n                }\n            }).filter(function (d) {\n                return $$.isWithinShape(this, d);\n            }).each(function (d) {\n                if (config.data_selection_enabled && (config.data_selection_grouped || config.data_selection_isselectable(d))) {\n                    eventRect.style('cursor', 'pointer');\n                }\n                if (!config.tooltip_grouped) {\n                    $$.showTooltip([d], this);\n                    $$.showXGridFocus([d]);\n                    if (config.point_focus_expand_enabled) {\n                        $$.expandCircles(index, d.id, true);\n                    }\n                    $$.expandBars(index, d.id, true);\n                }\n            });\n        }).on('click', function (d) {\n            var index = d.index;\n            if ($$.hasArcType() || !$$.toggleShape) {\n                return;\n            }\n            if ($$.cancelClick) {\n                $$.cancelClick = false;\n                return;\n            }\n            if ($$.isStepType(d) && config.line_step_type === 'step-after' && d3.mouse(this)[0] < $$.x($$.getXValue(d.id, index))) {\n                index -= 1;\n            }\n            $$.main.selectAll('.' + CLASS.shape + '-' + index).each(function (d) {\n                if (config.data_selection_grouped || $$.isWithinShape(this, d)) {\n                    $$.toggleShape(this, d, index);\n                    $$.config.data_onclick.call($$.api, d, this);\n                }\n            });\n        }).call(config.data_selection_draggable && $$.drag ? d3.behavior.drag().origin(Object).on('drag', function () {\n            $$.drag(d3.mouse(this));\n        }).on('dragstart', function () {\n            $$.dragstart(d3.mouse(this));\n        }).on('dragend', function () {\n            $$.dragend();\n        }) : function () {});\n    };\n\n    c3_chart_internal_fn.generateEventRectsForMultipleXs = function (eventRectEnter) {\n        var $$ = this,\n            d3 = $$.d3,\n            config = $$.config;\n\n        function mouseout() {\n            $$.svg.select('.' + CLASS.eventRect).style('cursor', null);\n            $$.hideXGridFocus();\n            $$.hideTooltip();\n            $$.unexpandCircles();\n            $$.unexpandBars();\n        }\n\n        eventRectEnter.append('rect').attr('x', 0).attr('y', 0).attr('width', $$.width).attr('height', $$.height).attr('class', CLASS.eventRect).on('mouseout', function () {\n            if (!$$.config) {\n                return;\n            } // chart is destroyed\n            if ($$.hasArcType()) {\n                return;\n            }\n            mouseout();\n        }).on('mousemove', function () {\n            var targetsToShow = $$.filterTargetsToShow($$.data.targets);\n            var mouse, closest, sameXData, selectedData;\n\n            if ($$.dragging) {\n                return;\n            } // do nothing when dragging\n            if ($$.hasArcType(targetsToShow)) {\n                return;\n            }\n\n            mouse = d3.mouse(this);\n            closest = $$.findClosestFromTargets(targetsToShow, mouse);\n\n            if ($$.mouseover && (!closest || closest.id !== $$.mouseover.id)) {\n                config.data_onmouseout.call($$.api, $$.mouseover);\n                $$.mouseover = undefined;\n            }\n\n            if (!closest) {\n                mouseout();\n                return;\n            }\n\n            if ($$.isScatterType(closest) || !config.tooltip_grouped) {\n                sameXData = [closest];\n            } else {\n                sameXData = $$.filterByX(targetsToShow, closest.x);\n            }\n\n            // show tooltip when cursor is close to some point\n            selectedData = sameXData.map(function (d) {\n                return $$.addName(d);\n            });\n            $$.showTooltip(selectedData, this);\n\n            // expand points\n            if (config.point_focus_expand_enabled) {\n                $$.expandCircles(closest.index, closest.id, true);\n            }\n            $$.expandBars(closest.index, closest.id, true);\n\n            // Show xgrid focus line\n            $$.showXGridFocus(selectedData);\n\n            // Show cursor as pointer if point is close to mouse position\n            if ($$.isBarType(closest.id) || $$.dist(closest, mouse) < config.point_sensitivity) {\n                $$.svg.select('.' + CLASS.eventRect).style('cursor', 'pointer');\n                if (!$$.mouseover) {\n                    config.data_onmouseover.call($$.api, closest);\n                    $$.mouseover = closest;\n                }\n            }\n        }).on('click', function () {\n            var targetsToShow = $$.filterTargetsToShow($$.data.targets);\n            var mouse, closest;\n            if ($$.hasArcType(targetsToShow)) {\n                return;\n            }\n\n            mouse = d3.mouse(this);\n            closest = $$.findClosestFromTargets(targetsToShow, mouse);\n            if (!closest) {\n                return;\n            }\n            // select if selection enabled\n            if ($$.isBarType(closest.id) || $$.dist(closest, mouse) < config.point_sensitivity) {\n                $$.main.selectAll('.' + CLASS.shapes + $$.getTargetSelectorSuffix(closest.id)).selectAll('.' + CLASS.shape + '-' + closest.index).each(function () {\n                    if (config.data_selection_grouped || $$.isWithinShape(this, closest)) {\n                        $$.toggleShape(this, closest, closest.index);\n                        $$.config.data_onclick.call($$.api, closest, this);\n                    }\n                });\n            }\n        }).call(config.data_selection_draggable && $$.drag ? d3.behavior.drag().origin(Object).on('drag', function () {\n            $$.drag(d3.mouse(this));\n        }).on('dragstart', function () {\n            $$.dragstart(d3.mouse(this));\n        }).on('dragend', function () {\n            $$.dragend();\n        }) : function () {});\n    };\n    c3_chart_internal_fn.dispatchEvent = function (type, index, mouse) {\n        var $$ = this,\n            selector = '.' + CLASS.eventRect + (!$$.isMultipleX() ? '-' + index : ''),\n            eventRect = $$.main.select(selector).node(),\n            box = eventRect.getBoundingClientRect(),\n            x = box.left + (mouse ? mouse[0] : 0),\n            y = box.top + (mouse ? mouse[1] : 0),\n            event = document.createEvent(\"MouseEvents\");\n\n        event.initMouseEvent(type, true, true, window, 0, x, y, x, y, false, false, false, false, 0, null);\n        eventRect.dispatchEvent(event);\n    };\n\n    c3_chart_internal_fn.initLegend = function () {\n        var $$ = this;\n        $$.legendItemTextBox = {};\n        $$.legendHasRendered = false;\n        $$.legend = $$.svg.append(\"g\").attr(\"transform\", $$.getTranslate('legend'));\n        if (!$$.config.legend_show) {\n            $$.legend.style('visibility', 'hidden');\n            $$.hiddenLegendIds = $$.mapToIds($$.data.targets);\n            return;\n        }\n        // MEMO: call here to update legend box and tranlate for all\n        // MEMO: translate will be upated by this, so transform not needed in updateLegend()\n        $$.updateLegendWithDefaults();\n    };\n    c3_chart_internal_fn.updateLegendWithDefaults = function () {\n        var $$ = this;\n        $$.updateLegend($$.mapToIds($$.data.targets), { withTransform: false, withTransitionForTransform: false, withTransition: false });\n    };\n    c3_chart_internal_fn.updateSizeForLegend = function (legendHeight, legendWidth) {\n        var $$ = this,\n            config = $$.config,\n            insetLegendPosition = {\n            top: $$.isLegendTop ? $$.getCurrentPaddingTop() + config.legend_inset_y + 5.5 : $$.currentHeight - legendHeight - $$.getCurrentPaddingBottom() - config.legend_inset_y,\n            left: $$.isLegendLeft ? $$.getCurrentPaddingLeft() + config.legend_inset_x + 0.5 : $$.currentWidth - legendWidth - $$.getCurrentPaddingRight() - config.legend_inset_x + 0.5\n        };\n\n        $$.margin3 = {\n            top: $$.isLegendRight ? 0 : $$.isLegendInset ? insetLegendPosition.top : $$.currentHeight - legendHeight,\n            right: NaN,\n            bottom: 0,\n            left: $$.isLegendRight ? $$.currentWidth - legendWidth : $$.isLegendInset ? insetLegendPosition.left : 0\n        };\n    };\n    c3_chart_internal_fn.transformLegend = function (withTransition) {\n        var $$ = this;\n        (withTransition ? $$.legend.transition() : $$.legend).attr(\"transform\", $$.getTranslate('legend'));\n    };\n    c3_chart_internal_fn.updateLegendStep = function (step) {\n        this.legendStep = step;\n    };\n    c3_chart_internal_fn.updateLegendItemWidth = function (w) {\n        this.legendItemWidth = w;\n    };\n    c3_chart_internal_fn.updateLegendItemHeight = function (h) {\n        this.legendItemHeight = h;\n    };\n    c3_chart_internal_fn.getLegendWidth = function () {\n        var $$ = this;\n        return $$.config.legend_show ? $$.isLegendRight || $$.isLegendInset ? $$.legendItemWidth * ($$.legendStep + 1) : $$.currentWidth : 0;\n    };\n    c3_chart_internal_fn.getLegendHeight = function () {\n        var $$ = this,\n            h = 0;\n        if ($$.config.legend_show) {\n            if ($$.isLegendRight) {\n                h = $$.currentHeight;\n            } else {\n                h = Math.max(20, $$.legendItemHeight) * ($$.legendStep + 1);\n            }\n        }\n        return h;\n    };\n    c3_chart_internal_fn.opacityForLegend = function (legendItem) {\n        return legendItem.classed(CLASS.legendItemHidden) ? null : 1;\n    };\n    c3_chart_internal_fn.opacityForUnfocusedLegend = function (legendItem) {\n        return legendItem.classed(CLASS.legendItemHidden) ? null : 0.3;\n    };\n    c3_chart_internal_fn.toggleFocusLegend = function (targetIds, focus) {\n        var $$ = this;\n        targetIds = $$.mapToTargetIds(targetIds);\n        $$.legend.selectAll('.' + CLASS.legendItem).filter(function (id) {\n            return targetIds.indexOf(id) >= 0;\n        }).classed(CLASS.legendItemFocused, focus).transition().duration(100).style('opacity', function () {\n            var opacity = focus ? $$.opacityForLegend : $$.opacityForUnfocusedLegend;\n            return opacity.call($$, $$.d3.select(this));\n        });\n    };\n    c3_chart_internal_fn.revertLegend = function () {\n        var $$ = this,\n            d3 = $$.d3;\n        $$.legend.selectAll('.' + CLASS.legendItem).classed(CLASS.legendItemFocused, false).transition().duration(100).style('opacity', function () {\n            return $$.opacityForLegend(d3.select(this));\n        });\n    };\n    c3_chart_internal_fn.showLegend = function (targetIds) {\n        var $$ = this,\n            config = $$.config;\n        if (!config.legend_show) {\n            config.legend_show = true;\n            $$.legend.style('visibility', 'visible');\n            if (!$$.legendHasRendered) {\n                $$.updateLegendWithDefaults();\n            }\n        }\n        $$.removeHiddenLegendIds(targetIds);\n        $$.legend.selectAll($$.selectorLegends(targetIds)).style('visibility', 'visible').transition().style('opacity', function () {\n            return $$.opacityForLegend($$.d3.select(this));\n        });\n    };\n    c3_chart_internal_fn.hideLegend = function (targetIds) {\n        var $$ = this,\n            config = $$.config;\n        if (config.legend_show && isEmpty(targetIds)) {\n            config.legend_show = false;\n            $$.legend.style('visibility', 'hidden');\n        }\n        $$.addHiddenLegendIds(targetIds);\n        $$.legend.selectAll($$.selectorLegends(targetIds)).style('opacity', 0).style('visibility', 'hidden');\n    };\n    c3_chart_internal_fn.clearLegendItemTextBoxCache = function () {\n        this.legendItemTextBox = {};\n    };\n    c3_chart_internal_fn.updateLegend = function (targetIds, options, transitions) {\n        var $$ = this,\n            config = $$.config;\n        var xForLegend, xForLegendText, xForLegendRect, yForLegend, yForLegendText, yForLegendRect, x1ForLegendTile, x2ForLegendTile, yForLegendTile;\n        var paddingTop = 4,\n            paddingRight = 10,\n            maxWidth = 0,\n            maxHeight = 0,\n            posMin = 10,\n            tileWidth = config.legend_item_tile_width + 5;\n        var l,\n            totalLength = 0,\n            offsets = {},\n            widths = {},\n            heights = {},\n            margins = [0],\n            steps = {},\n            step = 0;\n        var withTransition, withTransitionForTransform;\n        var texts, rects, tiles, background;\n\n        // Skip elements when their name is set to null\n        targetIds = targetIds.filter(function (id) {\n            return !isDefined(config.data_names[id]) || config.data_names[id] !== null;\n        });\n\n        options = options || {};\n        withTransition = getOption(options, \"withTransition\", true);\n        withTransitionForTransform = getOption(options, \"withTransitionForTransform\", true);\n\n        function getTextBox(textElement, id) {\n            if (!$$.legendItemTextBox[id]) {\n                $$.legendItemTextBox[id] = $$.getTextRect(textElement.textContent, CLASS.legendItem, textElement);\n            }\n            return $$.legendItemTextBox[id];\n        }\n\n        function updatePositions(textElement, id, index) {\n            var reset = index === 0,\n                isLast = index === targetIds.length - 1,\n                box = getTextBox(textElement, id),\n                itemWidth = box.width + tileWidth + (isLast && !($$.isLegendRight || $$.isLegendInset) ? 0 : paddingRight) + config.legend_padding,\n                itemHeight = box.height + paddingTop,\n                itemLength = $$.isLegendRight || $$.isLegendInset ? itemHeight : itemWidth,\n                areaLength = $$.isLegendRight || $$.isLegendInset ? $$.getLegendHeight() : $$.getLegendWidth(),\n                margin,\n                maxLength;\n\n            // MEMO: care about condifion of step, totalLength\n            function updateValues(id, withoutStep) {\n                if (!withoutStep) {\n                    margin = (areaLength - totalLength - itemLength) / 2;\n                    if (margin < posMin) {\n                        margin = (areaLength - itemLength) / 2;\n                        totalLength = 0;\n                        step++;\n                    }\n                }\n                steps[id] = step;\n                margins[step] = $$.isLegendInset ? 10 : margin;\n                offsets[id] = totalLength;\n                totalLength += itemLength;\n            }\n\n            if (reset) {\n                totalLength = 0;\n                step = 0;\n                maxWidth = 0;\n                maxHeight = 0;\n            }\n\n            if (config.legend_show && !$$.isLegendToShow(id)) {\n                widths[id] = heights[id] = steps[id] = offsets[id] = 0;\n                return;\n            }\n\n            widths[id] = itemWidth;\n            heights[id] = itemHeight;\n\n            if (!maxWidth || itemWidth >= maxWidth) {\n                maxWidth = itemWidth;\n            }\n            if (!maxHeight || itemHeight >= maxHeight) {\n                maxHeight = itemHeight;\n            }\n            maxLength = $$.isLegendRight || $$.isLegendInset ? maxHeight : maxWidth;\n\n            if (config.legend_equally) {\n                Object.keys(widths).forEach(function (id) {\n                    widths[id] = maxWidth;\n                });\n                Object.keys(heights).forEach(function (id) {\n                    heights[id] = maxHeight;\n                });\n                margin = (areaLength - maxLength * targetIds.length) / 2;\n                if (margin < posMin) {\n                    totalLength = 0;\n                    step = 0;\n                    targetIds.forEach(function (id) {\n                        updateValues(id);\n                    });\n                } else {\n                    updateValues(id, true);\n                }\n            } else {\n                updateValues(id);\n            }\n        }\n\n        if ($$.isLegendInset) {\n            step = config.legend_inset_step ? config.legend_inset_step : targetIds.length;\n            $$.updateLegendStep(step);\n        }\n\n        if ($$.isLegendRight) {\n            xForLegend = function xForLegend(id) {\n                return maxWidth * steps[id];\n            };\n            yForLegend = function yForLegend(id) {\n                return margins[steps[id]] + offsets[id];\n            };\n        } else if ($$.isLegendInset) {\n            xForLegend = function xForLegend(id) {\n                return maxWidth * steps[id] + 10;\n            };\n            yForLegend = function yForLegend(id) {\n                return margins[steps[id]] + offsets[id];\n            };\n        } else {\n            xForLegend = function xForLegend(id) {\n                return margins[steps[id]] + offsets[id];\n            };\n            yForLegend = function yForLegend(id) {\n                return maxHeight * steps[id];\n            };\n        }\n        xForLegendText = function xForLegendText(id, i) {\n            return xForLegend(id, i) + 4 + config.legend_item_tile_width;\n        };\n        yForLegendText = function yForLegendText(id, i) {\n            return yForLegend(id, i) + 9;\n        };\n        xForLegendRect = function xForLegendRect(id, i) {\n            return xForLegend(id, i);\n        };\n        yForLegendRect = function yForLegendRect(id, i) {\n            return yForLegend(id, i) - 5;\n        };\n        x1ForLegendTile = function x1ForLegendTile(id, i) {\n            return xForLegend(id, i) - 2;\n        };\n        x2ForLegendTile = function x2ForLegendTile(id, i) {\n            return xForLegend(id, i) - 2 + config.legend_item_tile_width;\n        };\n        yForLegendTile = function yForLegendTile(id, i) {\n            return yForLegend(id, i) + 4;\n        };\n\n        // Define g for legend area\n        l = $$.legend.selectAll('.' + CLASS.legendItem).data(targetIds).enter().append('g').attr('class', function (id) {\n            return $$.generateClass(CLASS.legendItem, id);\n        }).style('visibility', function (id) {\n            return $$.isLegendToShow(id) ? 'visible' : 'hidden';\n        }).style('cursor', 'pointer').on('click', function (id) {\n            if (config.legend_item_onclick) {\n                config.legend_item_onclick.call($$, id);\n            } else {\n                if ($$.d3.event.altKey) {\n                    $$.api.hide();\n                    $$.api.show(id);\n                } else {\n                    $$.api.toggle(id);\n                    $$.isTargetToShow(id) ? $$.api.focus(id) : $$.api.revert();\n                }\n            }\n        }).on('mouseover', function (id) {\n            if (config.legend_item_onmouseover) {\n                config.legend_item_onmouseover.call($$, id);\n            } else {\n                $$.d3.select(this).classed(CLASS.legendItemFocused, true);\n                if (!$$.transiting && $$.isTargetToShow(id)) {\n                    $$.api.focus(id);\n                }\n            }\n        }).on('mouseout', function (id) {\n            if (config.legend_item_onmouseout) {\n                config.legend_item_onmouseout.call($$, id);\n            } else {\n                $$.d3.select(this).classed(CLASS.legendItemFocused, false);\n                $$.api.revert();\n            }\n        });\n        l.append('text').text(function (id) {\n            return isDefined(config.data_names[id]) ? config.data_names[id] : id;\n        }).each(function (id, i) {\n            updatePositions(this, id, i);\n        }).style(\"pointer-events\", \"none\").attr('x', $$.isLegendRight || $$.isLegendInset ? xForLegendText : -200).attr('y', $$.isLegendRight || $$.isLegendInset ? -200 : yForLegendText);\n        l.append('rect').attr(\"class\", CLASS.legendItemEvent).style('fill-opacity', 0).attr('x', $$.isLegendRight || $$.isLegendInset ? xForLegendRect : -200).attr('y', $$.isLegendRight || $$.isLegendInset ? -200 : yForLegendRect);\n        l.append('line').attr('class', CLASS.legendItemTile).style('stroke', $$.color).style(\"pointer-events\", \"none\").attr('x1', $$.isLegendRight || $$.isLegendInset ? x1ForLegendTile : -200).attr('y1', $$.isLegendRight || $$.isLegendInset ? -200 : yForLegendTile).attr('x2', $$.isLegendRight || $$.isLegendInset ? x2ForLegendTile : -200).attr('y2', $$.isLegendRight || $$.isLegendInset ? -200 : yForLegendTile).attr('stroke-width', config.legend_item_tile_height);\n\n        // Set background for inset legend\n        background = $$.legend.select('.' + CLASS.legendBackground + ' rect');\n        if ($$.isLegendInset && maxWidth > 0 && background.size() === 0) {\n            background = $$.legend.insert('g', '.' + CLASS.legendItem).attr(\"class\", CLASS.legendBackground).append('rect');\n        }\n\n        texts = $$.legend.selectAll('text').data(targetIds).text(function (id) {\n            return isDefined(config.data_names[id]) ? config.data_names[id] : id;\n        }) // MEMO: needed for update\n        .each(function (id, i) {\n            updatePositions(this, id, i);\n        });\n        (withTransition ? texts.transition() : texts).attr('x', xForLegendText).attr('y', yForLegendText);\n\n        rects = $$.legend.selectAll('rect.' + CLASS.legendItemEvent).data(targetIds);\n        (withTransition ? rects.transition() : rects).attr('width', function (id) {\n            return widths[id];\n        }).attr('height', function (id) {\n            return heights[id];\n        }).attr('x', xForLegendRect).attr('y', yForLegendRect);\n\n        tiles = $$.legend.selectAll('line.' + CLASS.legendItemTile).data(targetIds);\n        (withTransition ? tiles.transition() : tiles).style('stroke', $$.levelColor ? function (id) {\n            return $$.levelColor($$.cache[id].values[0].value);\n        } : $$.color).attr('x1', x1ForLegendTile).attr('y1', yForLegendTile).attr('x2', x2ForLegendTile).attr('y2', yForLegendTile);\n\n        if (background) {\n            (withTransition ? background.transition() : background).attr('height', $$.getLegendHeight() - 12).attr('width', maxWidth * (step + 1) + 10);\n        }\n\n        // toggle legend state\n        $$.legend.selectAll('.' + CLASS.legendItem).classed(CLASS.legendItemHidden, function (id) {\n            return !$$.isTargetToShow(id);\n        });\n\n        // Update all to reflect change of legend\n        $$.updateLegendItemWidth(maxWidth);\n        $$.updateLegendItemHeight(maxHeight);\n        $$.updateLegendStep(step);\n        // Update size and scale\n        $$.updateSizes();\n        $$.updateScales();\n        $$.updateSvgSize();\n        // Update g positions\n        $$.transformAll(withTransitionForTransform, transitions);\n        $$.legendHasRendered = true;\n    };\n\n    c3_chart_internal_fn.initRegion = function () {\n        var $$ = this;\n        $$.region = $$.main.append('g').attr(\"clip-path\", $$.clipPath).attr(\"class\", CLASS.regions);\n    };\n    c3_chart_internal_fn.updateRegion = function (duration) {\n        var $$ = this,\n            config = $$.config;\n\n        // hide if arc type\n        $$.region.style('visibility', $$.hasArcType() ? 'hidden' : 'visible');\n\n        $$.mainRegion = $$.main.select('.' + CLASS.regions).selectAll('.' + CLASS.region).data(config.regions);\n        $$.mainRegion.enter().append('g').append('rect').style(\"fill-opacity\", 0);\n        $$.mainRegion.attr('class', $$.classRegion.bind($$));\n        $$.mainRegion.exit().transition().duration(duration).style(\"opacity\", 0).remove();\n    };\n    c3_chart_internal_fn.redrawRegion = function (withTransition) {\n        var $$ = this,\n            regions = $$.mainRegion.selectAll('rect').each(function () {\n            // data is binded to g and it's not transferred to rect (child node) automatically,\n            // then data of each rect has to be updated manually.\n            // TODO: there should be more efficient way to solve this?\n            var parentData = $$.d3.select(this.parentNode).datum();\n            $$.d3.select(this).datum(parentData);\n        }),\n            x = $$.regionX.bind($$),\n            y = $$.regionY.bind($$),\n            w = $$.regionWidth.bind($$),\n            h = $$.regionHeight.bind($$);\n        return [(withTransition ? regions.transition() : regions).attr(\"x\", x).attr(\"y\", y).attr(\"width\", w).attr(\"height\", h).style(\"fill-opacity\", function (d) {\n            return isValue(d.opacity) ? d.opacity : 0.1;\n        })];\n    };\n    c3_chart_internal_fn.regionX = function (d) {\n        var $$ = this,\n            config = $$.config,\n            xPos,\n            yScale = d.axis === 'y' ? $$.y : $$.y2;\n        if (d.axis === 'y' || d.axis === 'y2') {\n            xPos = config.axis_rotated ? 'start' in d ? yScale(d.start) : 0 : 0;\n        } else {\n            xPos = config.axis_rotated ? 0 : 'start' in d ? $$.x($$.isTimeSeries() ? $$.parseDate(d.start) : d.start) : 0;\n        }\n        return xPos;\n    };\n    c3_chart_internal_fn.regionY = function (d) {\n        var $$ = this,\n            config = $$.config,\n            yPos,\n            yScale = d.axis === 'y' ? $$.y : $$.y2;\n        if (d.axis === 'y' || d.axis === 'y2') {\n            yPos = config.axis_rotated ? 0 : 'end' in d ? yScale(d.end) : 0;\n        } else {\n            yPos = config.axis_rotated ? 'start' in d ? $$.x($$.isTimeSeries() ? $$.parseDate(d.start) : d.start) : 0 : 0;\n        }\n        return yPos;\n    };\n    c3_chart_internal_fn.regionWidth = function (d) {\n        var $$ = this,\n            config = $$.config,\n            start = $$.regionX(d),\n            end,\n            yScale = d.axis === 'y' ? $$.y : $$.y2;\n        if (d.axis === 'y' || d.axis === 'y2') {\n            end = config.axis_rotated ? 'end' in d ? yScale(d.end) : $$.width : $$.width;\n        } else {\n            end = config.axis_rotated ? $$.width : 'end' in d ? $$.x($$.isTimeSeries() ? $$.parseDate(d.end) : d.end) : $$.width;\n        }\n        return end < start ? 0 : end - start;\n    };\n    c3_chart_internal_fn.regionHeight = function (d) {\n        var $$ = this,\n            config = $$.config,\n            start = this.regionY(d),\n            end,\n            yScale = d.axis === 'y' ? $$.y : $$.y2;\n        if (d.axis === 'y' || d.axis === 'y2') {\n            end = config.axis_rotated ? $$.height : 'start' in d ? yScale(d.start) : $$.height;\n        } else {\n            end = config.axis_rotated ? 'end' in d ? $$.x($$.isTimeSeries() ? $$.parseDate(d.end) : d.end) : $$.height : $$.height;\n        }\n        return end < start ? 0 : end - start;\n    };\n    c3_chart_internal_fn.isRegionOnX = function (d) {\n        return !d.axis || d.axis === 'x';\n    };\n\n    c3_chart_internal_fn.getScale = function (min, max, forTimeseries) {\n        return (forTimeseries ? this.d3.time.scale() : this.d3.scale.linear()).range([min, max]);\n    };\n    c3_chart_internal_fn.getX = function (min, max, domain, offset) {\n        var $$ = this,\n            scale = $$.getScale(min, max, $$.isTimeSeries()),\n            _scale = domain ? scale.domain(domain) : scale,\n            key;\n        // Define customized scale if categorized axis\n        if ($$.isCategorized()) {\n            offset = offset || function () {\n                return 0;\n            };\n            scale = function scale(d, raw) {\n                var v = _scale(d) + offset(d);\n                return raw ? v : Math.ceil(v);\n            };\n        } else {\n            scale = function scale(d, raw) {\n                var v = _scale(d);\n                return raw ? v : Math.ceil(v);\n            };\n        }\n        // define functions\n        for (key in _scale) {\n            scale[key] = _scale[key];\n        }\n        scale.orgDomain = function () {\n            return _scale.domain();\n        };\n        // define custom domain() for categorized axis\n        if ($$.isCategorized()) {\n            scale.domain = function (domain) {\n                if (!arguments.length) {\n                    domain = this.orgDomain();\n                    return [domain[0], domain[1] + 1];\n                }\n                _scale.domain(domain);\n                return scale;\n            };\n        }\n        return scale;\n    };\n    c3_chart_internal_fn.getY = function (min, max, domain) {\n        var scale = this.getScale(min, max, this.isTimeSeriesY());\n        if (domain) {\n            scale.domain(domain);\n        }\n        return scale;\n    };\n    c3_chart_internal_fn.getYScale = function (id) {\n        return this.axis.getId(id) === 'y2' ? this.y2 : this.y;\n    };\n    c3_chart_internal_fn.getSubYScale = function (id) {\n        return this.axis.getId(id) === 'y2' ? this.subY2 : this.subY;\n    };\n    c3_chart_internal_fn.updateScales = function () {\n        var $$ = this,\n            config = $$.config,\n            forInit = !$$.x;\n        // update edges\n        $$.xMin = config.axis_rotated ? 1 : 0;\n        $$.xMax = config.axis_rotated ? $$.height : $$.width;\n        $$.yMin = config.axis_rotated ? 0 : $$.height;\n        $$.yMax = config.axis_rotated ? $$.width : 1;\n        $$.subXMin = $$.xMin;\n        $$.subXMax = $$.xMax;\n        $$.subYMin = config.axis_rotated ? 0 : $$.height2;\n        $$.subYMax = config.axis_rotated ? $$.width2 : 1;\n        // update scales\n        $$.x = $$.getX($$.xMin, $$.xMax, forInit ? undefined : $$.x.orgDomain(), function () {\n            return $$.xAxis.tickOffset();\n        });\n        $$.y = $$.getY($$.yMin, $$.yMax, forInit ? config.axis_y_default : $$.y.domain());\n        $$.y2 = $$.getY($$.yMin, $$.yMax, forInit ? config.axis_y2_default : $$.y2.domain());\n        $$.subX = $$.getX($$.xMin, $$.xMax, $$.orgXDomain, function (d) {\n            return d % 1 ? 0 : $$.subXAxis.tickOffset();\n        });\n        $$.subY = $$.getY($$.subYMin, $$.subYMax, forInit ? config.axis_y_default : $$.subY.domain());\n        $$.subY2 = $$.getY($$.subYMin, $$.subYMax, forInit ? config.axis_y2_default : $$.subY2.domain());\n        // update axes\n        $$.xAxisTickFormat = $$.axis.getXAxisTickFormat();\n        $$.xAxisTickValues = $$.axis.getXAxisTickValues();\n        $$.yAxisTickValues = $$.axis.getYAxisTickValues();\n        $$.y2AxisTickValues = $$.axis.getY2AxisTickValues();\n\n        $$.xAxis = $$.axis.getXAxis($$.x, $$.xOrient, $$.xAxisTickFormat, $$.xAxisTickValues, config.axis_x_tick_outer);\n        $$.subXAxis = $$.axis.getXAxis($$.subX, $$.subXOrient, $$.xAxisTickFormat, $$.xAxisTickValues, config.axis_x_tick_outer);\n        $$.yAxis = $$.axis.getYAxis($$.y, $$.yOrient, config.axis_y_tick_format, $$.yAxisTickValues, config.axis_y_tick_outer);\n        $$.y2Axis = $$.axis.getYAxis($$.y2, $$.y2Orient, config.axis_y2_tick_format, $$.y2AxisTickValues, config.axis_y2_tick_outer);\n\n        // Set initialized scales to brush and zoom\n        if (!forInit) {\n            if ($$.brush) {\n                $$.brush.scale($$.subX);\n            }\n            if (config.zoom_enabled) {\n                $$.zoom.scale($$.x);\n            }\n        }\n        // update for arc\n        if ($$.updateArc) {\n            $$.updateArc();\n        }\n    };\n\n    c3_chart_internal_fn.selectPoint = function (target, d, i) {\n        var $$ = this,\n            config = $$.config,\n            cx = (config.axis_rotated ? $$.circleY : $$.circleX).bind($$),\n            cy = (config.axis_rotated ? $$.circleX : $$.circleY).bind($$),\n            r = $$.pointSelectR.bind($$);\n        config.data_onselected.call($$.api, d, target.node());\n        // add selected-circle on low layer g\n        $$.main.select('.' + CLASS.selectedCircles + $$.getTargetSelectorSuffix(d.id)).selectAll('.' + CLASS.selectedCircle + '-' + i).data([d]).enter().append('circle').attr(\"class\", function () {\n            return $$.generateClass(CLASS.selectedCircle, i);\n        }).attr(\"cx\", cx).attr(\"cy\", cy).attr(\"stroke\", function () {\n            return $$.color(d);\n        }).attr(\"r\", function (d) {\n            return $$.pointSelectR(d) * 1.4;\n        }).transition().duration(100).attr(\"r\", r);\n    };\n    c3_chart_internal_fn.unselectPoint = function (target, d, i) {\n        var $$ = this;\n        $$.config.data_onunselected.call($$.api, d, target.node());\n        // remove selected-circle from low layer g\n        $$.main.select('.' + CLASS.selectedCircles + $$.getTargetSelectorSuffix(d.id)).selectAll('.' + CLASS.selectedCircle + '-' + i).transition().duration(100).attr('r', 0).remove();\n    };\n    c3_chart_internal_fn.togglePoint = function (selected, target, d, i) {\n        selected ? this.selectPoint(target, d, i) : this.unselectPoint(target, d, i);\n    };\n    c3_chart_internal_fn.selectPath = function (target, d) {\n        var $$ = this;\n        $$.config.data_onselected.call($$, d, target.node());\n        if ($$.config.interaction_brighten) {\n            target.transition().duration(100).style(\"fill\", function () {\n                return $$.d3.rgb($$.color(d)).brighter(0.75);\n            });\n        }\n    };\n    c3_chart_internal_fn.unselectPath = function (target, d) {\n        var $$ = this;\n        $$.config.data_onunselected.call($$, d, target.node());\n        if ($$.config.interaction_brighten) {\n            target.transition().duration(100).style(\"fill\", function () {\n                return $$.color(d);\n            });\n        }\n    };\n    c3_chart_internal_fn.togglePath = function (selected, target, d, i) {\n        selected ? this.selectPath(target, d, i) : this.unselectPath(target, d, i);\n    };\n    c3_chart_internal_fn.getToggle = function (that, d) {\n        var $$ = this,\n            toggle;\n        if (that.nodeName === 'circle') {\n            if ($$.isStepType(d)) {\n                // circle is hidden in step chart, so treat as within the click area\n                toggle = function toggle() {}; // TODO: how to select step chart?\n            } else {\n                toggle = $$.togglePoint;\n            }\n        } else if (that.nodeName === 'path') {\n            toggle = $$.togglePath;\n        }\n        return toggle;\n    };\n    c3_chart_internal_fn.toggleShape = function (that, d, i) {\n        var $$ = this,\n            d3 = $$.d3,\n            config = $$.config,\n            shape = d3.select(that),\n            isSelected = shape.classed(CLASS.SELECTED),\n            toggle = $$.getToggle(that, d).bind($$);\n\n        if (config.data_selection_enabled && config.data_selection_isselectable(d)) {\n            if (!config.data_selection_multiple) {\n                $$.main.selectAll('.' + CLASS.shapes + (config.data_selection_grouped ? $$.getTargetSelectorSuffix(d.id) : \"\")).selectAll('.' + CLASS.shape).each(function (d, i) {\n                    var shape = d3.select(this);\n                    if (shape.classed(CLASS.SELECTED)) {\n                        toggle(false, shape.classed(CLASS.SELECTED, false), d, i);\n                    }\n                });\n            }\n            shape.classed(CLASS.SELECTED, !isSelected);\n            toggle(!isSelected, shape, d, i);\n        }\n    };\n\n    c3_chart_internal_fn.initBar = function () {\n        var $$ = this;\n        $$.main.select('.' + CLASS.chart).append(\"g\").attr(\"class\", CLASS.chartBars);\n    };\n    c3_chart_internal_fn.updateTargetsForBar = function (targets) {\n        var $$ = this,\n            config = $$.config,\n            mainBarUpdate,\n            mainBarEnter,\n            classChartBar = $$.classChartBar.bind($$),\n            classBars = $$.classBars.bind($$),\n            classFocus = $$.classFocus.bind($$);\n        mainBarUpdate = $$.main.select('.' + CLASS.chartBars).selectAll('.' + CLASS.chartBar).data(targets).attr('class', function (d) {\n            return classChartBar(d) + classFocus(d);\n        });\n        mainBarEnter = mainBarUpdate.enter().append('g').attr('class', classChartBar).style(\"pointer-events\", \"none\");\n        // Bars for each data\n        mainBarEnter.append('g').attr(\"class\", classBars).style(\"cursor\", function (d) {\n            return config.data_selection_isselectable(d) ? \"pointer\" : null;\n        });\n    };\n    c3_chart_internal_fn.updateBar = function (durationForExit) {\n        var $$ = this,\n            barData = $$.barData.bind($$),\n            classBar = $$.classBar.bind($$),\n            initialOpacity = $$.initialOpacity.bind($$),\n            color = function color(d) {\n            return $$.color(d.id);\n        };\n        $$.mainBar = $$.main.selectAll('.' + CLASS.bars).selectAll('.' + CLASS.bar).data(barData);\n        $$.mainBar.enter().append('path').attr(\"class\", classBar).style(\"stroke\", color).style(\"fill\", color);\n        $$.mainBar.style(\"opacity\", initialOpacity);\n        $$.mainBar.exit().transition().duration(durationForExit).remove();\n    };\n    c3_chart_internal_fn.redrawBar = function (drawBar, withTransition) {\n        return [(withTransition ? this.mainBar.transition(Math.random().toString()) : this.mainBar).attr('d', drawBar).style(\"stroke\", this.color).style(\"fill\", this.color).style(\"opacity\", 1)];\n    };\n    c3_chart_internal_fn.getBarW = function (axis, barTargetsNum) {\n        var $$ = this,\n            config = $$.config,\n            w = typeof config.bar_width === 'number' ? config.bar_width : barTargetsNum ? axis.tickInterval() * config.bar_width_ratio / barTargetsNum : 0;\n        return config.bar_width_max && w > config.bar_width_max ? config.bar_width_max : w;\n    };\n    c3_chart_internal_fn.getBars = function (i, id) {\n        var $$ = this;\n        return (id ? $$.main.selectAll('.' + CLASS.bars + $$.getTargetSelectorSuffix(id)) : $$.main).selectAll('.' + CLASS.bar + (isValue(i) ? '-' + i : ''));\n    };\n    c3_chart_internal_fn.expandBars = function (i, id, reset) {\n        var $$ = this;\n        if (reset) {\n            $$.unexpandBars();\n        }\n        $$.getBars(i, id).classed(CLASS.EXPANDED, true);\n    };\n    c3_chart_internal_fn.unexpandBars = function (i) {\n        var $$ = this;\n        $$.getBars(i).classed(CLASS.EXPANDED, false);\n    };\n    c3_chart_internal_fn.generateDrawBar = function (barIndices, isSub) {\n        var $$ = this,\n            config = $$.config,\n            getPoints = $$.generateGetBarPoints(barIndices, isSub);\n        return function (d, i) {\n            // 4 points that make a bar\n            var points = getPoints(d, i);\n\n            // switch points if axis is rotated, not applicable for sub chart\n            var indexX = config.axis_rotated ? 1 : 0;\n            var indexY = config.axis_rotated ? 0 : 1;\n\n            var path = 'M ' + points[0][indexX] + ',' + points[0][indexY] + ' ' + 'L' + points[1][indexX] + ',' + points[1][indexY] + ' ' + 'L' + points[2][indexX] + ',' + points[2][indexY] + ' ' + 'L' + points[3][indexX] + ',' + points[3][indexY] + ' ' + 'z';\n\n            return path;\n        };\n    };\n    c3_chart_internal_fn.generateGetBarPoints = function (barIndices, isSub) {\n        var $$ = this,\n            axis = isSub ? $$.subXAxis : $$.xAxis,\n            barTargetsNum = barIndices.__max__ + 1,\n            barW = $$.getBarW(axis, barTargetsNum),\n            barX = $$.getShapeX(barW, barTargetsNum, barIndices, !!isSub),\n            barY = $$.getShapeY(!!isSub),\n            barOffset = $$.getShapeOffset($$.isBarType, barIndices, !!isSub),\n            barSpaceOffset = barW * ($$.config.bar_space / 2),\n            yScale = isSub ? $$.getSubYScale : $$.getYScale;\n        return function (d, i) {\n            var y0 = yScale.call($$, d.id)(0),\n                offset = barOffset(d, i) || y0,\n                // offset is for stacked bar chart\n            posX = barX(d),\n                posY = barY(d);\n            // fix posY not to overflow opposite quadrant\n            if ($$.config.axis_rotated) {\n                if (0 < d.value && posY < y0 || d.value < 0 && y0 < posY) {\n                    posY = y0;\n                }\n            }\n            // 4 points that make a bar\n            return [[posX + barSpaceOffset, offset], [posX + barSpaceOffset, posY - (y0 - offset)], [posX + barW - barSpaceOffset, posY - (y0 - offset)], [posX + barW - barSpaceOffset, offset]];\n        };\n    };\n    c3_chart_internal_fn.isWithinBar = function (that) {\n        var mouse = this.d3.mouse(that),\n            box = that.getBoundingClientRect(),\n            seg0 = that.pathSegList.getItem(0),\n            seg1 = that.pathSegList.getItem(1),\n            x = Math.min(seg0.x, seg1.x),\n            y = Math.min(seg0.y, seg1.y),\n            w = box.width,\n            h = box.height,\n            offset = 2,\n            sx = x - offset,\n            ex = x + w + offset,\n            sy = y + h + offset,\n            ey = y - offset;\n        return sx < mouse[0] && mouse[0] < ex && ey < mouse[1] && mouse[1] < sy;\n    };\n\n    c3_chart_internal_fn.getShapeIndices = function (typeFilter) {\n        var $$ = this,\n            config = $$.config,\n            indices = {},\n            i = 0,\n            j,\n            k;\n        $$.filterTargetsToShow($$.data.targets.filter(typeFilter, $$)).forEach(function (d) {\n            for (j = 0; j < config.data_groups.length; j++) {\n                if (config.data_groups[j].indexOf(d.id) < 0) {\n                    continue;\n                }\n                for (k = 0; k < config.data_groups[j].length; k++) {\n                    if (config.data_groups[j][k] in indices) {\n                        indices[d.id] = indices[config.data_groups[j][k]];\n                        break;\n                    }\n                }\n            }\n            if (isUndefined(indices[d.id])) {\n                indices[d.id] = i++;\n            }\n        });\n        indices.__max__ = i - 1;\n        return indices;\n    };\n    c3_chart_internal_fn.getShapeX = function (offset, targetsNum, indices, isSub) {\n        var $$ = this,\n            scale = isSub ? $$.subX : $$.x;\n        return function (d) {\n            var index = d.id in indices ? indices[d.id] : 0;\n            return d.x || d.x === 0 ? scale(d.x) - offset * (targetsNum / 2 - index) : 0;\n        };\n    };\n    c3_chart_internal_fn.getShapeY = function (isSub) {\n        var $$ = this;\n        return function (d) {\n            var scale = isSub ? $$.getSubYScale(d.id) : $$.getYScale(d.id);\n            return scale(d.value);\n        };\n    };\n    c3_chart_internal_fn.getShapeOffset = function (typeFilter, indices, isSub) {\n        var $$ = this,\n            targets = $$.orderTargets($$.filterTargetsToShow($$.data.targets.filter(typeFilter, $$))),\n            targetIds = targets.map(function (t) {\n            return t.id;\n        });\n        return function (d, i) {\n            var scale = isSub ? $$.getSubYScale(d.id) : $$.getYScale(d.id),\n                y0 = scale(0),\n                offset = y0;\n            targets.forEach(function (t) {\n                var values = $$.isStepType(d) ? $$.convertValuesToStep(t.values) : t.values;\n                if (t.id === d.id || indices[t.id] !== indices[d.id]) {\n                    return;\n                }\n                if (targetIds.indexOf(t.id) < targetIds.indexOf(d.id)) {\n                    // check if the x values line up\n                    if (typeof values[i] === 'undefined' || +values[i].x !== +d.x) {\n                        // \"+\" for timeseries\n                        // if not, try to find the value that does line up\n                        i = -1;\n                        values.forEach(function (v, j) {\n                            if (v.x === d.x) {\n                                i = j;\n                            }\n                        });\n                    }\n                    if (i in values && values[i].value * d.value >= 0) {\n                        offset += scale(values[i].value) - y0;\n                    }\n                }\n            });\n            return offset;\n        };\n    };\n    c3_chart_internal_fn.isWithinShape = function (that, d) {\n        var $$ = this,\n            shape = $$.d3.select(that),\n            isWithin;\n        if (!$$.isTargetToShow(d.id)) {\n            isWithin = false;\n        } else if (that.nodeName === 'circle') {\n            isWithin = $$.isStepType(d) ? $$.isWithinStep(that, $$.getYScale(d.id)(d.value)) : $$.isWithinCircle(that, $$.pointSelectR(d) * 1.5);\n        } else if (that.nodeName === 'path') {\n            isWithin = shape.classed(CLASS.bar) ? $$.isWithinBar(that) : true;\n        }\n        return isWithin;\n    };\n\n    c3_chart_internal_fn.getInterpolate = function (d) {\n        var $$ = this,\n            interpolation = $$.isInterpolationType($$.config.spline_interpolation_type) ? $$.config.spline_interpolation_type : 'cardinal';\n        return $$.isSplineType(d) ? interpolation : $$.isStepType(d) ? $$.config.line_step_type : \"linear\";\n    };\n\n    c3_chart_internal_fn.initLine = function () {\n        var $$ = this;\n        $$.main.select('.' + CLASS.chart).append(\"g\").attr(\"class\", CLASS.chartLines);\n    };\n    c3_chart_internal_fn.updateTargetsForLine = function (targets) {\n        var $$ = this,\n            config = $$.config,\n            mainLineUpdate,\n            mainLineEnter,\n            classChartLine = $$.classChartLine.bind($$),\n            classLines = $$.classLines.bind($$),\n            classAreas = $$.classAreas.bind($$),\n            classCircles = $$.classCircles.bind($$),\n            classFocus = $$.classFocus.bind($$);\n        mainLineUpdate = $$.main.select('.' + CLASS.chartLines).selectAll('.' + CLASS.chartLine).data(targets).attr('class', function (d) {\n            return classChartLine(d) + classFocus(d);\n        });\n        mainLineEnter = mainLineUpdate.enter().append('g').attr('class', classChartLine).style('opacity', 0).style(\"pointer-events\", \"none\");\n        // Lines for each data\n        mainLineEnter.append('g').attr(\"class\", classLines);\n        // Areas\n        mainLineEnter.append('g').attr('class', classAreas);\n        // Circles for each data point on lines\n        mainLineEnter.append('g').attr(\"class\", function (d) {\n            return $$.generateClass(CLASS.selectedCircles, d.id);\n        });\n        mainLineEnter.append('g').attr(\"class\", classCircles).style(\"cursor\", function (d) {\n            return config.data_selection_isselectable(d) ? \"pointer\" : null;\n        });\n        // Update date for selected circles\n        targets.forEach(function (t) {\n            $$.main.selectAll('.' + CLASS.selectedCircles + $$.getTargetSelectorSuffix(t.id)).selectAll('.' + CLASS.selectedCircle).each(function (d) {\n                d.value = t.values[d.index].value;\n            });\n        });\n        // MEMO: can not keep same color...\n        //mainLineUpdate.exit().remove();\n    };\n    c3_chart_internal_fn.updateLine = function (durationForExit) {\n        var $$ = this;\n        $$.mainLine = $$.main.selectAll('.' + CLASS.lines).selectAll('.' + CLASS.line).data($$.lineData.bind($$));\n        $$.mainLine.enter().append('path').attr('class', $$.classLine.bind($$)).style(\"stroke\", $$.color);\n        $$.mainLine.style(\"opacity\", $$.initialOpacity.bind($$)).style('shape-rendering', function (d) {\n            return $$.isStepType(d) ? 'crispEdges' : '';\n        }).attr('transform', null);\n        $$.mainLine.exit().transition().duration(durationForExit).style('opacity', 0).remove();\n    };\n    c3_chart_internal_fn.redrawLine = function (drawLine, withTransition) {\n        return [(withTransition ? this.mainLine.transition(Math.random().toString()) : this.mainLine).attr(\"d\", drawLine).style(\"stroke\", this.color).style(\"opacity\", 1)];\n    };\n    c3_chart_internal_fn.generateDrawLine = function (lineIndices, isSub) {\n        var $$ = this,\n            config = $$.config,\n            line = $$.d3.svg.line(),\n            getPoints = $$.generateGetLinePoints(lineIndices, isSub),\n            yScaleGetter = isSub ? $$.getSubYScale : $$.getYScale,\n            xValue = function xValue(d) {\n            return (isSub ? $$.subxx : $$.xx).call($$, d);\n        },\n            yValue = function yValue(d, i) {\n            return config.data_groups.length > 0 ? getPoints(d, i)[0][1] : yScaleGetter.call($$, d.id)(d.value);\n        };\n\n        line = config.axis_rotated ? line.x(yValue).y(xValue) : line.x(xValue).y(yValue);\n        if (!config.line_connectNull) {\n            line = line.defined(function (d) {\n                return d.value != null;\n            });\n        }\n        return function (d) {\n            var values = config.line_connectNull ? $$.filterRemoveNull(d.values) : d.values,\n                x = isSub ? $$.x : $$.subX,\n                y = yScaleGetter.call($$, d.id),\n                x0 = 0,\n                y0 = 0,\n                path;\n            if ($$.isLineType(d)) {\n                if (config.data_regions[d.id]) {\n                    path = $$.lineWithRegions(values, x, y, config.data_regions[d.id]);\n                } else {\n                    if ($$.isStepType(d)) {\n                        values = $$.convertValuesToStep(values);\n                    }\n                    path = line.interpolate($$.getInterpolate(d))(values);\n                }\n            } else {\n                if (values[0]) {\n                    x0 = x(values[0].x);\n                    y0 = y(values[0].value);\n                }\n                path = config.axis_rotated ? \"M \" + y0 + \" \" + x0 : \"M \" + x0 + \" \" + y0;\n            }\n            return path ? path : \"M 0 0\";\n        };\n    };\n    c3_chart_internal_fn.generateGetLinePoints = function (lineIndices, isSub) {\n        // partial duplication of generateGetBarPoints\n        var $$ = this,\n            config = $$.config,\n            lineTargetsNum = lineIndices.__max__ + 1,\n            x = $$.getShapeX(0, lineTargetsNum, lineIndices, !!isSub),\n            y = $$.getShapeY(!!isSub),\n            lineOffset = $$.getShapeOffset($$.isLineType, lineIndices, !!isSub),\n            yScale = isSub ? $$.getSubYScale : $$.getYScale;\n        return function (d, i) {\n            var y0 = yScale.call($$, d.id)(0),\n                offset = lineOffset(d, i) || y0,\n                // offset is for stacked area chart\n            posX = x(d),\n                posY = y(d);\n            // fix posY not to overflow opposite quadrant\n            if (config.axis_rotated) {\n                if (0 < d.value && posY < y0 || d.value < 0 && y0 < posY) {\n                    posY = y0;\n                }\n            }\n            // 1 point that marks the line position\n            return [[posX, posY - (y0 - offset)], [posX, posY - (y0 - offset)], // needed for compatibility\n            [posX, posY - (y0 - offset)], // needed for compatibility\n            [posX, posY - (y0 - offset)] // needed for compatibility\n            ];\n        };\n    };\n\n    c3_chart_internal_fn.lineWithRegions = function (d, x, y, _regions) {\n        var $$ = this,\n            config = $$.config,\n            prev = -1,\n            i,\n            j,\n            s = \"M\",\n            sWithRegion,\n            xp,\n            yp,\n            dx,\n            dy,\n            dd,\n            diff,\n            diffx2,\n            xOffset = $$.isCategorized() ? 0.5 : 0,\n            xValue,\n            yValue,\n            regions = [];\n\n        function isWithinRegions(x, regions) {\n            var i;\n            for (i = 0; i < regions.length; i++) {\n                if (regions[i].start < x && x <= regions[i].end) {\n                    return true;\n                }\n            }\n            return false;\n        }\n\n        // Check start/end of regions\n        if (isDefined(_regions)) {\n            for (i = 0; i < _regions.length; i++) {\n                regions[i] = {};\n                if (isUndefined(_regions[i].start)) {\n                    regions[i].start = d[0].x;\n                } else {\n                    regions[i].start = $$.isTimeSeries() ? $$.parseDate(_regions[i].start) : _regions[i].start;\n                }\n                if (isUndefined(_regions[i].end)) {\n                    regions[i].end = d[d.length - 1].x;\n                } else {\n                    regions[i].end = $$.isTimeSeries() ? $$.parseDate(_regions[i].end) : _regions[i].end;\n                }\n            }\n        }\n\n        // Set scales\n        xValue = config.axis_rotated ? function (d) {\n            return y(d.value);\n        } : function (d) {\n            return x(d.x);\n        };\n        yValue = config.axis_rotated ? function (d) {\n            return x(d.x);\n        } : function (d) {\n            return y(d.value);\n        };\n\n        // Define svg generator function for region\n        function generateM(points) {\n            return 'M' + points[0][0] + ' ' + points[0][1] + ' ' + points[1][0] + ' ' + points[1][1];\n        }\n        if ($$.isTimeSeries()) {\n            sWithRegion = function sWithRegion(d0, d1, j, diff) {\n                var x0 = d0.x.getTime(),\n                    x_diff = d1.x - d0.x,\n                    xv0 = new Date(x0 + x_diff * j),\n                    xv1 = new Date(x0 + x_diff * (j + diff)),\n                    points;\n                if (config.axis_rotated) {\n                    points = [[y(yp(j)), x(xv0)], [y(yp(j + diff)), x(xv1)]];\n                } else {\n                    points = [[x(xv0), y(yp(j))], [x(xv1), y(yp(j + diff))]];\n                }\n                return generateM(points);\n            };\n        } else {\n            sWithRegion = function sWithRegion(d0, d1, j, diff) {\n                var points;\n                if (config.axis_rotated) {\n                    points = [[y(yp(j), true), x(xp(j))], [y(yp(j + diff), true), x(xp(j + diff))]];\n                } else {\n                    points = [[x(xp(j), true), y(yp(j))], [x(xp(j + diff), true), y(yp(j + diff))]];\n                }\n                return generateM(points);\n            };\n        }\n\n        // Generate\n        for (i = 0; i < d.length; i++) {\n\n            // Draw as normal\n            if (isUndefined(regions) || !isWithinRegions(d[i].x, regions)) {\n                s += \" \" + xValue(d[i]) + \" \" + yValue(d[i]);\n            }\n            // Draw with region // TODO: Fix for horizotal charts\n            else {\n                    xp = $$.getScale(d[i - 1].x + xOffset, d[i].x + xOffset, $$.isTimeSeries());\n                    yp = $$.getScale(d[i - 1].value, d[i].value);\n\n                    dx = x(d[i].x) - x(d[i - 1].x);\n                    dy = y(d[i].value) - y(d[i - 1].value);\n                    dd = Math.sqrt(Math.pow(dx, 2) + Math.pow(dy, 2));\n                    diff = 2 / dd;\n                    diffx2 = diff * 2;\n\n                    for (j = diff; j <= 1; j += diffx2) {\n                        s += sWithRegion(d[i - 1], d[i], j, diff);\n                    }\n                }\n            prev = d[i].x;\n        }\n\n        return s;\n    };\n\n    c3_chart_internal_fn.updateArea = function (durationForExit) {\n        var $$ = this,\n            d3 = $$.d3;\n        $$.mainArea = $$.main.selectAll('.' + CLASS.areas).selectAll('.' + CLASS.area).data($$.lineData.bind($$));\n        $$.mainArea.enter().append('path').attr(\"class\", $$.classArea.bind($$)).style(\"fill\", $$.color).style(\"opacity\", function () {\n            $$.orgAreaOpacity = +d3.select(this).style('opacity');return 0;\n        });\n        $$.mainArea.style(\"opacity\", $$.orgAreaOpacity);\n        $$.mainArea.exit().transition().duration(durationForExit).style('opacity', 0).remove();\n    };\n    c3_chart_internal_fn.redrawArea = function (drawArea, withTransition) {\n        return [(withTransition ? this.mainArea.transition(Math.random().toString()) : this.mainArea).attr(\"d\", drawArea).style(\"fill\", this.color).style(\"opacity\", this.orgAreaOpacity)];\n    };\n    c3_chart_internal_fn.generateDrawArea = function (areaIndices, isSub) {\n        var $$ = this,\n            config = $$.config,\n            area = $$.d3.svg.area(),\n            getPoints = $$.generateGetAreaPoints(areaIndices, isSub),\n            yScaleGetter = isSub ? $$.getSubYScale : $$.getYScale,\n            xValue = function xValue(d) {\n            return (isSub ? $$.subxx : $$.xx).call($$, d);\n        },\n            value0 = function value0(d, i) {\n            return config.data_groups.length > 0 ? getPoints(d, i)[0][1] : yScaleGetter.call($$, d.id)($$.getAreaBaseValue(d.id));\n        },\n            value1 = function value1(d, i) {\n            return config.data_groups.length > 0 ? getPoints(d, i)[1][1] : yScaleGetter.call($$, d.id)(d.value);\n        };\n\n        area = config.axis_rotated ? area.x0(value0).x1(value1).y(xValue) : area.x(xValue).y0(config.area_above ? 0 : value0).y1(value1);\n        if (!config.line_connectNull) {\n            area = area.defined(function (d) {\n                return d.value !== null;\n            });\n        }\n\n        return function (d) {\n            var values = config.line_connectNull ? $$.filterRemoveNull(d.values) : d.values,\n                x0 = 0,\n                y0 = 0,\n                path;\n            if ($$.isAreaType(d)) {\n                if ($$.isStepType(d)) {\n                    values = $$.convertValuesToStep(values);\n                }\n                path = area.interpolate($$.getInterpolate(d))(values);\n            } else {\n                if (values[0]) {\n                    x0 = $$.x(values[0].x);\n                    y0 = $$.getYScale(d.id)(values[0].value);\n                }\n                path = config.axis_rotated ? \"M \" + y0 + \" \" + x0 : \"M \" + x0 + \" \" + y0;\n            }\n            return path ? path : \"M 0 0\";\n        };\n    };\n    c3_chart_internal_fn.getAreaBaseValue = function () {\n        return 0;\n    };\n    c3_chart_internal_fn.generateGetAreaPoints = function (areaIndices, isSub) {\n        // partial duplication of generateGetBarPoints\n        var $$ = this,\n            config = $$.config,\n            areaTargetsNum = areaIndices.__max__ + 1,\n            x = $$.getShapeX(0, areaTargetsNum, areaIndices, !!isSub),\n            y = $$.getShapeY(!!isSub),\n            areaOffset = $$.getShapeOffset($$.isAreaType, areaIndices, !!isSub),\n            yScale = isSub ? $$.getSubYScale : $$.getYScale;\n        return function (d, i) {\n            var y0 = yScale.call($$, d.id)(0),\n                offset = areaOffset(d, i) || y0,\n                // offset is for stacked area chart\n            posX = x(d),\n                posY = y(d);\n            // fix posY not to overflow opposite quadrant\n            if (config.axis_rotated) {\n                if (0 < d.value && posY < y0 || d.value < 0 && y0 < posY) {\n                    posY = y0;\n                }\n            }\n            // 1 point that marks the area position\n            return [[posX, offset], [posX, posY - (y0 - offset)], [posX, posY - (y0 - offset)], // needed for compatibility\n            [posX, offset] // needed for compatibility\n            ];\n        };\n    };\n\n    c3_chart_internal_fn.updateCircle = function () {\n        var $$ = this;\n        $$.mainCircle = $$.main.selectAll('.' + CLASS.circles).selectAll('.' + CLASS.circle).data($$.lineOrScatterData.bind($$));\n        $$.mainCircle.enter().append(\"circle\").attr(\"class\", $$.classCircle.bind($$)).attr(\"r\", $$.pointR.bind($$)).style(\"fill\", $$.color);\n        $$.mainCircle.style(\"opacity\", $$.initialOpacityForCircle.bind($$));\n        $$.mainCircle.exit().remove();\n    };\n    c3_chart_internal_fn.redrawCircle = function (cx, cy, withTransition) {\n        var selectedCircles = this.main.selectAll('.' + CLASS.selectedCircle);\n        return [(withTransition ? this.mainCircle.transition(Math.random().toString()) : this.mainCircle).style('opacity', this.opacityForCircle.bind(this)).style(\"fill\", this.color).attr(\"cx\", cx).attr(\"cy\", cy), (withTransition ? selectedCircles.transition(Math.random().toString()) : selectedCircles).attr(\"cx\", cx).attr(\"cy\", cy)];\n    };\n    c3_chart_internal_fn.circleX = function (d) {\n        return d.x || d.x === 0 ? this.x(d.x) : null;\n    };\n    c3_chart_internal_fn.updateCircleY = function () {\n        var $$ = this,\n            lineIndices,\n            getPoints;\n        if ($$.config.data_groups.length > 0) {\n            lineIndices = $$.getShapeIndices($$.isLineType), getPoints = $$.generateGetLinePoints(lineIndices);\n            $$.circleY = function (d, i) {\n                return getPoints(d, i)[0][1];\n            };\n        } else {\n            $$.circleY = function (d) {\n                return $$.getYScale(d.id)(d.value);\n            };\n        }\n    };\n    c3_chart_internal_fn.getCircles = function (i, id) {\n        var $$ = this;\n        return (id ? $$.main.selectAll('.' + CLASS.circles + $$.getTargetSelectorSuffix(id)) : $$.main).selectAll('.' + CLASS.circle + (isValue(i) ? '-' + i : ''));\n    };\n    c3_chart_internal_fn.expandCircles = function (i, id, reset) {\n        var $$ = this,\n            r = $$.pointExpandedR.bind($$);\n        if (reset) {\n            $$.unexpandCircles();\n        }\n        $$.getCircles(i, id).classed(CLASS.EXPANDED, true).attr('r', r);\n    };\n    c3_chart_internal_fn.unexpandCircles = function (i) {\n        var $$ = this,\n            r = $$.pointR.bind($$);\n        $$.getCircles(i).filter(function () {\n            return $$.d3.select(this).classed(CLASS.EXPANDED);\n        }).classed(CLASS.EXPANDED, false).attr('r', r);\n    };\n    c3_chart_internal_fn.pointR = function (d) {\n        var $$ = this,\n            config = $$.config;\n        return $$.isStepType(d) ? 0 : isFunction(config.point_r) ? config.point_r(d) : config.point_r;\n    };\n    c3_chart_internal_fn.pointExpandedR = function (d) {\n        var $$ = this,\n            config = $$.config;\n        if (config.point_focus_expand_enabled) {\n            return isFunction(config.point_focus_expand_r) ? config.point_focus_expand_r(d) : config.point_focus_expand_r ? config.point_focus_expand_r : $$.pointR(d) * 1.75;\n        } else {\n            return $$.pointR(d);\n        }\n    };\n    c3_chart_internal_fn.pointSelectR = function (d) {\n        var $$ = this,\n            config = $$.config;\n        return isFunction(config.point_select_r) ? config.point_select_r(d) : config.point_select_r ? config.point_select_r : $$.pointR(d) * 4;\n    };\n    c3_chart_internal_fn.isWithinCircle = function (that, r) {\n        var d3 = this.d3,\n            mouse = d3.mouse(that),\n            d3_this = d3.select(that),\n            cx = +d3_this.attr(\"cx\"),\n            cy = +d3_this.attr(\"cy\");\n        return Math.sqrt(Math.pow(cx - mouse[0], 2) + Math.pow(cy - mouse[1], 2)) < r;\n    };\n    c3_chart_internal_fn.isWithinStep = function (that, y) {\n        return Math.abs(y - this.d3.mouse(that)[1]) < 30;\n    };\n\n    c3_chart_internal_fn.getCurrentWidth = function () {\n        var $$ = this,\n            config = $$.config;\n        return config.size_width ? config.size_width : $$.getParentWidth();\n    };\n    c3_chart_internal_fn.getCurrentHeight = function () {\n        var $$ = this,\n            config = $$.config,\n            h = config.size_height ? config.size_height : $$.getParentHeight();\n        return h > 0 ? h : 320 / ($$.hasType('gauge') && !config.gauge_fullCircle ? 2 : 1);\n    };\n    c3_chart_internal_fn.getCurrentPaddingTop = function () {\n        var $$ = this,\n            config = $$.config,\n            padding = isValue(config.padding_top) ? config.padding_top : 0;\n        if ($$.title && $$.title.node()) {\n            padding += $$.getTitlePadding();\n        }\n        return padding;\n    };\n    c3_chart_internal_fn.getCurrentPaddingBottom = function () {\n        var config = this.config;\n        return isValue(config.padding_bottom) ? config.padding_bottom : 0;\n    };\n    c3_chart_internal_fn.getCurrentPaddingLeft = function (withoutRecompute) {\n        var $$ = this,\n            config = $$.config;\n        if (isValue(config.padding_left)) {\n            return config.padding_left;\n        } else if (config.axis_rotated) {\n            return !config.axis_x_show || config.axis_x_inner ? 1 : Math.max(ceil10($$.getAxisWidthByAxisId('x', withoutRecompute)), 40);\n        } else if (!config.axis_y_show || config.axis_y_inner) {\n            // && !config.axis_rotated\n            return $$.axis.getYAxisLabelPosition().isOuter ? 30 : 1;\n        } else {\n            return ceil10($$.getAxisWidthByAxisId('y', withoutRecompute));\n        }\n    };\n    c3_chart_internal_fn.getCurrentPaddingRight = function () {\n        var $$ = this,\n            config = $$.config,\n            defaultPadding = 10,\n            legendWidthOnRight = $$.isLegendRight ? $$.getLegendWidth() + 20 : 0;\n        if (isValue(config.padding_right)) {\n            return config.padding_right + 1; // 1 is needed not to hide tick line\n        } else if (config.axis_rotated) {\n            return defaultPadding + legendWidthOnRight;\n        } else if (!config.axis_y2_show || config.axis_y2_inner) {\n            // && !config.axis_rotated\n            return 2 + legendWidthOnRight + ($$.axis.getY2AxisLabelPosition().isOuter ? 20 : 0);\n        } else {\n            return ceil10($$.getAxisWidthByAxisId('y2')) + legendWidthOnRight;\n        }\n    };\n\n    c3_chart_internal_fn.getParentRectValue = function (key) {\n        var parent = this.selectChart.node(),\n            v;\n        while (parent && parent.tagName !== 'BODY') {\n            try {\n                v = parent.getBoundingClientRect()[key];\n            } catch (e) {\n                if (key === 'width') {\n                    // In IE in certain cases getBoundingClientRect\n                    // will cause an \"unspecified error\"\n                    v = parent.offsetWidth;\n                }\n            }\n            if (v) {\n                break;\n            }\n            parent = parent.parentNode;\n        }\n        return v;\n    };\n    c3_chart_internal_fn.getParentWidth = function () {\n        return this.getParentRectValue('width');\n    };\n    c3_chart_internal_fn.getParentHeight = function () {\n        var h = this.selectChart.style('height');\n        return h.indexOf('px') > 0 ? +h.replace('px', '') : 0;\n    };\n\n    c3_chart_internal_fn.getSvgLeft = function (withoutRecompute) {\n        var $$ = this,\n            config = $$.config,\n            hasLeftAxisRect = config.axis_rotated || !config.axis_rotated && !config.axis_y_inner,\n            leftAxisClass = config.axis_rotated ? CLASS.axisX : CLASS.axisY,\n            leftAxis = $$.main.select('.' + leftAxisClass).node(),\n            svgRect = leftAxis && hasLeftAxisRect ? leftAxis.getBoundingClientRect() : { right: 0 },\n            chartRect = $$.selectChart.node().getBoundingClientRect(),\n            hasArc = $$.hasArcType(),\n            svgLeft = svgRect.right - chartRect.left - (hasArc ? 0 : $$.getCurrentPaddingLeft(withoutRecompute));\n        return svgLeft > 0 ? svgLeft : 0;\n    };\n\n    c3_chart_internal_fn.getAxisWidthByAxisId = function (id, withoutRecompute) {\n        var $$ = this,\n            position = $$.axis.getLabelPositionById(id);\n        return $$.axis.getMaxTickWidth(id, withoutRecompute) + (position.isInner ? 20 : 40);\n    };\n    c3_chart_internal_fn.getHorizontalAxisHeight = function (axisId) {\n        var $$ = this,\n            config = $$.config,\n            h = 30;\n        if (axisId === 'x' && !config.axis_x_show) {\n            return 8;\n        }\n        if (axisId === 'x' && config.axis_x_height) {\n            return config.axis_x_height;\n        }\n        if (axisId === 'y' && !config.axis_y_show) {\n            return config.legend_show && !$$.isLegendRight && !$$.isLegendInset ? 10 : 1;\n        }\n        if (axisId === 'y2' && !config.axis_y2_show) {\n            return $$.rotated_padding_top;\n        }\n        // Calculate x axis height when tick rotated\n        if (axisId === 'x' && !config.axis_rotated && config.axis_x_tick_rotate) {\n            h = 30 + $$.axis.getMaxTickWidth(axisId) * Math.cos(Math.PI * (90 - config.axis_x_tick_rotate) / 180);\n        }\n        // Calculate y axis height when tick rotated\n        if (axisId === 'y' && config.axis_rotated && config.axis_y_tick_rotate) {\n            h = 30 + $$.axis.getMaxTickWidth(axisId) * Math.cos(Math.PI * (90 - config.axis_y_tick_rotate) / 180);\n        }\n        return h + ($$.axis.getLabelPositionById(axisId).isInner ? 0 : 10) + (axisId === 'y2' ? -10 : 0);\n    };\n\n    c3_chart_internal_fn.getEventRectWidth = function () {\n        return Math.max(0, this.xAxis.tickInterval());\n    };\n\n    c3_chart_internal_fn.initBrush = function () {\n        var $$ = this,\n            d3 = $$.d3;\n        $$.brush = d3.svg.brush().on(\"brush\", function () {\n            $$.redrawForBrush();\n        });\n        $$.brush.update = function () {\n            if ($$.context) {\n                $$.context.select('.' + CLASS.brush).call(this);\n            }\n            return this;\n        };\n        $$.brush.scale = function (scale) {\n            return $$.config.axis_rotated ? this.y(scale) : this.x(scale);\n        };\n    };\n    c3_chart_internal_fn.initSubchart = function () {\n        var $$ = this,\n            config = $$.config,\n            context = $$.context = $$.svg.append(\"g\").attr(\"transform\", $$.getTranslate('context')),\n            visibility = config.subchart_show ? 'visible' : 'hidden';\n\n        context.style('visibility', visibility);\n\n        // Define g for chart area\n        context.append('g').attr(\"clip-path\", $$.clipPathForSubchart).attr('class', CLASS.chart);\n\n        // Define g for bar chart area\n        context.select('.' + CLASS.chart).append(\"g\").attr(\"class\", CLASS.chartBars);\n\n        // Define g for line chart area\n        context.select('.' + CLASS.chart).append(\"g\").attr(\"class\", CLASS.chartLines);\n\n        // Add extent rect for Brush\n        context.append(\"g\").attr(\"clip-path\", $$.clipPath).attr(\"class\", CLASS.brush).call($$.brush);\n\n        // ATTENTION: This must be called AFTER chart added\n        // Add Axis\n        $$.axes.subx = context.append(\"g\").attr(\"class\", CLASS.axisX).attr(\"transform\", $$.getTranslate('subx')).attr(\"clip-path\", config.axis_rotated ? \"\" : $$.clipPathForXAxis).style(\"visibility\", config.subchart_axis_x_show ? visibility : 'hidden');\n    };\n    c3_chart_internal_fn.updateTargetsForSubchart = function (targets) {\n        var $$ = this,\n            context = $$.context,\n            config = $$.config,\n            contextLineEnter,\n            contextLineUpdate,\n            contextBarEnter,\n            contextBarUpdate,\n            classChartBar = $$.classChartBar.bind($$),\n            classBars = $$.classBars.bind($$),\n            classChartLine = $$.classChartLine.bind($$),\n            classLines = $$.classLines.bind($$),\n            classAreas = $$.classAreas.bind($$);\n\n        if (config.subchart_show) {\n            //-- Bar --//\n            contextBarUpdate = context.select('.' + CLASS.chartBars).selectAll('.' + CLASS.chartBar).data(targets).attr('class', classChartBar);\n            contextBarEnter = contextBarUpdate.enter().append('g').style('opacity', 0).attr('class', classChartBar);\n            // Bars for each data\n            contextBarEnter.append('g').attr(\"class\", classBars);\n\n            //-- Line --//\n            contextLineUpdate = context.select('.' + CLASS.chartLines).selectAll('.' + CLASS.chartLine).data(targets).attr('class', classChartLine);\n            contextLineEnter = contextLineUpdate.enter().append('g').style('opacity', 0).attr('class', classChartLine);\n            // Lines for each data\n            contextLineEnter.append(\"g\").attr(\"class\", classLines);\n            // Area\n            contextLineEnter.append(\"g\").attr(\"class\", classAreas);\n\n            //-- Brush --//\n            context.selectAll('.' + CLASS.brush + ' rect').attr(config.axis_rotated ? \"width\" : \"height\", config.axis_rotated ? $$.width2 : $$.height2);\n        }\n    };\n    c3_chart_internal_fn.updateBarForSubchart = function (durationForExit) {\n        var $$ = this;\n        $$.contextBar = $$.context.selectAll('.' + CLASS.bars).selectAll('.' + CLASS.bar).data($$.barData.bind($$));\n        $$.contextBar.enter().append('path').attr(\"class\", $$.classBar.bind($$)).style(\"stroke\", 'none').style(\"fill\", $$.color);\n        $$.contextBar.style(\"opacity\", $$.initialOpacity.bind($$));\n        $$.contextBar.exit().transition().duration(durationForExit).style('opacity', 0).remove();\n    };\n    c3_chart_internal_fn.redrawBarForSubchart = function (drawBarOnSub, withTransition, duration) {\n        (withTransition ? this.contextBar.transition(Math.random().toString()).duration(duration) : this.contextBar).attr('d', drawBarOnSub).style('opacity', 1);\n    };\n    c3_chart_internal_fn.updateLineForSubchart = function (durationForExit) {\n        var $$ = this;\n        $$.contextLine = $$.context.selectAll('.' + CLASS.lines).selectAll('.' + CLASS.line).data($$.lineData.bind($$));\n        $$.contextLine.enter().append('path').attr('class', $$.classLine.bind($$)).style('stroke', $$.color);\n        $$.contextLine.style(\"opacity\", $$.initialOpacity.bind($$));\n        $$.contextLine.exit().transition().duration(durationForExit).style('opacity', 0).remove();\n    };\n    c3_chart_internal_fn.redrawLineForSubchart = function (drawLineOnSub, withTransition, duration) {\n        (withTransition ? this.contextLine.transition(Math.random().toString()).duration(duration) : this.contextLine).attr(\"d\", drawLineOnSub).style('opacity', 1);\n    };\n    c3_chart_internal_fn.updateAreaForSubchart = function (durationForExit) {\n        var $$ = this,\n            d3 = $$.d3;\n        $$.contextArea = $$.context.selectAll('.' + CLASS.areas).selectAll('.' + CLASS.area).data($$.lineData.bind($$));\n        $$.contextArea.enter().append('path').attr(\"class\", $$.classArea.bind($$)).style(\"fill\", $$.color).style(\"opacity\", function () {\n            $$.orgAreaOpacity = +d3.select(this).style('opacity');return 0;\n        });\n        $$.contextArea.style(\"opacity\", 0);\n        $$.contextArea.exit().transition().duration(durationForExit).style('opacity', 0).remove();\n    };\n    c3_chart_internal_fn.redrawAreaForSubchart = function (drawAreaOnSub, withTransition, duration) {\n        (withTransition ? this.contextArea.transition(Math.random().toString()).duration(duration) : this.contextArea).attr(\"d\", drawAreaOnSub).style(\"fill\", this.color).style(\"opacity\", this.orgAreaOpacity);\n    };\n    c3_chart_internal_fn.redrawSubchart = function (withSubchart, transitions, duration, durationForExit, areaIndices, barIndices, lineIndices) {\n        var $$ = this,\n            d3 = $$.d3,\n            config = $$.config,\n            drawAreaOnSub,\n            drawBarOnSub,\n            drawLineOnSub;\n\n        $$.context.style('visibility', config.subchart_show ? 'visible' : 'hidden');\n\n        // subchart\n        if (config.subchart_show) {\n            // reflect main chart to extent on subchart if zoomed\n            if (d3.event && d3.event.type === 'zoom') {\n                $$.brush.extent($$.x.orgDomain()).update();\n            }\n            // update subchart elements if needed\n            if (withSubchart) {\n\n                // extent rect\n                if (!$$.brush.empty()) {\n                    $$.brush.extent($$.x.orgDomain()).update();\n                }\n                // setup drawer - MEMO: this must be called after axis updated\n                drawAreaOnSub = $$.generateDrawArea(areaIndices, true);\n                drawBarOnSub = $$.generateDrawBar(barIndices, true);\n                drawLineOnSub = $$.generateDrawLine(lineIndices, true);\n\n                $$.updateBarForSubchart(duration);\n                $$.updateLineForSubchart(duration);\n                $$.updateAreaForSubchart(duration);\n\n                $$.redrawBarForSubchart(drawBarOnSub, duration, duration);\n                $$.redrawLineForSubchart(drawLineOnSub, duration, duration);\n                $$.redrawAreaForSubchart(drawAreaOnSub, duration, duration);\n            }\n        }\n    };\n    c3_chart_internal_fn.redrawForBrush = function () {\n        var $$ = this,\n            x = $$.x;\n        $$.redraw({\n            withTransition: false,\n            withY: $$.config.zoom_rescale,\n            withSubchart: false,\n            withUpdateXDomain: true,\n            withDimension: false\n        });\n        $$.config.subchart_onbrush.call($$.api, x.orgDomain());\n    };\n    c3_chart_internal_fn.transformContext = function (withTransition, transitions) {\n        var $$ = this,\n            subXAxis;\n        if (transitions && transitions.axisSubX) {\n            subXAxis = transitions.axisSubX;\n        } else {\n            subXAxis = $$.context.select('.' + CLASS.axisX);\n            if (withTransition) {\n                subXAxis = subXAxis.transition();\n            }\n        }\n        $$.context.attr(\"transform\", $$.getTranslate('context'));\n        subXAxis.attr(\"transform\", $$.getTranslate('subx'));\n    };\n    c3_chart_internal_fn.getDefaultExtent = function () {\n        var $$ = this,\n            config = $$.config,\n            extent = isFunction(config.axis_x_extent) ? config.axis_x_extent($$.getXDomain($$.data.targets)) : config.axis_x_extent;\n        if ($$.isTimeSeries()) {\n            extent = [$$.parseDate(extent[0]), $$.parseDate(extent[1])];\n        }\n        return extent;\n    };\n\n    c3_chart_internal_fn.initText = function () {\n        var $$ = this;\n        $$.main.select('.' + CLASS.chart).append(\"g\").attr(\"class\", CLASS.chartTexts);\n        $$.mainText = $$.d3.selectAll([]);\n    };\n    c3_chart_internal_fn.updateTargetsForText = function (targets) {\n        var $$ = this,\n            mainTextUpdate,\n            mainTextEnter,\n            classChartText = $$.classChartText.bind($$),\n            classTexts = $$.classTexts.bind($$),\n            classFocus = $$.classFocus.bind($$);\n        mainTextUpdate = $$.main.select('.' + CLASS.chartTexts).selectAll('.' + CLASS.chartText).data(targets).attr('class', function (d) {\n            return classChartText(d) + classFocus(d);\n        });\n        mainTextEnter = mainTextUpdate.enter().append('g').attr('class', classChartText).style('opacity', 0).style(\"pointer-events\", \"none\");\n        mainTextEnter.append('g').attr('class', classTexts);\n    };\n    c3_chart_internal_fn.updateText = function (durationForExit) {\n        var $$ = this,\n            config = $$.config,\n            barOrLineData = $$.barOrLineData.bind($$),\n            classText = $$.classText.bind($$);\n        $$.mainText = $$.main.selectAll('.' + CLASS.texts).selectAll('.' + CLASS.text).data(barOrLineData);\n        $$.mainText.enter().append('text').attr(\"class\", classText).attr('text-anchor', function (d) {\n            return config.axis_rotated ? d.value < 0 ? 'end' : 'start' : 'middle';\n        }).style(\"stroke\", 'none').style(\"fill\", function (d) {\n            return $$.color(d);\n        }).style(\"fill-opacity\", 0);\n        $$.mainText.text(function (d, i, j) {\n            return $$.dataLabelFormat(d.id)(d.value, d.id, i, j);\n        });\n        $$.mainText.exit().transition().duration(durationForExit).style('fill-opacity', 0).remove();\n    };\n    c3_chart_internal_fn.redrawText = function (xForText, yForText, forFlow, withTransition) {\n        return [(withTransition ? this.mainText.transition() : this.mainText).attr('x', xForText).attr('y', yForText).style(\"fill\", this.color).style(\"fill-opacity\", forFlow ? 0 : this.opacityForText.bind(this))];\n    };\n    c3_chart_internal_fn.getTextRect = function (text, cls, element) {\n        var dummy = this.d3.select('body').append('div').classed('c3', true),\n            svg = dummy.append(\"svg\").style('visibility', 'hidden').style('position', 'fixed').style('top', 0).style('left', 0),\n            font = this.d3.select(element).style('font'),\n            rect;\n        svg.selectAll('.dummy').data([text]).enter().append('text').classed(cls ? cls : \"\", true).style('font', font).text(text).each(function () {\n            rect = this.getBoundingClientRect();\n        });\n        dummy.remove();\n        return rect;\n    };\n    c3_chart_internal_fn.generateXYForText = function (areaIndices, barIndices, lineIndices, forX) {\n        var $$ = this,\n            getAreaPoints = $$.generateGetAreaPoints(areaIndices, false),\n            getBarPoints = $$.generateGetBarPoints(barIndices, false),\n            getLinePoints = $$.generateGetLinePoints(lineIndices, false),\n            getter = forX ? $$.getXForText : $$.getYForText;\n        return function (d, i) {\n            var getPoints = $$.isAreaType(d) ? getAreaPoints : $$.isBarType(d) ? getBarPoints : getLinePoints;\n            return getter.call($$, getPoints(d, i), d, this);\n        };\n    };\n    c3_chart_internal_fn.getXForText = function (points, d, textElement) {\n        var $$ = this,\n            box = textElement.getBoundingClientRect(),\n            xPos,\n            padding;\n        if ($$.config.axis_rotated) {\n            padding = $$.isBarType(d) ? 4 : 6;\n            xPos = points[2][1] + padding * (d.value < 0 ? -1 : 1);\n        } else {\n            xPos = $$.hasType('bar') ? (points[2][0] + points[0][0]) / 2 : points[0][0];\n        }\n        // show labels regardless of the domain if value is null\n        if (d.value === null) {\n            if (xPos > $$.width) {\n                xPos = $$.width - box.width;\n            } else if (xPos < 0) {\n                xPos = 4;\n            }\n        }\n        return xPos;\n    };\n    c3_chart_internal_fn.getYForText = function (points, d, textElement) {\n        var $$ = this,\n            box = textElement.getBoundingClientRect(),\n            yPos;\n        if ($$.config.axis_rotated) {\n            yPos = (points[0][0] + points[2][0] + box.height * 0.6) / 2;\n        } else {\n            yPos = points[2][1];\n            if (d.value < 0 || d.value === 0 && !$$.hasPositiveValue) {\n                yPos += box.height;\n                if ($$.isBarType(d) && $$.isSafari()) {\n                    yPos -= 3;\n                } else if (!$$.isBarType(d) && $$.isChrome()) {\n                    yPos += 3;\n                }\n            } else {\n                yPos += $$.isBarType(d) ? -3 : -6;\n            }\n        }\n        // show labels regardless of the domain if value is null\n        if (d.value === null && !$$.config.axis_rotated) {\n            if (yPos < box.height) {\n                yPos = box.height;\n            } else if (yPos > this.height) {\n                yPos = this.height - 4;\n            }\n        }\n        return yPos;\n    };\n\n    c3_chart_internal_fn.initTitle = function () {\n        var $$ = this;\n        $$.title = $$.svg.append(\"text\").text($$.config.title_text).attr(\"class\", $$.CLASS.title);\n    };\n    c3_chart_internal_fn.redrawTitle = function () {\n        var $$ = this;\n        $$.title.attr(\"x\", $$.xForTitle.bind($$)).attr(\"y\", $$.yForTitle.bind($$));\n    };\n    c3_chart_internal_fn.xForTitle = function () {\n        var $$ = this,\n            config = $$.config,\n            position = config.title_position || 'left',\n            x;\n        if (position.indexOf('right') >= 0) {\n            x = $$.currentWidth - $$.getTextRect($$.title.node().textContent, $$.CLASS.title, $$.title.node()).width - config.title_padding.right;\n        } else if (position.indexOf('center') >= 0) {\n            x = ($$.currentWidth - $$.getTextRect($$.title.node().textContent, $$.CLASS.title, $$.title.node()).width) / 2;\n        } else {\n            // left\n            x = config.title_padding.left;\n        }\n        return x;\n    };\n    c3_chart_internal_fn.yForTitle = function () {\n        var $$ = this;\n        return $$.config.title_padding.top + $$.getTextRect($$.title.node().textContent, $$.CLASS.title, $$.title.node()).height;\n    };\n    c3_chart_internal_fn.getTitlePadding = function () {\n        var $$ = this;\n        return $$.yForTitle() + $$.config.title_padding.bottom;\n    };\n\n    c3_chart_internal_fn.initTooltip = function () {\n        var $$ = this,\n            config = $$.config,\n            i;\n        $$.tooltip = $$.selectChart.style(\"position\", \"relative\").append(\"div\").attr('class', CLASS.tooltipContainer).style(\"position\", \"absolute\").style(\"pointer-events\", \"none\").style(\"display\", \"none\");\n        // Show tooltip if needed\n        if (config.tooltip_init_show) {\n            if ($$.isTimeSeries() && isString(config.tooltip_init_x)) {\n                config.tooltip_init_x = $$.parseDate(config.tooltip_init_x);\n                for (i = 0; i < $$.data.targets[0].values.length; i++) {\n                    if ($$.data.targets[0].values[i].x - config.tooltip_init_x === 0) {\n                        break;\n                    }\n                }\n                config.tooltip_init_x = i;\n            }\n            $$.tooltip.html(config.tooltip_contents.call($$, $$.data.targets.map(function (d) {\n                return $$.addName(d.values[config.tooltip_init_x]);\n            }), $$.axis.getXAxisTickFormat(), $$.getYFormat($$.hasArcType()), $$.color));\n            $$.tooltip.style(\"top\", config.tooltip_init_position.top).style(\"left\", config.tooltip_init_position.left).style(\"display\", \"block\");\n        }\n    };\n    c3_chart_internal_fn.getTooltipSortFunction = function () {\n        var $$ = this,\n            config = $$.config;\n\n        if (config.data_groups.length === 0 || config.tooltip_order !== undefined) {\n            // if data are not grouped or if an order is specified\n            // for the tooltip values we sort them by their values\n\n            var order = config.tooltip_order;\n            if (order === undefined) {\n                order = config.data_order;\n            }\n\n            var valueOf = function valueOf(obj) {\n                return obj ? obj.value : null;\n            };\n\n            // if data are not grouped, we sort them by their value\n            if (isString(order) && order.toLowerCase() === 'asc') {\n                return function (a, b) {\n                    return valueOf(a) - valueOf(b);\n                };\n            } else if (isString(order) && order.toLowerCase() === 'desc') {\n                return function (a, b) {\n                    return valueOf(b) - valueOf(a);\n                };\n            } else if (isFunction(order)) {\n\n                // if the function is from data_order we need\n                // to wrap the returned function in order to format\n                // the sorted value to the expected format\n\n                var sortFunction = order;\n\n                if (config.tooltip_order === undefined) {\n                    sortFunction = function sortFunction(a, b) {\n                        return order(a ? {\n                            id: a.id,\n                            values: [a]\n                        } : null, b ? {\n                            id: b.id,\n                            values: [b]\n                        } : null);\n                    };\n                }\n\n                return sortFunction;\n            } else if (isArray(order)) {\n                return function (a, b) {\n                    return order.indexOf(a.id) - order.indexOf(b.id);\n                };\n            }\n        } else {\n            // if data are grouped, we follow the order of grouped targets\n            var ids = $$.orderTargets($$.data.targets).map(function (i) {\n                return i.id;\n            });\n\n            // if it was either asc or desc we need to invert the order\n            // returned by orderTargets\n            if ($$.isOrderAsc() || $$.isOrderDesc()) {\n                ids = ids.reverse();\n            }\n\n            return function (a, b) {\n                return ids.indexOf(a.id) - ids.indexOf(b.id);\n            };\n        }\n    };\n    c3_chart_internal_fn.getTooltipContent = function (d, defaultTitleFormat, defaultValueFormat, color) {\n        var $$ = this,\n            config = $$.config,\n            titleFormat = config.tooltip_format_title || defaultTitleFormat,\n            nameFormat = config.tooltip_format_name || function (name) {\n            return name;\n        },\n            valueFormat = config.tooltip_format_value || defaultValueFormat,\n            text,\n            i,\n            title,\n            value,\n            name,\n            bgcolor;\n\n        var tooltipSortFunction = this.getTooltipSortFunction();\n        if (tooltipSortFunction) {\n            d.sort(tooltipSortFunction);\n        }\n\n        for (i = 0; i < d.length; i++) {\n            if (!(d[i] && (d[i].value || d[i].value === 0))) {\n                continue;\n            }\n\n            if (!text) {\n                title = sanitise(titleFormat ? titleFormat(d[i].x) : d[i].x);\n                text = \"<table class='\" + $$.CLASS.tooltip + \"'>\" + (title || title === 0 ? \"<tr><th colspan='2'>\" + title + \"</th></tr>\" : \"\");\n            }\n\n            value = sanitise(valueFormat(d[i].value, d[i].ratio, d[i].id, d[i].index, d));\n            if (value !== undefined) {\n                // Skip elements when their name is set to null\n                if (d[i].name === null) {\n                    continue;\n                }\n                name = sanitise(nameFormat(d[i].name, d[i].ratio, d[i].id, d[i].index));\n                bgcolor = $$.levelColor ? $$.levelColor(d[i].value) : color(d[i].id);\n\n                text += \"<tr class='\" + $$.CLASS.tooltipName + \"-\" + $$.getTargetSelectorSuffix(d[i].id) + \"'>\";\n                text += \"<td class='name'><span style='background-color:\" + bgcolor + \"'></span>\" + name + \"</td>\";\n                text += \"<td class='value'>\" + value + \"</td>\";\n                text += \"</tr>\";\n            }\n        }\n        return text + \"</table>\";\n    };\n    c3_chart_internal_fn.tooltipPosition = function (dataToShow, tWidth, tHeight, element) {\n        var $$ = this,\n            config = $$.config,\n            d3 = $$.d3;\n        var svgLeft, tooltipLeft, tooltipRight, tooltipTop, chartRight;\n        var forArc = $$.hasArcType(),\n            mouse = d3.mouse(element);\n        // Determin tooltip position\n        if (forArc) {\n            tooltipLeft = ($$.width - ($$.isLegendRight ? $$.getLegendWidth() : 0)) / 2 + mouse[0];\n            tooltipTop = ($$.hasType('gauge') ? $$.height : $$.height / 2) + mouse[1] + 20;\n        } else {\n            svgLeft = $$.getSvgLeft(true);\n            if (config.axis_rotated) {\n                tooltipLeft = svgLeft + mouse[0] + 100;\n                tooltipRight = tooltipLeft + tWidth;\n                chartRight = $$.currentWidth - $$.getCurrentPaddingRight();\n                tooltipTop = $$.x(dataToShow[0].x) + 20;\n            } else {\n                tooltipLeft = svgLeft + $$.getCurrentPaddingLeft(true) + $$.x(dataToShow[0].x) + 20;\n                tooltipRight = tooltipLeft + tWidth;\n                chartRight = svgLeft + $$.currentWidth - $$.getCurrentPaddingRight();\n                tooltipTop = mouse[1] + 15;\n            }\n\n            if (tooltipRight > chartRight) {\n                // 20 is needed for Firefox to keep tooltip width\n                tooltipLeft -= tooltipRight - chartRight + 20;\n            }\n            if (tooltipTop + tHeight > $$.currentHeight) {\n                tooltipTop -= tHeight + 30;\n            }\n        }\n        if (tooltipTop < 0) {\n            tooltipTop = 0;\n        }\n        return { top: tooltipTop, left: tooltipLeft };\n    };\n    c3_chart_internal_fn.showTooltip = function (selectedData, element) {\n        var $$ = this,\n            config = $$.config;\n        var tWidth, tHeight, position;\n        var forArc = $$.hasArcType(),\n            dataToShow = selectedData.filter(function (d) {\n            return d && isValue(d.value);\n        }),\n            positionFunction = config.tooltip_position || c3_chart_internal_fn.tooltipPosition;\n        if (dataToShow.length === 0 || !config.tooltip_show) {\n            return;\n        }\n        $$.tooltip.html(config.tooltip_contents.call($$, selectedData, $$.axis.getXAxisTickFormat(), $$.getYFormat(forArc), $$.color)).style(\"display\", \"block\");\n\n        // Get tooltip dimensions\n        tWidth = $$.tooltip.property('offsetWidth');\n        tHeight = $$.tooltip.property('offsetHeight');\n\n        position = positionFunction.call(this, dataToShow, tWidth, tHeight, element);\n        // Set tooltip\n        $$.tooltip.style(\"top\", position.top + \"px\").style(\"left\", position.left + 'px');\n    };\n    c3_chart_internal_fn.hideTooltip = function () {\n        this.tooltip.style(\"display\", \"none\");\n    };\n\n    c3_chart_internal_fn.setTargetType = function (targetIds, type) {\n        var $$ = this,\n            config = $$.config;\n        $$.mapToTargetIds(targetIds).forEach(function (id) {\n            $$.withoutFadeIn[id] = type === config.data_types[id];\n            config.data_types[id] = type;\n        });\n        if (!targetIds) {\n            config.data_type = type;\n        }\n    };\n    c3_chart_internal_fn.hasType = function (type, targets) {\n        var $$ = this,\n            types = $$.config.data_types,\n            has = false;\n        targets = targets || $$.data.targets;\n        if (targets && targets.length) {\n            targets.forEach(function (target) {\n                var t = types[target.id];\n                if (t && t.indexOf(type) >= 0 || !t && type === 'line') {\n                    has = true;\n                }\n            });\n        } else if (Object.keys(types).length) {\n            Object.keys(types).forEach(function (id) {\n                if (types[id] === type) {\n                    has = true;\n                }\n            });\n        } else {\n            has = $$.config.data_type === type;\n        }\n        return has;\n    };\n    c3_chart_internal_fn.hasArcType = function (targets) {\n        return this.hasType('pie', targets) || this.hasType('donut', targets) || this.hasType('gauge', targets);\n    };\n    c3_chart_internal_fn.isLineType = function (d) {\n        var config = this.config,\n            id = isString(d) ? d : d.id;\n        return !config.data_types[id] || ['line', 'spline', 'area', 'area-spline', 'step', 'area-step'].indexOf(config.data_types[id]) >= 0;\n    };\n    c3_chart_internal_fn.isStepType = function (d) {\n        var id = isString(d) ? d : d.id;\n        return ['step', 'area-step'].indexOf(this.config.data_types[id]) >= 0;\n    };\n    c3_chart_internal_fn.isSplineType = function (d) {\n        var id = isString(d) ? d : d.id;\n        return ['spline', 'area-spline'].indexOf(this.config.data_types[id]) >= 0;\n    };\n    c3_chart_internal_fn.isAreaType = function (d) {\n        var id = isString(d) ? d : d.id;\n        return ['area', 'area-spline', 'area-step'].indexOf(this.config.data_types[id]) >= 0;\n    };\n    c3_chart_internal_fn.isBarType = function (d) {\n        var id = isString(d) ? d : d.id;\n        return this.config.data_types[id] === 'bar';\n    };\n    c3_chart_internal_fn.isScatterType = function (d) {\n        var id = isString(d) ? d : d.id;\n        return this.config.data_types[id] === 'scatter';\n    };\n    c3_chart_internal_fn.isPieType = function (d) {\n        var id = isString(d) ? d : d.id;\n        return this.config.data_types[id] === 'pie';\n    };\n    c3_chart_internal_fn.isGaugeType = function (d) {\n        var id = isString(d) ? d : d.id;\n        return this.config.data_types[id] === 'gauge';\n    };\n    c3_chart_internal_fn.isDonutType = function (d) {\n        var id = isString(d) ? d : d.id;\n        return this.config.data_types[id] === 'donut';\n    };\n    c3_chart_internal_fn.isArcType = function (d) {\n        return this.isPieType(d) || this.isDonutType(d) || this.isGaugeType(d);\n    };\n    c3_chart_internal_fn.lineData = function (d) {\n        return this.isLineType(d) ? [d] : [];\n    };\n    c3_chart_internal_fn.arcData = function (d) {\n        return this.isArcType(d.data) ? [d] : [];\n    };\n    /* not used\n     function scatterData(d) {\n     return isScatterType(d) ? d.values : [];\n     }\n     */\n    c3_chart_internal_fn.barData = function (d) {\n        return this.isBarType(d) ? d.values : [];\n    };\n    c3_chart_internal_fn.lineOrScatterData = function (d) {\n        return this.isLineType(d) || this.isScatterType(d) ? d.values : [];\n    };\n    c3_chart_internal_fn.barOrLineData = function (d) {\n        return this.isBarType(d) || this.isLineType(d) ? d.values : [];\n    };\n    c3_chart_internal_fn.isInterpolationType = function (type) {\n        return ['linear', 'linear-closed', 'basis', 'basis-open', 'basis-closed', 'bundle', 'cardinal', 'cardinal-open', 'cardinal-closed', 'monotone'].indexOf(type) >= 0;\n    };\n\n    c3_chart_internal_fn.isSafari = function () {\n        var ua = window.navigator.userAgent;\n        return ua.indexOf('Safari') >= 0 && ua.indexOf('Chrome') < 0;\n    };\n    c3_chart_internal_fn.isChrome = function () {\n        var ua = window.navigator.userAgent;\n        return ua.indexOf('Chrome') >= 0;\n    };\n\n    c3_chart_internal_fn.initZoom = function () {\n        var $$ = this,\n            d3 = $$.d3,\n            config = $$.config,\n            startEvent;\n\n        $$.zoom = d3.behavior.zoom().on(\"zoomstart\", function () {\n            startEvent = d3.event.sourceEvent;\n            $$.zoom.altDomain = d3.event.sourceEvent.altKey ? $$.x.orgDomain() : null;\n            config.zoom_onzoomstart.call($$.api, d3.event.sourceEvent);\n        }).on(\"zoom\", function () {\n            $$.redrawForZoom.call($$);\n        }).on('zoomend', function () {\n            var event = d3.event.sourceEvent;\n            // if click, do nothing. otherwise, click interaction will be canceled.\n            if (event && startEvent.clientX === event.clientX && startEvent.clientY === event.clientY) {\n                return;\n            }\n            $$.redrawEventRect();\n            $$.updateZoom();\n            config.zoom_onzoomend.call($$.api, $$.x.orgDomain());\n        });\n        $$.zoom.scale = function (scale) {\n            return config.axis_rotated ? this.y(scale) : this.x(scale);\n        };\n        $$.zoom.orgScaleExtent = function () {\n            var extent = config.zoom_extent ? config.zoom_extent : [1, 10];\n            return [extent[0], Math.max($$.getMaxDataCount() / extent[1], extent[1])];\n        };\n        $$.zoom.updateScaleExtent = function () {\n            var ratio = diffDomain($$.x.orgDomain()) / diffDomain($$.getZoomDomain()),\n                extent = this.orgScaleExtent();\n            this.scaleExtent([extent[0] * ratio, extent[1] * ratio]);\n            return this;\n        };\n    };\n    c3_chart_internal_fn.getZoomDomain = function () {\n        var $$ = this,\n            config = $$.config,\n            d3 = $$.d3,\n            min = d3.min([$$.orgXDomain[0], config.zoom_x_min]),\n            max = d3.max([$$.orgXDomain[1], config.zoom_x_max]);\n        return [min, max];\n    };\n    c3_chart_internal_fn.updateZoom = function () {\n        var $$ = this,\n            z = $$.config.zoom_enabled ? $$.zoom : function () {};\n        $$.main.select('.' + CLASS.zoomRect).call(z).on(\"dblclick.zoom\", null);\n        $$.main.selectAll('.' + CLASS.eventRect).call(z).on(\"dblclick.zoom\", null);\n    };\n    c3_chart_internal_fn.redrawForZoom = function () {\n        var $$ = this,\n            d3 = $$.d3,\n            config = $$.config,\n            zoom = $$.zoom,\n            x = $$.x;\n        if (!config.zoom_enabled) {\n            return;\n        }\n        if ($$.filterTargetsToShow($$.data.targets).length === 0) {\n            return;\n        }\n        if (d3.event.sourceEvent.type === 'mousemove' && zoom.altDomain) {\n            x.domain(zoom.altDomain);\n            zoom.scale(x).updateScaleExtent();\n            return;\n        }\n        if ($$.isCategorized() && x.orgDomain()[0] === $$.orgXDomain[0]) {\n            x.domain([$$.orgXDomain[0] - 1e-10, x.orgDomain()[1]]);\n        }\n        $$.redraw({\n            withTransition: false,\n            withY: config.zoom_rescale,\n            withSubchart: false,\n            withEventRect: false,\n            withDimension: false\n        });\n        if (d3.event.sourceEvent.type === 'mousemove') {\n            $$.cancelClick = true;\n        }\n        config.zoom_onzoom.call($$.api, x.orgDomain());\n    };\n\n    return c3;\n\n})));\n","import c3 from 'c3';\nimport d3 from 'd3';\n\nimport { each } from '../utils/each';\nimport { extend } from '../utils/extend';\nimport { extendDeep } from '../utils/extend-deep';\nimport isDateString from '../utils/assert-date-string';\nimport c3DefaultDateFormat from './c3/extensions/default-date-format';\nimport c3PaginatingLegend from './c3/extensions/paginating-legend';\nimport c3TooltipContents from './c3/extensions/tooltip-contents';\n\nimport message from './default/message';\nimport metric from './default/metric';\nimport table from './default/table';\nimport spinner from './default/spinner';\n\nconst types = {\n  message,\n  metric,\n  table,\n  spinner,\n};\n\nexport default function(lib) {\n  var timer, delay;\n  bindResizeListener(function(){\n    if (timer) {\n      clearTimeout(timer);\n    }\n    delay = (lib.visuals.length > 12) ? 1000 : 250;\n    timer = setTimeout(function(){\n      each(lib.visuals, function(chart){\n        if (chart.view._artifacts.c3) {\n          chart.view._artifacts.c3.resize();\n        }\n      });\n    }, delay);\n  });\n\n  defineC3();\n  return types;\n};\n\nfunction defineC3(){\n  var c3Types = [\n    // Standard types\n    'area',\n    'area-spline',\n    'area-step',\n    'bar',\n    'donut',\n    'gauge',\n    'line',\n    'pie',\n    'step',\n    'spline',\n\n    // Horizontal variant types\n    'horizontal-area',\n    'horizontal-area-spline',\n    'horizontal-area-step',\n    'horizontal-bar',\n    'horizontal-line',\n    'horizontal-step',\n    'horizontal-spline'\n  ];\n\n  function getDefaultOptions(){\n    var DEFAULT_OPTIONS,\n        ENFORCED_OPTIONS,\n        options;\n\n    DEFAULT_OPTIONS = {\n      axis: {},\n      color: {},\n      data: {\n        order: null\n      },\n      legend: {\n        position: 'right',\n        show: true\n      },\n      padding: {},\n      point: {\n        focus: {\n          expand: {\n            enabled: false\n          }\n        },\n        r: 2,\n        show: true\n      },\n      tooltip: {},\n      transition: {\n        duration: 0\n      }\n    };\n\n    ENFORCED_OPTIONS = {\n      bindto: this.el().querySelector('.' + this.theme() + '-rendering'),\n      color: {\n        pattern: this.colors()\n      },\n      data: {\n        colors: extend({}, this.colorMapping()),\n        columns: [],\n        type: this.type().replace('horizontal-', '')\n      },\n      size: {\n        height: this.height() ? this.height() - this.el().offsetHeight : 400,\n        width: this.width()\n      },\n      tooltip: {}\n    };\n\n    // Apply chartOptions\n    options = extendDeep({}, DEFAULT_OPTIONS, this.chartOptions());\n\n    // Apply enforced options\n    options = extendDeep(options, ENFORCED_OPTIONS);\n    options.color.pattern = ENFORCED_OPTIONS.color.pattern;\n    options.data.colors = ENFORCED_OPTIONS.data.colors;\n    options.data.columns = ENFORCED_OPTIONS.data.columns;\n\n    return options;\n  }\n\n  each(c3Types, function(type, index) {\n    types[type] = {\n      render: function(){\n        var options = getDefaultOptions.call(this);\n\n        if (this.data()[0].length === 1 || this.data().length === 1) {\n          this.message('No data to display');\n          return;\n        }\n\n        if (type === 'gauge') {\n          // Accommodate a neat bug:\n          options.legend.position = 'bottom';\n          options.data.columns = [[\n            this.title() || this.data()[1][0],\n            this.data()[1][1]\n          ]];\n        }\n        else if (type === 'pie' || type === 'donut') {\n          options.data.columns = this.data().slice(1);\n        }\n        else {\n\n          // Apply formatting for horizontal variant types\n          if (type.indexOf('horizontal-') > -1) {\n            options.axis.rotated = type.indexOf('horizontal-') > -1;\n          }\n\n          if (isDateString(this.data()[1][0])) {\n            // TIMESERIES\n            options.axis.x = options.axis.x || {};\n            options.axis.x.type = 'timeseries';\n            options.axis.x.tick = options.axis.x.tick || {\n              format: this.dateFormat() || c3DefaultDateFormat(this.data()[1][0], this.data()[2] ? this.data()[2][0] : this.data()[1][0]),\n              culling: { max: 5 }\n            };\n\n            options.data.columns[0] = [];\n            each(this.dataset.selectColumn(0), function(cell, i){\n              if (i > 0) {\n                cell = new Date(cell);\n              }\n              options.data.columns[0][i] = cell;\n            });\n            options.data.columns[0][0] = 'x';\n            options.data.x = 'x';\n            if (this.stacked() && this.data()[0].length > 2) {\n              options.data.groups = [ this.dataset.selectRow(0).slice(1) ];\n            }\n          }\n          else {\n            // CATEGORIES\n            options.axis.x = options.axis.x || {};\n            options.axis.x.type = 'category';\n            options.axis.x.categories = this.dataset.selectColumn(0).slice(1);\n            if (this.stacked() && this.data()[0].length > 2) {\n              options.data.groups = [ this.dataset.selectRow(0).slice(1) ];\n            }\n          }\n\n          if (this.data()[0].length === 2) {\n            options.legend.show = false;\n          }\n\n          each(this.data()[0], function(cell, i){\n            if (i > 0) {\n              options.data.columns.push(this.dataset.selectColumn(i));\n            }\n          }.bind(this));\n\n        }\n\n        if (options.legend.show === true\n          && options.legend.position === 'right'\n            && ['gauge'].indexOf(type.replace('horizontal-', ''))) {\n\n                // Apply custom color handling\n                options.data.color = c3CustomDataMapping.bind(this);\n\n                // Apply custom tooltip\n                options.tooltip = {\n                  contents: c3TooltipContents,\n                  format: {\n                    value: c3CustomTooltipFiltering.bind(this)\n                  }\n                };\n\n                options.legend.show = false;\n                var paddedWidth = this.el().querySelector('.' + this.theme() + '-rendering').offsetWidth - 100;\n                options.size.width = options.size.width || paddedWidth;\n                this.el().querySelector('.' + this.theme() + '-rendering').setAttribute('style', 'margin-right: 120px;');\n\n                // Render artifacts\n                this.view._artifacts['c3'] = c3.generate(options);\n                c3PaginatingLegend.call(this, options.data.columns);\n        }\n        else {\n          options.legend.show = false;\n          this.view._artifacts['c3'] = c3.generate(options);\n        }\n\n      },\n      update: function(){\n        // no special update handling\n        this.render();\n      },\n      destroy: function(){\n        if (this.view._artifacts['c3']) {\n          this.view._artifacts['c3'].destroy();\n          this.view._artifacts['c3'] = null;\n        }\n      }\n    };\n  });\n}\n\nfunction c3CustomDataMapping(color, d) {\n  var scope;\n  if (this.view._artifacts.pagination\n    && this.type() !== 'gauge'\n      /*&& this.type() !== 'pie'\n        && this.type() !== 'donut'*/) {\n          scope = this.view._artifacts.pagination.labels;\n          if ((d.id && scope.indexOf(d.id) > -1)\n            || (d && !d.id && scope.indexOf(d) > -1)) {\n              return color;\n          }\n          else {\n            if (this.type() === 'donut' || this.type() === 'pie') {\n              return 'rgba(0,0,0,.1)';\n            }\n            else {\n              return 'rgba(0,0,0,.07)';\n            }\n          }\n  }\n  else {\n    return color;\n  }\n}\n\nfunction c3CustomTooltipFiltering(value, ratio, id, index) {\n  var scope;\n  if (this.view._artifacts.pagination\n    && this.type() !== 'gauge'\n      /*&& this.type() !== 'pie'\n        && this.type() !== 'donut'*/) {\n          scope = this.view._artifacts.pagination.labels;\n          if (scope.indexOf(id) > -1) {\n            return value;\n          }\n  }\n  else {\n    return value;\n  }\n}\n\nfunction bindResizeListener(fn){\n  if ('undefined' === typeof window) return;\n  window.onresize = window.resize = function(){};\n  if (window.addEventListener) {\n    window.addEventListener('resize', fn, true);\n  }\n  else if (window.attachEvent) {\n    window.attachEvent('onresize', fn);\n  }\n}\n","import Dataset from './dataset';\nimport { extend } from './utils/extend';\nimport { stripHtmlTags } from './utils/strip-html-tags';\n\nexport default function (data) {\n  if (!arguments.length) return this.dataset.data();\n  if (data instanceof Dataset) {\n    this.dataset = data;\n    return this;\n  }\n  else {\n    return parseResponse.call(this, data);\n  }\n};\n\nfunction parseResponse(response) {\n  var dataset,\n      indexBy,\n      meta,\n      parser,\n      parserArgs = [],\n      query,\n      selectedParser,\n      title,\n      type;\n\n  indexBy = this.indexBy() ? this.indexBy() : 'timestamp.start';\n  meta = response.metadata || {};\n  query = (typeof response.query !== 'undefined') ? response.query : {};\n\n  // Ensure all required params are present\n  query = extend({\n    analysis_type: null,\n    event_collection: null,\n    filters: [],\n    group_by: null,\n    interval: null,\n    timeframe: null,\n    timezone: null\n  }, query);\n\n  if (query.analysis_type === 'funnel') {\n    parser = 'funnel';\n  }\n  else if (query.analysis_type === 'extraction'){\n    parser = 'extraction';\n  }\n  else if (query.analysis_type === 'select_unique') {\n    if (!query.group_by && !query.interval) {\n      parser = 'list';\n    }\n    // else { Not supported }\n  }\n  else if (query.analysis_type) {\n    if (!query.group_by && !query.interval) {\n      parser = 'metric';\n    }\n    else if (query.group_by && !query.interval) {\n      if (query.group_by instanceof Array && query.group_by.length > 1) {\n        parser = 'double-grouped-metric';\n        parserArgs.push(query.group_by);\n      }\n      else {\n        parser = 'grouped-metric';\n      }\n    }\n    else if (query.interval && !query.group_by) {\n      parser = 'interval';\n      parserArgs.push(indexBy);\n    }\n    else if (query.group_by && query.interval) {\n      if (query.group_by instanceof Array && query.group_by.length > 1) {\n        parser = 'double-grouped-interval';\n        parserArgs.push(query.group_by);\n        parserArgs.push(indexBy);\n      }\n      else {\n        parser = 'grouped-interval';\n        parserArgs.push(indexBy);\n      }\n    }\n  }\n\n  if (!parser) {\n\n    // Metric\n    // -------------------------------\n    if (typeof response.result === 'number'){\n      parser = 'metric';\n    }\n\n    // Everything else\n    // -------------------------------\n    if (response.result instanceof Array && response.result.length > 0){\n\n      // Interval w/ single value\n      // -------------------------------\n      if (response.result[0].timeframe && (typeof response.result[0].value == 'number' || response.result[0].value == null)) {\n        parser = 'interval';\n        parserArgs.push(indexBy)\n      }\n\n      // Static GroupBy\n      // -------------------------------\n      if (typeof response.result[0].result == 'number'){\n        parser = 'grouped-metric';\n      }\n\n      // Grouped Interval\n      // -------------------------------\n      if (response.result[0].value instanceof Array){\n        parser = 'grouped-interval';\n        parserArgs.push(indexBy)\n      }\n\n      // Funnel\n      // -------------------------------\n      if (typeof response.result[0] === 'number'\n        && typeof response.steps !== 'undefined'){\n          parser = 'funnel';\n          // Move steps into query object\n          query.steps = response.steps;\n      }\n\n      // Select Unique\n      // -------------------------------\n      if ((typeof response.result[0] === 'string' || typeof response.result[0] == 'number') && typeof response.steps === 'undefined'){\n        parser = 'list';\n      }\n\n      // Extraction\n      // -------------------------------\n      if (!parser) {\n        parser = 'extraction';\n      }\n    }\n  }\n\n  // Set title from saved query body, or create a default title\n  if (!this.title()) {\n    if (meta.display_name) {\n      title = meta.display_name;\n    }\n    else {\n      title = getDefaultTitle(query);\n    }\n    this.title(title);\n  }\n\n  // Set type from saved query body, or use a default type\n  if (!this.type()) {\n    if (meta.visualization && meta.visualization.chart_type) {\n      type = meta.visualization.chart_type;\n    }\n    else {\n      type = getDefaultType(parser);\n    }\n    this.type(type);\n  }\n\n  // Define the appropriate parser\n  selectedParser = Dataset.parser.apply(this, [parser].concat(parserArgs));\n\n  // Parse the response with augmented query body\n  dataset = selectedParser(extend(response, { 'query': query }));\n\n  // Set true dates for 'interval' data\n  if (parser.indexOf('interval') > -1) {\n    dataset.updateColumn(0, function(value, i){\n      return new Date(value);\n    });\n  }\n\n  dataset.updateRow(0, function(value, i){\n    return stripHtmlTags(value);\n  });\n\n  this.dataset = dataset;\n\n  return this;\n}\n\nfunction getDefaultTitle(query) {\n  var analysis = query.analysis_type ? query.analysis_type.replace('_', ' ') : '',\n      title;\n\n  title = analysis.replace( /\\b./g, function(a){\n    return a.toUpperCase();\n  });\n\n  if (query.event_collection) {\n    title += ' - ' + query.event_collection;\n  }\n  return title;\n}\n\nfunction getDefaultType(parser) {\n  let type;\n  switch (parser) {\n    case 'metric':\n      type = 'metric';\n      break;\n    case 'interval':\n      type = 'area';\n      break;\n    case 'grouped-metric':\n    case 'double-grouped-metric':\n      type = 'bar';\n      break;\n    case 'grouped-interval':\n    case 'double-grouped-interval':\n      type = 'line';\n      break;\n    case 'funnel':\n      type = 'horizontal-bar';\n      break;\n    case 'list':\n    case 'extraction':\n    default:\n      type = 'table';\n  }\n  return type;\n}\n","// Pure awesomeness by Will Rayner (penguinboy)\n// https://gist.github.com/penguinboy/762197\n\nexport function flatten(ob){\n  var toReturn = {};\n  for (var i in ob) {\n    if (!ob.hasOwnProperty(i)) continue;\n    if ((typeof ob[i]) == 'object' && ob[i] !== null) {\n      var flatObject = flatten(ob[i]);\n      for (var x in flatObject) {\n        if (!flatObject.hasOwnProperty(x)) continue;\n        toReturn[i + '.' + x] = flatObject[x];\n      }\n    } else {\n      toReturn[i] = ob[i];\n    }\n  }\n  return toReturn;\n};\n","let Dataset; /* injected */\n\nimport { each } from '../../utils/each';\nimport { flatten } from '../utils/flatten';\n\nexport default function initialize(lib){\n  Dataset = lib;\n  return function(name){\n    var options = Array.prototype.slice.call(arguments, 1);\n\n    if (!parsers[name]) {\n      throw 'Requested parser does not exist';\n    }\n    else {\n      return parsers[name].apply(this, options);\n    }\n  };\n}\n\nfunction parseMetric(){\n  return function(res){\n    return new Dataset()\n      .set(['Value', 'Result'], res.result)\n      .type('metric');\n  }\n}\n\n//var myParser = Dataset.parser('interval', 'timeframe.end');\nfunction parseInterval(){\n  var options = Array.prototype.slice.call(arguments);\n  return function(res){\n    var dataset = new Dataset()\n      .type('interval');\n    each(res.result, function(record, i){\n      var index = options[0] && options[0] === 'timeframe.end' ? record.timeframe.end : record.timeframe.start;\n      dataset.set(['Result', index], record.value);\n    });\n    return dataset;\n  }\n}\n\nfunction parseGroupedMetric(){\n  return function(res){\n    var dataset = new Dataset()\n      .type('grouped-metric');\n    each(res.result, function(record, i){\n      var label;\n      each(record, function(value, key){\n        if (key !== 'result') {\n          label = key;\n        }\n      });\n      dataset.set(['Result', String(record[label])], record.result);\n    });\n    return dataset;\n  }\n}\n\n//var myParser = Dataset.parser('grouped-interval', 'timeframe.end');\nfunction parseGroupedInterval(){\n  var options = Array.prototype.slice.call(arguments);\n  return function(res){\n    var dataset = new Dataset()\n      .type('grouped-interval');\n    each(res.result, function(record, i){\n      var index = options[0] && options[0] === 'timeframe.end' ? record.timeframe.end : record.timeframe.start;\n      if (record.value.length) {\n        each(record.value, function(group, j){\n          var label;\n          each(group, function(value, key){\n            if (key !== 'result') {\n              label = key;\n            }\n          });\n          dataset.set([ String(group[label]), index ], group.result);\n        });\n      }\n      else {\n        dataset.appendRow(index);\n      }\n    });\n    return dataset;\n  }\n}\n\n//var myParser = Dataset.parser('double-grouped-metric', ['first', 'second']);\nfunction parseDoubleGroupedMetric(){\n  var options = Array.prototype.slice.call(arguments);\n  if (!options[0]) throw 'Requested parser requires a sequential list (array) of properties to target as a second argument';\n  return function(res){\n    var dataset = new Dataset()\n      .type('double-grouped-metric');\n    each(res.result, function(record, i){\n      var rowLabel = record[options[0][0]] + ' ' + record[options[0][1]];\n      dataset.set([ 'Result', rowLabel ], record.result);\n    });\n    return dataset;\n  }\n}\n\n//var myParser = Dataset.parser('double-grouped-interval', ['first', 'second'], 'timeframe.end');\nfunction parseDoubleGroupedInterval(){\n  var options = Array.prototype.slice.call(arguments);\n  if (!options[0]) throw 'Requested parser requires a sequential list (array) of properties to target as a second argument';\n  return function(res){\n    var dataset = new Dataset()\n      .type('double-grouped-interval');\n    each(res.result, function(record, i){\n      var index = options[1] && options[1] === 'timeframe.end' ? record.timeframe.end : record.timeframe.start;\n      each(record['value'], function(value, j){\n        var label = value[options[0][0]] + ' ' + value[options[0][1]];\n        dataset.set([ label, index ], value.result);\n      });\n    });\n    return dataset;\n  }\n}\n\nfunction parseFunnel(){\n  return function(res){\n    var result, steps, dataset;\n    if (typeof res.steps !== 'undefined'\n        && typeof res.result !== 'undefined'\n          && res.result instanceof Array) {\n            // Ad-hoc funnel response\n            result = res.result;\n            steps = res.steps;\n    }\n    else if (typeof res.result.steps !== 'undefined'\n        && typeof res.result.result !== 'undefined'\n          && res.result.result instanceof Array) {\n            // Saved funnel response\n            result = res.result.result;\n            steps = res.result.steps;\n    }\n    dataset = new Dataset().type('funnel');\n    dataset.appendColumn('Step Value');\n    each(result, function(value, i){\n      if (typeof steps !== 'undefined' && steps[i]) {\n        dataset.appendRow(String(steps[i].event_collection), [value]);\n      }\n    });\n    return dataset;\n  }\n}\n\nfunction parseList(){\n  return function(res){\n    var dataset = new Dataset()\n      .type('list');\n    each(res.result, function(value, i){\n      dataset.set( [ 'Result', String(i+1) ], value );\n    });\n    return dataset;\n  }\n}\n\nfunction parseExtraction(){\n  return function(res){\n    var dataset = new Dataset()\n      .type('extraction');\n    each(res.result, function(record, i){\n      each(flatten(record), function(value, key){\n        dataset.set([ key, String(i+1) ], value);\n      });\n    });\n    dataset.deleteColumn(0);\n    return dataset;\n  }\n}\n\n// Parser definitions\nconst parsers = {\n  metric: parseMetric,\n  interval: parseInterval,\n  'grouped-metric': parseGroupedMetric,\n  'grouped-interval': parseGroupedInterval,\n  'double-grouped-metric': parseDoubleGroupedMetric,\n  'double-grouped-interval': parseDoubleGroupedInterval,\n  funnel: parseFunnel,\n  list: parseList,\n  extraction: parseExtraction,\n};\n","import { each } from '../../utils/each';\nimport createNullList from '../utils/create-null-list';\nimport { appendRow, appendColumn } from './append';\n\nexport function updateColumn(q, input) {\n  var self = this,\n      index = (typeof q === 'number') ? q : this.matrix[0].indexOf(q);\n\n  if (index > -1) {\n\n    if (typeof input === 'function') {\n\n      each(self.data(), function(row, i){\n        var cell;\n        if (i > 0) {\n          cell = input.call(self, row[index], i, row);\n          if (typeof cell !== 'undefined') {\n            self.matrix[i][index] = cell;\n          }\n        }\n      });\n\n    } else if (!input || input instanceof Array) {\n      input = input || [];\n\n      if (input.length <= self.data().length - 1) {\n        input = input.concat( createNullList(self.data().length - 1 - input.length) );\n      }\n      else {\n        // If this new column is longer than existing columns,\n        // we need to update the rest to match ...\n        each(input, function(value, i){\n          if (self.matrix.length -1 < input.length) {\n            appendRow.call(self, String( self.matrix.length ));\n          }\n        });\n      }\n\n      each(input, function(value, i){\n        self.matrix[i+1][index] = value;\n      });\n\n    }\n\n  }\n  return self;\n}\n\nexport function updateRow(q, input){\n  var self = this,\n      index = (typeof q === 'number') ? q : this.selectColumn(0).indexOf(q);\n\n  if (index > -1) {\n\n    if (typeof input === 'function') {\n\n      each(self.data()[index], function(value, i){\n        var col = self.selectColumn(i),\n        cell = input.call(self, value, i, col);\n        if (typeof cell !== 'undefined') {\n          self.matrix[index][i] = cell;\n        }\n      });\n\n    } else if (!input || input instanceof Array) {\n      input = input || [];\n\n      if (input.length <= self.matrix[0].length - 1) {\n        input = input.concat( createNullList( self.matrix[0].length - 1 - input.length ) );\n      }\n      else {\n        each(input, function(value, i){\n          if (self.matrix[0].length -1 < input.length) {\n            appendColumn.call(self, String( self.matrix[0].length ));\n          }\n        });\n      }\n\n      each(input, function(value, i){\n        self.matrix[index][i+1] = value;\n      });\n    }\n\n  }\n  return self;\n}\n","import { each } from '../../utils/each';\nimport { methods as analysesUtilMethods } from '../utils/analyses';\n\nexport function sortColumns(str, comp) {\n  var self = this,\n      head = this.matrix[0].slice(1), // minus index\n      cols = [],\n      clone = [],\n      fn = comp || analysesUtilMethods.getColumnLabel;\n\n  // Isolate each column (except the index)\n  each(head, function(cell, i) {\n    cols.push(self.selectColumn(i+1).slice(0));\n  });\n  cols.sort(function(a,b){\n    // If fn(a) > fn(b)\n    var op = fn.call(self, a) > fn.call(self, b);\n    if (op) {\n      return (str === 'asc' ? 1 : -1);\n    } else if (!op) {\n      return (str === 'asc' ? -1 : 1);\n    } else {\n      return 0;\n    }\n  });\n  each(cols, function(col, i) {\n    self\n      .deleteColumn(i+1)\n      .insertColumn(i+1, col[0], col.slice(1));\n  });\n  return self;\n}\n\nexport function sortRows(str, comp) {\n  var self = this,\n      head = this.matrix.slice(0,1),\n      body = this.matrix.slice(1),\n      fn = comp || analysesUtilMethods.getRowIndex;\n  body.sort(function(a, b){\n    // If fn(a) > fn(b)\n    var op = fn.call(self, a) > fn.call(self, b);\n    if (op) {\n      return (str === 'asc' ? 1 : -1);\n    } else if (!op) {\n      return (str === 'asc' ? -1 : 1);\n    } else {\n      return 0;\n    }\n  });\n  self.data(head.concat(body));\n  return self;\n}\n","import { each } from '../../utils/each';\n\nexport function selectColumn(q) {\n  const result = [];\n  const index = (typeof q === 'number') ? q : this.matrix[0].indexOf(q);\n\n  if (index > -1 && typeof this.matrix[0][index] !== 'undefined') {\n    each(this.matrix, function(row, i) {\n      result.push(row[index]);\n    });\n  }\n  return result;\n}\n\nexport function selectRow(q) {\n  let result = [];\n  const index = (typeof q === 'number') ? q : this.selectColumn(0).indexOf(q);\n\n  if (index > -1 && typeof this.matrix[index] !== 'undefined') {\n    result = this.matrix[index];\n  }\n  return result;\n}\n","import { each } from '../../utils/each';\nimport createNullList from '../utils/create-null-list';\nimport { appendRow, appendColumn } from './append';\n\nexport function insertColumn(index, str, input) {\n  const self = this;\n  const label = (str !== undefined) ? str : null;\n\n  if (typeof input === 'function') {\n\n    self.matrix[0].splice(index, 0, label);\n    each(self.matrix, function(row, i) {\n      var cell;\n      if (i > 0) {\n        cell = input.call(self, row, i);\n        if (typeof cell === 'undefined') {\n          cell = null;\n        }\n        self.matrix[i].splice(index, 0, cell);\n      }\n    });\n\n  }\n\n  else if (!input || input instanceof Array) {\n    input = input || [];\n\n    if (input.length <= self.matrix.length - 1) {\n      input = input.concat( createNullList(self.matrix.length - 1 - input.length) );\n    }\n    else {\n      // If this new column is longer than existing columns,\n      // we need to update the rest to match ...\n      each(input, function(value, i){\n        if (self.matrix.length -1 < input.length) {\n          appendRow.call(self, String( self.matrix.length ));\n        }\n      });\n    }\n\n    self.matrix[0].splice(index, 0, label);\n    each(input, function(value, i){\n      self.matrix[i+1].splice(index, 0, value);\n    });\n\n  }\n  return self;\n}\n\nexport function insertRow(index, str, input) {\n  const self = this;\n  const newRow = [];\n  const label = (str !== undefined) ? str : null;\n  newRow.push(label);\n\n  if (typeof input === 'function') {\n    each(self.matrix[0], function(label, i) {\n      let col;\n      let cell;\n      if (i > 0) {\n        col = self.selectColumn(i);\n        cell = input.call(self, col, i);\n        if (typeof cell === 'undefined') {\n          cell = null;\n        }\n        newRow.push(cell);\n      }\n    });\n    self.matrix.splice(index, 0, newRow);\n  }\n\n  else if (!input || input instanceof Array) {\n    input = input || [];\n\n    if (input.length <= self.matrix[0].length - 1) {\n      input = input.concat( createNullList( self.matrix[0].length - 1 - input.length ) );\n    }\n    else {\n      each(input, function(value, i){\n        if (self.matrix[0].length -1 < input.length) {\n          appendColumn.call(self, String( self.matrix[0].length ));\n        }\n      });\n    }\n\n    self.matrix.splice(index, 0, newRow.concat(input) );\n  }\n\n  return self;\n}\n","import { each } from '../../utils/each';\n\nexport function filterColumns(fn) {\n  const self = this;\n  const clone = [];\n\n  each(self.matrix, function(row, i) {\n    clone.push([]);\n  });\n\n  each(self.matrix[0], function(col, i){\n    var selectedColumn = self.selectColumn(i);\n    if (i == 0 || fn.call(self, selectedColumn, i)) {\n      each(selectedColumn, function(cell, ri){\n        clone[ri].push(cell);\n      });\n    }\n  });\n\n  self.data(clone);\n  return self;\n}\n\nexport function filterRows(fn) {\n  const self = this;\n  const clone = [];\n\n  each(self.matrix, function(row, i){\n    if (i == 0 || fn.call(self, row, i)) {\n      clone.push(row);\n    }\n  });\n\n  self.data(clone);\n  return self;\n}\n","import { each } from '../../utils/each';\n\nexport function deleteColumn(q) {\n  const self = this;\n  const index = (typeof q === 'number') ? q : this.matrix[0].indexOf(q);\n\n  if (index > -1) {\n    each(self.matrix, function(row, i){\n      self.matrix[i].splice(index, 1);\n    });\n  }\n  return self;\n}\n\nexport function deleteRow(q) {\n  var index = (typeof q === 'number') ? q : this.selectColumn(0).indexOf(q);\n\n  if (index > -1) {\n    this.matrix.splice(index, 1);\n  }\n  return this;\n}\n","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1, eval)(\"this\");\r\n} catch (e) {\r\n\t// This works if the window reference is available\r\n\tif (typeof window === \"object\") g = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n","import data from './data';\nimport { Dataset } from './dataset';\n// Utils\nimport { each } from './utils/each';\nimport isDateString from './utils/assert-date-string';\nimport { stripHtmlTags } from './utils/strip-html-tags';\nimport { escapeHtml } from './utils/escape-html';\nimport libraries from './libraries';\n\n// Constructor\nexport const Dataviz = function () {\n  if (this instanceof Dataviz === false) {\n    return new Dataviz();\n  }\n\n  this.dataset = new Dataset();\n  this.view = {\n    _prepared: false,\n    _rendered: false,\n    _artifacts: { /* state bin */ },\n\n    chartOptions: {},\n    colors: [\n      '#00bbde', '#fe6672', '#eeb058', '#8a8ad6', '#ff855c', '#00cfbb',\n      '#5a9eed', '#73d483', '#c879bb', '#0099b6', '#d74d58', '#cb9141',\n      '#6b6bb6', '#d86945', '#00aa99', '#4281c9', '#57b566', '#ac5c9e',\n      '#27cceb', '#ff818b', '#f6bf71', '#9b9be1', '#ff9b79', '#26dfcd',\n      '#73aff4', '#87e096', '#d88bcb',\n    ],\n    colorMapping: {},\n    dateFormat: undefined,\n    el: undefined,\n    height: undefined,\n    indexBy: 'timeframe.start',\n    labels: [],\n    labelMapping: {},\n    library: 'default',\n    notes: undefined,\n    sortGroups: undefined,\n    sortIntervals: undefined,\n    stacked: false,\n    theme: 'keen-dataviz',\n    title: undefined,\n    type: undefined,\n    width: undefined,\n  };\n\n  Dataviz.visuals.push(this);\n};\n\nDataviz.libraries = { default: {} };\nif (typeof window !== 'undefined') {\n  Dataviz.libraries.default = libraries(Dataviz);\n}\nDataviz.visuals = [];\n\nDataviz.register = function (name, actions) {\n  Dataviz.libraries[name] = Dataviz.libraries[name] || {};\n  each(actions, function(method, key){\n    Dataviz.libraries[name][key] = method;\n  });\n};\n\nDataviz.find = function(target){\n    if (!arguments.length) return Dataviz.visuals;\n    var el = target.nodeName ? target : document.querySelector(target),\n        match = null;\n    each(Dataviz.visuals, function(visual){\n      if (el == visual.el()){\n        match = visual;\n        return false;\n      }\n    });\n    return match;\n};\n\n\n  // Prototype\n  // ------------\n\nDataviz.prototype.attributes = function(obj){\n    if (!arguments.length) return this.view;\n    var view = this.view;\n    each(obj, function(prop, key){\n      // Handle deprecated property names\n      if (key === 'chartType') {\n        key = 'type';\n      }\n      view[key] = prop;\n    });\n    return this;\n};\n\nDataviz.prototype.call = function(fn){\n    fn.call(this);\n    return this;\n};\n\nDataviz.prototype.chartOptions = function(obj){\n    var self = this;\n    if (!arguments.length) return this.view.chartOptions;\n    if (obj === null) {\n      this.view.chartOptions = {};\n    }\n    else if (typeof obj === 'object') {\n      each(obj, function(value, key){\n        self.view.chartOptions[key] = (value ? value : null);\n      });\n    }\n    return this;\n};\n\nDataviz.prototype.colors = function(arr){\n    if (!arguments.length) return this.view.colors;\n    this.view.colors = (arr instanceof Array ? arr : []);\n    return this;\n};\n\nDataviz.prototype.colorMapping = function(obj){\n    var self = this;\n    if (!arguments.length) return this.view.colorMapping;\n    if (obj === null) {\n      this.view.colorMapping = {};\n    }\n    else if (typeof obj === 'object') {\n      each(obj, function(value, key){\n        self.view.colorMapping[key] = (value ? value : null);\n      });\n    }\n    return this;\n};\n\nDataviz.prototype.data = data;\n\nDataviz.prototype.dateFormat = function(val){\n    if (!arguments.length) return this.view.dateFormat;\n    if (typeof val === 'string' || typeof val === 'function') {\n      this.view.dateFormat = val;\n    }\n    else {\n      this.view.dateFormat = undefined;\n    }\n    return this;\n};\n\nDataviz.prototype.destroy = function(){\n    var library = this.library(),\n        type = this.type(),\n        element = this.el();\n\n    // Call destroy method if present\n  if (Dataviz.libraries[library]\n      && Dataviz.libraries[library][type]){\n        Dataviz.libraries[library][type].destroy.call(this);\n  }\n\n    // Clear rendered artifacts, state bin\n    if (element) {\n      element.innerHTML = '';\n    }\n    this.view._prepared = false;\n    this.view._rendered = false;\n    this.view._artifacts = {};\n    return this;\n};\n\nDataviz.prototype.el = function(target){\n    var self = this;\n    if (!arguments.length) return this.view.el;\n    domReady(function(){\n      if (target && target !== null) {\n        if (target.nodeName) {\n          self.view.el = target;\n        }\n        else if (document.querySelector) {\n          self.view.el = document.querySelector(target);\n        }\n      }\n      else {\n        self.view.el = undefined;\n      }\n    });\n    return this;\n};\n\nDataviz.prototype.height = function(num){\n    if (!arguments.length) return this.view['height'];\n    this.view['height'] = (!isNaN(parseInt(num)) ? parseInt(num) : null);\n    return this;\n};\n\n// IMPORTANT: Must be run before data parsing\nDataviz.prototype.indexBy = function(str){\n    if (!arguments.length) return this.view.indexBy;\n    this.view.indexBy = (str ? String(str) : 'timeframe.start');\n    return this;\n};\n\nDataviz.prototype.labels = function(arr){\n    if (!arguments.length) return this.view.labels;\n    this.view.labels = (arr instanceof Array ? arr : []);\n\n    // Write labels\n    if (this.data()[0].length === 2 && !isDateString(this.data()[1][0])) {\n      this.dataset.updateColumn(0, function(value, index){\n        if (this.view.labels[index-1]) {\n          return stripHtmlTags(String(this.view.labels[index-1]));\n        }\n        return stripHtmlTags(value);\n      }.bind(this));\n    }\n    else {\n      this.dataset.updateRow(0, function(value, index){\n        if (index > 0 && this.view.labels[index-1]) {\n          return stripHtmlTags(String(this.view.labels[index-1]));\n        }\n        return stripHtmlTags(value);\n      }.bind(this));\n    }\n    return this;\n};\n\nDataviz.prototype.labelMapping = function(obj){\n    if (!arguments.length) return this.view.labelMapping;\n    if (obj === null) {\n      this.view.labelMapping = {};\n    }\n    else if (typeof obj === 'object') {\n      each(obj, function(value, key){\n        this.view.labelMapping[key] = (value ? value : null);\n      }.bind(this));\n}\n\n    // Write labels\n    if (this.data()[0].length === 2 && !isDateString(this.data()[1][0])) {\n      this.dataset.updateColumn(0, function(value){\n        if (this.view.labelMapping[value]) {\n          return stripHtmlTags(String(this.view.labelMapping[value]));\n        }\n        return stripHtmlTags(value);\n      }.bind(this));\n    }\n    else {\n      this.dataset.updateRow(0, function(value){\n        if (this.view.labelMapping[value]) {\n          return stripHtmlTags(String(this.view.labelMapping[value]));\n        }\n        return stripHtmlTags(value);\n      }.bind(this));\n    }\n    return this;\n  };\n\nDataviz.prototype.library = function(str){\n    if (!arguments.length) return this.view['library'];\n    this.view['library'] = (str ? String(str) : null);\n    return this;\n};\n\nDataviz.prototype.message = function(){\n    var loader;\n    if (this.view._rendered) {\n      this.destroy();\n    }\n    if (this.el()) {\n      this.el().innerHTML = '';\n      var message = Dataviz.libraries['default'].message;\n      if (message.render) {\n        message.render.apply(this, arguments);\n      }\n    }\n    return this;\n};\n\nDataviz.prototype.notes = function(str){\n    if (!arguments.length) return this.view['notes'];\n    this.view['notes'] = (str ? String(str) : null);\n    return this;\n};\n\nDataviz.prototype.prepare = function(){\n    var self = this, loader;\n\n    if (!this.el()) {\n      throw 'A DOM element is required. Check out the .el() method.';\n      return;\n    }\n\n    domReady(function(){\n      if (self.view._rendered) {\n        self.destroy();\n      }\n      if (self.el()) {\n        self.el().innerHTML = '';\n        loader = Dataviz.libraries['default'].spinner;\n        if (loader.render) {\n          loader.render.call(self);\n        }\n        self.view._prepared = true;\n      }\n    });\n    return this;\n};\n\nDataviz.prototype.render = function(){\n    var self = this,\n        loader = Dataviz.libraries['default'].spinner,\n        library = this.library(),\n        type = this.type(),\n        element = this.el();\n\n    if (!this.el()) {\n      this.message('A DOM element is required. Check out the .el() method.');\n      throw 'A DOM element is required. Check out the .el() method.';\n      return;\n    }\n\n    if (!this.type()) {\n      this.message('A chart type is required. Check out the .type() method.');\n      throw 'A chart type is required. Check out the .type() method.';\n      return;\n    }\n\n    domReady(function(){\n      if (self.view._prepared && loader.destroy) {\n        loader.destroy.apply(self, arguments);\n      }\n      self.el().innerHTML = '';\n\n      if (Dataviz.libraries[library] === 'undefined'){\n        // Error: Unregistered library\n        self.message('Incorrect library');\n        throw 'Incorrect library';\n        return;\n      }\n      else {\n        if (typeof Dataviz.libraries[library][type] === 'undefined') {\n          self.message('Incorrect chart type');\n          throw 'Incorrect chart type';\n          return;\n        }\n        else {\n          buildDomWrapper(self.el(), {\n            notes: self.notes(),\n            theme: self.theme(),\n            title: self['title']()\n          });\n          Dataviz.libraries[library][type].render.call(self);\n          self.view._rendered = true;\n        }\n      }\n    });\n    return this;\n};\n\nDataviz.prototype.sortGroups = function(str){\n    if (!arguments.length) return this.view.sortGroups;\n    this.view.sortGroups = (str ? String(str) : null);\n\n    // Sort groups\n    if (this.view.sortGroups && this.data().length > 1) {\n      if (isDateString(this.data()[1][0])) {\n        this.dataset.sortColumns(this.view.sortGroups, this.dataset.getColumnSum);\n      }\n      else {\n        this.dataset.sortRows(this.view.sortGroups, this.dataset.getRowSum);\n      }\n    }\n    return this;\n};\n\nDataviz.prototype.sortIntervals = function(str){\n    if (!arguments.length) return this.view.sortIntervals;\n    this.view.sortIntervals = (str ? String(str) : null);\n    if (this.view.sortIntervals) {\n      this.dataset.sortRows(this.view.sortIntervals);\n    }\n    return this;\n};\n\nDataviz.prototype.stacked = function(bool){\n    if (!arguments.length) return this.view['stacked'];\n    this.view['stacked'] = bool ? true : false;\n    return this;\n};\n\nDataviz.prototype.theme = function(str){\n    if (!arguments.length) return this.view.theme;\n    this.view.theme = (str ? String(str) : null);\n    return this;\n};\n\nDataviz.prototype.title = function(str){\n    if (!arguments.length) return this.view['title'];\n    this.view['title'] = (str ? String(str) : null);\n    return this;\n};\n\nDataviz.prototype.type = function(str){\n    if (!arguments.length) return this.view['type'];\n    this.view['type'] = (str ? convertChartTypes(str) : null);\n    return this;\n};\n\nDataviz.prototype.update = function(){\n    var library = this.library(),\n        type = this.type(),\n        element = this.el();\n    if (library && type && element && Dataviz.libraries[library][type].update) {\n      Dataviz.libraries[library][type].update.apply(this, arguments);\n    }\n    return this;\n};\n\nDataviz.prototype.width = function(num){\n    if (!arguments.length) return this.view['width'];\n    this.view['width'] = (!isNaN(parseInt(num)) ? parseInt(num) : null);\n    return this;\n};\n\n  // Deprecations\n  Dataviz.prototype.chartType = Dataviz.prototype.type;\n  Dataviz.prototype.error = Dataviz.prototype.message;\n  Dataviz.prototype.parseRawData = Dataviz.prototype.data;\n  Dataviz.prototype.parseRequest = function(){\n    // this.emit('error', 'This method is no longer supported. Use .data() instead: https://github.com/keen/keen-dataviz.js#data');\n    return this;\n  };\n  Dataviz.prototype.initialize = function(){\n    // this.emit('error', 'This method is no longer supported, and can be omitted as it has no impact');\n    return this;\n  };\n\n  // Private\n  // ------------\n\nfunction buildDomWrapper(el, options) {\n  let html = '';\n  html += '<div class=\"' + options.theme + '\">';\n  if (options['title']) {\n    html += '<div class=\"' + options.theme + '-title\">' + escapeHtml(options['title']) + '</div>';\n  }\n  html += '<div class=\"' + options.theme + '-stage\"><div class=\"' + options.theme + '-rendering\"></div></div>';\n  if (options.notes) {\n    html += '<div class=\"' + options.theme + '-notes\">' + escapeHtml(options.notes) + '</div>';\n  }\n  html += '</div>';\n  el.innerHTML = html;\n}\n\nfunction convertChartTypes(str) {\n  const map = {\n    areachart: 'area',\n    barchart: 'horizontal-bar',\n    columnchart: 'bar',\n    linechart: 'line',\n    piechart: 'pie',\n  };\n  return map[str] || str;\n}\n\nfunction testDom(fn) {\n  if (/in/.test(document.readyState)) {\n    setTimeout(function(){\n      testDom(fn);\n    }, 9);\n  } else {\n    fn();\n  }\n}\n\nfunction domReady(fn) {\n  if (typeof document !== 'undefined' || typeof window === 'undefined') {\n    fn();\n    return;\n  }\n  // Firefox 3.5 shim\n  if (document.readyState == null && document.addEventListener) {\n    document.addEventListener('DOMContentLoaded', function DOMContentLoaded() {\n      document.removeEventListener('DOMContentLoaded', DOMContentLoaded, false);\n      document.readyState = 'complete';\n    }, false);\n    document.readyState = 'loading';\n  }\n  testDom(fn);\n}\n\nif (typeof __KEEN_NO_COMMON_GLOBAL_OBJECT__ === 'undefined') {\n  (function (env) {\n    env.Keen = env.Keen || {};\n    env.Keen.Dataset = Dataset;\n    env.Keen.Dataviz = Dataviz;\n  }).call(this, typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : typeof window !== 'undefined' ? window : {})\n}\n\nexport { Dataset } from './dataset';\n\nexport default Dataviz;\n","export { Dataviz, Dataset } from './index';\n"],"sourceRoot":""}